/home/showard/openmw/openmw/

(components/files/androidpath.hpp has correct #includes/fwd-decls)

(components/files/androidpath.cpp has correct #includes/fwd-decls)

(components/compiler/opcodes.hpp has correct #includes/fwd-decls)

(components/compiler/opcodes.cpp has correct #includes/fwd-decls)
In file included from components/esm/doorstate.cpp:1:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from components/esm/doorstate.cpp:3:
components/esm/doorstate.hpp:18:31: error: expected class name
    struct DoorState : public ObjectState
                              ^
In file included from components/esm/quickkeys.cpp:3:
components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
In file included from components/esm/creaturestate.cpp:2:
In file included from ./components/esm/creaturestats.hpp:10:
components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

(components/esm/attr.hpp has correct #includes/fwd-decls)

(components/esm/attr.cpp has correct #includes/fwd-decls)

(components/esm/loadgmst.hpp has correct #includes/fwd-decls)

components/esm/loadgmst.cpp should add these lines:

components/esm/loadgmst.cpp should remove these lines:
- #include "components/esm/variant.hpp"  // lines 2-2

The full include-list for components/esm/loadgmst.cpp:
#include "loadgmst.hpp"
#include "components/esm/variant.hpp"   // for Variant, etc
#include "defs.hpp"                     // for RecNameInts::REC_GMST
---

(components/files/windowspath.hpp has correct #includes/fwd-decls)

(components/files/windowspath.cpp has correct #includes/fwd-decls)

components/compiler/junkparser.hpp should add these lines:

components/compiler/junkparser.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace Compiler { class Context; }  // lines 15-15
- namespace Compiler { class ErrorHandler; }  // lines 16-16
- namespace Compiler { class Scanner; }  // lines 17-17
- namespace Compiler { struct TokenLoc; }  // lines 18-18

The full include-list for components/compiler/junkparser.hpp:
#include <string>                       // for string
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 10-10
namespace Compiler { class ErrorHandler; }  // lines 11-11
namespace Compiler { class Scanner; }  // lines 12-12
namespace Compiler { struct TokenLoc; }  // lines 13-13
---

components/compiler/junkparser.cpp should add these lines:

components/compiler/junkparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 3-3
- namespace Compiler { class Context; }  // lines 12-12
- namespace Compiler { class ErrorHandler; }  // lines 13-13
- namespace Compiler { struct TokenLoc; }  // lines 14-14

The full include-list for components/compiler/junkparser.cpp:
#include "junkparser.hpp"
#include "components/compiler/parser.hpp"  // for Parser
#include "scanner.hpp"                  // for Scanner, etc
namespace Compiler { class Context; }  // lines 8-8
namespace Compiler { class ErrorHandler; }  // lines 9-9
namespace Compiler { struct TokenLoc; }  // lines 10-10
---

components/compiler/scriptparser.hpp should add these lines:

components/compiler/scriptparser.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "components/interpreter/types.hpp"  // lines 11-11
- namespace Compiler { class Context; }  // lines 24-24
- namespace Compiler { class ErrorHandler; }  // lines 25-25
- namespace Compiler { class Scanner; }  // lines 26-26
- namespace Compiler { struct TokenLoc; }  // lines 27-27

The full include-list for components/compiler/scriptparser.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
#include "components/interpreter/types.hpp"  // for Type_Code
#include "controlparser.hpp"            // for ControlParser
#include "lineparser.hpp"               // for LineParser
#include "output.hpp"                   // for Output
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 19-19
namespace Compiler { class ErrorHandler; }  // lines 20-20
namespace Compiler { class Locals; }  // lines 32-32
namespace Compiler { class Scanner; }  // lines 21-21
namespace Compiler { struct TokenLoc; }  // lines 22-22
---

components/compiler/scriptparser.cpp should add these lines:

components/compiler/scriptparser.cpp should remove these lines:
- #include "components/compiler/controlparser.hpp"  // lines 3-3
- #include "components/compiler/lineparser.hpp"  // lines 5-5
- #include "components/compiler/output.hpp"  // lines 7-7
- #include "components/compiler/parser.hpp"  // lines 9-9
- namespace Compiler { class Context; }  // lines 19-19
- namespace Compiler { struct TokenLoc; }  // lines 20-20

The full include-list for components/compiler/scriptparser.cpp:
#include "scriptparser.hpp"
#include "components/compiler/controlparser.hpp"  // for ControlParser
#include "components/compiler/lineparser.hpp"  // for LineParser
#include "components/compiler/output.hpp"  // for Output
#include "components/compiler/parser.hpp"  // for Parser
#include "errorhandler.hpp"             // for ErrorHandler
#include "scanner.hpp"                  // for Scanner, etc
#include "skipparser.hpp"               // for SkipParser
namespace Compiler { class Context; }  // lines 16-16
namespace Compiler { struct TokenLoc; }  // lines 17-17
---

(components/compiler/literals.hpp has correct #includes/fwd-decls)

components/compiler/literals.cpp should add these lines:

components/compiler/literals.cpp should remove these lines:
- #include "components/interpreter/types.hpp"  // lines 5-5

The full include-list for components/compiler/literals.cpp:
#include "literals.hpp"
#include <algorithm>                    // for copy
#include "components/interpreter/types.hpp"  // for Type_Code, Type_Float, etc
---

(components/files/macospath.hpp has correct #includes/fwd-decls)

(components/files/macospath.cpp has correct #includes/fwd-decls)

(components/compiler/extensions0.hpp has correct #includes/fwd-decls)
In file included from components/interpreter/installopcodes.cpp:9:
components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^

components/compiler/extensions0.cpp should add these lines:

components/compiler/extensions0.cpp should remove these lines:
- #include <string>  // lines 2-2

The full include-list for components/compiler/extensions0.cpp:
#include "extensions0.hpp"
#include <string>                       // for operator+, allocator, etc
#include "extensions.hpp"               // for Extensions
#include "opcodes.hpp"                  // for opcodeToggleAI, controls, etc
---
components/esm/doorstate.cpp:12:9: error: use of undeclared identifier 'ObjectState'
        ObjectState::load(esm);
        ^
components/esm/doorstate.cpp:20:9: error: use of undeclared identifier 'ObjectState'
        ObjectState::save(esm, inInventory);
        ^

components/compiler/skipparser.hpp should add these lines:

components/compiler/skipparser.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace Compiler { class Context; }  // lines 15-15
- namespace Compiler { class ErrorHandler; }  // lines 16-16
- namespace Compiler { class Scanner; }  // lines 17-17
- namespace Compiler { struct TokenLoc; }  // lines 18-18

The full include-list for components/compiler/skipparser.hpp:
#include <string>                       // for string
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 10-10
namespace Compiler { class ErrorHandler; }  // lines 11-11
namespace Compiler { class Scanner; }  // lines 12-12
namespace Compiler { struct TokenLoc; }  // lines 13-13
---

components/compiler/skipparser.cpp should add these lines:

components/compiler/skipparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 3-3
- namespace Compiler { class Context; }  // lines 12-12
- namespace Compiler { class ErrorHandler; }  // lines 13-13
- namespace Compiler { struct TokenLoc; }  // lines 14-14

The full include-list for components/compiler/skipparser.cpp:
#include "skipparser.hpp"
#include "components/compiler/parser.hpp"  // for Parser
#include "scanner.hpp"                  // for Scanner, etc
namespace Compiler { class Context; }  // lines 8-8
namespace Compiler { class ErrorHandler; }  // lines 9-9
namespace Compiler { struct TokenLoc; }  // lines 10-10
---
components/esm/loadcell.cpp:229:18: error: incomplete result type 'ESM::CellId' in function definition
    CellId Cell::getCellId() const
                 ^
components/esm/loadcell.hpp:20:8: note: forward declaration of 'ESM::CellId'
struct CellId;
       ^
components/esm/loadcell.cpp:231:16: error: variable has incomplete type 'ESM::CellId'
        CellId id;
               ^
components/esm/loadcell.hpp:20:8: note: forward declaration of 'ESM::CellId'
struct CellId;
       ^
In file included from components/esm/creaturestate.cpp:2:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from components/esm/creaturestate.cpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from components/esm/creaturestate.cpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from components/esm/creaturestate.cpp:8:
components/esm/creaturestate.hpp:20:35: error: expected class name
    struct CreatureState : public ObjectState
                                  ^
components/esm/creaturestate.cpp:20:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::load (esm);
    ^
components/esm/creaturestate.cpp:22:9: error: use of undeclared identifier 'mHasCustomState'
    if (mHasCustomState)
        ^
components/esm/creaturestate.cpp:32:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::save (esm, inInventory);
    ^
components/esm/creaturestate.cpp:34:9: error: use of undeclared identifier 'mHasCustomState'
    if (mHasCustomState)
        ^
components/esm/creaturestate.cpp:44:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::blank();
    ^

components/compiler/exprparser.hpp should add these lines:

components/compiler/exprparser.hpp should remove these lines:
- #include <string>  // lines 6-6
- namespace Compiler { class Context; }  // lines 17-17
- namespace Compiler { class ErrorHandler; }  // lines 18-18
- namespace Compiler { class Scanner; }  // lines 19-19

The full include-list for components/compiler/exprparser.hpp:
#include <components/interpreter/types.hpp>  // for Type_Code
#include <string>                       // for string
#include <vector>                       // for vector
#include "parser.hpp"                   // for Parser
#include "tokenloc.hpp"                 // for TokenLoc
namespace Compiler { class Context; }  // lines 13-13
namespace Compiler { class ErrorHandler; }  // lines 14-14
namespace Compiler { class Literals; }  // lines 24-24
namespace Compiler { class Locals; }  // lines 25-25
namespace Compiler { class Scanner; }  // lines 15-15
---

components/compiler/exprparser.cpp should add these lines:

components/compiler/exprparser.cpp should remove these lines:
- #include <utility>  // lines 9-9
- #include "components/compiler/parser.hpp"  // lines 12-12
- #include "components/compiler/tokenloc.hpp"  // lines 14-14
- #include "components/interpreter/types.hpp"  // lines 16-16

The full include-list for components/compiler/exprparser.cpp:
#include "exprparser.hpp"
#include <algorithm>                    // for copy, find
#include <cassert>                      // for assert
#include <components/misc/stringops.hpp>  // for StringUtils
#include <iterator>                     // for back_insert_iterator, etc
#include <stack>                        // for stack
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "components/compiler/parser.hpp"  // for Parser
#include "components/compiler/tokenloc.hpp"  // for TokenLoc
#include "components/interpreter/types.hpp"  // for Type_Code
#include "context.hpp"                  // for Context
#include "discardparser.hpp"            // for DiscardParser
#include "errorhandler.hpp"             // for ErrorHandler
#include "extensions.hpp"               // for Extensions
#include "generator.hpp"                // for getDisabled, getDistance, etc
#include "junkparser.hpp"               // for JunkParser
#include "locals.hpp"                   // for Locals
#include "scanner.hpp"                  // for Scanner, etc
#include "stringparser.hpp"             // for StringParser
---
components/interpreter/installopcodes.cpp:21:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment0 (0, new OpPushInt);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:22:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (3, new OpIntToFloat);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:23:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (6, new OpFloatToInt);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:24:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (7, new OpNegateInt);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:25:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (8, new OpNegateFloat);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:26:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (17, new OpIntToFloat1);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:27:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (18, new OpFloatToInt1);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:30:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (0, new OpStoreLocalShort);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:31:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (1, new OpStoreLocalLong);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:32:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (2, new OpStoreLocalFloat);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:33:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (4, new OpFetchIntLiteral);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:34:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (5, new OpFetchFloatLiteral);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:35:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (21, new OpFetchLocalShort);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:36:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (22, new OpFetchLocalLong);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:37:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (23, new OpFetchLocalFloat);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:38:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (39, new OpStoreGlobalShort);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
components/interpreter/installopcodes.cpp:39:20: error: member access into incomplete type 'Interpreter::Interpreter'
        interpreter.installSegment5 (40, new OpStoreGlobalLong);
                   ^
components/interpreter/installopcodes.hpp:6:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

extern/oics/ICSChannel.h should add these lines:

extern/oics/ICSChannel.h should remove these lines:
- #include <stddef.h>  // lines 31-31
- #include <list>  // lines 33-33
- #include "ICSChannelListener.h"  // lines 36-36
- namespace ICS { class ChannelListener; }  // lines 43-43
- namespace ICS { class Control; }  // lines 44-44

The full include-list for extern/oics/ICSChannel.h:
#include <stddef.h>                     // for size_t
#include <list>                         // for list
#include <vector>                       // for vector, allocator
#include "ICSPrerequisites.h"           // for DllExport
namespace ICS { class ChannelListener; }  // lines 40-40
namespace ICS { class Control; }  // lines 41-41
---

extern/oics/ICSChannel.cpp should add these lines:

extern/oics/ICSChannel.cpp should remove these lines:
- #include <assert.h>  // lines 30-30
- #include <stddef.h>  // lines 32-32
- #include <algorithm>  // lines 34-34
- #include <list>  // lines 36-36
- #include <vector>  // lines 38-38
- #include "extern/oics/ICSChannelListener.h"  // lines 41-41
- #include "extern/oics/ICSControl.h"  // lines 43-43

The full include-list for extern/oics/ICSChannel.cpp:
#include "extern/oics/ICSChannel.h"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for max, min
#include <list>                         // for _List_iterator, etc
#include <vector>                       // for vector, etc
#include "extern/oics/ICSChannelListener.h"  // for ChannelListener
#include "extern/oics/ICSControl.h"     // for Control
---
components/compiler/locals.cpp:90:18: error: no template named 'ostream_iterator' in namespace 'std'; did you mean 'ostreambuf_iterator'?
            std::ostream_iterator<std::string> (localFile, " "));
            ~~~~~^~~~~~~~~~~~~~~~
                 ostreambuf_iterator
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: 'ostreambuf_iterator' declared here
    class ostreambuf_iterator
          ^
components/compiler/locals.cpp:90:13: error: no matching constructor for initialization of 'std::ostreambuf_iterator<std::string>'
            std::ostream_iterator<std::string> (localFile, " "));
            ^                                   ~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:241:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(ostream_type& __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:245:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(streambuf_type* __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
    class ostreambuf_iterator
          ^
components/compiler/locals.cpp:92:18: error: no template named 'ostream_iterator' in namespace 'std'; did you mean 'ostreambuf_iterator'?
            std::ostream_iterator<std::string> (localFile, " "));
            ~~~~~^~~~~~~~~~~~~~~~
                 ostreambuf_iterator
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: 'ostreambuf_iterator' declared here
    class ostreambuf_iterator
          ^
components/compiler/locals.cpp:92:13: error: no matching constructor for initialization of 'std::ostreambuf_iterator<std::string>'
            std::ostream_iterator<std::string> (localFile, " "));
            ^                                   ~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:241:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(ostream_type& __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:245:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(streambuf_type* __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
    class ostreambuf_iterator
          ^
components/compiler/locals.cpp:94:18: error: no template named 'ostream_iterator' in namespace 'std'; did you mean 'ostreambuf_iterator'?
            std::ostream_iterator<std::string> (localFile, " "));
            ~~~~~^~~~~~~~~~~~~~~~
                 ostreambuf_iterator
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: 'ostreambuf_iterator' declared here
    class ostreambuf_iterator
          ^
components/compiler/locals.cpp:94:13: error: no matching constructor for initialization of 'std::ostreambuf_iterator<std::string>'
            std::ostream_iterator<std::string> (localFile, " "));
            ^                                   ~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:241:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(ostream_type& __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:245:7: note: candidate constructor not viable: requires single argument '__s', but 2 arguments were provided
      ostreambuf_iterator(streambuf_type* __s) _GLIBCXX_USE_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/streambuf_iterator.h:216:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
    class ostreambuf_iterator
          ^

components/esm/locals.hpp should add these lines:

components/esm/locals.hpp should remove these lines:
- #include "variant.hpp"  // lines 8-8

The full include-list for components/esm/locals.hpp:
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
namespace ESM { class ESMReader; }  // lines 16-16
namespace ESM { class ESMWriter; }  // lines 17-17
namespace ESM { class Variant; }  // lines 11-11
---

(components/esm/loadappa.hpp has correct #includes/fwd-decls)

components/esm/locals.cpp should add these lines:

components/esm/locals.cpp should remove these lines:
- #include "components/esm/variant.hpp"  // lines 3-3

The full include-list for components/esm/locals.cpp:
#include "locals.hpp"
#include "components/esm/variant.hpp"   // for Variant, etc
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/loadappa.cpp should add these lines:

components/esm/loadappa.cpp should remove these lines:
- #include "components/esm/esmcommon.hpp"  // lines 2-2

The full include-list for components/esm/loadappa.cpp:
#include "loadappa.hpp"
#include "components/esm/esmcommon.hpp"  // for NAME_T, NAME
#include "defs.hpp"                     // for RecNameInts::REC_APPA
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/doorstate.hpp should add these lines:

components/esm/doorstate.hpp should remove these lines:
- #include "objectstate.hpp"  // lines 4-4
- namespace ESM { class ESMReader; }  // lines 10-10
- namespace ESM { class ESMWriter; }  // lines 11-11

The full include-list for components/esm/doorstate.hpp:
namespace ESM { class ESMReader; }  // lines 7-7
namespace ESM { class ESMWriter; }  // lines 8-8
---

components/esm/doorstate.cpp should add these lines:

components/esm/doorstate.cpp should remove these lines:
- #include "components/esm/objectstate.hpp"  // lines 1-1
- #include "components/esm/objectstate.hpp"  // lines 2-2

The full include-list for components/esm/doorstate.cpp:
#include "doorstate.hpp"
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadligh.hpp has correct #includes/fwd-decls)

(components/esm/effectlist.hpp has correct #includes/fwd-decls)

components/esm/loadligh.cpp should add these lines:

components/esm/loadligh.cpp should remove these lines:
- #include <assert.h>  // lines 2-2

The full include-list for components/esm/loadligh.cpp:
#include "loadligh.hpp"
#include <assert.h>                     // for assert
#include "defs.hpp"                     // for RecNameInts::REC_LIGH
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/quickkeys.hpp has correct #includes/fwd-decls)

(components/esm/effectlist.cpp has correct #includes/fwd-decls)

(components/esm/quickkeys.cpp has correct #includes/fwd-decls)

(components/esm/cellstate.hpp has correct #includes/fwd-decls)

components/esm/cellstate.cpp should add these lines:

components/esm/cellstate.cpp should remove these lines:
- #include "components/esm/cellid.hpp"  // lines 4-4
- #include "components/esm/defs.hpp"  // lines 6-6

The full include-list for components/esm/cellstate.cpp:
#include "cellstate.hpp"
#include "components/esm/cellid.hpp"    // for CellId
#include "components/esm/defs.hpp"      // for TimeStamp
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/custommarkerstate.hpp should add these lines:

components/esm/custommarkerstate.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace ESM { class ESMReader; }  // lines 13-13
- namespace ESM { class ESMWriter; }  // lines 14-14

The full include-list for components/esm/custommarkerstate.hpp:
#include <string>                       // for operator==, basic_string, etc
#include "cellid.hpp"                   // for operator==, CellId
namespace ESM { class ESMReader; }  // lines 10-10
namespace ESM { class ESMWriter; }  // lines 11-11
---

(components/esm/loadspel.hpp has correct #includes/fwd-decls)

components/esm/loadspel.cpp should add these lines:

components/esm/loadspel.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/effectlist.hpp"  // lines 5-5

The full include-list for components/esm/loadspel.cpp:
#include "loadspel.hpp"
#include <vector>                       // for vector
#include "components/esm/effectlist.hpp"  // for EffectList
#include "defs.hpp"                     // for RecNameInts::REC_SPEL
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/custommarkerstate.cpp should add these lines:

components/esm/custommarkerstate.cpp should remove these lines:
- #include "components/esm/cellid.hpp"  // lines 2-2

The full include-list for components/esm/custommarkerstate.cpp:
#include "custommarkerstate.hpp"
#include "components/esm/cellid.hpp"    // for CellId
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadregn.hpp has correct #includes/fwd-decls)

components/esm/loadregn.cpp should add these lines:

components/esm/loadregn.cpp should remove these lines:
- #include "components/esm/esmcommon.hpp"  // lines 2-2

The full include-list for components/esm/loadregn.cpp:
#include "loadregn.hpp"
#include "components/esm/esmcommon.hpp"  // for Version::VER_12, etc
#include "defs.hpp"                     // for RecNameInts::REC_REGN
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/cellref.hpp has correct #includes/fwd-decls)

components/esm/cellref.cpp should add these lines:

components/esm/cellref.cpp should remove these lines:
- #include "components/esm/defs.hpp"  // lines 4-4

The full include-list for components/esm/cellref.cpp:
#include "cellref.hpp"
#include "components/esm/defs.hpp"      // for Position
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

extern/oics/ICSInputControlSystem_joystick.cpp should add these lines:

extern/oics/ICSInputControlSystem_joystick.cpp should remove these lines:
- #include <stdlib.h>  // lines 28-28
- #include <map>  // lines 30-30
- #include <string>  // lines 32-32
- #include <utility>  // lines 34-34
- #include <vector>  // lines 36-36
- #include "SDL_events.h"  // lines 40-40
- #include "SDL_joystick.h"  // lines 42-42
- #include "extern/oics/ICSControl.h"  // lines 44-44
- #include "extern/oics/ICSPrerequisites.h"  // lines 46-46
- #include "extern/oics/tinyxml.h"  // lines 48-48

The full include-list for extern/oics/ICSInputControlSystem_joystick.cpp:
#include <stdlib.h>                     // for abs
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <string>                       // for allocator, operator+, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "ICSInputControlSystem.h"      // for InputControlSystem, etc
#include "SDL_events.h"                 // for SDL_JoyHatEvent, etc
#include "SDL_joystick.h"               // for SDL_HAT_RIGHT, etc
#include "extern/oics/ICSControl.h"     // for Control, etc
#include "extern/oics/ICSPrerequisites.h"  // for ToString, FromString, etc
#include "extern/oics/tinyxml.h"        // for TiXmlElement
---

(components/esm/loaddial.hpp has correct #includes/fwd-decls)

components/esm/loaddial.cpp should add these lines:

components/esm/loaddial.cpp should remove these lines:
- #include <utility>  // lines 3-3
- #include "components/esm/loadinfo.hpp"  // lines 6-6

The full include-list for components/esm/loaddial.cpp:
#include "loaddial.hpp"
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <utility>                      // for pair
#include "components/esm/loadinfo.hpp"  // for DialInfo, etc
#include "defs.hpp"                     // for RecNameInts::REC_DIAL
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/interpreter/installopcodes.hpp has correct #includes/fwd-decls)

components/interpreter/installopcodes.cpp should add these lines:

components/interpreter/installopcodes.cpp should remove these lines:
- #include <functional>  // lines 2-2
- #include "components/interpreter/types.hpp"  // lines 4-4
- #include "components/interpreter/types.hpp"  // lines 5-5
- #include "controlopcodes.hpp"  // lines 6-6
- #include "genericopcodes.hpp"  // lines 7-7
- #include "interpreter.hpp"  // lines 9-9
- #include "localopcodes.hpp"  // lines 10-10
- #include "mathopcodes.hpp"  // lines 11-11
- #include "miscopcodes.hpp"  // lines 12-12
- #include "scriptopcodes.hpp"  // lines 13-13
- #include "spatialopcodes.hpp"  // lines 14-14

The full include-list for components/interpreter/installopcodes.cpp:
#include "installopcodes.hpp"
---

(components/esm/loadcell.hpp has correct #includes/fwd-decls)

components/esm/loadcell.cpp should add these lines:

components/esm/loadcell.cpp should remove these lines:
- #include <components/misc/stringops.hpp>  // lines 1-1
- #include "components/esm/cellref.hpp"  // lines 6-6
- #include "components/esm/loadtes3.hpp"  // lines 9-9

The full include-list for components/esm/loadcell.cpp:
#include "loadcell.hpp"
#include <sstream>                      // for basic_ostream::operator<<, etc
#include <string>                       // for string, allocator
#include "components/esm/cellref.hpp"   // for RefNum, operator==, CellRef
#include "components/esm/esmcommon.hpp"  // for ESM_Context
#include "components/esm/loadtes3.hpp"  // for Header::MasterData
#include "defs.hpp"                     // for RecNameInts::REC_CELL
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/compiler/locals.hpp has correct #includes/fwd-decls)

(components/compiler/locals.cpp has correct #includes/fwd-decls)

components/esm/creaturestate.hpp should add these lines:

components/esm/creaturestate.hpp should remove these lines:
- #include "objectstate.hpp"  // lines 6-6
- namespace ESM { class ESMReader; }  // lines 12-12
- namespace ESM { class ESMWriter; }  // lines 13-13

The full include-list for components/esm/creaturestate.hpp:
#include "creaturestats.hpp"            // for CreatureStats
#include "inventorystate.hpp"           // for InventoryState
namespace ESM { class ESMReader; }  // lines 9-9
namespace ESM { class ESMWriter; }  // lines 10-10
---

components/esm/creaturestate.cpp should add these lines:

components/esm/creaturestate.cpp should remove these lines:
- #include "components/esm/creaturestats.hpp"  // lines 2-2
- #include "components/esm/creaturestats.hpp"  // lines 3-3
- #include "components/esm/inventorystate.hpp"  // lines 4-4
- #include "components/esm/inventorystate.hpp"  // lines 5-5
- #include "components/esm/objectstate.hpp"  // lines 6-6
- #include "components/esm/objectstate.hpp"  // lines 7-7
- namespace ESM { class ESMReader; }  // lines 14-14
- namespace ESM { class ESMWriter; }  // lines 15-15

The full include-list for components/esm/creaturestate.cpp:
#include "creaturestate.hpp"
namespace ESM { class ESMReader; }  // lines 11-11
namespace ESM { class ESMWriter; }  // lines 12-12
---
components/compiler/declarationparser.cpp:30:28: error: member access into incomplete type 'Compiler::Locals'
        char type = mLocals.getType (name2);
                           ^
components/compiler/declarationparser.hpp:25:11: note: forward declaration of 'Compiler::Locals'
    class Locals;
          ^
components/compiler/declarationparser.cpp:42:16: error: member access into incomplete type 'Compiler::Locals'
        mLocals.declare (mType, name2);
               ^
components/compiler/declarationparser.hpp:25:11: note: forward declaration of 'Compiler::Locals'
    class Locals;
          ^

components/compiler/streamerrorhandler.hpp should add these lines:

components/compiler/streamerrorhandler.hpp should remove these lines:
- #include <string>  // lines 7-7
- namespace Compiler { struct TokenLoc; }  // lines 14-14

The full include-list for components/compiler/streamerrorhandler.hpp:
#include <ostream>                      // for ostream
#include <string>                       // for string
#include "errorhandler.hpp"             // for ErrorHandler::Type, etc
namespace Compiler { struct TokenLoc; }  // lines 12-12
---
In file included from extern/oics/tinyxml.cpp:34:
extern/oics/tinyxml.h:217:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const = 0;
                            ^

components/compiler/streamerrorhandler.cpp should add these lines:

components/compiler/streamerrorhandler.cpp should remove these lines:
- #include "components/compiler/errorhandler.hpp"  // lines 3-3

The full include-list for components/compiler/streamerrorhandler.cpp:
#include "streamerrorhandler.hpp"
#include "components/compiler/errorhandler.hpp"  // for ErrorHandler::Type, etc
#include "tokenloc.hpp"                 // for TokenLoc
---
extern/oics/tinyxml.h:874:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:877:14: error: unknown type name 'FILE'
        void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                    ^
extern/oics/tinyxml.h:1120:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1174:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1235:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1313:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                            ^
extern/oics/tinyxml.h:1314:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:1361:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1422:17: error: unknown type name 'FILE'
        bool LoadFile( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );
                       ^
extern/oics/tinyxml.h:1424:17: error: unknown type name 'FILE'
        bool SaveFile( FILE* ) const;
                       ^
extern/oics/tinyxml.h:1527:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth = 0 ) const;
                            ^
extern/oics/tinyxml.h:1518:35: error: use of undeclared identifier 'stdout'
        void Print() const                                              { Print( stdout, 0 ); }
                                                                                 ^
extern/oics/tinyxml.cpp:44:1: error: unknown type name 'FILE'
FILE* TiXmlFOpen( const char* filename, const char* mode )
^
extern/oics/tinyxml.cpp:65:10: error: use of undeclared identifier 'fopen'
                return fopen( filename, mode );
                       ^
extern/oics/tinyxml.cpp:132:5: error: use of undeclared identifier 'snprintf'
                                TIXML_SNPRINTF( buf, sizeof(buf), "&#x%02X;", (unsigned) ( c & 0xff ) );
                                ^
extern/oics/tinyxml.h:79:26: note: expanded from macro 'TIXML_SNPRINTF'
                #define TIXML_SNPRINTF snprintf
                                       ^
extern/oics/tinyxml.cpp:705:3: error: use of undeclared identifier 'snprintf'
                TIXML_SNPRINTF( buf, sizeof(buf), "%d", val );
                ^
extern/oics/tinyxml.h:79:26: note: expanded from macro 'TIXML_SNPRINTF'
                #define TIXML_SNPRINTF snprintf
                                       ^
extern/oics/tinyxml.cpp:727:16: error: use of undeclared identifier 'snprintf'
               TIXML_SNPRINTF( buf, sizeof(buf), "%f", val );
               ^
extern/oics/tinyxml.h:79:26: note: expanded from macro 'TIXML_SNPRINTF'
                #define TIXML_SNPRINTF snprintf
                                       ^
extern/oics/tinyxml.cpp:789:27: error: unknown type name 'FILE'
void TiXmlElement::Print( FILE* cfile, int depth ) const
                          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from components/esm/globalmap.cpp:1:
components/esm/globalmap.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/globalmap.hpp:11:1: error: expected unqualified-id
{
^

components/translation/translation.hpp should add these lines:

components/translation/translation.hpp should remove these lines:
- #include <iosfwd>  // lines 5-5
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9
- namespace Files { class Collections; }  // lines 18-18
- namespace ToUTF8 { class Utf8Encoder; }  // lines 21-21

The full include-list for components/translation/translation.hpp:
#include <iosfwd>                       // for istream
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
namespace Files { class Collections; }  // lines 16-16
namespace ToUTF8 { class Utf8Encoder; }  // lines 12-12
---

components/translation/translation.cpp should add these lines:

components/translation/translation.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <stdexcept>  // lines 6-6
- #include <utility>  // lines 8-8
- #include "components/files/collections.hpp"  // lines 11-11
- #include "components/files/multidircollection.hpp"  // lines 13-13
- #include "components/to_utf8/to_utf8.hpp"  // lines 15-15

The full include-list for components/translation/translation.cpp:
#include "translation.hpp"
#include <stddef.h>                     // for size_t, NULL
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "components/files/collections.hpp"  // for Collections
#include "components/files/multidircollection.hpp"
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder
---

components/compiler/declarationparser.hpp should add these lines:

components/compiler/declarationparser.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace Compiler { namespace Compiler { class Context; } }  // lines 11-11
- namespace Compiler { namespace Compiler { class ErrorHandler; } }  // lines 12-12
- namespace Compiler { namespace Compiler { class Scanner; } }  // lines 13-13
- namespace Compiler { namespace Compiler { struct TokenLoc; } }  // lines 14-14

The full include-list for components/compiler/declarationparser.hpp:
#include <string>                       // for string
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 17-17
namespace Compiler { class ErrorHandler; }  // lines 18-18
namespace Compiler { class Locals; }  // lines 25-25
namespace Compiler { class Scanner; }  // lines 19-19
namespace Compiler { struct TokenLoc; }  // lines 20-20
---

components/compiler/declarationparser.cpp should add these lines:

components/compiler/declarationparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 5-5
- #include "components/compiler/tokenloc.hpp"  // lines 7-7
- namespace Compiler { class Context; }  // lines 15-15

The full include-list for components/compiler/declarationparser.cpp:
#include "declarationparser.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
#include "components/compiler/parser.hpp"  // for Parser
#include "components/compiler/tokenloc.hpp"  // for TokenLoc
#include "errorhandler.hpp"             // for ErrorHandler
#include "scanner.hpp"                  // for Scanner, etc
namespace Compiler { class Context; }  // lines 13-13
---

extern/oics/tinyxml.h should add these lines:

extern/oics/tinyxml.h should remove these lines:
- #include <stdlib.h>  // lines 38-38
- #include <string.h>  // lines 39-39

The full include-list for extern/oics/tinyxml.h:
#include <assert.h>                     // for assert
#include <ctype.h>                      // for tolower, isspace
#include <stddef.h>                     // for size_t
#include "tinystr.h"                    // for TiXmlString, operator<, etc
class TiXmlAttribute;  // lines 87-87
class TiXmlComment;  // lines 88-88
class TiXmlDeclaration;  // lines 89-89
class TiXmlDocument;  // lines 90-90
class TiXmlElement;  // lines 91-91
class TiXmlParsingData;  // lines 93-93
class TiXmlText;  // lines 94-94
class TiXmlUnknown;  // lines 95-95
---

(components/compiler/extensions.hpp has correct #includes/fwd-decls)

components/compiler/extensions.cpp should add these lines:

components/compiler/extensions.cpp should remove these lines:
- #include <utility>  // lines 5-5
- #include "components/interpreter/types.hpp"  // lines 8-8

The full include-list for components/compiler/extensions.cpp:
#include "extensions.hpp"
#include <cassert>                      // for assert
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair, make_pair
#include "components/interpreter/types.hpp"  // for Type_Code
#include "generator.hpp"                // for pushInt, segment3, segment5
#include "literals.hpp"                 // for Literals
---

(extern/oics/tinyxml.cpp has correct #includes/fwd-decls)

(components/esm/loadinfo.hpp has correct #includes/fwd-decls)

components/esm/loadinfo.cpp should add these lines:

components/esm/loadinfo.cpp should remove these lines:
- #include "components/esm/esmcommon.hpp"  // lines 2-2
- #include "components/esm/variant.hpp"  // lines 4-4

The full include-list for components/esm/loadinfo.cpp:
#include "loadinfo.hpp"
#include "components/esm/esmcommon.hpp"  // for NAME
#include "components/esm/variant.hpp"   // for Variant, etc
#include "defs.hpp"                     // for RecNameInts::REC_INFO
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/esmreader.hpp should add these lines:
#include <sys/types.h>                  // for int64_t

components/esm/esmreader.hpp should remove these lines:
- #include <libs/platform/string.h>  // lines 7-7
- #include <components/misc/stringops.hpp>  // lines 5-5
- #include <components/to_utf8/to_utf8.hpp>  // lines 6-6

The full include-list for components/esm/esmreader.hpp:
#include <OgreDataStream.h>             // for DataStream, DataStreamPtr
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint32_t, uint64_t
#include <sys/types.h>                  // for int64_t
#include <cassert>                      // for assert
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for string, char_traits
#include <vector>                       // for vector
#include "OgreSharedPtr.h"              // for SharedPtr
#include "esmcommon.hpp"                // for ESM_Context, NAME, NAME256, etc
#include "loadtes3.hpp"                 // for Header, Header::Data
namespace ToUTF8 { class Utf8Encoder; }  // lines 20-20
---

components/esm/esmreader.cpp should add these lines:

components/esm/esmreader.cpp should remove these lines:
- #include <string.h>  // lines 2-2
- #include "OgreDataStream.h"  // lines 7-7
- #include "components/esm/esmcommon.hpp"  // lines 9-9
- #include "components/esm/loadtes3.hpp"  // lines 11-11
- #include "components/to_utf8/to_utf8.hpp"  // lines 13-13

The full include-list for components/esm/esmreader.cpp:
#include "esmreader.hpp"
#include <string.h>                     // for strnlen
#include <stdexcept>                    // for runtime_error
#include "../files/constrainedfiledatastream.hpp"
#include "OgreDataStream.h"             // for DataStream, DataStreamPtr
#include "components/esm/esmcommon.hpp"  // for ESM_Context, NAME, NAME_T
#include "components/esm/loadtes3.hpp"  // for Header
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder
---
In file included from components/interpreter/interpreter.cpp:9:
components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
components/interpreter/interpreter.cpp:18:23: warning: extra qualification on member 'execute' [-Wextra-qualification]
    void Interpreter::execute (Type_Code code)
                      ^
components/interpreter/interpreter.cpp:18:23: error: out-of-line definition of 'execute' does not match any declaration in namespace 'Interpreter'
    void Interpreter::execute (Type_Code code)
                      ^~~~~~~
components/interpreter/interpreter.cpp:29:59: error: use of undeclared identifier 'mSegment0'
                std::map<int, Opcode1 *>::iterator iter = mSegment0.find (opcode);
                                                          ^
components/interpreter/interpreter.cpp:31:27: error: use of undeclared identifier 'mSegment0'
                if (iter==mSegment0.end())
                          ^
components/interpreter/interpreter.cpp:32:21: error: use of undeclared identifier 'abortUnknownCode'
                    abortUnknownCode (0, opcode);
                    ^
components/interpreter/interpreter.cpp:45:59: error: use of undeclared identifier 'mSegment1'
                std::map<int, Opcode2 *>::iterator iter = mSegment1.find (opcode);
                                                          ^
components/interpreter/interpreter.cpp:47:27: error: use of undeclared identifier 'mSegment1'
                if (iter==mSegment1.end())
                          ^
In file included from extern/oics/ICSControl.cpp:31:
extern/oics/ICSControl.h:66:40: error: incomplete type 'ICS::Channel' named in nested name specifier
                void attachChannel(Channel* channel, Channel::ChannelDirection direction, float percentage = 1.0);      
                                                     ^~~~~~~~~
extern/oics/ICSPrerequisites.h:102:11: note: forward declaration of 'ICS::Channel'
    class Channel;
          ^
components/interpreter/interpreter.cpp:48:21: error: use of undeclared identifier 'abortUnknownCode'
                    abortUnknownCode (1, opcode);
                    ^
In file included from extern/oics/tinyxmlparser.cpp:34:
extern/oics/tinyxml.h:217:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const = 0;
                            ^
components/interpreter/interpreter.cpp:60:59: error: use of undeclared identifier 'mSegment2'
                std::map<int, Opcode1 *>::iterator iter = mSegment2.find (opcode);
                                                          ^
components/interpreter/interpreter.cpp:62:27: error: use of undeclared identifier 'mSegment2'
                if (iter==mSegment2.end())
                          ^
extern/oics/tinyxml.h:874:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:877:14: error: unknown type name 'FILE'
        void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                    ^
components/interpreter/interpreter.cpp:63:21: error: use of undeclared identifier 'abortUnknownCode'
                    abortUnknownCode (2, opcode);
                    ^
extern/oics/tinyxml.h:1120:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1174:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1235:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/ICSControl.cpp:74:16: error: out-of-line definition of 'attachChannel' does not match any declaration in 'ICS::Control'
        void Control::attachChannel(Channel* channel, Channel::ChannelDirection direction, float percentage)
                      ^~~~~~~~~~~~~
extern/oics/tinyxml.h:1313:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                            ^
extern/oics/tinyxml.h:1314:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:1361:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
components/interpreter/interpreter.cpp:80:59: error: use of undeclared identifier 'mSegment3'
                std::map<int, Opcode1 *>::iterator iter = mSegment3.find (opcode);
                                                          ^
components/interpreter/interpreter.cpp:82:27: error: use of undeclared identifier 'mSegment3'
                if (iter==mSegment3.end())
                          ^
extern/oics/tinyxml.h:1422:17: error: unknown type name 'FILE'
        bool LoadFile( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );
                       ^
extern/oics/tinyxml.h:1424:17: error: unknown type name 'FILE'
        bool SaveFile( FILE* ) const;
                       ^
extern/oics/tinyxml.h:1527:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth = 0 ) const;
                            ^
extern/oics/tinyxml.h:1518:35: error: use of undeclared identifier 'stdout'
        void Print() const                                              { Print( stdout, 0 ); }
                                                                                 ^
components/interpreter/interpreter.cpp:83:21: error: use of undeclared identifier 'abortUnknownCode'
                    abortUnknownCode (3, opcode);
                    ^
components/interpreter/interpreter.cpp:96:59: error: use of undeclared identifier 'mSegment4'
                std::map<int, Opcode2 *>::iterator iter = mSegment4.find (opcode);
                                                          ^
components/interpreter/interpreter.cpp:98:27: error: use of undeclared identifier 'mSegment4'
                if (iter==mSegment4.end())
                          ^
components/interpreter/interpreter.cpp:99:21: error: use of undeclared identifier 'abortUnknownCode'
                    abortUnknownCode (4, opcode);
                    ^
components/interpreter/interpreter.cpp:110:59: error: use of undeclared identifier 'mSegment5'
                std::map<int, Opcode0 *>::iterator iter = mSegment5.find (opcode);
                                                          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/contentselector/model/modelitem.hpp should add these lines:

components/contentselector/model/modelitem.hpp should remove these lines:
- #include <QList>  // lines 4-4
- #include <QMimeData>  // lines 5-5
- #include <QtCore>  // lines 7-7

The full include-list for components/contentselector/model/modelitem.hpp:
#include <QtCore>                       // for QList, QMimeData, QString, etc
---

components/contentselector/model/modelitem.cpp should add these lines:
#include <QList>                        // for QList
#include <QMimeData>                    // for QMimeData

components/contentselector/model/modelitem.cpp should remove these lines:

The full include-list for components/contentselector/model/modelitem.cpp:
#include "modelitem.hpp"
#include <QList>                        // for QList
#include <QMimeData>                    // for QMimeData
---
components/compiler/fileparser.cpp:20:5: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    FileParser::FileParser (ErrorHandler& errorHandler, Context& context)
    ^~~~~~~~~~
    LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^
components/compiler/fileparser.cpp:20:17: error: missing return type for function 'FileParser'; did you mean the constructor name 'LineParser'?
    FileParser::FileParser (ErrorHandler& errorHandler, Context& context)
                ^~~~~~~~~~
                LineParser
components/compiler/fileparser.cpp:20:17: error: out-of-line definition of 'LineParser' does not match any declaration in 'Compiler::LineParser'
    FileParser::FileParser (ErrorHandler& errorHandler, Context& context)
                ^~~~~~~~~~
components/compiler/fileparser.cpp:22:7: error: member initializer 'mScriptParser' does not name a non-static data member or base class
      mScriptParser (errorHandler, context, mLocals, true),
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
components/compiler/fileparser.cpp:26:17: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    std::string FileParser::getName() const
                ^~~~~~~~~~
                LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^

extern/oics/tinyxmlparser.cpp should add these lines:

extern/oics/tinyxmlparser.cpp should remove these lines:
- #include <assert.h>  // lines 26-26
- #include <string.h>  // lines 30-30
- #include "extern/oics/tinystr.h"  // lines 33-33

The full include-list for extern/oics/tinyxmlparser.cpp:
#include <assert.h>                     // for assert
#include <ctype.h>                      // for isalnum, isalpha
#include <stddef.h>                     // for ptrdiff_t
#include <string.h>                     // for strlen, strchr, strncmp
#include "extern/oics/tinystr.h"        // for TiXmlString
#include "tinyxml.h"                    // for TiXmlDocument, etc
---
components/compiler/fileparser.cpp:26:29: error: out-of-line definition of 'getName' does not match any declaration in 'Compiler::LineParser'
    std::string FileParser::getName() const
                            ^~~~~~~
components/compiler/fileparser.cpp:31:10: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    void FileParser::getCode (std::vector<Interpreter::Type_Code>& code) const
         ^~~~~~~~~~
         LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^
components/compiler/fileparser.cpp:31:22: error: out-of-line definition of 'getCode' does not match any declaration in 'Compiler::LineParser'
    void FileParser::getCode (std::vector<Interpreter::Type_Code>& code) const
                     ^~~~~~~
components/compiler/fileparser.cpp:33:9: error: use of undeclared identifier 'mScriptParser'
        mScriptParser.getCode (code);
        ^
components/compiler/fileparser.cpp:36:19: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    const Locals& FileParser::getLocals() const
                  ^~~~~~~~~~
                  LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^
components/compiler/fileparser.cpp:36:31: error: out-of-line definition of 'getLocals' does not match any declaration in 'Compiler::LineParser'
    const Locals& FileParser::getLocals() const
                              ^~~~~~~~~
components/compiler/fileparser.cpp:41:10: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    bool FileParser::parseName (const std::string& name, const TokenLoc& loc,
         ^~~~~~~~~~
         LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^
components/compiler/fileparser.cpp:44:21: error: use of undeclared identifier 'NameState'; did you mean 'mState'?
        if (mState==NameState)
                    ^~~~~~~~~
                    mState
components/compiler/lineparser.hpp:47:19: note: 'mState' declared here
            State mState;
                  ^
components/compiler/fileparser.cpp:47:22: error: use of undeclared identifier 'BeginCompleteState'
            mState = BeginCompleteState;
                     ^
components/compiler/fileparser.cpp:51:21: error: use of undeclared identifier 'EndNameState'; did you mean 'EndState'?
        if (mState==EndNameState)
                    ^~~~~~~~~~~~
                    EndState
components/compiler/lineparser.hpp:40:17: note: 'EndState' declared here
                EndState, PotentialEndState /* may have a stray string argument */,
                ^
components/compiler/fileparser.cpp:57:22: error: use of undeclared identifier 'EndCompleteState'
            mState = EndCompleteState;
                     ^
components/compiler/fileparser.cpp:64:21: error: use of undeclared identifier 'BeginCompleteState'
        if (mState==BeginCompleteState)
                    ^
components/compiler/fileparser.cpp:73:10: error: use of undeclared identifier 'FileParser'; did you mean 'LineParser'?
    bool FileParser::parseKeyword (int keyword, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~~~
         LineParser
components/compiler/lineparser.hpp:32:11: note: 'LineParser' declared here
    class LineParser : public Parser
          ^
components/compiler/fileparser.cpp:77:22: error: use of undeclared identifier 'NameState'; did you mean 'mState'?
            mState = NameState;
                     ^~~~~~~~~
                     mState
components/compiler/lineparser.hpp:47:19: note: 'mState' declared here
            State mState;
                  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/compiler/quickfileparser.hpp should add these lines:

components/compiler/quickfileparser.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace Compiler { namespace Compiler { class Context; } }  // lines 12-12
- namespace Compiler { namespace Compiler { class ErrorHandler; } }  // lines 13-13
- namespace Compiler { namespace Compiler { class Scanner; } }  // lines 14-14
- namespace Compiler { namespace Compiler { struct TokenLoc; } }  // lines 15-15

The full include-list for components/compiler/quickfileparser.hpp:
#include <string>                       // for string
#include "declarationparser.hpp"        // for DeclarationParser
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 18-18
namespace Compiler { class ErrorHandler; }  // lines 19-19
namespace Compiler { class Locals; }  // lines 26-26
namespace Compiler { class Scanner; }  // lines 20-20
namespace Compiler { struct TokenLoc; }  // lines 21-21
---

components/compiler/quickfileparser.cpp should add these lines:

components/compiler/quickfileparser.cpp should remove these lines:
- #include "components/compiler/declarationparser.hpp"  // lines 3-3
- #include "components/compiler/parser.hpp"  // lines 5-5
- namespace Compiler { class Context; }  // lines 15-15
- namespace Compiler { class ErrorHandler; }  // lines 16-16
- namespace Compiler { struct TokenLoc; }  // lines 17-17

The full include-list for components/compiler/quickfileparser.cpp:
#include "quickfileparser.hpp"
#include "components/compiler/declarationparser.hpp"
#include "components/compiler/parser.hpp"  // for Parser
#include "scanner.hpp"                  // for Scanner, etc
#include "skipparser.hpp"               // for SkipParser
namespace Compiler { class Context; }  // lines 11-11
namespace Compiler { class ErrorHandler; }  // lines 12-12
namespace Compiler { struct TokenLoc; }  // lines 13-13
---

components/interpreter/interpreter.hpp should add these lines:

components/interpreter/interpreter.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include "runtime.hpp"  // lines 6-6
- #include "types.hpp"  // lines 7-7
- namespace Interpreter { class Context; }  // lines 10-10
- namespace Interpreter { class Context; }  // lines 12-12

The full include-list for components/interpreter/interpreter.hpp:
---

components/interpreter/interpreter.cpp should add these lines:
#include <map>                          // for map, map<>::iterator
namespace Interpreter { class Opcode0; }
namespace Interpreter { class Opcode1; }
namespace Interpreter { class Opcode2; }

components/interpreter/interpreter.cpp should remove these lines:
- #include <stdexcept>  // lines 4-4
- #include <utility>  // lines 5-5
- #include "components/interpreter/runtime.hpp"  // lines 7-7
- #include "opcodes.hpp"  // lines 10-10

The full include-list for components/interpreter/interpreter.cpp:
#include "interpreter.hpp"
#include <cassert>                      // for assert
#include <iostream>                     // for basic_ostringstream, etc
#include <map>                          // for map, map<>::iterator
#include "components/interpreter/types.hpp"  // for Type_Code
namespace Interpreter { class Context; }  // lines 13-13
namespace Interpreter { class Opcode0; }
namespace Interpreter { class Opcode1; }
namespace Interpreter { class Opcode2; }
---

(components/compiler/output.hpp has correct #includes/fwd-decls)

components/compiler/output.cpp should add these lines:

components/compiler/output.cpp should remove these lines:
- #include "components/compiler/literals.hpp"  // lines 7-7
- #include "components/interpreter/types.hpp"  // lines 9-9

The full include-list for components/compiler/output.cpp:
#include "output.hpp"
#include <algorithm>                    // for copy
#include <cassert>                      // for assert
#include <iterator>                     // for back_insert_iterator, etc
#include "components/compiler/literals.hpp"  // for Literals
#include "components/interpreter/types.hpp"  // for Type_Code
#include "locals.hpp"                   // for Locals
---
components/esm/globalmap.cpp:7:19: error: no member named 'GlobalMap' in namespace 'ESM'
unsigned int ESM::GlobalMap::sRecordId = ESM::REC_GMAP;
             ~~~~~^

components/compiler/fileparser.cpp should add these lines:
#include <string>                       // for operator+, string, etc
#include <vector>                       // for vector
#include "components/compiler/lineparser.hpp"  // for LineParser, etc
#include "components/interpreter/types.hpp"  // for Type_Code

components/compiler/fileparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 2-2
- #include "components/compiler/scriptparser.hpp"  // lines 3-3
- #include "components/compiler/scriptparser.hpp"  // lines 4-4
- namespace Compiler { class Context; }  // lines 13-13
- namespace Compiler { class ErrorHandler; }  // lines 14-14
- namespace Compiler { class Locals; }  // lines 15-15

The full include-list for components/compiler/fileparser.cpp:
#include <string>                       // for operator+, string, etc
#include <vector>                       // for vector
#include "components/compiler/lineparser.hpp"  // for LineParser, etc
#include "components/compiler/parser.hpp"  // for Parser
#include "components/interpreter/types.hpp"  // for Type_Code
#include "scanner.hpp"                  // for Scanner, etc
#include "tokenloc.hpp"                 // for TokenLoc
namespace Compiler { class Context; }  // lines 9-9
namespace Compiler { class ErrorHandler; }  // lines 10-10
namespace Compiler { class Locals; }  // lines 11-11
---
components/esm/globalmap.cpp:9:11: error: no member named 'GlobalMap' in namespace 'ESM'
void ESM::GlobalMap::load (ESMReader &esm)
     ~~~~~^
components/esm/globalmap.cpp:28:11: error: no member named 'GlobalMap' in namespace 'ESM'
void ESM::GlobalMap::save (ESMWriter &esm) const
     ~~~~~^

extern/oics/ICSControl.h should add these lines:
namespace ICS { class Channel; }

extern/oics/ICSControl.h should remove these lines:
- #include <list>  // lines 31-31
- #include <string>  // lines 33-33
- #include "ICSControlListener.h"  // lines 35-35
- namespace ICS { class ControlListener; }  // lines 41-41

The full include-list for extern/oics/ICSControl.h:
#include <list>                         // for list
#include <string>                       // for string, allocator
#include "ICSPrerequisites.h"           // for DllExport
namespace ICS { class Channel; }
namespace ICS { class ControlListener; }  // lines 39-39
---
components/esm/globalmap.cpp:28:28: error: unknown type name 'ESMWriter'
void ESM::GlobalMap::save (ESMWriter &esm) const
                           ^

extern/oics/ICSControl.cpp should add these lines:

extern/oics/ICSControl.cpp should remove these lines:
- #include <algorithm>  // lines 29-29
- #include "extern/oics/ICSChannel.h"  // lines 33-33
- #include "extern/oics/ICSControlListener.h"  // lines 35-35

The full include-list for extern/oics/ICSControl.cpp:
#include "ICSControl.h"
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for max, min
#include "extern/oics/ICSChannel.h"     // for Channel, etc
#include "extern/oics/ICSControlListener.h"  // for ControlListener
---
In file included from extern/oics/tinyxmlerror.cpp:25:
extern/oics/tinyxml.h:217:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const = 0;
                            ^
extern/oics/tinyxml.h:874:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:877:14: error: unknown type name 'FILE'
        void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                    ^
extern/oics/tinyxml.h:1120:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1174:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1235:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1313:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth, TIXML_STRING* str ) const;
                            ^
extern/oics/tinyxml.h:1314:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const {
                            ^
extern/oics/tinyxml.h:1361:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth ) const;
                            ^
extern/oics/tinyxml.h:1422:17: error: unknown type name 'FILE'
        bool LoadFile( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );
                       ^
extern/oics/tinyxml.h:1424:17: error: unknown type name 'FILE'
        bool SaveFile( FILE* ) const;
                       ^
extern/oics/tinyxml.h:1527:22: error: unknown type name 'FILE'
        virtual void Print( FILE* cfile, int depth = 0 ) const;
                            ^
extern/oics/tinyxml.h:1518:35: error: use of undeclared identifier 'stdout'
        void Print() const                                              { Print( stdout, 0 ); }
                                                                                 ^
In file included from components/esm/esmwriter.cpp:12:
components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
components/esm/esmwriter.cpp:74:9: error: use of undeclared identifier 'mRecords'
        mRecords.clear();
        ^
components/esm/esmwriter.cpp:87:14: error: use of undeclared identifier 'mRecords'
        if (!mRecords.empty())
             ^
components/esm/esmwriter.cpp:103:9: error: use of undeclared identifier 'mRecords'
        mRecords.push_back(rec);
        ^

(extern/oics/tinyxmlerror.cpp has correct #includes/fwd-decls)
components/esm/esmwriter.cpp:105:16: error: use of undeclared identifier 'mRecords'
        assert(mRecords.back().size == 0);
               ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
components/esm/esmwriter.cpp:121:17: error: use of undeclared identifier 'mRecords'
        assert (mRecords.size() <= 1);
                ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
components/esm/esmwriter.cpp:129:9: error: use of undeclared identifier 'mRecords'
        mRecords.push_back(rec);
        ^
components/esm/esmwriter.cpp:131:16: error: use of undeclared identifier 'mRecords'
        assert(mRecords.back().size == 0);
               ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
components/esm/esmwriter.cpp:136:26: error: use of undeclared identifier 'mRecords'
        RecordData rec = mRecords.back();
                         ^
components/esm/esmwriter.cpp:138:9: error: use of undeclared identifier 'mRecords'
        mRecords.pop_back();
        ^
components/esm/esmwriter.cpp:210:27: error: use of undeclared identifier 'mRecords'
        if (mCounting && !mRecords.empty())
                          ^
components/esm/esmwriter.cpp:212:23: error: no member named 'list' in namespace 'std'
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                 ~~~~~^
components/esm/esmwriter.cpp:212:28: error: 'RecordData' does not refer to a value
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                           ^
components/esm/esmwriter.hpp:26:16: note: declared here
        struct RecordData
               ^
components/esm/esmwriter.cpp:212:41: error: no member named 'iterator' in the global namespace
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                                      ~~^
components/esm/esmwriter.cpp:212:73: error: use of undeclared identifier 'it'
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                                                                        ^
components/esm/esmwriter.cpp:212:79: error: use of undeclared identifier 'mRecords'
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                                                                              ^
components/esm/esmwriter.cpp:212:97: error: use of undeclared identifier 'it'
            for (std::list<RecordData>::iterator it = mRecords.begin(); it != mRecords.end(); ++it)
                                                                                                ^
components/esm/esmwriter.cpp:213:17: error: use of undeclared identifier 'it'
                it->size += size;
                ^

components/files/multidircollection.hpp should add these lines:
#include <locale>                       // for tolower, locale

components/files/multidircollection.hpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <cctype>  // lines 7-7
- #include <cstddef>  // lines 9-9

The full include-list for components/files/multidircollection.hpp:
#include <algorithm>                    // for min
#include <boost/filesystem/path.hpp>    // for path
#include <cstddef>                      // for size_t
#include <locale>                       // for tolower, locale
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <vector>                       // for vector
---

components/compiler/stringparser.hpp should add these lines:

components/compiler/stringparser.hpp should remove these lines:
- #include <string>  // lines 6-6
- namespace Compiler { class Context; }  // lines 17-17
- namespace Compiler { class ErrorHandler; }  // lines 18-18
- namespace Compiler { class Scanner; }  // lines 20-20
- namespace Compiler { struct TokenLoc; }  // lines 21-21

The full include-list for components/compiler/stringparser.hpp:
#include <components/interpreter/types.hpp>  // for Type_Code
#include <string>                       // for string
#include <vector>                       // for vector
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 12-12
namespace Compiler { class ErrorHandler; }  // lines 13-13
namespace Compiler { class Literals; }  // lines 26-26
namespace Compiler { class Scanner; }  // lines 14-14
namespace Compiler { struct TokenLoc; }  // lines 15-15
---

components/compiler/stringparser.cpp should add these lines:

components/compiler/stringparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 7-7
- #include "components/interpreter/types.hpp"  // lines 9-9
- namespace Compiler { class Context; }  // lines 19-19
- namespace Compiler { class ErrorHandler; }  // lines 20-20
- namespace Compiler { struct TokenLoc; }  // lines 21-21

The full include-list for components/compiler/stringparser.cpp:
#include "stringparser.hpp"
#include <algorithm>                    // for copy
#include <components/misc/stringops.hpp>  // for StringUtils
#include <iterator>                     // for back_insert_iterator, etc
#include "components/compiler/parser.hpp"  // for Parser
#include "components/interpreter/types.hpp"  // for Type_Code
#include "generator.hpp"                // for pushString
#include "scanner.hpp"                  // for Scanner, etc
namespace Compiler { class Context; }  // lines 15-15
namespace Compiler { class ErrorHandler; }  // lines 16-16
namespace Compiler { struct TokenLoc; }  // lines 17-17
---

(components/files/multidircollection.cpp has correct #includes/fwd-decls)

(components/esm/loadarmo.hpp has correct #includes/fwd-decls)

(components/esm/loadarmo.cpp has correct #includes/fwd-decls)

components/compiler/discardparser.hpp should add these lines:

components/compiler/discardparser.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace Compiler { class Context; }  // lines 15-15
- namespace Compiler { class ErrorHandler; }  // lines 16-16
- namespace Compiler { class Scanner; }  // lines 17-17
- namespace Compiler { struct TokenLoc; }  // lines 18-18

The full include-list for components/compiler/discardparser.hpp:
#include <string>                       // for string
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 10-10
namespace Compiler { class ErrorHandler; }  // lines 11-11
namespace Compiler { class Scanner; }  // lines 12-12
namespace Compiler { struct TokenLoc; }  // lines 13-13
---

components/compiler/discardparser.cpp should add these lines:

components/compiler/discardparser.cpp should remove these lines:
- #include "components/compiler/parser.hpp"  // lines 3-3
- namespace Compiler { class Context; }  // lines 12-12
- namespace Compiler { class ErrorHandler; }  // lines 13-13
- namespace Compiler { struct TokenLoc; }  // lines 14-14

The full include-list for components/compiler/discardparser.cpp:
#include "discardparser.hpp"
#include "components/compiler/parser.hpp"  // for Parser
#include "scanner.hpp"                  // for Scanner, etc
namespace Compiler { class Context; }  // lines 8-8
namespace Compiler { class ErrorHandler; }  // lines 9-9
namespace Compiler { struct TokenLoc; }  // lines 10-10
---

components/esm/globalscript.hpp should add these lines:

components/esm/globalscript.hpp should remove these lines:
- #include <string>  // lines 5-5

The full include-list for components/esm/globalscript.hpp:
#include <string>                       // for string
#include "locals.hpp"                   // for Locals
namespace ESM { class ESMReader; }  // lines 12-12
namespace ESM { class ESMWriter; }  // lines 13-13
---

components/esm/globalscript.cpp should add these lines:

components/esm/globalscript.cpp should remove these lines:
- #include "components/esm/locals.hpp"  // lines 3-3

The full include-list for components/esm/globalscript.cpp:
#include "globalscript.hpp"
#include "components/esm/locals.hpp"    // for Locals
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadlock.hpp has correct #includes/fwd-decls)

(components/esm/loadlock.cpp has correct #includes/fwd-decls)

(components/esm/spelllist.hpp has correct #includes/fwd-decls)

components/esm/globalmap.hpp should add these lines:

components/esm/globalmap.hpp should remove these lines:
- #include <set>  // lines 4-4
- #include <utility>  // lines 5-5
- #include <utility>  // lines 6-6
- #include <vector>  // lines 7-7
- class ESMReader;  // lines 10-10

The full include-list for components/esm/globalmap.hpp:
---

components/esm/globalmap.cpp should add these lines:

components/esm/globalmap.cpp should remove these lines:
- #include "defs.hpp"  // lines 5-5
- #include "esmreader.hpp"  // lines 3-3
- #include "esmwriter.hpp"  // lines 4-4

The full include-list for components/esm/globalmap.cpp:
#include "globalmap.hpp"
---

(components/esm/loadsscr.hpp has correct #includes/fwd-decls)

(components/esm/loadsscr.cpp has correct #includes/fwd-decls)

components/esm/esmwriter.hpp should add these lines:

components/esm/esmwriter.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <stdint.h>  // lines 7-7
- #include <string>  // lines 10-10
- #include "esmcommon.hpp"  // lines 12-12

The full include-list for components/esm/esmwriter.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint32_t, uint64_t
#include <iosfwd>                       // for ostream
#include <string>                       // for string, streampos
#include "loadtes3.hpp"                 // for Header
namespace ToUTF8 { class Utf8Encoder; }  // lines 19-19
---

components/esm/spelllist.cpp should add these lines:

components/esm/spelllist.cpp should remove these lines:
- #include "components/misc/stringops.hpp"  // lines 2-2

The full include-list for components/esm/spelllist.cpp:
#include "spelllist.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

extern/oics/tinystr.h should add these lines:

extern/oics/tinystr.h should remove these lines:
- #include <stddef.h>  // lines 40-40

The full include-list for extern/oics/tinystr.h:
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <string.h>                     // for memcpy, strcmp, strlen
---

(extern/oics/tinystr.cpp has correct #includes/fwd-decls)

components/esm/esmwriter.cpp should add these lines:

components/esm/esmwriter.cpp should remove these lines:
- #include <stdexcept>  // lines 4-4
- #include <vector>  // lines 6-6
- #include "components/esm/esmcommon.hpp"  // lines 9-9
- #include "components/esm/loadtes3.hpp"  // lines 11-11

The full include-list for components/esm/esmwriter.cpp:
#include "esmwriter.hpp"
#include <cassert>                      // for assert
#include <components/to_utf8/to_utf8.hpp>  // for Utf8Encoder
#include <fstream>                      // for basic_ostream::tellp, etc
#include <vector>                       // for vector
#include "components/esm/esmcommon.hpp"  // for NAME256, NAME32
#include "components/esm/loadtes3.hpp"  // for Header::MasterData, Header, etc
---
error: no such file or directory: 'build-include/components/contentselector/model/moc_modelitem.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/contentselector/view/moc_combobox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/esm/fogstate.hpp has correct #includes/fwd-decls)

components/esm/fogstate.cpp should add these lines:

components/esm/fogstate.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2

The full include-list for components/esm/fogstate.cpp:
#include "fogstate.hpp"
#include <stddef.h>                     // for size_t
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
error: no such file or directory: 'build-include/components/contentselector/view/moc_contentselector.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/interpreter/runtime.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/model/moc_esmfile.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

components/esm/projectilestate.hpp should add these lines:

components/esm/projectilestate.hpp should remove these lines:
- #include <OgreQuaternion.h>  // lines 4-4
- #include <OgreVector3.h>  // lines 5-5

The full include-list for components/esm/projectilestate.hpp:
#include <string>                       // for string
#include "effectlist.hpp"               // for EffectList
#include "util.hpp"                     // for Vector3, Quaternion
namespace ESM { class ESMReader; }  // lines 12-12
namespace ESM { class ESMWriter; }  // lines 13-13
---

(components/esm/filter.hpp has correct #includes/fwd-decls)

(components/esm/filter.cpp has correct #includes/fwd-decls)

components/esm/projectilestate.cpp should add these lines:

components/esm/projectilestate.cpp should remove these lines:
- #include "components/esm/effectlist.hpp"  // lines 2-2
- #include "components/esm/util.hpp"  // lines 4-4

The full include-list for components/esm/projectilestate.cpp:
#include "projectilestate.hpp"
#include "components/esm/effectlist.hpp"  // for EffectList
#include "components/esm/util.hpp"      // for Vector3, Quaternion
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/interpreter/runtime.cpp should add these lines:

components/interpreter/runtime.cpp should remove these lines:
- #include "components/interpreter/types.hpp"  // lines 7-7

The full include-list for components/interpreter/runtime.cpp:
#include "runtime.hpp"
#include <cassert>                      // for assert
#include <cstring>                      // for strlen
#include <stdexcept>                    // for runtime_error
#include "components/interpreter/types.hpp"  // for Data, Type_Code, etc
---
error: no such file or directory: 'build-include/components/config/moc_gamesettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/contentselector/model/moc_naturalsort.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/esm/loaddoor.hpp has correct #includes/fwd-decls)

(components/esm/loaddoor.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/model/moc_contentmodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/config/moc_launchersettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/esm/loadscpt.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/model/moc_loadordererror.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/config/moc_settingsbase.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

components/esm/loadscpt.cpp should add these lines:

components/esm/loadscpt.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include <string.h>  // lines 4-4
- #include <iostream>  // lines 6-6
- #include "components/esm/esmcommon.hpp"  // lines 9-9

The full include-list for components/esm/loadscpt.cpp:
#include "loadscpt.hpp"
#include <stddef.h>                     // for size_t
#include <string.h>                     // for memcpy, memset, strchr
#include <iostream>                     // for operator<<, basic_ostream, etc
#include "components/esm/esmcommon.hpp"  // for NAME32, ESM_Context, NAME
#include "defs.hpp"                     // for RecNameInts::REC_SCPT
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadclas.hpp has correct #includes/fwd-decls)
error
(components/esm/loadclas.cpp has correct #includes/fwd-decls)
: no such file or directory: 'build-include/components/process/moc_processinvoker.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
components/compiler/parser.cpp:10:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    void Parser::reportSeriousError (const std::string& message, const TokenLoc& loc)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:18:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    void Parser::reportWarning (const std::string& message, const TokenLoc& loc)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:25:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    void Parser::reportEOF()
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:33:19: error: incomplete type 'Compiler::Parser' named in nested name specifier
    ErrorHandler& Parser::getErrorHandler()
                  ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:40:11: error: unknown type name 'Context'
    const Context& Parser::getContext() const
          ^
components/compiler/parser.cpp:40:20: error: incomplete type 'Compiler::Parser' named in nested name specifier
    const Context& Parser::getContext() const
                   ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:45:17: error: incomplete type 'Compiler::Parser' named in nested name specifier
    std::string Parser::toLower (const std::string& name)
                ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:52:5: error: incomplete type 'Compiler::Parser' named in nested name specifier
    Parser::Parser (ErrorHandler& errorHandler, const Context& context)
    ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:52:5: error: incomplete type 'Compiler::Parser' named in nested name specifier
    Parser::Parser (ErrorHandler& errorHandler, const Context& context)
    ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:52:55: error: unknown type name 'Context'
    Parser::Parser (ErrorHandler& errorHandler, const Context& context)
                                                      ^
components/compiler/parser.cpp:58:5: error: incomplete type 'Compiler::Parser' named in nested name specifier
    Parser::~Parser() {}
    ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:65:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseInt (int value, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:80:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseFloat (float value, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:95:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseName (const std::string& name, const TokenLoc& loc,
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:111:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseKeyword (int keyword, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:126:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseSpecial (int code, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:136:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    bool Parser::parseComment (const std::string& comment, const TokenLoc& loc, Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:145:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    void Parser::parseEOF (Scanner& scanner)
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
components/compiler/parser.cpp:150:10: error: incomplete type 'Compiler::Parser' named in nested name specifier
    void Parser::reset()
         ^~~~~~~~
components/compiler/scanner.hpp:13:11: note: forward declaration of 'Compiler::Parser'
    class Parser;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(components/esm/dialoguestate.hpp has correct #includes/fwd-decls)

components/esm/dialoguestate.cpp should add these lines:

components/esm/dialoguestate.cpp should remove these lines:
- #include <utility>  // lines 3-3

The full include-list for components/esm/dialoguestate.cpp:
#include "dialoguestate.hpp"
#include <utility>                      // for pair
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/compiler/nullerrorhandler.hpp should add these lines:

components/compiler/nullerrorhandler.hpp should remove these lines:
- #include <string>  // lines 6-6
- namespace Compiler { struct TokenLoc; }  // lines 13-13

The full include-list for components/compiler/nullerrorhandler.hpp:
#include <string>                       // for string
#include "errorhandler.hpp"             // for ErrorHandler::Type, etc
namespace Compiler { struct TokenLoc; }  // lines 11-11
---

components/compiler/nullerrorhandler.cpp should add these lines:

components/compiler/nullerrorhandler.cpp should remove these lines:
- #include "components/compiler/errorhandler.hpp"  // lines 3-3
- namespace Compiler { struct TokenLoc; }  // lines 9-9

The full include-list for components/compiler/nullerrorhandler.cpp:
#include "nullerrorhandler.hpp"
#include "components/compiler/errorhandler.hpp"  // for ErrorHandler::Type
namespace Compiler { struct TokenLoc; }  // lines 7-7
---
In file included from components/widgets/numericeditbox.cpp:17:
components/widgets/numericeditbox.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from components/esm/inventorystate.cpp:4:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^

components/compiler/parser.cpp should add these lines:

components/compiler/parser.cpp should remove these lines:
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include "scanner.hpp"  // lines 4-4

The full include-list for components/compiler/parser.cpp:
---
In file included from extern/shiny/Main/Factory.cpp:23:
In file included from extern/shiny/Main/Factory.hpp:11:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from components/esm/player.cpp:8:
In file included from ./components/esm/npcstate.hpp:4:
In file included from components/esm/creaturestats.hpp:10:
components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from extern/shiny/Main/Factory.cpp:23:
extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from extern/shiny/Main/Factory.cpp:23:
extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
components/interpreter/defines.cpp:35:28: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
        std::ostringstream retval;
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^
components/interpreter/defines.cpp:197:26: error: no member named 'cerr' in namespace 'std'
                    std::cerr << "Failed to replace escape character, with the following error: " << e.what() << std::endl;
                    ~~~~~^
components/interpreter/defines.cpp:197:119: error: no member named 'endl' in namespace 'std'
                    std::cerr << "Failed to replace escape character, with the following error: " << e.what() << std::endl;
                                                                                                                 ~~~~~^
extern/shiny/Main/Factory.cpp:89:28: error: no member named 'lexical_cast' in namespace 'boost'
                                        int modified = boost::lexical_cast<int>(line);
                                                       ~~~~~~~^
extern/shiny/Main/Factory.cpp:89:44: error: expected '(' for function-style cast or type construction
                                        int modified = boost::lexical_cast<int>(line);
                                                                           ~~~^
extern/shiny/Main/Factory.cpp:116:22: error: no member named 'setParent' in 'sh::Configuration'
                                newConfiguration.setParent(&mGlobalSettings);
                                ~~~~~~~~~~~~~~~~ ^
extern/shiny/Main/Factory.cpp:125:23: error: no member named 'setProperty' in 'sh::Configuration'
                                        newConfiguration.setProperty (name, makeProperty(val));
                                        ~~~~~~~~~~~~~~~~ ^
extern/shiny/Main/Factory.cppcomponents/interpreter/defines.cpp::151198::2026::  errorerror: : variable has incomplete type 'sh::PropertySetGet'no member named 'cerr' in namespace 'std'

                                PropertySetGet newLod;
                                               ^
extern/shiny/Main/ShaderSet.hpp:17                    std::cerr << "Full text below: " << std::endl << text << std::endl;:
8                    ~~~~~^:
 note: forward declaration of 'sh::PropertySetGet'
components/interpreter/defines.cpp:198:62:        class PropertySetGet; 
error              ^: 
no member named 'endl' in namespace 'std'
                    std::cerr << "Full text below: " << std::endl << text << std::endl;
                                                        ~~~~~^
components/interpreter/defines.cpp:198:83: error: no member named 'endl' in namespace 'std'
                    std::cerr << "Full text below: " << std::endl << text << std::endl;
                                                                             ~~~~~^

(components/compiler/generator.hpp has correct #includes/fwd-decls)
extern/shiny/Main/Factory.cpp:162:31: error: no member named 'lexical_cast' in namespace 'boost'
                                mLodConfigurations[boost::lexical_cast<int>(it->first)] = newLod;
                                                   ~~~~~~~^
extern/shiny/Main/Factory.cpp:162:47: error: expected '(' for function-style cast or type construction
                                mLodConfigurations[boost::lexical_cast<int>(it->first)] = newLod;
                                                                       ~~~^

(components/esm/loadingr.hpp has correct #includes/fwd-decls)

(components/esm/loadingr.cpp has correct #includes/fwd-decls)

(components/compiler/generator.cpp has correct #includes/fwd-decls)
In file included from extern/shiny/Main/Factory.cpp:3:
In file included from /usr/include/boost/algorithm/string/classification.hpp:14:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'sh::PropertySetGet'
      _T2 second;                /// @c second is a copy of the second object
          ^
extern/shiny/Main/Factory.cpp:329:75: note: in instantiation of template class 'std::pair<const int, sh::PropertySetGet>' requested here
                        for (LodConfigurationMap::iterator it = mLodConfigurations.begin(); it != mLodConfigurations.end(); ++it)
                                                                                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/Factory.cpp:478:25: error: no member named 'setParent' in 'sh::Configuration'
                mConfigurations[name].setParent (&mGlobalSettings);
                ~~~~~~~~~~~~~~~~~~~~~ ^
extern/shiny/Main/Factory.cpp:486:68: error: variable has incomplete type 'sh::PropertySetGet'
        void Factory::registerLodConfiguration (int index, PropertySetGet configuration)
                                                                          ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/Factory.cpp:513:26: error: assigning to 'sh::PropertySetGet *' from incompatible type 'mapped_type *' (aka 'sh::Configuration *')
                        mCurrentConfiguration = &mConfigurations[configuration];
                                              ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
extern/shiny/Main/Factory.cpp:546:28: error: member access into incomplete type 'sh::PropertySetGet'
                        mCurrentLodConfiguration->setParent(p);
                                                ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/Factory.cpp:618:57: error: no member named 'listProperties' in 'sh::Configuration'
                const PropertyMap& properties = mConfigurations[name].listProperties();
                                                ~~~~~~~~~~~~~~~~~~~~~ ^
extern/shiny/Main/Factory.cpp:622:70: error: no member named 'getProperty' in 'sh::Configuration'
                        out[it->first] = retrieveValue<StringValue>(mConfigurations[name].getProperty(it->first), NULL).get();
                                                                    ~~~~~~~~~~~~~~~~~~~~~ ^
extern/shiny/Main/Factory.cpp:834:3: error: incomplete type 'sh::PropertySetGet' named in nested name specifier
                PropertySetGet::save(stream, "\t");
                ^~~~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
components/bsa/bsa_archive.cpp:379:7: error: incomplete type 'Ogre::ArchiveManager' named in nested name specifier
      ArchiveManager::getSingleton().addArchiveFactory( new BSAArchiveFactory );
      ^~~~~~~~~~~~~~~~
/usr/include/OGRE/OgrePrerequisites.h:127:11: note: forward declaration of 'Ogre::ArchiveManager'
    class ArchiveManager;
          ^
components/bsa/bsa_archive.cpp:388:7: error: incomplete type 'Ogre::ArchiveManager' named in nested name specifier
      ArchiveManager::getSingleton().addArchiveFactory( new DirArchiveFactory );
      ^~~~~~~~~~~~~~~~
/usr/include/OGRE/OgrePrerequisites.h:127:11: note: forward declaration of 'Ogre::ArchiveManager'
    class ArchiveManager;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/interpreter/defines.hpp should add these lines:

components/interpreter/defines.hpp should remove these lines:
- #include "context.hpp"  // lines 6-6

The full include-list for components/interpreter/defines.hpp:
#include <string>                       // for string
namespace Interpreter { class Context; }  // lines 9-9
---

components/interpreter/defines.cpp should add these lines:
#include <iosfwd>                       // for basic_ostringstream, etc

components/interpreter/defines.cpp should remove these lines:
- #include <ctype.h>  // lines 2-2
- #include <exception>  // lines 5-5
- #include "components/interpreter/context.hpp"  // lines 10-10

The full include-list for components/interpreter/defines.cpp:
#include "defines.hpp"
#include <ctype.h>                      // for tolower
#include <algorithm>                    // for transform, sort
#include <exception>                    // for exception
#include <iosfwd>                       // for basic_ostringstream, etc
#include <string>                       // for string, basic_string, etc
#include <vector>                       // for vector
#include "components/interpreter/context.hpp"  // for Context
---
In file included from components/esm/loadskil.cpp:6:
components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
components/esm/loadskil.cpp:132:8: error: member access into incomplete type 'ESM::ESMReader'
    esm.getHNT(mIndex, "INDX");
       ^
components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
components/esm/loadskil.cpp:133:8: error: member access into incomplete type 'ESM::ESMReader'
    esm.getHNT(mData, "SKDT", 24);
       ^
components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
components/esm/loadskil.cpp:134:23: error: member access into incomplete type 'ESM::ESMReader'
    mDescription = esm.getHNOString("DESC");
                      ^
components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
In file included from components/nifogre/material.cpp:26:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
components/nifogre/material.cpp:78:75: error: no type named 'IntValue' in namespace 'sh'; did you mean simply 'IntValue'?
    material->setProperty(textureSlotName + "UVSet", sh::makeProperty(new sh::IntValue(tex.uvSet)));
                                                                          ^~~~~~~~~~~~
                                                                          IntValue
./extern/shiny/Main/PropertyBase.hpp:81:8: note: 'IntValue' declared here
        class IntValue : public PropertyValue
              ^
components/nifogre/material.cpp:78:54: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
    material->setProperty(textureSlotName + "UVSet", sh::makeProperty(new sh::IntValue(tex.uvSet)));
                                                     ^~~~~~~~~~~~~~~~
                                                     makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/nifogre/material.cpp:83:63: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("clamp clamp")));
                                                              ^~~~~~~~~~~~~~~
                                                              StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
components/nifogre/material.cpp:83:42: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("clamp clamp")));
                                         ^~~~~~~~~~~~~~~~
                                         makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/nifogre/material.cpp:86:63: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("clamp wrap")));
                                                              ^~~~~~~~~~~~~~~
                                                              StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
components/nifogre/material.cpp:86:42: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("clamp wrap")));
                                         ^~~~~~~~~~~~~~~~
                                         makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/nifogre/material.cpp:89:63: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("wrap clamp")));
                                                              ^~~~~~~~~~~~~~~
                                                              StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
components/nifogre/material.cpp:89:42: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("wrap clamp")));
                                         ^~~~~~~~~~~~~~~~
                                         makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^

(components/esm/loadmgef.hpp has correct #includes/fwd-decls)
components/nifogre/material.cpp:93:63: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("wrap wrap")));
                                                              ^~~~~~~~~~~~~~~
                                                              StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
components/nifogre/material.cpp:93:42: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        material->setProperty(clampMode, sh::makeProperty(new sh::StringValue("wrap wrap")));
                                         ^~~~~~~~~~~~~~~~
                                         makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/nifogre/material.cpp:149:30: error: use of undeclared identifier 'Misc'
                texName[i] = Misc::ResourceHelpers::correctTexturePath(st->filename);
                             ^
components/nifogre/material.cpp:306:50: error: incomplete type 'sh::Factory' named in nested name specifier
            sh::MaterialInstance* instance = sh::Factory::getInstance().getMaterialInstance(itr->second);
                                             ~~~~^~~~~~~~~
./extern/shiny/Main/Platform.hpp:13:8: note: forward declaration of 'sh::Factory'
        class Factory;
              ^

components/esm/loadmgef.cpp should add these lines:

components/esm/loadmgef.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <utility>  // lines 7-7
- #include "components/misc/stringops.hpp"  // lines 10-10

The full include-list for components/esm/loadmgef.cpp:
#include "loadmgef.hpp"
#include <algorithm>                    // for find_if
#include <boost/lexical_cast.hpp>       // for lexical_cast
#include <sstream>                      // for operator<<, ostringstream, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "components/misc/stringops.hpp"  // for StringUtils
#include "defs.hpp"                     // for RecNameInts::REC_MGEF
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
components/nifogre/material.cpp:307:29: error: no template named 'retrieveValue' in namespace 'sh'; did you mean simply 'retrieveValue'?
            needTangents = !sh::retrieveValue<sh::StringValue>(instance->getProperty("normalMap"), instance).get().empty();
                            ^~~~~~~~~~~~~~~~~
                            retrieveValue
./extern/shiny/Main/PropertyBase.hpp:196:11: note: 'retrieveValue' declared here
        static T retrieveValue (boost::shared_ptr<PropertyValue>& value, PropertySetGet* context)
                 ^
In file included from components/esm/inventorystate.cpp:8:
components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
components/nifogre/material.cpp:307:51: error: no member named 'StringValue' in namespace 'sh'
            needTangents = !sh::retrieveValue<sh::StringValue>(instance->getProperty("normalMap"), instance).get().empty();
                                              ~~~~^
components/nifogre/material.cpp:315:42: error: incomplete type 'sh::Factory' named in nested name specifier
    sh::MaterialInstance *instance = sh::Factory::getInstance().createMaterialInstance(name, "openmw_objects_base");
                                     ~~~~^~~~~~~~~
./extern/shiny/Main/Platform.hpp:13:8: note: forward declaration of 'sh::Factory'
        class Factory;
              ^
components/esm/inventorystate.cpp:18:9: error: unknown type name 'ObjectState'
        ObjectState state;
        ^
components/esm/inventorystate.cpp:78:22: error: use of undeclared identifier 'ObjectState'
    for (std::vector<ObjectState>::const_iterator iter (mItems.begin()); iter!=mItems.end(); ++iter)
                     ^

components/esm/loadskil.hpp should add these lines:
#include <cstddef>                      // for size_t

components/esm/loadskil.hpp should remove these lines:
- #include <boost/array.hpp>  // lines 4-4
- #include "defs.hpp"  // lines 7-7

The full include-list for components/esm/loadskil.hpp:
#include <cstddef>                      // for size_t
#include <string>                       // for string
namespace ESM { class ESMReader; }  // lines 15-15
namespace ESM { class ESMWriter; }  // lines 16-16
namespace boost { template <class T, std::size_t N> class array; }  // lines 10-10
---
components/esm/inventorystate.cppcomponents/nifogre/material.cpp:318:63: error: no type named 'Vector4' in namespace 'sh'; did you mean simply 'Vector4'?
        instance->setProperty("ambient", sh::makeProperty(new sh::Vector4(ambient.x, ambient.y, ambient.z, 1)));
                                                              ^~~~~~~~~~~
                                                              Vector4
./extern/shiny/Main/PropertyBase.hpp:127:8: note: 'Vector4' declared here
        class Vector4 : public PropertyValue
              ^
:78:34: error: no type named 'const_iterator' in the global namespace; did you mean 'std::_Bit_const_iterator::const_iterator'?
    for (std::vector<ObjectState>::const_iterator iter (mItems.begin()); iter!=mItems.end(); ++iter)
                                 ^~~~~~~~~~~~~~~~
                                 std::_Bit_const_iterator::const_iterator
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_bvector.h:305:34: note: 'std::_Bit_const_iterator::const_iterator' declared here
    typedef _Bit_const_iterator  const_iterator;
                                 ^
components/esm/inventorystate.cpp:83:13: error: member reference type 'std::_Bit_const_iterator::const_iterator' (aka 'std::_Bit_const_iterator') is not a pointer; maybe you meant to use '.'?
        iter->save (esm, true);
        ~~~~^~
            .
components/esm/inventorystate.cpp:83:15: error: no member named 'save' in 'std::_Bit_const_iterator'
        iter->save (esm, true);
        ~~~~  ^
components/nifogre/material.cpp:318:42: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        instance->setProperty("ambient", sh::makeProperty(new sh::Vector4(ambient.x, ambient.y, ambient.z, 1)));
                                         ^~~~~~~~~~~~~~~~
                                         makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^

components/esm/loadskil.cpp should add these lines:

components/esm/loadskil.cpp should remove these lines:
- #include <boost/array.hpp>  // lines 2-2

The full include-list for components/esm/loadskil.cpp:
#include "loadskil.hpp"
#include <boost/array.hpp>              // for array
#include <sstream>                      // for ostringstream, etc
#include "defs.hpp"                     // for RecNameInts::REC_SKIL
#include "esmwriter.hpp"                // for ESMWriter
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/widgets/numericeditbox.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

components/widgets/numericeditbox.hpp should remove these lines:
- #include <limits>  // lines 6-6
- #include <string>  // lines 7-7
- #include <string>  // lines 8-8
- #include "MyGUI_RTTI.h"  // lines 13-13
- namespace MyGUI { class Widget; }  // lines 18-18

The full include-list for components/widgets/numericeditbox.hpp:
#include <MyGUI_EditBox.h>              // for EditBox
#include <limits>                       // for numeric_limits
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
namespace MyGUI { class Widget; }  // lines 16-16
---

components/widgets/numericeditbox.cpp should add these lines:
#include <string>                       // for string

components/widgets/numericeditbox.cpp should remove these lines:
- #include <algorithm>  // lines 2-2
- #include <algorithm>  // lines 3-3
- #include <sstream>  // lines 4-4
- #include <sstream>  // lines 5-5
- #include "MyGUI_EditBox.h"  // lines 8-8
- #include "MyGUI_EventPair.h"  // lines 9-9
- #include "MyGUI_EventPair.h"  // lines 10-10
- #include "MyGUI_StringUtility.h"  // lines 11-11
- #include "MyGUI_StringUtility.h"  // lines 12-12
- #include "MyGUI_UString.h"  // lines 14-14
- #include "MyGUI_WidgetInput.h"  // lines 15-15
- #include "MyGUI_WidgetInput.h"  // lines 16-16
- namespace MyGUI { class Widget; }  // lines 22-22

The full include-list for components/widgets/numericeditbox.cpp:
#include "numericeditbox.hpp"
#include <boost/lexical_cast.hpp>       // for bad_lexical_cast
#include <string>                       // for string
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_UString.h"              // for UString
namespace MyGUI { class Widget; }  // lines 20-20
---
In file included from components/esm/player.cpp:8:
In file included from ./components/esm/npcstate.hpp:4:
components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from components/esm/player.cpp:8:
In file included from ./components/esm/npcstate.hpp:5:
In file included from components/esm/inventorystate.hpp:12:
components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
components/compiler/scanner.cpp:161:22: error: member access into incomplete type 'Compiler::ErrorHandler'
        mErrorHandler.error ("syntax error", loc);
                     ^
components/compiler/parser.hpp:10:11: note: forward declaration of 'Compiler::ErrorHandler'
    class ErrorHandler;
          ^
In file included from components/esm/player.cpp:8:
In file included from ./components/esm/npcstate.hpp:5:
components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
components/compiler/scanner.cpp:339:34: error: member access into incomplete type 'Compiler::ErrorHandler'
                    mErrorHandler.error ("incomplete string or name", mLoc);
                                 ^
components/compiler/parser.hpp:10:11: note: forward declaration of 'Compiler::ErrorHandler'
    class ErrorHandler;
          ^
components/compiler/scanner.cpp:460:30: error: member access into incomplete type 'Compiler::ErrorHandler'
                mErrorHandler.error ("Invalid character", mLoc);
                             ^
components/compiler/parser.hpp:10:11: note: forward declaration of 'Compiler::ErrorHandler'
    class ErrorHandler;
          ^
In file included from components/esm/player.cpp:8:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:16:
In file included from ./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:9:
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:21:2: error: use of undeclared identifier 'OgreGpuProgram'; did you mean 'GpuProgram'?
        OgreGpuProgram::OgreGpuProgram(
        ^~~~~~~~~~~~~~
        GpuProgram
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:24:8: note: 'GpuProgram' declared here
        class GpuProgram
              ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:21:18: error: missing return type for function 'OgreGpuProgram'; did you mean the constructor name 'GpuProgram'?
        OgreGpuProgram::OgreGpuProgram(
                        ^~~~~~~~~~~~~~
                        GpuProgram
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:21:18: error: out-of-line definition of 'GpuProgram' does not match any declaration in 'sh::GpuProgram'
        OgreGpuProgram::OgreGpuProgram(
                        ^~~~~~~~~~~~~~
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:27:5: error: delegating constructors are permitted only in C++11
                : GpuProgram()
                  ^~~~~~~~~~
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:38:3: error: use of undeclared identifier 'mProgram'
                mProgram = mgr.createProgram(name, resourceGroup, lang, t);
                ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:40:4: error: use of undeclared identifier 'mProgram'
                        mProgram->setParameter("entry_point", "main");
                        ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:42:4: error: use of undeclared identifier 'mProgram'
                        mProgram->setParameter("target", profile);
                        ^

extern/oics/ICSInputControlSystem.h should add these lines:

extern/oics/ICSInputControlSystem.h should remove these lines:
- #include <stddef.h>  // lines 31-31
- #include <limits>  // lines 33-33
- #include <list>  // lines 35-35
- #include <string>  // lines 38-38
- #include <vector>  // lines 40-40
- #include "ICSChannel.h"  // lines 43-43
- #include "SDL_events.h"  // lines 47-47
- #include "SDL_scancode.h"  // lines 49-49
- #include "SDL_stdinc.h"  // lines 51-51
- class TiXmlElement;  // lines 61-61
- namespace ICS { class Channel; }  // lines 63-63
- namespace ICS { class DetectingBindingListener; }  // lines 64-64
- namespace ICS { class InputControlSystem; }  // lines 65-65
- namespace ICS { class InputControlSystemLog; }  // lines 66-66

The full include-list for extern/oics/ICSInputControlSystem.h:
#include <stddef.h>                     // for NULL, size_t
#include <limits>                       // for numeric_limits
#include <list>                         // for list
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for allocator, basic_string, etc
#include <vector>                       // for vector
#include "../sdl4ogre/events.h"         // for JoyListener, KeyListener, etc
#include "ICSControl.h"                 // for Control, etc
#include "ICSPrerequisites.h"           // for DllExport
#include "SDL_events.h"                 // for SDL_JoyButtonEvent, etc
#include "SDL_scancode.h"               // for SDL_Scancode
#include "SDL_stdinc.h"                 // for Uint16, Uint8
class TiXmlElement;  // lines 53-53
namespace ICS { class Channel; }  // lines 55-55
namespace ICS { class DetectingBindingListener; }  // lines 56-56
namespace ICS { class InputControlSystem; }  // lines 57-57
namespace ICS { class InputControlSystemLog; }  // lines 58-58
---
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:44:4: error: use of undeclared identifier 'mProgram'
                        mProgram->setParameter("profiles", profile);
                        ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:46:3: error: use of undeclared identifier 'mProgram'
                mProgram->setSource(source);
                ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:47:3: error: use of undeclared identifier 'mProgram'
                mProgram->load();
                ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:49:7: error: use of undeclared identifier 'mProgram'
                if (mProgram.isNull() || !mProgram->isSupported())
                    ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:49:29: error: use of undeclared identifier 'mProgram'
                if (mProgram.isNull() || !mProgram->isSupported())
                                          ^

extern/oics/ICSInputControlSystem.cpp should add these lines:

extern/oics/ICSInputControlSystem.cpp should remove these lines:
- #include <algorithm>  // lines 30-30
- #include <ostream>  // lines 32-32
- #include "SDL_keyboard.h"  // lines 35-35
- #include "SDL_keycode.h"  // lines 37-37
- #include "SDL_mouse.h"  // lines 39-39
- #include "extern/oics/ICSChannel.h"  // lines 41-41
- #include "extern/oics/ICSControl.h"  // lines 43-43
- #include "extern/oics/ICSPrerequisites.h"  // lines 45-45
- #include "extern/oics/tinyxml.h"  // lines 47-47

The full include-list for extern/oics/ICSInputControlSystem.cpp:
#include "ICSInputControlSystem.h"
#include <algorithm>                    // for max, min
#include <ostream>                      // for operator<<, basic_ostream, etc
#include "SDL_keyboard.h"               // for SDL_GetKeyFromScancode, etc
#include "SDL_keycode.h"                // for ::SDLK_UNKNOWN, SDL_Keycode
#include "SDL_mouse.h"                  // for SDL_BUTTON_LEFT, etc
#include "extern/oics/ICSChannel.h"     // for Channel, FilterInterval, etc
#include "extern/oics/ICSControl.h"     // for Control, etc
#include "extern/oics/ICSPrerequisites.h"  // for ToString, FromString, etc
#include "extern/oics/tinyxml.h"        // for TiXmlElement, TiXmlDocument, etc
---
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:53:7: error: use of undeclared identifier 'OgreGpuProgram'; did you mean 'GpuProgram'?
        bool OgreGpuProgram::getSupported()
             ^~~~~~~~~~~~~~
             GpuProgram
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:24:8: note: 'GpuProgram' declared here
        class GpuProgram
              ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:55:12: error: use of undeclared identifier 'mProgram'
                return (!mProgram.isNull() && mProgram->isSupported());
                         ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:55:33: error: use of undeclared identifier 'mProgram'
                return (!mProgram.isNull() && mProgram->isSupported());
                                              ^

components/contentselector/view/combobox.hpp should add these lines:

components/contentselector/view/combobox.hpp should remove these lines:
- #include <QtCore>  // lines 6-6
- class QPaintEvent;  // lines 9-9
- class QString;  // lines 13-13
- class QWidget;  // lines 14-14

The full include-list for components/contentselector/view/combobox.hpp:
#include <QComboBox>                    // for QComboBox
#include <QtCore>                       // for QString, Q_OBJECT
class QPaintEvent;  // lines 8-8
class QRegExpValidator;  // lines 12-12
class QWidget;  // lines 10-10
---

components/contentselector/view/combobox.cpp should add these lines:

components/contentselector/view/combobox.cpp should remove these lines:
- #include <QRegExp>  // lines 1-1
- #include <QRegExp>  // lines 2-2
- #include <QString>  // lines 3-3
- #include <QStylePainter>  // lines 4-4

The full include-list for components/contentselector/view/combobox.cpp:
#include "combobox.hpp"
#include <QtGui>                        // for QStyleOptionComboBox, etc
---
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:58:7: error: use of undeclared identifier 'OgreGpuProgram'; did you mean 'GpuProgram'?
        void OgreGpuProgram::setAutoConstant (const std::string& name, const std::string& autoConstantName, const std::string& extraInfo)
             ^~~~~~~~~~~~~~
             GpuProgram
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:24:8: note: 'GpuProgram' declared here
        class GpuProgram
              ^
extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:60:12: error: use of undeclared identifier 'mProgram'
                assert (!mProgram.isNull() && mProgram->isSupported());
                         ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(components/esm/loadbody.hpp has correct #includes/fwd-decls)

(components/esm/loadbody.cpp has correct #includes/fwd-decls)

(components/esm/loadstat.hpp has correct #includes/fwd-decls)

(components/esm/loadstat.cpp has correct #includes/fwd-decls)

(components/compiler/scanner.hpp has correct #includes/fwd-decls)

(components/esm/loadprob.hpp has correct #includes/fwd-decls)

(components/esm/loadprob.cpp has correct #includes/fwd-decls)

(components/compiler/scanner.cpp has correct #includes/fwd-decls)

(components/esm/loadacti.hpp has correct #includes/fwd-decls)

(components/esm/loadacti.cpp has correct #includes/fwd-decls)

(components/esm/debugprofile.hpp has correct #includes/fwd-decls)

(components/esm/debugprofile.cpp has correct #includes/fwd-decls)

(components/esm/variant.hpp has correct #includes/fwd-decls)

components/compiler/lineparser.hpp should add these lines:

components/compiler/lineparser.hpp should remove these lines:
- #include <string>  // lines 6-6
- namespace Compiler { class Context; }  // lines 18-18
- namespace Compiler { class ErrorHandler; }  // lines 19-19
- namespace Compiler { class Scanner; }  // lines 20-20
- namespace Compiler { struct TokenLoc; }  // lines 22-22

The full include-list for components/compiler/lineparser.hpp:
#include <components/interpreter/types.hpp>  // for Type_Code
#include <string>                       // for string
#include <vector>                       // for vector
#include "exprparser.hpp"               // for ExprParser
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 13-13
namespace Compiler { class ErrorHandler; }  // lines 14-14
namespace Compiler { class Literals; }  // lines 27-27
namespace Compiler { class Locals; }  // lines 28-28
namespace Compiler { class Scanner; }  // lines 15-15
namespace Compiler { struct TokenLoc; }  // lines 16-16
---

components/esm/variant.cpp should add these lines:

components/esm/variant.cpp should remove these lines:
- #include <stdint.h>  // lines 2-2
- #include <ostream>  // lines 5-5
- #include "components/esm/esmcommon.hpp"  // lines 9-9

The full include-list for components/esm/variant.cpp:
#include "variant.hpp"
#include <stdint.h>                     // for uint32_t
#include <cassert>                      // for assert
#include <ostream>                      // for operator<<, etc
#include <stdexcept>                    // for runtime_error
#include "components/esm/esmcommon.hpp"  // for NAME_T, NAME
#include "defs.hpp"                     // for FourCC, FourCC<>::value
#include "esmreader.hpp"                // for ESMReader
#include "variantimp.hpp"               // for VariantDataBase, etc
---

(components/esm/loadench.hpp has correct #includes/fwd-decls)

components/esm/loadench.cpp should add these lines:

components/esm/loadench.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/effectlist.hpp"  // lines 5-5

The full include-list for components/esm/loadench.cpp:
#include "loadench.hpp"
#include <vector>                       // for vector
#include "components/esm/effectlist.hpp"  // for EffectList
#include "defs.hpp"                     // for RecNameInts::REC_ENCH
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/compiler/lineparser.cpp should add these lines:

components/compiler/lineparser.cpp should remove these lines:
- #include <cstddef>  // lines 4-4
- #include <stdexcept>  // lines 7-7
- #include <utility>  // lines 9-9
- #include "components/compiler/exprparser.hpp"  // lines 12-12
- #include "components/compiler/parser.hpp"  // lines 14-14
- #include "components/compiler/tokenloc.hpp"  // lines 16-16
- #include "components/interpreter/types.hpp"  // lines 18-18

The full include-list for components/compiler/lineparser.cpp:
#include "lineparser.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
#include <cstddef>                      // for size_t
#include <memory>                       // for auto_ptr
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "components/compiler/exprparser.hpp"  // for ExprParser
#include "components/compiler/parser.hpp"  // for Parser
#include "components/compiler/tokenloc.hpp"  // for TokenLoc
#include "components/interpreter/types.hpp"  // for Type_Code
#include "context.hpp"                  // for Context
#include "declarationparser.hpp"        // for DeclarationParser
#include "errorhandler.hpp"             // for ErrorHandler, etc
#include "exception.hpp"                // for SourceException
#include "extensions.hpp"               // for Extensions
#include "generator.hpp"                // for report, stopScript, etc
#include "locals.hpp"                   // for Locals
#include "scanner.hpp"                  // for Scanner, etc
#include "skipparser.hpp"               // for SkipParser
---

(components/esm/savedgame.hpp has correct #includes/fwd-decls)

(components/esm/savedgame.cpp has correct #includes/fwd-decls)

(components/esm/loadclot.hpp has correct #includes/fwd-decls)

components/esm/loadclot.cpp should add these lines:

components/esm/loadclot.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/loadarmo.hpp"  // lines 5-5

The full include-list for components/esm/loadclot.cpp:
#include "loadclot.hpp"
#include <vector>                       // for vector
#include "components/esm/loadarmo.hpp"  // for PartReferenceList, etc
#include "defs.hpp"                     // for RecNameInts::REC_CLOT
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/inventorystate.hpp should add these lines:

components/esm/inventorystate.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <utility>  // lines 8-8
- #include <vector>  // lines 10-10
- #include "objectstate.hpp"  // lines 12-12

The full include-list for components/esm/inventorystate.hpp:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <utility>                      // for pair
#include <vector>                       // for vector
namespace ESM { class ESMReader; }  // lines 18-18
namespace ESM { class ESMWriter; }  // lines 19-19
---

components/esm/inventorystate.cpp should add these lines:

components/esm/inventorystate.cpp should remove these lines:
- #include "components/esm/cellref.hpp"  // lines 2-2
- #include "components/esm/cellref.hpp"  // lines 3-3
- #include "components/esm/objectstate.hpp"  // lines 4-4
- #include "components/esm/objectstate.hpp"  // lines 5-5

The full include-list for components/esm/inventorystate.cpp:
#include "inventorystate.hpp"
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

extern/shiny/Main/Factory.hpp should add these lines:
namespace sh { class PropertySetGet; }

extern/shiny/Main/Factory.hpp should remove these lines:
- #include <vector>  // lines 8-8
- #include "extern/shiny/Main/Platform.hpp"  // lines 14-14
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 16-16
- namespace sh { class Platform; }  // lines 20-20

The full include-list for extern/shiny/Main/Factory.hpp:
#include <map>                          // for map, map<>::value_compare
#include <sstream>                      // for ofstream, stringstream
#include <string>                       // for string
#include <vector>                       // for vector
#include "Language.hpp"                 // for Language
#include "MaterialInstance.hpp"         // for MaterialInstance
#include "ShaderSet.hpp"                // for PropertySetGet, ShaderSet
#include "extern/shiny/Main/Platform.hpp"
#include "extern/shiny/Main/PropertyBase.hpp"  // for PropertyValuePtr
namespace sh { class PropertySetGet; }
---

(components/esm/player.hpp has correct #includes/fwd-decls)

components/esm/player.cpp should add these lines:

components/esm/player.cpp should remove these lines:
- #include "components/esm/cellid.hpp"  // lines 3-3
- #include "components/esm/cellref.hpp"  // lines 4-4
- #include "components/esm/cellref.hpp"  // lines 5-5
- #include "components/esm/defs.hpp"  // lines 7-7
- #include "components/esm/npcstate.hpp"  // lines 8-8
- #include "components/esm/npcstate.hpp"  // lines 9-9

The full include-list for components/esm/player.cpp:
#include "player.hpp"
#include "components/esm/cellid.hpp"    // for CellId
#include "components/esm/defs.hpp"      // for Position
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/spellstate.hpp has correct #includes/fwd-decls)

components/esm/spellstate.cpp should add these lines:

components/esm/spellstate.cpp should remove these lines:
- #include <utility>  // lines 2-2
- #include "components/esm/defs.hpp"  // lines 5-5

The full include-list for components/esm/spellstate.cpp:
#include "spellstate.hpp"
#include <utility>                      // for pair
#include "components/esm/defs.hpp"      // for TimeStamp
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

extern/shiny/Main/Factory.cpp should add these lines:
namespace sh { class PropertySetGet; }

extern/shiny/Main/Factory.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 13-13
- #include <boost/algorithm/string/classification.hpp>  // lines 4-4
- #include <boost/algorithm/string/split.hpp>  // lines 6-6
- #include <boost/filesystem/operations.hpp>  // lines 8-8
- #include <boost/filesystem/path.hpp>  // lines 10-10
- #include <exception>  // lines 15-15
- #include <fstream>  // lines 17-17
- #include <utility>  // lines 21-21
- #include "extern/shiny/Main/Language.hpp"  // lines 29-29
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 31-31
- #include "extern/shiny/Main/MaterialInstancePass.hpp"  // lines 33-33

The full include-list for extern/shiny/Main/Factory.cpp:
#include "Factory.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <boost/algorithm/string/classification.hpp>  // for is_any_of
#include <boost/algorithm/string/split.hpp>  // for split
#include <boost/filesystem/operations.hpp>  // for directory_iterator, etc
#include <boost/filesystem/path.hpp>    // for path, operator<<
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <exception>                    // for exception
#include <fstream>                      // for basic_ofstream
#include <iostream>                     // for cerr, cout
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "MaterialInstanceTextureUnit.hpp"
#include "Platform.hpp"                 // for Platform, Material, etc
#include "ScriptLoader.hpp"             // for ScriptNode, ScriptLoader
#include "ShaderSet.hpp"                // for PropertySetGet, ShaderSet
#include "extern/shiny/Main/Language.hpp"  // for Language, etc
#include "extern/shiny/Main/MaterialInstance.hpp"  // for MaterialInstance
#include "extern/shiny/Main/MaterialInstancePass.hpp"
namespace sh { class PropertySetGet; }
---

(components/esm/npcstats.hpp has correct #includes/fwd-decls)

components/esm/npcstats.cpp should add these lines:

components/esm/npcstats.cpp should remove these lines:
- #include <utility>  // lines 3-3
- #include "components/esm/statstate.hpp"  // lines 6-6

The full include-list for components/esm/npcstats.cpp:
#include "npcstats.hpp"
#include <utility>                      // for pair, make_pair
#include "components/esm/statstate.hpp"  // for StatState
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/contentselector/model/esmfile.hpp should add these lines:

components/contentselector/model/esmfile.hpp should remove these lines:
- #include <QDateTime>  // lines 4-4
- #include <QStringList>  // lines 5-5
- #include <QtCore>  // lines 7-7
- class QMimeData;  // lines 11-11

The full include-list for components/contentselector/model/esmfile.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include "modelitem.hpp"                // for ModelItem
---

components/files/collections.hpp should add these lines:

components/files/collections.hpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 5-5
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9

The full include-list for components/files/collections.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include "multidircollection.hpp"       // for MultiDirCollection, etc
---

components/contentselector/model/esmfile.cpp should add these lines:
#include <QDateTime>                    // for QDateTime
#include <QStringList>                  // for QStringList, operator<<

components/contentselector/model/esmfile.cpp should remove these lines:
- #include <QDataStream>  // lines 1-1

The full include-list for components/contentselector/model/esmfile.cpp:
#include "esmfile.hpp"
#include <QDateTime>                    // for QDateTime
#include <QStringList>                  // for QStringList, operator<<
#include "components/contentselector/model/modelitem.hpp"
---

components/files/collections.cpp should add these lines:

components/files/collections.cpp should remove these lines:
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <boost/iterator/iterator_facade.hpp>  // lines 4-4
- #include <stdexcept>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "components/files/multidircollection.hpp"  // lines 15-15

The full include-list for components/files/collections.cpp:
#include "collections.hpp"
#include <boost/filesystem/operations.hpp>  // for directory_iterator
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, etc
#include "components/files/multidircollection.hpp"
---
In file included from extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:18:
In file included from extern/shiny/Platforms/Ogre/OgrePass.hpp:9:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:9:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

components/bsa/bsa_archive.hpp should add these lines:
#include <string>                       // for string

components/bsa/bsa_archive.hpp should remove these lines:
- #include <algorithm>  // lines 24-24

The full include-list for components/bsa/bsa_archive.hpp:
#include <string>                       // for string
---

components/bsa/bsa_archive.cpp should add these lines:

components/bsa/bsa_archive.cpp should remove these lines:
- #include <stddef.h>  // lines 33-33
- #include <string.h>  // lines 35-35
- #include <time.h>  // lines 37-37
- #include <algorithm>  // lines 39-39
- #include <boost/filesystem/path.hpp>  // lines 29-29
- #include <boost/iterator/iterator_facade.hpp>  // lines 31-31
- #include <iterator>  // lines 41-41
- #include <map>  // lines 43-43
- #include <ostream>  // lines 45-45
- #include <stdexcept>  // lines 47-47
- #include <utility>  // lines 49-49
- #include <vector>  // lines 51-51
- #include "OgreDataStream.h"  // lines 55-55
- #include "OgrePrerequisites.h"  // lines 57-57
- #include "OgreSharedPtr.h"  // lines 59-59
- #include "OgreString.h"  // lines 61-61
- #include "OgreStringVector.h"  // lines 63-63

The full include-list for components/bsa/bsa_archive.cpp:
#include "bsa_archive.hpp"
#include <OgreArchive.h>                // for FileInfo, FileInfoList, etc
#include <OgreArchiveFactory.h>         // for ArchiveFactory
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <stddef.h>                     // for size_t
#include <string.h>                     // for strlen
#include <time.h>                       // for time_t
#include <algorithm>                    // for transform
#include <boost/filesystem/operations.hpp>
#include <boost/filesystem/path.hpp>    // for path
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <iterator>                     // for back_inserter, distance
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <ostream>                      // for char_traits, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, allocator, etc
#include "../files/constrainedfiledatastream.hpp"
#include "OgreDataStream.h"             // for DataStreamPtr
#include "OgrePrerequisites.h"          // for String
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreString.h"                 // for StringUtil
#include "OgreStringVector.h"           // for StringVector, etc
#include "bsa_file.hpp"                 // for BSAFile, etc
---
In file included from components/esm/containerstate.cpp:2:
In file included from ./components/esm/inventorystate.hpp:12:
components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from components/esm/containerstate.cpp:2:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from components/esm/containerstate.cpp:6:
components/esm/containerstate.hpp:19:36: error: expected class name
    struct ContainerState : public ObjectState
                                   ^

(components/esm/loadland.hpp has correct #includes/fwd-decls)
components/esm/containerstate.cpp:18:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::load (esm);
    ^
components/esm/containerstate.cpp:25:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::save (esm, inInventory);
    ^

components/esm/loadland.cpp should add these lines:

components/esm/loadland.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include "components/esm/esmcommon.hpp"  // lines 5-5

The full include-list for components/esm/loadland.cpp:
#include "loadland.hpp"
#include <stddef.h>                     // for NULL
#include "components/esm/esmcommon.hpp"  // for ESM_Context
#include "defs.hpp"                     // for RecNameInts::REC_LAND
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
In file included from components/esm/activespells.cpp:4:
components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:59:33: error: no member named 'lexical_cast' in namespace 'boost'
            int frames = boost::lexical_cast<int>(tokens[1]);
                         ~~~~~~~^
extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:59:49: error: expected '(' for function-style cast or type construction
            int frames = boost::lexical_cast<int>(tokens[1]);
                                             ~~~^
extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:60:37: error: no member named 'lexical_cast' in namespace 'boost'
            float duration = boost::lexical_cast<float>(tokens[2]);
                             ~~~~~~~^
extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:60:55: error: expected '(' for function-style cast or type construction
            float duration = boost::lexical_cast<float>(tokens[2]);
                                                 ~~~~~^
In file included from components/esm/creaturestats.cpp:1:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

components/nif/niffile.hpp should add these lines:
#include <vector>                       // for vector

components/nif/niffile.hpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <string>  // lines 11-11
- #include "record.hpp"  // lines 13-13
- namespace Nif { struct Record; }  // lines 18-18

The full include-list for components/nif/niffile.hpp:
#include <stddef.h>                     // for size_t
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for allocator, string, etc
#include <vector>                       // for vector
namespace Nif { struct Record; }  // lines 16-16
---

components/esm/containerstate.hpp should add these lines:

components/esm/containerstate.hpp should remove these lines:
- #include "objectstate.hpp"  // lines 5-5
- namespace ESM { class ESMReader; }  // lines 11-11
- namespace ESM { class ESMWriter; }  // lines 12-12

The full include-list for components/esm/containerstate.hpp:
#include "inventorystate.hpp"           // for InventoryState
namespace ESM { class ESMReader; }  // lines 8-8
namespace ESM { class ESMWriter; }  // lines 9-9
---

components/esm/containerstate.cpp should add these lines:

components/esm/containerstate.cpp should remove these lines:
- #include "components/esm/inventorystate.hpp"  // lines 2-2
- #include "components/esm/inventorystate.hpp"  // lines 3-3
- #include "components/esm/objectstate.hpp"  // lines 4-4
- #include "components/esm/objectstate.hpp"  // lines 5-5
- namespace ESM { class ESMReader; }  // lines 12-12
- namespace ESM { class ESMWriter; }  // lines 13-13

The full include-list for components/esm/containerstate.cpp:
#include "containerstate.hpp"
namespace ESM { class ESMReader; }  // lines 9-9
namespace ESM { class ESMWriter; }  // lines 10-10
---

components/nifogre/material.hpp should add these lines:
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <string>                       // for operator<<, string
namespace Nif { class NiAlphaProperty; }
namespace Nif { class NiMaterialProperty; }
namespace Nif { class NiSpecularProperty; }
namespace Nif { class NiStencilProperty; }
namespace Nif { class NiTexturingProperty; }
namespace Nif { class NiVertexColorProperty; }
namespace Nif { class NiWireframeProperty; }

components/nifogre/material.hpp should remove these lines:
- #include <OgreString.h>  // lines 4-4
- #include <stddef.h>  // lines 6-6
- #include <cassert>  // lines 7-7
- #include "OgrePrerequisites.h"  // lines 11-11
- class NiAlphaProperty;  // lines 13-13
- class NiMaterialProperty;  // lines 14-14
- class NiSpecularProperty;  // lines 15-15
- class NiStencilProperty;  // lines 16-16
- class NiTexturingProperty;  // lines 17-17
- class NiVertexColorProperty;  // lines 18-18
- class NiWireframeProperty;  // lines 19-19

The full include-list for components/nifogre/material.hpp:
#include <stddef.h>                     // for size_t
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <map>                          // for map
#include <string>                       // for operator<<, string
#include "OgrePrerequisites.h"          // for String
namespace Nif { class NiAlphaProperty; }
namespace Nif { class NiMaterialProperty; }
namespace Nif { class NiSpecularProperty; }
namespace Nif { class NiStencilProperty; }
namespace Nif { class NiTexturingProperty; }
namespace Nif { class NiVertexColorProperty; }
namespace Nif { class NiWireframeProperty; }
namespace Nif { class NiZBufferProperty; }  // lines 23-23
namespace Nif { class ShapeData; }  // lines 24-24
---

components/nif/niffile.cpp should add these lines:

components/nif/niffile.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stdint.h>  // lines 5-5
- #include <utility>  // lines 8-8
- #include "OgreStringConverter.h"  // lines 11-11
- #include "components/nif/base.hpp"  // lines 13-13
- #include "components/nif/controlled.hpp"  // lines 15-15
- #include "components/nif/controller.hpp"  // lines 17-17
- #include "components/nif/data.hpp"  // lines 19-19
- #include "components/nif/extra.hpp"  // lines 21-21
- #include "components/nif/nifstream.hpp"  // lines 23-23
- #include "components/nif/node.hpp"  // lines 25-25
- #include "components/nif/property.hpp"  // lines 27-27
- #include "components/nif/record.hpp"  // lines 29-29

The full include-list for components/nif/niffile.cpp:
#include "niffile.hpp"
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <assert.h>                     // for assert
#include <stdint.h>                     // for uint8_t, uint32_t
#include <map>                          // for map, etc
#include <utility>                      // for pair, make_pair
#include "OgreStringConverter.h"        // for StringConverter
#include "components/nif/base.hpp"      // for NiSequenceStreamHelper
#include "components/nif/controlled.hpp"  // for NiGravity, etc
#include "components/nif/controller.hpp"  // for NiBSPArrayController, etc
#include "components/nif/data.hpp"      // for NiAutoNormalParticlesData, etc
#include "components/nif/extra.hpp"     // for NiStringExtraData, etc
#include "components/nif/nifstream.hpp"  // for NIFStream
#include "components/nif/node.hpp"      // for NiNode, etc
#include "components/nif/property.hpp"  // for NiAlphaProperty, etc
#include "components/nif/record.hpp"    // for Record, RecordType, etc
#include "effect.hpp"                   // for NiLight, NiTextureEffect
---

components/nifogre/material.cpp should add these lines:
namespace sh { class MaterialInstance; }

components/nifogre/material.cpp should remove these lines:
- #include <boost/functional/hash/hash.hpp>  // lines 3-3
- #include <utility>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "OgreSharedPtr.h"  // lines 11-11
- #include "OgreStringConverter.h"  // lines 13-13
- #include "components/nif/base.hpp"  // lines 16-16
- #include "components/nif/data.hpp"  // lines 19-19
- #include "components/nif/property.hpp"  // lines 21-21
- #include "components/nif/record.hpp"  // lines 23-23
- #include "components/nif/recordptr.hpp"  // lines 25-25
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 26-26
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 27-27
- #include "extern/shiny/Main/Platform.hpp"  // lines 28-28
- #include "extern/shiny/Main/Platform.hpp"  // lines 29-29
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 30-30
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 31-31

The full include-list for components/nifogre/material.cpp:
#include "material.hpp"
#include <OgreMaterialManager.h>        // for MaterialManager
#include <boost/functional/hash/hash.hpp>  // for hash_combine
#include <components/nifoverrides/nifoverrides.hpp>
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreVector3.h"                // for Vector3
#include "components/nif/base.hpp"      // for Controller
#include "components/nif/controlled.hpp"  // for NiSourceTexture
#include "components/nif/data.hpp"      // for ShapeData
#include "components/nif/property.hpp"  // for NiTexturingProperty, etc
#include "components/nif/record.hpp"
#include "components/nif/recordptr.hpp"  // for ControllerPtr, etc
namespace sh { class MaterialInstance; }
---
In file included from extern/shiny/Main/MaterialInstance.cpp:14:
In file included from extern/shiny/Main/Factory.hpp:11:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from extern/shiny/Main/MaterialInstance.cpp:14:
extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from extern/shiny/Main/MaterialInstance.cpp:14:
extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/MaterialInstance.cpp:133:47: error: cannot initialize a parameter of type 'sh::PropertySetGet *' with an rvalue of type 'PropertySetGet *'
                                                ShaderInstance* v = vertex->getInstance(&it->mShaderProperties);
                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:37:48: note: passing argument to parameter 'properties' here
                ShaderInstance* getInstance (PropertySetGet* properties);
                                                             ^
extern/shiny/Main/MaterialInstance.cpp:152:49: error: cannot initialize a parameter of type 'sh::PropertySetGet *' with an rvalue of type 'PropertySetGet *'
                                                ShaderInstance* f = fragment->getInstance(&it->mShaderProperties);
                                                                                          ^~~~~~~~~~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:37:48: note: passing argument to parameter 'properties' here
                ShaderInstance* getInstance (PropertySetGet* properties);
                                                             ^
In file included from components/esmterrain/storage.cpp:40:
components/esmterrain/storage.hpp:51:37: error: expected class name
    class Storage : public Terrain::Storage
                                    ^

components/files/configurationmanager.hpp should add these lines:
#include "components/files/fixedpath.hpp"  // for FixedPath

components/files/configurationmanager.hpp should remove these lines:
- #include <boost/program_options.hpp>  // lines 13-13
- #include <components/files/collections.hpp>  // lines 14-14
- #include <string>  // lines 16-16
- #include "components/files/multidircollection.hpp"  // lines 19-19
- namespace boost { namespace program_options { class options_description; } }  // lines 30-30
- namespace boost { namespace program_options { class variables_map; } }  // lines 31-31

The full include-list for components/files/configurationmanager.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <string>                       // for string
#include <tr1/unordered_map>            // for unordered_map
#include "components/files/fixedpath.hpp"  // for FixedPath
#include "components/files/multidircollection.hpp"  // for PathContainer
namespace boost { namespace program_options { class options_description; } }  // lines 23-23
namespace boost { namespace program_options { class variables_map; } }  // lines 24-24
---

(components/esm/loadmisc.hpp has correct #includes/fwd-decls)

(components/esm/loadmisc.cpp has correct #includes/fwd-decls)

components/files/configurationmanager.cpp should add these lines:

components/files/configurationmanager.cpp should remove these lines:
- #include <boost/filesystem/operations.hpp>  // lines 5-5
- #include <boost/iterator/iterator_traits.hpp>  // lines 7-7
- #include <boost/program_options/parsers.hpp>  // lines 9-9
- #include <boost/program_options/variables_map.hpp>  // lines 11-11
- #include <utility>  // lines 16-16
- #include <vector>  // lines 18-18
- #include "components/files/fixedpath.hpp"  // lines 21-21
- namespace boost { namespace program_options { class options_description; } }  // lines 28-28

The full include-list for components/files/configurationmanager.cpp:
#include "configurationmanager.hpp"
#include <algorithm>                    // for remove_if
#include <boost/algorithm/string/erase.hpp>  // for erase_all
#include <boost/bind.hpp>               // for bind_t, arg, bind, _1
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/operations.hpp>  // for create_directories, etc
#include <boost/iterator/iterator_traits.hpp>
#include <boost/program_options/parsers.hpp>  // for parse_config_file
#include <boost/program_options/variables_map.hpp>  // for notify, store, etc
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <string>                       // for string, basic_string, etc
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector, vector<>::iterator
#include "components/files/fixedpath.hpp"  // for FixedPath
namespace boost { namespace program_options { class options_description; } }  // lines 26-26
---
components/esmterrain/storage.cpp:254:31: error: incomplete type 'Ogre::Root' named in nested name specifier
                        Ogre::Root::getSingleton().getRenderSystem()->convertColourValue(color, &rsColor);
                        ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^

(components/esm/loadsndg.hpp has correct #includes/fwd-decls)

(components/esm/loadsndg.cpp has correct #includes/fwd-decls)
In file included from components/esm/npcstate.cpp:2:
In file included from ./components/esm/creaturestats.hpp:10:
components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp should add these lines:
#include <string>                       // for string
#include "OgrePrerequisites.h"          // for HighLevelGpuProgramPtr
#include "OgreSharedPtr.h"              // for SharedPtr

extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <boost/lexical_cast.hpp>  // lines 4-4
- #include <iostream>  // lines 5-5
- #include <iostream>  // lines 6-6
- #include <sstream>  // lines 7-7
- #include <sstream>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include "OgreGpuProgramParams.h"  // lines 13-13
- #include "OgreHighLevelGpuProgram.h"  // lines 14-14
- #include "OgreHighLevelGpuProgram.h"  // lines 15-15
- #include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"  // lines 17-17

The full include-list for extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:
#include <OgreHighLevelGpuProgramManager.h>
#include <assert.h>                     // for assert
#include <string>                       // for string
#include "OgreGpuProgram.h"             // for GpuProgramType, etc
#include "OgreGpuProgramParams.h"       // for GpuProgramParameters, etc
#include "OgrePrerequisites.h"          // for HighLevelGpuProgramPtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"
---
In file included from components/esm/objectstate.cpp:8:
components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
components/esm/objectstate.cpp:10:11: error: no member named 'ObjectState' in namespace 'ESM'
void ESM::ObjectState::load (ESMReader &esm)
     ~~~~~^
components/esm/objectstate.cpp:39:11: error: no member named 'ObjectState' in namespace 'ESM'
void ESM::ObjectState::save (ESMWriter &esm, bool inInventory) const
     ~~~~~^
components/esm/objectstate.cpp:39:30: error: unknown type name 'ESMWriter'
void ESM::ObjectState::save (ESMWriter &esm, bool inInventory) const
                             ^
components/esm/objectstate.cpp:65:11: error: no member named 'ObjectState' in namespace 'ESM'
void ESM::ObjectState::blank()
     ~~~~~^
components/esm/objectstate.cpp:80:6: error: no member named 'ObjectState' in namespace 'ESM'
ESM::ObjectState::~ObjectState() {}
~~~~~^
components/esm/activespells.cpp:13:10: error: use of undeclared identifier 'ActiveSpells'
    void ActiveSpells::save(ESMWriter &esm) const
         ^
components/esm/activespells.cpp:36:10: error: use of undeclared identifier 'ActiveSpells'
    void ActiveSpells::load(ESMReader &esm)
         ^

components/widgets/sharedstatebutton.hpp should add these lines:

components/widgets/sharedstatebutton.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "MyGUI_MouseButton.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 14-14
- namespace MyGUI { class Widget; }  // lines 19-19

The full include-list for components/widgets/sharedstatebutton.hpp:
#include <MyGUI_Button.h>               // for Button
#include <string>                       // for string, allocator
#include <vector>                       // for vector
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
namespace Gui { class SharedStateButton; }  // lines 25-25
namespace MyGUI { class Widget; }  // lines 17-17
---

components/widgets/sharedstatebutton.cpp should add these lines:

components/widgets/sharedstatebutton.cpp should remove these lines:
- #include "MyGUI_Button.h"  // lines 2-2
- namespace MyGUI { class Widget; }  // lines 8-8

The full include-list for components/widgets/sharedstatebutton.cpp:
#include "sharedstatebutton.hpp"
#include "MyGUI_Button.h"               // for Button
namespace MyGUI { class Widget; }  // lines 6-6
---

extern/oics/ICSInputControlSystem_keyboard.cpp should add these lines:

extern/oics/ICSInputControlSystem_keyboard.cpp should remove these lines:
- #include <map>  // lines 28-28
- #include <string>  // lines 30-30
- #include <utility>  // lines 32-32
- #include <vector>  // lines 34-34
- #include "SDL_events.h"  // lines 38-38
- #include "SDL_keyboard.h"  // lines 40-40
- #include "SDL_scancode.h"  // lines 42-42
- #include "extern/oics/ICSControl.h"  // lines 44-44
- #include "extern/oics/ICSPrerequisites.h"  // lines 46-46
- #include "extern/oics/tinyxml.h"  // lines 48-48

The full include-list for extern/oics/ICSInputControlSystem_keyboard.cpp:
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <string>                       // for allocator, operator+, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "ICSInputControlSystem.h"      // for InputControlSystem, etc
#include "SDL_events.h"                 // for SDL_KeyboardEvent
#include "SDL_keyboard.h"               // for SDL_Keysym
#include "SDL_scancode.h"               // for SDL_Scancode, etc
#include "extern/oics/ICSControl.h"     // for Control, etc
#include "extern/oics/ICSPrerequisites.h"  // for FromString, ToString
#include "extern/oics/tinyxml.h"        // for TiXmlElement
---

components/terrain/terraingrid.hpp should add these lines:

components/terrain/terraingrid.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "OgreAxisAlignedBox.h"  // lines 10-10
- #include "components/terrain/defs.hpp"  // lines 12-12
- namespace Ogre { class SceneManager; }  // lines 26-26
- namespace Ogre { class SceneNode; }  // lines 27-27
- namespace Ogre { class Vector2; }  // lines 28-28
- namespace Ogre { class Vector3; }  // lines 29-29
- namespace Terrain { class Storage; }  // lines 32-32

The full include-list for components/terrain/terraingrid.hpp:
#include <map>                          // for map, map<>::value_compare
#include <utility>                      // for pair
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "components/terrain/defs.hpp"  // for Alignment
#include "material.hpp"                 // for MaterialGenerator
#include "world.hpp"                    // for World
namespace Ogre { class SceneManager; }  // lines 21-21
namespace Ogre { class SceneNode; }  // lines 22-22
namespace Ogre { class Vector2; }  // lines 23-23
namespace Ogre { class Vector3; }  // lines 24-24
namespace Terrain { class Chunk; }  // lines 37-37
namespace Terrain { class Storage; }  // lines 17-17
---
In file included from components/esm/creaturestats.cpp:17:
components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^

components/terrain/terraingrid.cpp should add these lines:

components/terrain/terraingrid.cpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <cmath>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "GLX/../OgrePrerequisites.h"  // lines 14-14
- #include "OgreDataStream.h"  // lines 16-16
- #include "OgrePixelFormat.h"  // lines 18-18
- #include "OgrePlatform.h"  // lines 20-20
- #include "OgreResourceGroupManager.h"  // lines 22-22
- #include "OgreSharedPtr.h"  // lines 24-24
- #include "OgreStringConverter.h"  // lines 26-26
- #include "OgreTexture.h"  // lines 28-28
- #include "OgreTextureManager.h"  // lines 30-30
- #include "OgreVector2.h"  // lines 32-32
- #include "OgreVector3.h"  // lines 34-34
- #include "components/terrain/buffercache.hpp"  // lines 37-37
- #include "components/terrain/material.hpp"  // lines 39-39
- #include "components/terrain/storage.hpp"  // lines 41-41
- #include "components/terrain/world.hpp"  // lines 43-43

The full include-list for components/terrain/terraingrid.cpp:
#include "terraingrid.hpp"
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox, etc
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <stddef.h>                     // for NULL
#include <cmath>                        // for floor
#include <string>                       // for char_traits, operator+, etc
#include <vector>                       // for vector, etc
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreDataStream.h"             // for MemoryDataStream, etc
#include "OgrePixelFormat.h"            // for PixelBox, PixelUtil
#include "OgrePlatform.h"               // for uint8
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreTexture.h"                // for Texture, etc
#include "OgreTextureManager.h"         // for TextureManager
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "chunk.hpp"                    // for Chunk
#include "components/terrain/buffercache.hpp"  // for BufferCache
#include "components/terrain/material.hpp"  // for MaterialGenerator
#include "components/terrain/storage.hpp"  // for Storage
#include "components/terrain/world.hpp"  // for World
---

(components/esm/loadweap.hpp has correct #includes/fwd-decls)

(components/esm/loadweap.cpp has correct #includes/fwd-decls)

(components/esm/loadbook.hpp has correct #includes/fwd-decls)

extern/sdl4ogre/sdlinputwrapper.hpp should add these lines:

extern/sdl4ogre/sdlinputwrapper.hpp should remove these lines:
- #include <OgreRenderWindow.h>  // lines 6-6
- #include "SDL_keycode.h"  // lines 12-12
- #include "SDL_scancode.h"  // lines 14-14
- #include "SDL_stdinc.h"  // lines 16-16
- #include "SDL_video.h"  // lines 18-18
- namespace Ogre { class RenderWindow; }  // lines 26-26

The full include-list for extern/sdl4ogre/sdlinputwrapper.hpp:
#include <SDL_events.h>                 // for SDL_Event, etc
#include <boost/unordered/unordered_map.hpp>  // for unordered_map
#include "OISCompat.h"                  // for KeyCode
#include "SDL_keycode.h"                // for SDL_Keycode, SDL_Keymod
#include "SDL_scancode.h"               // for SDL_Scancode
#include "SDL_stdinc.h"                 // for Sint32, Uint16
#include "SDL_video.h"                  // for SDL_Window
#include "events.h"                     // for MouseMotionEvent
namespace Ogre { class RenderWindow; }  // lines 22-22
---

(components/esm/loadbook.cpp has correct #includes/fwd-decls)

(extern/sdl4ogre/sdlinputwrapper.cpp has correct #includes/fwd-decls)

(components/esm/loadrepa.hpp has correct #includes/fwd-decls)

(components/esm/loadrepa.cpp has correct #includes/fwd-decls)

extern/shiny/Main/MaterialInstance.hpp should add these lines:

extern/shiny/Main/MaterialInstance.hpp should remove these lines:
- #include "Platform.hpp"  // lines 10-10

The full include-list for extern/shiny/Main/MaterialInstance.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <fstream>                      // for ofstream
#include <string>                       // for string, allocator
#include <vector>                       // for vector
#include "MaterialInstancePass.hpp"     // for MaterialInstancePass
#include "PropertyBase.hpp"             // for PropertySetGet, etc
namespace sh { class Factory; }  // lines 22-22
namespace sh { class Material; }  // lines 14-14
namespace sh { class MaterialInstance; }  // lines 15-15
namespace sh { class Platform; }  // lines 16-16
namespace sh { class TextureUnitState; }  // lines 17-17
---

(components/esm/loadalch.hpp has correct #includes/fwd-decls)

components/esm/loadalch.cpp should add these lines:

components/esm/loadalch.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/effectlist.hpp"  // lines 5-5

The full include-list for components/esm/loadalch.cpp:
#include "loadalch.hpp"
#include <vector>                       // for vector
#include "components/esm/effectlist.hpp"  // for EffectList
#include "defs.hpp"                     // for RecNameInts::REC_ALCH
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

extern/shiny/Main/MaterialInstance.cpp should add these lines:
namespace sh { class ShaderSet; }

extern/shiny/Main/MaterialInstance.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 4-4
- #include <algorithm>  // lines 6-6
- #include <map>  // lines 9-9
- #include <utility>  // lines 12-12
- #include "ShaderSet.hpp"  // lines 16-16
- #include "extern/shiny/Main/Language.hpp"  // lines 18-18
- #include "extern/shiny/Main/MaterialInstancePass.hpp"  // lines 20-20
- #include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"  // lines 22-22
- #include "extern/shiny/Main/Platform.hpp"  // lines 24-24
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 26-26
- #include "extern/shiny/Main/ShaderInstance.hpp"  // lines 28-28

The full include-list for extern/shiny/Main/MaterialInstance.cpp:
#include "MaterialInstance.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for find
#include <iostream>                     // for cerr
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "Factory.hpp"                  // for Factory
#include "extern/shiny/Main/Language.hpp"  // for Language::Language_GLSL, etc
#include "extern/shiny/Main/MaterialInstancePass.hpp"
#include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"
#include "extern/shiny/Main/Platform.hpp"  // for Material, Pass, etc
#include "extern/shiny/Main/PropertyBase.hpp"  // for StringValue, etc
#include "extern/shiny/Main/ShaderInstance.hpp"  // for ShaderInstance
namespace sh { class ShaderSet; }
---

(components/esm/journalentry.hpp has correct #includes/fwd-decls)

(components/esm/journalentry.cpp has correct #includes/fwd-decls)

components/esm/variantimp.hpp should add these lines:

components/esm/variantimp.hpp should remove these lines:
- namespace ESM { class ESMReader; }  // lines 12-12
- namespace ESM { class ESMWriter; }  // lines 13-13

The full include-list for components/esm/variantimp.hpp:
#include <string>                       // for string
#include "variant.hpp"                  // for VarType, Variant, etc
namespace ESM { class ESMReader; }  // lines 9-9
namespace ESM { class ESMWriter; }  // lines 10-10
---

(components/esm/loadcont.hpp has correct #includes/fwd-decls)

(components/esm/loadcont.cpp has correct #includes/fwd-decls)

(components/esm/loadfact.hpp has correct #includes/fwd-decls)

components/esm/variantimp.cpp should add these lines:

components/esm/variantimp.cpp should remove these lines:
- #include <ostream>  // lines 3-3
- #include "components/esm/variant.hpp"  // lines 7-7

The full include-list for components/esm/variantimp.cpp:
#include "variantimp.hpp"
#include <ostream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error, logic_error
#include "components/esm/variant.hpp"   // for Variant, VarType::VT_Short, etc
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/loadfact.cpp should add these lines:

components/esm/loadfact.cpp should remove these lines:
- #include <utility>  // lines 3-3

The full include-list for components/esm/loadfact.cpp:
#include "loadfact.hpp"
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "defs.hpp"                     // for RecNameInts::REC_FACT
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/objectstate.hpp should add these lines:

components/esm/objectstate.hpp should remove these lines:
- #include "cellref.hpp"  // lines 4-4
- #include "components/esm/defs.hpp"  // lines 5-5
- #include "components/esm/defs.hpp"  // lines 6-6
- #include "locals.hpp"  // lines 7-7
- class ESMReader;  // lines 10-10

The full include-list for components/esm/objectstate.hpp:
---

components/esm/objectstate.cpp should add these lines:

components/esm/objectstate.cpp should remove these lines:
- #include "components/esm/cellref.hpp"  // lines 2-2
- #include "components/esm/cellref.hpp"  // lines 3-3
- #include "components/esm/locals.hpp"  // lines 4-4
- #include "components/esm/locals.hpp"  // lines 5-5
- #include "esmreader.hpp"  // lines 6-6
- #include "esmwriter.hpp"  // lines 7-7

The full include-list for components/esm/objectstate.cpp:
#include "objectstate.hpp"
---

components/ogreinit/ogreplugin.hpp should add these lines:
#include <string>                       // for string

components/ogreinit/ogreplugin.hpp should remove these lines:
- #include <boost/filesystem.hpp>  // lines 4-4

The full include-list for components/ogreinit/ogreplugin.hpp:
#include <boost/version.hpp>            // for BOOST_VERSION
#include <string>                       // for string
namespace Ogre { class Root; }  // lines 8-8
---

(components/ogreinit/ogreplugin.cpp has correct #includes/fwd-decls)

(components/esm/aisequence.hpp has correct #includes/fwd-decls)

components/esm/aisequence.cpp should add these lines:

components/esm/aisequence.cpp should remove these lines:
- #include "components/esm/util.hpp"  // lines 5-5

The full include-list for components/esm/aisequence.cpp:
#include "aisequence.hpp"
#include <memory>                       // for auto_ptr, etc
#include "components/esm/util.hpp"      // for Vector3
#include "defs.hpp"                     // for TimeStamp
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/esm/activespells.hpp should add these lines:

components/esm/activespells.hpp should remove these lines:
- #include <string>  // lines 4-4
- #include <vector>  // lines 5-5
- #include <vector>  // lines 6-6
- #include "defs.hpp"  // lines 8-8
- #include "effectlist.hpp"  // lines 9-9
- class ESMReader;  // lines 12-12

The full include-list for components/esm/activespells.hpp:
---

components/esm/activespells.cpp should add these lines:

components/esm/activespells.cpp should remove these lines:
- #include <utility>  // lines 1-1
- #include <utility>  // lines 2-2
- #include "components/esm/defs.hpp"  // lines 5-5
- #include "components/esm/defs.hpp"  // lines 6-6
- #include "esmreader.hpp"  // lines 7-7
- #include "esmwriter.hpp"  // lines 8-8

The full include-list for components/esm/activespells.cpp:
#include "activespells.hpp"
---

(components/terrain/storage.cpp has correct #includes/fwd-decls)
In file included from components/esm/npcstate.cpp:2:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from components/esm/npcstate.cpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from components/esm/npcstate.cpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from components/esm/npcstate.cpp:10:
components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
components/esm/npcstate.cpp:22:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::load (esm);
    ^
components/esm/npcstate.cpp:24:9: error: use of undeclared identifier 'mHasCustomState'
    if (mHasCustomState)
        ^
components/esm/npcstate.cpp:36:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::save (esm, inInventory);
    ^
components/esm/npcstate.cpp:38:9: error: use of undeclared identifier 'mHasCustomState'
    if (mHasCustomState)
        ^
components/esm/npcstate.cpp:50:5: error: use of undeclared identifier 'ObjectState'
    ObjectState::blank();
    ^

components/esm/creaturestats.hpp should add these lines:

components/esm/creaturestats.hpp should remove these lines:
- #include <utility>  // lines 7-7
- #include "activespells.hpp"  // lines 10-10

The full include-list for components/esm/creaturestats.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "aisequence.hpp"               // for AiSequence
#include "defs.hpp"                     // for TimeStamp
#include "magiceffects.hpp"             // for MagicEffects
#include "spellstate.hpp"               // for SpellState
#include "statstate.hpp"                // for StatState
namespace ESM { class ESMReader; }  // lines 19-19
namespace ESM { class ESMWriter; }  // lines 21-21
---
components/esm/npcstate.cpp:53:5: error: use of undeclared identifier 'mHasCustomState'
    mHasCustomState = true;
    ^

components/esm/creaturestats.cpp should add these lines:

components/esm/creaturestats.cpp should remove these lines:
- #include "components/esm/activespells.hpp"  // lines 1-1
- #include "components/esm/activespells.hpp"  // lines 2-2
- #include "components/esm/aisequence.hpp"  // lines 4-4
- #include "components/esm/defs.hpp"  // lines 6-6
- #include "components/esm/esmreader.hpp"  // lines 8-8
- #include "components/esm/esmwriter.hpp"  // lines 10-10
- #include "components/esm/magiceffects.hpp"  // lines 12-12
- #include "components/esm/spellstate.hpp"  // lines 14-14
- #include "components/esm/statstate.hpp"  // lines 16-16

The full include-list for components/esm/creaturestats.cpp:
#include "creaturestats.hpp"
#include "components/esm/aisequence.hpp"  // for AiSequence
#include "components/esm/defs.hpp"      // for TimeStamp
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/magiceffects.hpp"  // for MagicEffects
#include "components/esm/spellstate.hpp"  // for SpellState
#include "components/esm/statstate.hpp"  // for StatState
---
In file included from components/esm/creaturelevliststate.cpp:1:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from components/esm/creaturelevliststate.cpp:3:
components/esm/creaturelevliststate.hpp:18:42: error: expected class name
    struct CreatureLevListState : public ObjectState
                                         ^

(components/esm/loadglob.hpp has correct #includes/fwd-decls)

components/esm/loadglob.cpp should add these lines:

components/esm/loadglob.cpp should remove these lines:
- #include "components/esm/variant.hpp"  // lines 2-2

The full include-list for components/esm/loadglob.cpp:
#include "loadglob.hpp"
#include "components/esm/variant.hpp"   // for Variant, operator==, etc
#include "defs.hpp"                     // for RecNameInts::REC_GLOB
---

(components/esm/loadlevlist.hpp has correct #includes/fwd-decls)

components/esm/loadlevlist.cpp should add these lines:

components/esm/loadlevlist.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2

The full include-list for components/esm/loadlevlist.cpp:
#include "loadlevlist.hpp"
#include <stddef.h>                     // for size_t
#include "defs.hpp"                     // for RecNameInts::REC_LEVC, etc
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
In file included from extern/shiny/Main/MaterialInstancePass.cpp:3:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

components/esm/npcstate.hpp should add these lines:

components/esm/npcstate.hpp should remove these lines:
- #include "objectstate.hpp"  // lines 7-7
- namespace ESM { class ESMReader; }  // lines 13-13
- namespace ESM { class ESMWriter; }  // lines 14-14

The full include-list for components/esm/npcstate.hpp:
#include "creaturestats.hpp"            // for CreatureStats
#include "inventorystate.hpp"           // for InventoryState
#include "npcstats.hpp"                 // for NpcStats
namespace ESM { class ESMReader; }  // lines 10-10
namespace ESM { class ESMWriter; }  // lines 11-11
---

components/esm/npcstate.cpp should add these lines:

components/esm/npcstate.cpp should remove these lines:
- #include "components/esm/creaturestats.hpp"  // lines 2-2
- #include "components/esm/creaturestats.hpp"  // lines 3-3
- #include "components/esm/inventorystate.hpp"  // lines 4-4
- #include "components/esm/inventorystate.hpp"  // lines 5-5
- #include "components/esm/npcstats.hpp"  // lines 7-7
- #include "components/esm/objectstate.hpp"  // lines 8-8
- #include "components/esm/objectstate.hpp"  // lines 9-9
- namespace ESM { class ESMReader; }  // lines 16-16
- namespace ESM { class ESMWriter; }  // lines 17-17

The full include-list for components/esm/npcstate.cpp:
#include "npcstate.hpp"
#include "components/esm/npcstats.hpp"  // for NpcStats
namespace ESM { class ESMReader; }  // lines 13-13
namespace ESM { class ESMWriter; }  // lines 14-14
---

extern/shiny/Platforms/Ogre/OgreTextureUnitState.hpp should add these lines:

extern/shiny/Platforms/Ogre/OgreTextureUnitState.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"  // lines 9-9
- namespace Ogre { namespace Ogre { class TextureUnitState; } }  // lines 13-13

The full include-list for extern/shiny/Platforms/Ogre/OgreTextureUnitState.hpp:
#include <string>                       // for string
#include "../../Main/Platform.hpp"      // for TextureUnitState
#include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"
namespace Ogre { class TextureUnitState; }  // lines 16-16
namespace sh { class OgrePass; }  // lines 21-21
---

extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp should add these lines:

extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <boost/algorithm/string/classification.hpp>  // lines 4-4
- #include <boost/algorithm/string/replace.hpp>  // lines 6-6
- #include <boost/algorithm/string/split.hpp>  // lines 8-8
- #include <sstream>  // lines 11-11
- #include <vector>  // lines 13-13
- #include "OgrePass.h"  // lines 17-17
- #include "OgrePrerequisites.h"  // lines 21-21
- #include "OgreTextureUnitState.h"  // lines 23-23
- #include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"  // lines 26-26

The full include-list for extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:
#include "OgreTextureUnitState.hpp"
#include <assert.h>                     // for assert
#include <boost/algorithm/string/classification.hpp>  // for is_any_ofF, etc
#include <boost/algorithm/string/replace.hpp>  // for replace_last
#include <boost/algorithm/string/split.hpp>  // for split
#include <iomanip>                      // for operator<<, setfill, setw
#include <sstream>                      // for stringstream, basic_ostream, etc
#include <vector>                       // for vector
#include "OgreMaterialSerializer.hpp"   // for OgreMaterialSerializer
#include "OgrePass.h"                   // for Pass
#include "OgrePass.hpp"                 // for OgrePass
#include "OgrePlatform.hpp"             // for OgrePlatform
#include "OgrePrerequisites.h"          // for String
#include "OgreTextureUnitState.h"       // for TextureUnitState
#include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"
---

components/nif/nifstream.hpp should add these lines:
#include "OgreMatrix3.h"                // for Matrix3

components/nif/nifstream.hpp should remove these lines:
- #include <OgreStringConverter.h>  // lines 8-8
- #include <stddef.h>  // lines 13-13
- #include <string>  // lines 16-16
- #include <vector>  // lines 18-18
- #include "OgreSharedPtr.h"  // lines 21-21

The full include-list for components/nif/nifstream.hpp:
#include <OgreDataStream.h>             // for DataStream, DataStreamPtr
#include <OgreQuaternion.h>             // for Quaternion
#include <OgreVector2.h>                // for Vector2
#include <OgreVector3.h>                // for Vector3
#include <OgreVector4.h>                // for Vector4
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint16_t, uint32_t, uint8_t
#include <string>                       // for string
#include <vector>                       // for vector
#include "OgreMatrix3.h"                // for Matrix3
#include "OgreSharedPtr.h"              // for SharedPtr
#include "niftypes.hpp"                 // for Transformation
namespace Nif { class NIFFile; }  // lines 28-28
---

components/nif/nifstream.cpp should add these lines:

components/nif/nifstream.cpp should remove these lines:
- #include <stdexcept>  // lines 2-2
- #include "OgreDataStream.h"  // lines 5-5
- #include "OgreMatrix3.h"  // lines 7-7
- #include "OgrePrerequisites.h"  // lines 9-9
- #include "OgreQuaternion.h"  // lines 11-11
- #include "OgreStringConverter.h"  // lines 13-13
- #include "OgreVector2.h"  // lines 15-15
- #include "OgreVector3.h"  // lines 17-17
- #include "OgreVector4.h"  // lines 19-19
- #include "components/nif/niftypes.hpp"  // lines 21-21

The full include-list for components/nif/nifstream.cpp:
#include "nifstream.hpp"
#include <stdexcept>                    // for runtime_error
#include "OgreDataStream.h"             // for DataStream
#include "OgreMatrix3.h"                // for Matrix3
#include "OgrePrerequisites.h"          // for Real
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "OgreVector4.h"                // for Vector4
#include "components/nif/niftypes.hpp"  // for Transformation
#include "niffile.hpp"                  // for NIFFile
---

components/files/constrainedfiledatastream.hpp should add these lines:

components/files/constrainedfiledatastream.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6

The full include-list for components/files/constrainedfiledatastream.hpp:
#include <OgreDataStream.h>             // for DataStreamPtr
#include <stddef.h>                     // for size_t
---

components/files/constrainedfiledatastream.cpp should add these lines:

components/files/constrainedfiledatastream.cpp should remove these lines:
- #include <string.h>  // lines 3-3
- #include <algorithm>  // lines 5-5
- #include "OgreDataStream.h"  // lines 10-10
- #include "OgrePrerequisites.h"  // lines 12-12

The full include-list for components/files/constrainedfiledatastream.cpp:
#include "constrainedfiledatastream.hpp"
#include <stdint.h>                     // for uint8_t
#include <string.h>                     // for memcpy
#include <algorithm>                    // for max, min
#include <cassert>                      // for assert
#include <stdexcept>                    // for runtime_error
#include "OgreDataStream.h"             // for DataStreamPtr, DataStream
#include "OgrePrerequisites.h"          // for String
#include "lowlevelfile.hpp"             // for LowLevelFile
---

(components/contentselector/model/naturalsort.hpp has correct #includes/fwd-decls)

components/contentselector/model/naturalsort.cpp should add these lines:

components/contentselector/model/naturalsort.cpp should remove these lines:
- #include <QtCore>  // lines 7-7

The full include-list for components/contentselector/model/naturalsort.cpp:
#include "naturalsort.hpp"
#include <QtCore>                       // for QChar, etc
---

(components/esm/loadsoun.hpp has correct #includes/fwd-decls)

(components/esm/loadsoun.cpp has correct #includes/fwd-decls)

(components/esm/loadnpc.hpp has correct #includes/fwd-decls)

components/esm/loadnpc.cpp should add these lines:

components/esm/loadnpc.cpp should remove these lines:
- #include "components/esm/aipackage.hpp"  // lines 2-2
- #include "components/esm/esmcommon.hpp"  // lines 4-4
- #include "components/esm/loadcont.hpp"  // lines 6-6
- #include "components/esm/loadskil.hpp"  // lines 8-8
- #include "components/esm/spelllist.hpp"  // lines 10-10

The full include-list for components/esm/loadnpc.cpp:
#include "loadnpc.hpp"
#include "components/esm/aipackage.hpp"  // for AIData, AIPackageList, etc
#include "components/esm/esmcommon.hpp"  // for NAME
#include "components/esm/loadcont.hpp"  // for InventoryList
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/spelllist.hpp"  // for SpellList
#include "defs.hpp"                     // for Position, etc
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
In file included from libs/openengine/ogre/selectionbuffer.cpp:10:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

extern/shiny/Main/MaterialInstancePass.hpp should add these lines:

extern/shiny/Main/MaterialInstancePass.hpp should remove these lines:
- #include <iosfwd>  // lines 5-5
- #include <string>  // lines 7-7

The full include-list for extern/shiny/Main/MaterialInstancePass.hpp:
#include <iosfwd>                       // for ofstream
#include <string>                       // for string
#include <vector>                       // for vector
#include "MaterialInstanceTextureUnit.hpp"
#include "PropertyBase.hpp"             // for PropertySetGet
---

extern/shiny/Main/MaterialInstancePass.cpp should add these lines:

extern/shiny/Main/MaterialInstancePass.cpp should remove these lines:
- #include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"  // lines 5-5
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 7-7

The full include-list for extern/shiny/Main/MaterialInstancePass.cpp:
#include "MaterialInstancePass.hpp"
#include <fstream>                      // for operator<<, basic_ostream
#include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"
#include "extern/shiny/Main/PropertyBase.hpp"  // for PropertySetGet, etc
---
In file included from libs/openengine/ogre/selectionbuffer.cpp:10:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from libs/openengine/ogre/selectionbuffer.cpp:10:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
components/esm/creaturelevliststate.cpp:12:9: error: use of undeclared identifier 'ObjectState'
        ObjectState::load(esm);
        ^
components/esm/creaturelevliststate.cpp:23:9: error: use of undeclared identifier 'ObjectState'
        ObjectState::save(esm, inInventory);
        ^
In file included from components/contentselector/model/contentmodel.cpp:1:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^

extern/oics/ICSInputControlSystem_mouse.cpp should add these lines:

extern/oics/ICSInputControlSystem_mouse.cpp should remove these lines:
- #include <stdlib.h>  // lines 28-28
- #include <map>  // lines 30-30
- #include <string>  // lines 32-32
- #include <utility>  // lines 34-34
- #include <vector>  // lines 36-36
- #include "SDL_events.h"  // lines 40-40
- #include "SDL_mouse.h"  // lines 42-42
- #include "SDL_stdinc.h"  // lines 44-44
- #include "extern/oics/../sdl4ogre/events.h"  // lines 46-46
- #include "extern/oics/ICSControl.h"  // lines 48-48
- #include "extern/oics/ICSPrerequisites.h"  // lines 50-50
- #include "extern/oics/tinyxml.h"  // lines 52-52

The full include-list for extern/oics/ICSInputControlSystem_mouse.cpp:
#include <stdlib.h>                     // for abs
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <string>                       // for allocator, operator+, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "ICSInputControlSystem.h"      // for InputControlSystem, etc
#include "SDL_events.h"                 // for SDL_MouseButtonEvent
#include "SDL_mouse.h"                  // for SDL_BUTTON_LEFT, etc
#include "SDL_stdinc.h"                 // for Uint8
#include "extern/oics/../sdl4ogre/events.h"  // for MouseMotionEvent
#include "extern/oics/ICSControl.h"     // for Control, etc
#include "extern/oics/ICSPrerequisites.h"  // for ToString, FromString, etc
#include "extern/oics/tinyxml.h"        // for TiXmlElement
---

components/bsa/bsa_file.hpp should add these lines:

components/bsa/bsa_file.hpp should remove these lines:
- #include <string.h>  // lines 30-30

The full include-list for components/bsa/bsa_file.hpp:
#include <OgreDataStream.h>             // for DataStreamPtr
#include <stdint.h>                     // for uint32_t
#include <string.h>                     // for strcasecmp
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for allocator, string
#include <vector>                       // for vector
---

components/esmterrain/storage.hpp should add these lines:

components/esmterrain/storage.hpp should remove these lines:
- #include <components/esm/loadland.hpp>  // lines 4-4
- #include <components/esm/loadltex.hpp>  // lines 5-5
- #include <string>  // lines 8-8
- #include <utility>  // lines 10-10
- #include <vector>  // lines 12-12
- #include "OgrePlatform.h"  // lines 15-15
- #include "components/terrain/defs.hpp"  // lines 17-17
- namespace ESM { struct Land; }  // lines 33-33
- namespace ESM { struct LandTexture; }  // lines 34-34
- namespace Ogre { class ColourValue; }  // lines 37-37
- namespace Ogre { class PixelBox; }  // lines 38-38
- namespace Ogre { class Vector2; }  // lines 39-39
- namespace Ogre { class Vector3; }  // lines 40-40
- namespace Terrain { class QuadTreeNode; }  // lines 43-43

The full include-list for components/esmterrain/storage.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "OgrePlatform.h"               // for uint8
#include "components/terrain/defs.hpp"  // for LayerInfo, Alignment, etc
namespace ESM { struct Land; }  // lines 30-30
namespace ESM { struct LandTexture; }  // lines 31-31
namespace Ogre { class ColourValue; }  // lines 20-20
namespace Ogre { class PixelBox; }  // lines 21-21
namespace Ogre { class Vector2; }  // lines 22-22
namespace Ogre { class Vector3; }  // lines 23-23
namespace Terrain { class QuadTreeNode; }  // lines 26-26
---

components/bsa/bsa_file.cpp should add these lines:

components/bsa/bsa_file.cpp should remove these lines:
- #include <assert.h>  // lines 25-25
- #include <stddef.h>  // lines 31-31
- #include <boost/filesystem/path_traits.hpp>  // lines 29-29
- #include <istream>  // lines 33-33
- #include <utility>  // lines 36-36
- #include "OgreDataStream.h"  // lines 40-40

The full include-list for components/bsa/bsa_file.cpp:
#include "bsa_file.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <istream>                      // for basic_istream::read, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "../files/constrainedfiledatastream.hpp"
#include "OgreDataStream.h"             // for DataStreamPtr
---
In file included from components/contentselector/view/contentselector.cpp:7:
components/contentselector/view/contentselector.hpp:8:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^

components/esmterrain/storage.cpp should add these lines:
#include "OgreVector2.h"                // for Vector2

components/esmterrain/storage.cpp should remove these lines:
- #include <OgreRenderSystem.h>  // lines 1-1
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 11-11
- #include <string.h>  // lines 14-14
- #include <algorithm>  // lines 16-16
- #include <boost/algorithm/string/replace.hpp>  // lines 7-7
- #include <cmath>  // lines 18-18
- #include <limits>  // lines 20-20
- #include <set>  // lines 22-22
- #include "GLX/../OgrePrerequisites.h"  // lines 25-25
- #include "OgreColourValue.h"  // lines 27-27
- #include "OgreMemoryAllocatorConfig.h"  // lines 29-29
- #include "OgrePixelFormat.h"  // lines 31-31
- #include "OgrePlane.h"  // lines 33-33
- #include "OgreVector3.h"  // lines 35-35
- #include "components/esm/loadland.hpp"  // lines 37-37
- #include "components/esm/loadltex.hpp"  // lines 39-39

The full include-list for components/esmterrain/storage.cpp:
#include "storage.hpp"
#include <OgreResourceBackgroundQueue.h>  // for ResourceBackgroundQueue
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t, NULL
#include <stdint.h>                     // for uint16_t
#include <string.h>                     // for memcpy, memset
#include <algorithm>                    // for min, max
#include <boost/algorithm/string/replace.hpp>  // for replace_last
#include <cmath>                        // for ceil, floor
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include <components/terrain/quadtreenode.hpp>  // for QuadTreeNode
#include <limits>                       // for numeric_limits
#include <set>                          // for set, set<>::iterator
#include "GLX/../OgrePrerequisites.h"   // for uchar
#include "OgreColourValue.h"            // for ColourValue
#include "OgreMemoryAllocatorConfig.h"
#include "OgrePixelFormat.h"            // for PixelBox, PixelFormat, etc
#include "OgrePlane.h"                  // for Plane
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "components/esm/loadland.hpp"  // for Land, Land::LAND_SIZE, etc
#include "components/esm/loadltex.hpp"  // for LandTexture
---

(components/esm/aipackage.hpp has correct #includes/fwd-decls)

components/esm/aipackage.cpp should add these lines:

components/esm/aipackage.cpp should remove these lines:
- #include "components/esm/esmcommon.hpp"  // lines 3-3

The full include-list for components/esm/aipackage.cpp:
#include "aipackage.hpp"
#include "components/esm/esmcommon.hpp"  // for NAME
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadbsgn.hpp has correct #includes/fwd-decls)

components/esm/loadbsgn.cpp should add these lines:

components/esm/loadbsgn.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/spelllist.hpp"  // lines 5-5

The full include-list for components/esm/loadbsgn.cpp:
#include "loadbsgn.hpp"
#include <vector>                       // for vector
#include "components/esm/spelllist.hpp"  // for SpellList
#include "defs.hpp"                     // for RecNameInts::REC_BSGN
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

components/widgets/windowcaption.hpp should add these lines:

components/widgets/windowcaption.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 9-9
- #include "MyGUI_Types.h"  // lines 11-11
- #include "MyGUI_UString.h"  // lines 13-13
- namespace MyGUI { class Widget; }  // lines 18-18

The full include-list for components/widgets/windowcaption.hpp:
#include <MyGUI_EditBox.h>              // for EditBox
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "MyGUI_UString.h"              // for UString
namespace MyGUI { class Widget; }  // lines 16-16
---

components/widgets/windowcaption.cpp should add these lines:

components/widgets/windowcaption.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include "MyGUI_EditBox.h"  // lines 6-6
- #include "MyGUI_Widget.h"  // lines 8-8

The full include-list for components/widgets/windowcaption.cpp:
#include "windowcaption.hpp"
#include <stddef.h>                     // for NULL
#include <stdexcept>                    // for runtime_error
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_Widget.h"               // for Widget
---

(components/esm/loadltex.hpp has correct #includes/fwd-decls)

(components/esm/loadltex.cpp has correct #includes/fwd-decls)
In file included from plugins/mygui_resource_plugin/plugin.cpp:22:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from components/nifcache/nifcache.cpp:6:
./components/nif/niffile.hpp:37:10: error: no type named 'vector' in namespace 'std'
    std::vector<Record*> records;
    ~~~~~^
./components/nif/niffile.hpp:37:16: error: expected member name or ';' after declaration specifiers
    std::vector<Record*> records;
    ~~~~~~~~~~~^
./components/nif/niffile.hpp:40:10: error: no type named 'vector' in namespace 'std'
    std::vector<Record*> roots;
    ~~~~~^
./components/nif/niffile.hpp:40:16: error: expected member name or ';' after declaration specifiers
    std::vector<Record*> roots;
    ~~~~~~~~~~~^
./components/nif/niffile.hpp:76:23: error: use of undeclared identifier 'records'
        Record *res = records.at(index);
                      ^
./components/nif/niffile.hpp:80:40: error: use of undeclared identifier 'records'
    size_t numRecords() const { return records.size(); }
                                       ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/nif/niffile.hpp:85:23: error: use of undeclared identifier 'roots'
        Record *res = roots.at(index);
                      ^

(components/esm/queststate.hpp has correct #includes/fwd-decls)

(components/esm/queststate.cpp has correct #includes/fwd-decls)
./components/nif/niffile.hpp:89:38: error: use of undeclared identifier 'roots'
    size_t numRoots() const { return roots.size(); }
                                     ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_FactoryManager.h:11:
In file included from /usr/include/MYGUI/MyGUI_Singleton.h:10:
In file included from /usr/include/MYGUI/MyGUI_Diagnostic.h:11:
In file included from /usr/include/MYGUI/MyGUI_Exception.h:12:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_FactoryManager.h:11:
In file included from /usr/include/MYGUI/MyGUI_Singleton.h:10:
In file included from /usr/include/MYGUI/MyGUI_Diagnostic.h:11:
In file included from /usr/include/MYGUI/MyGUI_Exception.h:12:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:5:
In file included from /usr/include/OGRE/OgreHardwarePixelBuffer.h:32:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:5:
In file included from /usr/include/OGRE/OgreHardwarePixelBuffer.h:32:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:5:
In file included from /usr/include/OGRE/OgreHardwarePixelBuffer.h:32:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from plugins/mygui_resource_plugin/plugin.cpp:5:
In file included from /usr/include/OGRE/OgreHardwarePixelBuffer.h:32:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from plugins/mygui_resource_plugin/plugin.cpp:5:
In file included from /usr/include/OGRE/OgreHardwarePixelBuffer.h:32:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
plugins/mygui_resource_plugin/plugin.cpp:37:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
components/files/lowlevelfile.cpp:132:31: error: use of undeclared identifier 'O_RDONLY'
        static const int openFlags = O_RDONLY;
                                     ^
components/files/lowlevelfile.cpp:135:12: error: no member named 'open' in the global namespace; did you mean simply 'open'?
        mHandle = ::open (filename, openFlags, 0);
                  ^~~~~~
                  open
components/files/lowlevelfile.cpp:125:20: note: 'open' declared here
void LowLevelFile::open (char const * filename)
                   ^

(components/esm/cellid.hpp has correct #includes/fwd-decls)

(components/esm/cellid.cpp has correct #includes/fwd-decls)

components/esm/loadtes3.hpp should add these lines:

components/esm/loadtes3.hpp should remove these lines:
- #include <stdint.h>  // lines 5-5
- #include <string>  // lines 7-7

The full include-list for components/esm/loadtes3.hpp:
#include <stdint.h>                     // for uint64_t
#include <string>                       // for string, basic_string
#include <vector>                       // for vector
#include "esmcommon.hpp"                // for NAME32, NAME256, NAME64
namespace ESM { class ESMReader; }  // lines 15-15
namespace ESM { class ESMWriter; }  // lines 16-16
---

(components/esm/loadtes3.cpp has correct #includes/fwd-decls)

components/esm/creaturelevliststate.hpp should add these lines:

components/esm/creaturelevliststate.hpp should remove these lines:
- #include "objectstate.hpp"  // lines 4-4
- namespace ESM { class ESMReader; }  // lines 10-10
- namespace ESM { class ESMWriter; }  // lines 11-11

The full include-list for components/esm/creaturelevliststate.hpp:
namespace ESM { class ESMReader; }  // lines 7-7
namespace ESM { class ESMWriter; }  // lines 8-8
---

components/esm/creaturelevliststate.cpp should add these lines:

components/esm/creaturelevliststate.cpp should remove these lines:
- #include "components/esm/objectstate.hpp"  // lines 1-1
- #include "components/esm/objectstate.hpp"  // lines 2-2

The full include-list for components/esm/creaturelevliststate.cpp:
#include "creaturelevliststate.hpp"
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---

(components/esm/loadcrea.hpp has correct #includes/fwd-decls)

components/esm/loadcrea.cpp should add these lines:

components/esm/loadcrea.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/aipackage.hpp"  // lines 5-5
- #include "components/esm/loadcont.hpp"  // lines 7-7
- #include "components/esm/spelllist.hpp"  // lines 9-9

The full include-list for components/esm/loadcrea.cpp:
#include "loadcrea.hpp"
#include <vector>                       // for vector
#include "components/esm/aipackage.hpp"  // for AIData, AIPackageList, etc
#include "components/esm/loadcont.hpp"  // for InventoryList
#include "components/esm/spelllist.hpp"  // for SpellList
#include "defs.hpp"                     // for RecNameInts::REC_CREA
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
In file included from 
(components/esm/magiceffects.hpp has correct #includes/fwd-decls)

components/esm/magiceffects.cpp should add these lines:

components/esm/magiceffects.cpp should remove these lines:
- #include <utility>  // lines 2-2

The full include-list for components/esm/magiceffects.cpp:
#include "magiceffects.hpp"
#include <utility>                      // for make_pair, pair
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:197:14: error: member access into incomplete type 'Ogre::SceneNode'
        mNode->attachObject(mLineDrawer);
             ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:228:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:235:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^

components/files/lowlevelfile.hpp should add these lines:

components/files/lowlevelfile.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6

The full include-list for components/files/lowlevelfile.hpp:
#include <OgrePlatform.h>               // for OGRE_PLATFORM, etc
#include <stddef.h>                     // for size_t
---

(components/files/lowlevelfile.cpp has correct #includes/fwd-decls)
libs/openengine/bullet/BtOgre.cpp:529:37: error: member access into incomplete type 'Ogre::Entity'
        mNode = (SceneNode*)(mEntity->getParentNode());
                                    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:533:20: error: member access into incomplete type 'Ogre::Entity'
        if (mEntity->getMesh()->sharedVertexData)
                   ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:535:61: error: member access into incomplete type 'Ogre::Entity'
            VertexIndexToShape::addStaticVertexData (mEntity->getMesh()->sharedVertexData);
                                                            ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:538:44: error: member access into incomplete type 'Ogre::Entity'
        for (unsigned int i = 0;i < mEntity->getNumSubEntities();++i)
                                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:540:40: error: member access into incomplete type 'Ogre::Entity'
            SubMesh *sub_mesh = mEntity->getSubEntity(i)->getSubMesh();
                                       ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:633:37: error: member access into incomplete type 'Ogre::Entity'
        mNode = (SceneNode*)(mEntity->getParentNode());
                                    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:636:23: error: member access into incomplete type 'Ogre::Entity'
        assert (entity->getMesh()->hasSkeleton ());
                      ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:638:16: error: member access into incomplete type 'Ogre::Entity'
        mEntity->addSoftwareAnimationRequest(false);
               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:639:16: error: member access into incomplete type 'Ogre::Entity'
        mEntity->_updateAnimation();
               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:641:20: error: member access into incomplete type 'Ogre::Entity'
        if (mEntity->getMesh()->sharedVertexData)
                   ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:643:63: error: member access into incomplete type 'Ogre::Entity'
            VertexIndexToShape::addAnimatedVertexData (mEntity->getMesh()->sharedVertexData,
                                                              ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:644:28: error: member access into incomplete type 'Ogre::Entity'
                    mEntity->_getSkelAnimVertexData(),
                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:645:29: error: member access into incomplete type 'Ogre::Entity'
                    &mEntity->getMesh()->sharedBlendIndexToBoneIndexMap);
                            ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:648:44: error: member access into incomplete type 'Ogre::Entity'
        for (unsigned int i = 0;i < mEntity->getNumSubEntities();++i)
                                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:650:40: error: member access into incomplete type 'Ogre::Entity'
            SubMesh *sub_mesh = mEntity->getSubEntity(i)->getSubMesh();
                                       ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:657:32: error: member access into incomplete type 'Ogre::Entity'
                        mEntity->getSubEntity(i)->_getSkelAnimVertexData(),
                               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/terrain/quadtreenode.hpp should add these lines:
#include "OgreVector2.h"                // for Vector2

components/terrain/quadtreenode.hpp should remove these lines:
- #include <OgreTexture.h>  // lines 5-5
- #include <stddef.h>  // lines 7-7
- #include "GLX/../OgrePrerequisites.h"  // lines 10-10
- #include "OgreSharedPtr.h"  // lines 12-12
- namespace Ogre { class Rectangle2D; }  // lines 28-28
- namespace Ogre { class SceneNode; }  // lines 20-20
- namespace Ogre { class Vector3; }  // lines 21-21
- namespace Ogre { template <typename T> struct TRect; }  // lines 22-22

The full include-list for components/terrain/quadtreenode.hpp:
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox
#include <stddef.h>                     // for size_t
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector2.h"                // for Vector2
#include "defs.hpp"                     // for Direction
namespace Ogre { class SceneNode; }  // lines 16-16
namespace Ogre { class Vector3; }  // lines 17-17
namespace Ogre { template <typename T> struct TRect; }  // lines 18-18
namespace Terrain { class Chunk; }  // lines 33-33
namespace Terrain { class DefaultWorld; }  // lines 34-34
namespace Terrain { class MaterialGenerator; }  // lines 35-35
namespace Terrain { struct LoadResponseData; }  // lines 36-36
---
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.cpp:1:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

components/terrain/quadtreenode.cpp should add these lines:

components/terrain/quadtreenode.cpp should remove these lines:
- #include <assert.h>  // lines 6-6
- #include <string>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "OgreAxisAlignedBox.h"  // lines 14-14
- #include "OgreCommon.h"  // lines 16-16
- #include "OgreDataStream.h"  // lines 18-18
- #include "OgreMaterial.h"  // lines 20-20
- #include "OgrePixelFormat.h"  // lines 22-22
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "OgreStringConverter.h"  // lines 26-26
- #include "OgreTexture.h"  // lines 28-28
- #include "OgreVector2.h"  // lines 30-30
- #include "OgreVector3.h"  // lines 32-32
- #include "components/terrain/defs.hpp"  // lines 36-36

The full include-list for components/terrain/quadtreenode.cpp:
#include "quadtreenode.hpp"
#include <OgreManualObject.h>           // for ManualObject
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <assert.h>                     // for assert
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <string>                       // for allocator, char_traits, etc
#include <vector>                       // for vector, etc
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox, etc
#include "OgreCommon.h"                 // for TRect
#include "OgreDataStream.h"             // for MemoryDataStream, etc
#include "OgreMaterial.h"               // for Material
#include "OgrePixelFormat.h"            // for PixelBox, etc
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "buffercache.hpp"              // for BufferCache
#include "chunk.hpp"                    // for Chunk
#include "components/terrain/defs.hpp"  // for LayerInfo, Direction, etc
#include "defaultworld.hpp"             // for DefaultWorld, etc
#include "material.hpp"                 // for MaterialGenerator
#include "storage.hpp"                  // for Storage
---

components/widgets/box.hpp should add these lines:

components/widgets/box.hpp should remove these lines:
- #include <string>  // lines 9-9
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_RTTI.h"  // lines 14-14
- #include "MyGUI_Types.h"  // lines 16-16
- #include "MyGUI_UString.h"  // lines 18-18

The full include-list for components/widgets/box.hpp:
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_TextBox.h>              // for TextBox
#include <MyGUI_Widget.h>               // for Widget
#include <string>                       // for string
#include "MyGUI_Align.h"                // for Align, Align::Enum::Right
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntSize, IntCoord
#include "MyGUI_UString.h"              // for UString
---

(components/esm/weatherstate.hpp has correct #includes/fwd-decls)

(components/esm/weatherstate.cpp has correct #includes/fwd-decls)

components/widgets/box.cpp should add these lines:

components/widgets/box.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include <stdexcept>  // lines 6-6
- #include <utility>  // lines 8-8
- #include <vector>  // lines 10-10
- #include "MyGUI_Button.h"  // lines 13-13
- #include "MyGUI_EditBox.h"  // lines 15-15
- #include "MyGUI_StringUtility.h"  // lines 17-17
- #include "MyGUI_TPoint.h"  // lines 19-19
- #include "MyGUI_TSize.h"  // lines 21-21
- #include "MyGUI_TextBox.h"  // lines 23-23
- #include "MyGUI_Widget.h"  // lines 25-25

The full include-list for components/widgets/box.cpp:
#include "box.hpp"
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for max
#include <stdexcept>                    // for logic_error, runtime_error
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_StringUtility.h"        // for parseValue
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Widget.h"               // for Widget
---
In file included from apps/openmw/mwgui/controllers.cpp:1:
In file included from apps/openmw/mwgui/controllers.hpp:4:
In file included from /usr/include/MYGUI/MyGUI_ControllerItem.h:11:
/usr/include/MYGUI/MyGUI_WidgetDefines.h:20:24: error: no member named 'string' in namespace 'std'
        typedef std::map<std::string, Widget*> MapWidgetPtr;
                         ~~~~~^
In file included from apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from 
components/nifcache/nifcache.hpp should add these lines:

components/nifcache/nifcache.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 8-8
- namespace Nif { class NIFFile; }  // lines 13-13

The full include-list for components/nifcache/nifcache.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr, etc
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
namespace Nif { class NIFFile; }  // lines 11-11
---

components/nifcache/nifcache.cpp should add these lines:

components/nifcache/nifcache.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <utility>  // lines 4-4
- #include "components/nif/niffile.hpp"  // lines 7-7

The full include-list for components/nifcache/nifcache.cpp:
#include "nifcache.hpp"
#include <assert.h>                     // for assert
#include <utility>                      // for pair
#include "components/nif/niffile.hpp"   // for NIFFile
---
apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/windowbase.cpp:17:
In file included from apps/openmw/mwgui/draganddrop.hpp:4:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/windowbase.cpp:20:
apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/birth.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

extern/shiny/Main/MaterialInstanceTextureUnit.hpp should add these lines:

extern/shiny/Main/MaterialInstanceTextureUnit.hpp should remove these lines:
- #include <string>  // lines 5-5

The full include-list for extern/shiny/Main/MaterialInstanceTextureUnit.hpp:
#include <string>                       // for string
#include "PropertyBase.hpp"             // for PropertySetGet
---

(extern/shiny/Main/MaterialInstanceTextureUnit.cpp has correct #includes/fwd-decls)

components/misc/stringops.hpp should add these lines:

components/misc/stringops.hpp should remove these lines:
- #include <cctype>  // lines 6-6

The full include-list for components/misc/stringops.hpp:
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for lexicographical_compare
#include <locale>                       // for tolower, locale
#include <string>                       // for basic_string, string, etc
---

(components/misc/stringops.cpp has correct #includes/fwd-decls)

extern/shiny/Main/Preprocessor.hpp should add these lines:

extern/shiny/Main/Preprocessor.hpp should remove these lines:
- #include <algorithm>  // lines 11-11
- #include <boost/assert.hpp>  // lines 4-4
- #include <boost/config.hpp>  // lines 5-5
- #include <boost/wave/cpp_exceptions.hpp>  // lines 6-6
- #include <boost/wave/cpp_throw.hpp>  // lines 7-7
- #include <boost/wave/util/macro_helpers.hpp>  // lines 10-10
- #include <cstdio>  // lines 12-12
- #include <ostream>  // lines 13-13
- #include <string>  // lines 15-15

The full include-list for extern/shiny/Main/Preprocessor.hpp:
#include <boost/wave/preprocessing_hooks.hpp>
#include <boost/wave/token_ids.hpp>
#include <string>                       // for string
#include <vector>                       // for vector
---

extern/shiny/Main/Preprocessor.cpp should add these lines:

extern/shiny/Main/Preprocessor.cpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <boost/spirit/home/classic/core/composite/actions.hpp>  // lines 6-6
- #include <boost/spirit/home/classic/core/composite/alternative.hpp>  // lines 8-8
- #include <boost/spirit/home/classic/core/composite/difference.hpp>  // lines 10-10
- #include <boost/spirit/home/classic/core/composite/kleene_star.hpp>  // lines 12-12
- #include <boost/spirit/home/classic/core/composite/optional.hpp>  // lines 14-14
- #include <boost/spirit/home/classic/core/composite/sequence.hpp>  // lines 16-16
- #include <boost/spirit/home/classic/core/parser.hpp>  // lines 18-18
- #include <boost/spirit/home/classic/core/scanner/skipper.hpp>  // lines 20-20
- #include <boost/spirit/home/classic/iterator/multi_pass.hpp>  // lines 22-22
- #include <boost/spirit/home/classic/tree/parse_tree_utils.hpp>  // lines 24-24
- #include <boost/wave/cpp_context.hpp>  // lines 26-26
- #include <boost/wave/cpp_exceptions.hpp>  // lines 28-28
- #include <boost/wave/cpp_throw.hpp>  // lines 30-30
- #include <boost/wave/cpplexer/cpplexer_exceptions.hpp>  // lines 34-34
- #include <boost/wave/language_support.hpp>  // lines 36-36
- #include <boost/wave/util/cpp_iterator.hpp>  // lines 38-38
- #include <boost/wave/util/file_position.hpp>  // lines 40-40
- #include <boost/wave/util/flex_string.hpp>  // lines 42-42
- #include <boost/wave/util/functor_input.hpp>  // lines 44-44
- #include <exception>  // lines 46-46
- #include <fstream>  // lines 48-48
- #include <ostream>  // lines 50-50
- #include <stdexcept>  // lines 52-52

The full include-list for extern/shiny/Main/Preprocessor.cpp:
#include "Preprocessor.hpp"
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <boost/spirit/home/classic/core/composite/actions.hpp>
#include <boost/spirit/home/classic/core/composite/alternative.hpp>
#include <boost/spirit/home/classic/core/composite/difference.hpp>
#include <boost/spirit/home/classic/core/composite/kleene_star.hpp>
#include <boost/spirit/home/classic/core/composite/optional.hpp>
#include <boost/spirit/home/classic/core/composite/sequence.hpp>
#include <boost/spirit/home/classic/core/parser.hpp>  // for parse
#include <boost/spirit/home/classic/core/scanner/skipper.hpp>
#include <boost/spirit/home/classic/iterator/multi_pass.hpp>
#include <boost/spirit/home/classic/tree/parse_tree_utils.hpp>
#include <boost/wave/cpp_context.hpp>   // for context<>::iterator_type, etc
#include <boost/wave/cpp_exceptions.hpp>  // for cpp_exception, etc
#include <boost/wave/cpp_throw.hpp>     // for BOOST_WAVE_THROW_CTX
#include <boost/wave/cpplexer/cpp_lex_iterator.hpp>  // for lex_iterator
#include <boost/wave/cpplexer/cpp_lex_token.hpp>  // for lex_token, etc
#include <boost/wave/cpplexer/cpplexer_exceptions.hpp>
#include <boost/wave/language_support.hpp>  // for language_support
#include <boost/wave/util/cpp_iterator.hpp>  // for pp_iterator_functor
#include <boost/wave/util/file_position.hpp>  // for file_position_type
#include <boost/wave/util/flex_string.hpp>  // for operator==, flex_string, etc
#include <boost/wave/util/functor_input.hpp>  // for functor_input
#include <exception>                    // for exception
#include <fstream>
#include <ostream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
---
In file included from apps/openmw/mwgui/controllers.cpp:1:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
In file included from ./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
In file included from ./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
In file included from ./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/tradewindow.cpp:4:
./components/widgets/numericeditbox.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/birth.cpp:23:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/sortfilteritemmodel.cpp:157:58: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
        if ((mFilter & Filter_OnlyUsableItems) && typeid(*base.getClass().use(base)) == typeid(MWWorld::NullAction)
                                                         ^
In file included from apps/openmw/mwrender/creatureanimation.cpp:20:
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/sortfilteritemmodel.cpp:27:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:48: error: 'MWWorld::LiveCellRefBase' is an incomplete type
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                               ^                                      ~~~~
apps/openmw/mwgui/sortfilteritemmodel.cpp:154:26: note: in instantiation of function template specialization 'MWWorld::Ptr::get<ESM::Book>' requested here
                && !base.get<ESM::Book>()->mBase->mData.mIsScroll)
                         ^
./apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwrender/creatureanimation.cpp:22:
In file included from ./apps/openmw/mwrender/../mwworld/containerstore.hpp:22:
./apps/openmw/mwrender/../mwbase/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
./apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^

apps/openmw/mwgui/windowbase.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/windowbase.hpp should remove these lines:
- #include <string>  // lines 6-6
- namespace MWGui { class WindowManager; }  // lines 25-25
- namespace MyGUI { class Widget; }  // lines 14-14

The full include-list for apps/openmw/mwgui/windowbase.hpp:
#include <openengine/gui/layout.hpp>    // for Layout
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
namespace MWGui { class DragAndDrop; }  // lines 24-24
namespace MyGUI { class Widget; }  // lines 12-12
---

apps/openmw/mwgui/windowbase.cpp should add these lines:

apps/openmw/mwgui/windowbase.cpp should remove these lines:
- #include <stddef.h>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include "MyGUI_Types.h"  // lines 12-12
- #include "MyGUI_Widget.h"  // lines 14-14
- #include "components/settings/settings.hpp"  // lines 15-15
- #include "components/settings/settings.hpp"  // lines 16-16
- #include "openengine/gui/layout.hpp"  // lines 19-19

The full include-list for apps/openmw/mwgui/windowbase.cpp:
#include "windowbase.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Types.h"                // for IntCoord, IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "draganddrop.hpp"              // for DragAndDrop
#include "openengine/gui/layout.hpp"    // for Layout
---
In file included from apps/openmw/mwrender/creatureanimation.cpp:24:
./apps/openmw/mwrender/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/openmw/mwrender/debugging.cpp:9:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
./apps/openmw/mwrender/../mwworld/inventorystore.hpp:149:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
./apps/openmw/mwrender/../mwbase/../mwworld/containerstore.hpp:124:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hppIn file included from components/widgets/widgets.cpp:7:
components/widgets/list.hpp:9:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
apps/openmw/mwrender/creatureanimation.cpp:48:42: error: cannot initialize a variable of type 'MWWorld::LiveCellRef<ESM::Creature> *' with an rvalue of type 'MWWorld::LiveCellRef<Creature> *'
    MWWorld::LiveCellRef<ESM::Creature> *ref = mPtr.get<ESM::Creature>();
                                         ^     ~~~~~~~~~~~~~~~~~~~~~~~~~
apps/openmw/mwrender/creatureanimation.cpp:67:42: error: cannot initialize a variable of type 'MWWorld::LiveCellRef<ESM::Creature> *' with an rvalue of type 'MWWorld::LiveCellRef<Creature> *'
    MWWorld::LiveCellRef<ESM::Creature> *ref = mPtr.get<ESM::Creature>();
                                         ^     ~~~~~~~~~~~~~~~~~~~~~~~~~
apps/openmw/mwrender/creatureanimation.cpp:78:24: error: member access into incomplete type 'const MWWorld::Class'
        mPtr.getClass().getInventoryStore(mPtr).setListener(this, mPtr);
                       ^
apps/openmw/mwrender/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwrender/creatureanimation.cpp:117:51: error: member access into incomplete type 'const MWWorld::Class'
    MWWorld::InventoryStore& inv = mPtr.getClass().getInventoryStore(mPtr);
                                                  ^
apps/openmw/mwrender/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwrender/creatureanimation.cpp:120:15: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
    if (it == inv.end())
              ^~~
apps/openmw/mwrender/creatureanimation.cpp:133:99: error: member access into incomplete type 'const MWWorld::Class'
    scene = NifOgre::Loader::createObjects(mSkelBase, bonename, bonename, mInsert, item.getClass().getModel(item));
                                                                                                  ^
apps/openmw/mwrender/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwrender/creatureanimation.cpp:137:41: error: member access into incomplete type 'const MWWorld::Class'
                        !item.getClass().getEnchantment(item).empty(), &glowColor);
                                        ^
apps/openmw/mwrender/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwrender/creatureanimation.cpp:145:21: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
        if (ammo != inv.end() && ammo->get<ESM::Weapon>()->mBase->mData.mType == ESM::Weapon::Bolt)
                    ^~~
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^

components/contentselector/view/contentselector.hpp should add these lines:

components/contentselector/view/contentselector.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- class QWidget;  // lines 14-14

The full include-list for components/contentselector/view/contentselector.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include "../model/contentmodel.hpp"    // for ContentFileList
class QSortFilterProxyModel;  // lines 13-13
class QWidget;  // lines 11-11
---

components/contentselector/view/contentselector.cpp should add these lines:

components/contentselector/view/contentselector.cpp should remove these lines:
- #include <QModelIndex>  // lines 1-1
- #include <QSortFilterProxyModel>  // lines 2-2

The full include-list for components/contentselector/view/contentselector.cpp:
#include "contentselector.hpp"
#include <QtGui>                        // for QSortFilterProxyModel, etc
#include "../model/esmfile.hpp"         // for EsmFile
#include "components/contentselector/view/../model/contentmodel.hpp"
---
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

(components/esm/loadpgrd.hpp has correct #includes/fwd-decls)

(components/esm/loadpgrd.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

libs/openengine/ogre/selectionbuffer.hpp should add these lines:
#include "OgreColourValue.h"            // for ColourValue
#include "OgreMaterialManager.h"        // for MaterialManager, etc

libs/openengine/ogre/selectionbuffer.hpp should remove these lines:
- #include <OgreRenderTarget.h>  // lines 5-5
- #include <OgreTexture.h>  // lines 6-6
- #include <map>  // lines 8-8
- #include "GLX/../OgrePrerequisites.h"  // lines 11-11
- #include "OgreImage.h"  // lines 13-13
- #include "OgreResource.h"  // lines 15-15
- #include "OgreSharedPtr.h"  // lines 17-17
- #include "OgreTechnique.h"  // lines 19-19
- namespace Ogre { class Camera; }  // lines 27-27
- namespace Ogre { class Material; }  // lines 28-28
- namespace Ogre { class RenderTexture; }  // lines 29-29
- namespace Ogre { class Renderable; }  // lines 30-30

The full include-list for libs/openengine/ogre/selectionbuffer.hpp:
#include <map>                          // for map
#include "GLX/../OgrePrerequisites.h"   // for String, TexturePtr
#include "OgreColourValue.h"            // for ColourValue
#include "OgreImage.h"                  // for Image
#include "OgreMaterialManager.h"        // for MaterialManager, etc
#include "OgreResource.h"               // for ManualResourceLoader, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTechnique.h"              // for Technique
namespace Ogre { class Camera; }  // lines 22-22
namespace Ogre { class Material; }  // lines 23-23
namespace Ogre { class RenderTexture; }  // lines 24-24
namespace Ogre { class Renderable; }  // lines 25-25
---
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/compiler/controlparser.hpp should add these lines:

components/compiler/controlparser.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <utility>  // lines 8-8
- namespace Compiler { class Context; }  // lines 18-18
- namespace Compiler { class ErrorHandler; }  // lines 19-19
- namespace Compiler { class Scanner; }  // lines 23-23
- namespace Compiler { struct TokenLoc; }  // lines 24-24

The full include-list for components/compiler/controlparser.hpp:
#include <components/interpreter/types.hpp>  // for Type_Code
#include <string>                       // for allocator, string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "exprparser.hpp"               // for ExprParser
#include "lineparser.hpp"               // for LineParser
#include "parser.hpp"                   // for Parser
namespace Compiler { class Context; }  // lines 16-16
namespace Compiler { class ErrorHandler; }  // lines 17-17
namespace Compiler { class Literals; }  // lines 29-29
namespace Compiler { class Locals; }  // lines 30-30
namespace Compiler { class Scanner; }  // lines 20-20
namespace Compiler { struct TokenLoc; }  // lines 21-21
---
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

libs/openengine/ogre/selectionbuffer.cpp should add these lines:

libs/openengine/ogre/selectionbuffer.cpp should remove these lines:
- #include <assert.h>  // lines 9-9
- #include <stdlib.h>  // lines 12-12
- #include <string>  // lines 15-15
- #include <typeinfo>  // lines 17-17
- #include <utility>  // lines 19-19
- #include "OgreAny.h"  // lines 22-22
- #include "OgreColourValue.h"  // lines 24-24
- #include "OgreCommon.h"  // lines 26-26
- #include "OgreMaterial.h"  // lines 28-28
- #include "OgreMaterialManager.h"  // lines 30-30
- #include "OgrePass.h"  // lines 32-32
- #include "OgrePixelFormat.h"  // lines 34-34
- #include "OgrePlatform.h"  // lines 36-36
- #include "OgreResourceGroupManager.h"  // lines 38-38
- #include "OgreTexture.h"  // lines 40-40
- #include "OgreUserObjectBindings.h"  // lines 42-42
- #include "OgreVector4.h"  // lines 44-44
- namespace Ogre { class Camera; }  // lines 51-51
- namespace Ogre { class Renderable; }  // lines 52-52

The full include-list for libs/openengine/ogre/selectionbuffer.cpp:
#include "selectionbuffer.hpp"
#include <OgreEntity.h>                 // for Entity
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreSubEntity.h>              // for SubEntity
#include <OgreTechnique.h>              // for Technique
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for NULL, rand, RAND_MAX
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <limits>                       // for numeric_limits
#include <string>                       // for operator==
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair
#include "OgreAny.h"                    // for any_cast
#include "OgreColourValue.h"            // for ColourValue, ARGB
#include "OgreCommon.h"
#include "OgreMaterial.h"               // for Material
#include "OgreMaterialManager.h"        // for MaterialManager
#include "OgrePass.h"                   // for Pass
#include "OgrePixelFormat.h"            // for PixelFormat::PF_R8G8B8
#include "OgrePlatform.h"               // for uint32
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreTexture.h"                // for Texture, etc
#include "OgreUserObjectBindings.h"     // for UserObjectBindings
#include "OgreVector4.h"                // for Vector4
namespace Ogre { class Camera; }  // lines 48-48
namespace Ogre { class Renderable; }  // lines 49-49
---
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/compiler/controlparser.cpp should add these lines:

components/compiler/controlparser.cpp should remove these lines:
- #include "components/compiler/exprparser.hpp"  // lines 7-7
- #include "components/compiler/lineparser.hpp"  // lines 9-9
- #include "components/compiler/parser.hpp"  // lines 11-11
- #include "components/interpreter/types.hpp"  // lines 13-13
- namespace Compiler { class Context; }  // lines 24-24
- namespace Compiler { struct TokenLoc; }  // lines 25-25

The full include-list for components/compiler/controlparser.cpp:
#include "controlparser.hpp"
#include <algorithm>                    // for copy
#include <iterator>                     // for back_insert_iterator, etc
#include <stdexcept>                    // for logic_error
#include "components/compiler/exprparser.hpp"  // for ExprParser
#include "components/compiler/lineparser.hpp"  // for LineParser
#include "components/compiler/parser.hpp"  // for Parser
#include "components/interpreter/types.hpp"  // for Type_Code
#include "errorhandler.hpp"             // for ErrorHandler
#include "generator.hpp"                // for jump, jumpOnZero
#include "scanner.hpp"                  // for Scanner, etc
#include "skipparser.hpp"               // for SkipParser
namespace Compiler { class Context; }  // lines 21-21
namespace Compiler { struct TokenLoc; }  // lines 22-22
---

apps/openmw/mwgui/sortfilteritemmodel.hpp should add these lines:

apps/openmw/mwgui/sortfilteritemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <utility>  // lines 7-7
- #include <vector>  // lines 9-9
- namespace MWWorld { class Ptr; }  // lines 16-16

The full include-list for apps/openmw/mwgui/sortfilteritemmodel.hpp:
#include <stddef.h>                     // for size_t
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "itemmodel.hpp"                // for ItemStack, etc
namespace MWWorld { class Ptr; }  // lines 14-14
---
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/sortfilteritemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwgui/sortfilteritemmodel.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <algorithm>  // lines 19-19
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 4-4
- #include <stdexcept>  // lines 21-21
- #include <string>  // lines 23-23
- #include <typeinfo>  // lines 25-25
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 36-36

The full include-list for apps/openmw/mwgui/sortfilteritemmodel.cpp:
#include "sortfilteritemmodel.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for find, sort
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadappa.hpp>  // for Apparatus
#include <components/esm/loadarmo.hpp>  // for Armor
#include <components/esm/loadbook.hpp>  // for Book, Book::BKDTstruct
#include <components/esm/loadclot.hpp>  // for Clothing
#include <components/esm/loadingr.hpp>  // for Ingredient
#include <components/esm/loadligh.hpp>  // for Light
#include <components/esm/loadlock.hpp>  // for Lockpick
#include <components/esm/loadmisc.hpp>  // for Miscellaneous
#include <components/esm/loadprob.hpp>  // for Probe
#include <components/esm/loadrepa.hpp>  // for Repair
#include <components/esm/loadweap.hpp>  // for Weapon
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator==, etc
#include <typeinfo>                     // for type_info
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/nullaction.hpp"    // for NullAction
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/livecellref.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
---
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from extern/shiny/Main/Platform.cpp:5:
In file included from extern/shiny/Main/Factory.hpp:11:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemwidget.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from extern/shiny/Main/Platform.cpp:5:
extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/draganddrop.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from extern/shiny/Main/Platform.cpp:5:
extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
extern/shiny/Main/Platform.cpp:70:25: error: out-of-line definition of 'setPropertyOverride' does not match any declaration in 'sh::TextureUnitState'
        bool TextureUnitState::setPropertyOverride (const std::string& name, PropertyValuePtr& value, PropertySetGet *context)
                               ^~~~~~~~~~~~~~~~~~~
./extern/shiny/Main/Platform.hpp:43:87: note: type of 3rd parameter of member declaration does not match definition ('PropertySetGet *' vs 'sh::PropertySetGet *')
                virtual bool setPropertyOverride (const std::string& name, PropertyValuePtr& value, PropertySetGet *context);
                                                                                                    ^
extern/shiny/Main/Platform.cpp:74:28: error: no matching function for call to 'retrieveValue'
                        std::string aliasName = retrieveValue<StringValue>(value, context).get();
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./extern/shiny/Main/PropertyBase.hpp:196:11: note: candidate function [with T = StringValue] not viable: cannot convert argument of incomplete type 'sh::PropertySetGet *' to 'PropertySetGet *'
        static T retrieveValue (boost::shared_ptr<PropertyValue>& value, PropertySetGet* context)
                 ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

(components/widgets/widgets.hpp has correct #includes/fwd-decls)

components/widgets/widgets.cpp should add these lines:

components/widgets/widgets.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include "MyGUI_RTTI.h"  // lines 3-3
- #include "MyGUI_RTTI.h"  // lines 4-4
- #include "box.hpp"  // lines 5-5
- #include "imagebutton.hpp"  // lines 6-6
- #include "list.hpp"  // lines 7-7
- #include "numericeditbox.hpp"  // lines 8-8
- #include "sharedstatebutton.hpp"  // lines 9-9
- #include "windowcaption.hpp"  // lines 11-11

The full include-list for components/widgets/widgets.cpp:
#include "widgets.hpp"
---
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/trainingwindow.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/openmw/mwgui/controllers.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate2

apps/openmw/mwgui/controllers.hpp should remove these lines:
- #include "MyGUI_RTTI.h"  // lines 10-10

The full include-list for apps/openmw/mwgui/controllers.hpp:
#include <MyGUI_ControllerItem.h>       // for ControllerItem
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate2
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
namespace MyGUI { class Widget; }  // lines 16-16
---

apps/openmw/mwgui/controllers.cpp should add these lines:

apps/openmw/mwgui/controllers.cpp should remove these lines:
- #include <MyGUI_InputManager.h>  // lines 3-3
- #include <MyGUI_Widget.h>  // lines 4-4

The full include-list for apps/openmw/mwgui/controllers.cpp:
#include "controllers.hpp"
---

apps/openmw/mwgui/birth.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/birth.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include <vector>  // lines 9-9
- namespace MyGUI { class ImageBox; }  // lines 20-20
- namespace MyGUI { class ListBox; }  // lines 21-21
- namespace MyGUI { class Widget; }  // lines 22-22

The full include-list for apps/openmw/mwgui/birth.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"
namespace MyGUI { class ImageBox; }  // lines 16-16
namespace MyGUI { class ListBox; }  // lines 17-17
namespace MyGUI { class Widget; }  // lines 18-18
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/birth.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/birth.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 5-5
- #include "../mwbase/windowmanager.hpp"  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 11-11
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_Button.h"  // lines 13-13
- #include "MyGUI_EventPair.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_StringUtility.h"  // lines 17-17
- #include "MyGUI_TextBox.h"  // lines 18-18
- #include "MyGUI_WidgetInput.h"  // lines 21-21
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23
- #include "components/esm/spelllist.hpp"  // lines 27-27

The full include-list for apps/openmw/mwgui/birth.cpp:
#include "birth.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ListBox.h>              // for ListBox
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SpellType, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "widgets.hpp"                  // for MWSpellPtr
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwrender/occlusionquery.cpp:45:1: error: use of undeclared identifier 'OcclusionQuery'; did you mean 'MWRender::OcclusionQuery'?
OcclusionQuery::OcclusionQuery(OEngine::Render::OgreRenderer* renderer, SceneNode* sunNode) :
^~~~~~~~~~~~~~
MWRender::OcclusionQuery
apps/openmw/mwrender/occlusionquery.hpp:48:11: note: 'MWRender::OcclusionQuery' declared here
    class OcclusionQuery : public Ogre::RenderObjectListener, public Ogre::RenderQueueListener
          ^
apps/openmw/mwrender/occlusionquery.cpp:45:17: error: cannot define or redeclare 'OcclusionQuery' here because namespace 'Ogre' does not enclose namespace 'OcclusionQuery'
OcclusionQuery::OcclusionQuery(OEngine::Render::OgreRenderer* renderer, SceneNode* sunNode) :
~~~~~~~~~~~~~~~~^
apps/openmw/mwrender/occlusionquery.cpp:47:52: error: use of undeclared identifier 'sunNode'
    mBBQueryVisible(0), mBBQueryTotal(0), mSunNode(sunNode), mBBNodeReal(0),
                                                   ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/occlusionquery.cpp:53:16: error: use of undeclared identifier 'renderer'
    mRendering(renderer)
               ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:9:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwrender/occlusionquery.cpp:58:9: error: use of undeclared identifier 'mSunTotalAreaQuery'
        mSunTotalAreaQuery = renderSystem->createHardwareOcclusionQuery();
        ^
In file included from apps/openmw/mwgui/draganddrop.cpp:22:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:9:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

(components/compiler/errorhandler.hpp has correct #includes/fwd-decls)
apps/openmw/mwrender/occlusionquery.cpp:59:9: error: use of undeclared identifier 'mSunVisibleAreaQuery'
        mSunVisibleAreaQuery = renderSystem->createHardwareOcclusionQuery();
        ^

(components/compiler/errorhandler.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/occlusionquery.cpp:61:9: error: use of undeclared identifier 'mSupported'
        mSupported = (mSunTotalAreaQuery != 0) && (mSunVisibleAreaQuery != 0);
        ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/debugging.cpp:40:
apps/openmw/mwrender/debugging.hpp:78:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridLines(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgreManualObject.h:106:20: note: 'ManualObject' declared here
        class _OgreExport ManualObject : public MovableObject
                          ^

extern/shiny/Main/Platform.hpp should add these lines:
#include <string>                       // for string

extern/shiny/Main/Platform.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6

The full include-list for extern/shiny/Main/Platform.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "Language.hpp"                 // for Language
#include "PropertyBase.hpp"             // for PropertySet, etc
namespace sh { class Factory; }  // lines 13-13
namespace sh { class MaterialInstance; }  // lines 14-14
---
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

extern/shiny/Main/Platform.cpp should add these lines:
namespace sh { class PropertySetGet; }

extern/shiny/Main/Platform.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 8-8

The full include-list for extern/shiny/Main/Platform.cpp:
#include "Platform.hpp"
#include <stddef.h>                     // for NULL
#include <stdexcept>                    // for runtime_error
#include "Factory.hpp"                  // for Factory
#include "extern/shiny/Main/PropertyBase.hpp"  // for PropertyValuePtr
namespace sh { class PropertySetGet; }
---

libs/openengine/bullet/BtOgre.cpp should add these lines:
namespace Ogre { class Entity; }

libs/openengine/bullet/BtOgre.cpp should remove these lines:
- #include <OgreSubEntity.h>  // lines 16-16
- #include <assert.h>  // lines 19-19
- #include <stddef.h>  // lines 21-21
- #include <string.h>  // lines 23-23
- #include <algorithm>  // lines 25-25
- #include <limits>  // lines 27-27
- #include <map>  // lines 29-29
- #include <string>  // lines 31-31
- #include <utility>  // lines 33-33
- #include <vector>  // lines 35-35
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 40-40
- #include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"  // lines 42-42
- #include "BulletCollision/CollisionShapes/btConvexHullShape.h"  // lines 44-44
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 46-46
- #include "BulletCollision/CollisionShapes/btSphereShape.h"  // lines 48-48
- #include "BulletCollision/CollisionShapes/btTriangleMesh.h"  // lines 50-50
- #include "LinearMath/btScalar.h"  // lines 52-52
- #include "LinearMath/btVector3.h"  // lines 54-54
- #include "OgreAxisAlignedBox.h"  // lines 56-56
- #include "OgreCamera.h"  // lines 58-58
- #include "OgreException.h"  // lines 60-60
- #include "OgreHardwareBuffer.h"  // lines 62-62
- #include "OgreHardwareBufferManager.h"  // lines 64-64
- #include "OgreHardwareIndexBuffer.h"  // lines 66-66
- #include "OgreHardwareVertexBuffer.h"  // lines 68-68
- #include "OgreLogManager.h"  // lines 70-70
- #include "OgreMath.h"  // lines 71-71
- #include "OgreMath.h"  // lines 72-72
- #include "OgreMatrix4.h"  // lines 74-74
- #include "OgreMesh.h"  // lines 76-76
- #include "OgrePrerequisites.h"  // lines 78-78
- #include "OgreQuaternion.h"  // lines 80-80
- #include "OgreRenderOperation.h"  // lines 82-82
- #include "OgreRenderable.h"  // lines 84-84
- #include "OgreSceneNode.h"  // lines 86-86
- #include "OgreSharedPtr.h"  // lines 88-88
- #include "OgreVector3.h"  // lines 90-90
- #include "OgreVertexIndexData.h"  // lines 92-92

The full include-list for libs/openengine/bullet/BtOgre.cpp:
#include <OgreSubMesh.h>                // for SubMesh
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <string.h>                     // for memcpy
#include <algorithm>                    // for max, min
#include <limits>                       // for numeric_limits
#include <map>                          // for _Rb_tree_iterator, etc
#include <string>                       // for operator+, basic_string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "BtOgreExtras.h"               // for DynamicLines, etc
#include "BtOgreGP.h"                   // for VertexIndexToShape, etc
#include "BulletCollision/CollisionShapes/btBoxShape.h"  // for btBoxShape
#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"
#include "BulletCollision/CollisionShapes/btConvexHullShape.h"
#include "BulletCollision/CollisionShapes/btCylinderShape.h"
#include "BulletCollision/CollisionShapes/btSphereShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "LinearMath/btScalar.h"        // for btScalar, etc
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreCamera.h"                 // for Camera
#include "OgreException.h"              // for OgreAssert
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreHardwareBufferManager.h"  // for HardwareBufferManager
#include "OgreHardwareIndexBuffer.h"    // for HardwareIndexBuffer, etc
#include "OgreHardwareVertexBuffer.h"   // for HardwareVertexBuffer, etc
#include "OgreLogManager.h"             // for LogManager
#include "OgreMatrix4.h"                // for Matrix4
#include "OgreMesh.h"                   // for Mesh, Mesh::IndexMap
#include "OgrePrerequisites.h"          // for Real, MeshPtr, String
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreRenderOperation.h"        // for RenderOperation, etc
#include "OgreRenderable.h"             // for Renderable
#include "OgreSceneNode.h"              // for SceneNode
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3, operator*, etc
#include "OgreVertexIndexData.h"        // for VertexData, IndexData
namespace Ogre { class Entity; }
---
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/debugging.cpp:40:
apps/openmw/mwrender/debugging.hpp:79:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridPoints(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgreManualObject.h:106:20: note: 'ManualObject' declared here
        class _OgreExport ManualObject : public MovableObject
                          ^
apps/openmw/mwrender/occlusionquery.cpp:61:23: error: use of undeclared identifier 'mSunTotalAreaQuery'
        mSupported = (mSunTotalAreaQuery != 0) && (mSunVisibleAreaQuery != 0);
                      ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:18:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/occlusionquery.cpp:61:52: error: use of undeclared identifier 'mSunVisibleAreaQuery'
        mSupported = (mSunTotalAreaQuery != 0) && (mSunVisibleAreaQuery != 0);
                                                   ^
In file included from apps/openmw/mwgui/journalviewmodel.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/debugging.cpp:41:
apps/openmw/mwrender/renderconst.hpp:13:22: error: no member named 'RENDER_QUEUE_SKIES_EARLY' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'RENDER_QUEUE_SKIES_EARLY'?
    RQG_SkiesEarly = Ogre::RENDER_QUEUE_SKIES_EARLY,
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     RENDER_QUEUE_SKIES_EARLY
/usr/include/OGRE/OgreRenderQueue.h:58:9: note: 'RENDER_QUEUE_SKIES_EARLY' declared here
        RENDER_QUEUE_SKIES_EARLY = 5,
        ^
apps/openmw/mwrender/occlusionquery.cpp:63:12: error: no type named 'Exception' in namespace 'Ogre::Ogre'; did you mean simply 'Exception'?
    catch (Ogre::Exception&)
           ^~~~~~~~~~~~~~~
           Exception
/usr/include/OGRE/OgreException.h:84:20: note: 'Exception' declared here
        class _OgreExport Exception : public std::exception
                          ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/occlusionquery.cpp:65:9: error: use of undeclared identifier 'mSupported'
        mSupported = false;
        ^
apps/openmw/mwrender/ripplesimulation.cpp:122:72: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
    sh::Factory::getInstance().setSharedParameter("rippleTextureSize", sh::makeProperty<sh::Vector4>(
                                                                       ^~~~~~~~~~~~~~~~
                                                                       makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/ripplesimulation.cpp:122:93: error: no member named 'Vector4' in namespace 'sh'
    sh::Factory::getInstance().setSharedParameter("rippleTextureSize", sh::makeProperty<sh::Vector4>(
                                                                                        ~~~~^
apps/openmw/mwrender/occlusionquery.cpp:68:10: error: use of undeclared identifier 'mSupported'
    if (!mSupported)
         ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/occlusionquery.cpp:74:5: error: use of undeclared identifier 'mBBNodeReal'
    mBBNodeReal = mRendering->getScene()->getRootSceneNode()->createChildSceneNode();
    ^
apps/openmw/mwrender/ripplesimulation.cpp:124:67: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
    sh::Factory::getInstance().setSharedParameter("rippleCenter", sh::makeProperty<sh::Vector3>(
                                                                  ^~~~~~~~~~~~~~~~
                                                                  makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwrender/occlusionquery.cpp:74:19: error: use of undeclared identifier 'mRendering'
    mBBNodeReal = mRendering->getScene()->getRootSceneNode()->createChildSceneNode();
                  ^
apps/openmw/mwrender/ripplesimulation.cpp:124:88: error: no member named 'Vector3' in namespace 'sh'
    sh::Factory::getInstance().setSharedParameter("rippleCenter", sh::makeProperty<sh::Vector3>(
                                                                                   ~~~~^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwrender/occlusionquery.cpp:76:12: error: no type named 'Mesh' in namespace 'Ogre::Ogre'; did you mean simply 'Mesh'?
    static Ogre::Mesh* plane = MeshManager::getSingleton().createPlane("occlusionbillboard",
           ^~~~~~~~~~
           Mesh
/usr/include/OGRE/OgreMesh.h:93:23: note: 'Mesh' declared here
    class _OgreExport Mesh: public Resource, public AnimationContainer
                      ^
apps/openmw/mwrender/occlusionquery.cpp:76:32: error: incomplete type 'Ogre::MeshManager' named in nested name specifier
    static Ogre::Mesh* plane = MeshManager::getSingleton().createPlane("occlusionbillboard",
                               ^~~~~~~~~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:195:11: note: forward declaration of 'Ogre::MeshManager'
    class MeshManager;
          ^
apps/openmw/mwrender/ripplesimulation.cpp:126:71: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
    sh::Factory::getInstance().setSharedParameter("rippleAreaLength", sh::makeProperty<sh::FloatValue>(
                                                                      ^~~~~~~~~~~~~~~~
                                                                      makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/itemwidget.hpp should add these lines:

apps/openmw/mwgui/itemwidget.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 9-9
- #include "MyGUI_Types.h"  // lines 12-12
- namespace MyGUI { class ImageBox; }  // lines 18-18
- namespace MyGUI { class TextBox; }  // lines 19-19

The full include-list for apps/openmw/mwgui/itemwidget.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord
namespace MWWorld { class Ptr; }  // lines 24-24
namespace MyGUI { class ImageBox; }  // lines 15-15
namespace MyGUI { class TextBox; }  // lines 16-16
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/itemwidget.cpp should add these lines:

apps/openmw/mwgui/itemwidget.cpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include "MyGUI_StringUtility.h"  // lines 10-10
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 12-12

The full include-list for apps/openmw/mwgui/itemwidget.cpp:
#include "itemwidget.hpp"
#include <MyGUI_FactoryManager.h>       // for FactoryManager
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_TextBox.h>              // for TextBox
#include <stddef.h>                     // for NULL
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_StringUtility.h"        // for toString
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
---
apps/openmw/mwrender/ripplesimulation.cpp:126:92: error: no member named 'FloatValue' in namespace 'sh'
    sh::Factory::getInstance().setSharedParameter("rippleAreaLength", sh::makeProperty<sh::FloatValue>(
                                                                                       ~~~~^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwrender/occlusionquery.cpp:78:23: error: no member named 'AxisAlignedBox' in namespace 'Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    plane->_setBounds(Ogre::AxisAlignedBox::BOX_INFINITE);
                      ^~~~~~~~~~~~~~~~~~~~
                      AxisAlignedBox
/usr/include/OGRE/OgreAxisAlignedBox.h:54:20: note: 'AxisAlignedBox' declared here
        class _OgreExport AxisAlignedBox
                          ^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
apps/openmw/mwrender/ripplesimulation.cpp:174:67: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
    sh::Factory::getInstance().setSharedParameter("rippleCenter", sh::makeProperty<sh::Vector3>(
                                                                  ^~~~~~~~~~~~~~~~
                                                                  makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from extern/shiny/Platforms/Ogre/OgrePass.cpp:14:
In file included from extern/shiny/Platforms/Ogre/OgrePass.hpp:9:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:9:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwgui/spellwindow.cpp:15:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwgui/merchantrepair.cpp:21:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwrender/occlusionquery.cpp:80:5: error: use of undeclared identifier 'mBBQueryTotal'
    mBBQueryTotal = mRendering->getScene()->createEntity("occlusionbillboard");
    ^
apps/openmw/mwrender/occlusionquery.cpp:80:21: error: use of undeclared identifier 'mRendering'
    mBBQueryTotal = mRendering->getScene()->createEntity("occlusionbillboard");
                    ^

components/widgets/imagebutton.hpp should add these lines:

components/widgets/imagebutton.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "MyGUI_MouseButton.h"  // lines 9-9
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_Types.h"  // lines 13-13
- namespace MyGUI { class Widget; }  // lines 18-18

The full include-list for components/widgets/imagebutton.hpp:
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <string>                       // for string
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntSize
namespace MyGUI { class Widget; }  // lines 16-16
---

components/widgets/imagebutton.cpp should add these lines:

components/widgets/imagebutton.cpp should remove these lines:
- #include <iostream>  // lines 3-3
- #include "MyGUI_ITexture.h"  // lines 6-6
- #include "MyGUI_ImageBox.h"  // lines 8-8
- namespace MyGUI { class Widget; }  // lines 14-14

The full include-list for components/widgets/imagebutton.cpp:
#include "imagebutton.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <iostream>                     // for basic_ostream, operator<<, etc
#include "MyGUI_ITexture.h"             // for ITexture
#include "MyGUI_ImageBox.h"             // for ImageBox
namespace MyGUI { class Widget; }  // lines 12-12
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/formatting.cpp:29:
In file included from ./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:13:
./apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/formatting.cpp:29:
In file included from ./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:12:
./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/formatting.cpp:29:
In file included from ./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:12:
./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
extern/shiny/Platforms/Ogre/OgrePass.cpp:29:30: error: member access into incomplete type 'sh::OgreMaterial'
                Ogre::Technique* t = parent->getOgreTechniqueForConfiguration(configuration, lodIndex);
                                           ^
extern/shiny/Platforms/Ogre/OgrePass.hpp:23:8: note: forward declaration of 'sh::OgreMaterial'
        class OgreMaterial;
              ^
In file included from apps/openmw/mwgui/formatting.cpp:29:
./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/formatting.cpp:29:
./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
extern/shiny/Platforms/Ogre/OgrePass.cpp:55:16: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (((typeid(*value) == typeid(StringValue)) || typeid(*value) == typeid(LinkedValue))
                             ^
extern/shiny/Platforms/Ogre/OgrePass.cpp:55:58: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (((typeid(*value) == typeid(StringValue)) || typeid(*value) == typeid(LinkedValue))
                                                                       ^
./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/formatting.cpp:29:
./apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwgui/../mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/formatting.cpp:41:41: error: expected ';' after expression
            MWScript::InterpreterContext interpreterContext(NULL, MWWorld::Ptr()); // empty arguments, because there is no locals or actor
                                        ^
                                        ;
apps/openmw/mwgui/formatting.cpp:41:23: error: no member named 'InterpreterContext' in namespace 'MWScript'
            MWScript::InterpreterContext interpreterContext(NULL, MWWorld::Ptr()); // empty arguments, because there is no locals or actor
            ~~~~~~~~~~^
apps/openmw/mwgui/formatting.cpp:41:42: error: use of undeclared identifier 'interpreterContext'
            MWScript::InterpreterContext interpreterContext(NULL, MWWorld::Ptr()); // empty arguments, because there is no locals or actor
                                         ^
apps/openmw/mwgui/formatting.cpp:42:56: error: use of undeclared identifier 'interpreterContext'
            mText = Interpreter::fixDefinesBook(mText, interpreterContext);
                                                       ^
apps/openmw/mwgui/formatting.cpp:208:24: error: incomplete type 'MyGUI::Gui' named in nested name specifier
                MyGUI::Gui::getInstance().destroyWidget(parent->getChildAt(0));
                ~~~~~~~^~~~~
/usr/include/MYGUI/MyGUI_Prerequest.h:35:8: note: forward declaration of 'MyGUI::Gui'
        class Gui;
              ^
apps/openmw/mwgui/formatting.cpp:482:22: error: member access into incomplete type 'MyGUI::ImageBox'
            mImageBox->setImageTexture(image);
                     ^
/usr/include/MYGUI/MyGUI_Prerequest.h:69:8: note: forward declaration of 'MyGUI::ImageBox'
        class ImageBox;
              ^
apps/openmw/mwgui/formatting.cpp:483:22: error: member access into incomplete type 'MyGUI::ImageBox'
            mImageBox->setProperty("NeedMouse", "false");
                     ^
/usr/include/MYGUI/MyGUI_Prerequest.h:69:8: note: forward declaration of 'MyGUI::ImageBox'
        class ImageBox;
              ^
In file included from apps/openmw/mwscript/cellextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^

apps/openmw/mwrender/creatureanimation.hpp should add these lines:

apps/openmw/mwrender/creatureanimation.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "OgreSharedPtr.h"  // lines 9-9
- #include "OgreVector3.h"  // lines 11-11
- #include "components/nifogre/ogrenifloader.hpp"  // lines 16-16

The full include-list for apps/openmw/mwrender/creatureanimation.hpp:
#include <string>                       // for string
#include "../mwworld/inventorystore.hpp"  // for InventoryStoreListener
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3
#include "animation.hpp"                // for Animation
#include "components/nifogre/ogrenifloader.hpp"  // for ObjectScenePtr
#include "weaponanimation.hpp"          // for WeaponAnimation, etc
namespace MWWorld { class Ptr; }  // lines 20-20
---

apps/openmw/mwrender/creatureanimation.cpp should add these lines:
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "apps/openmw/mwrender/../mwbase/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Creature; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwrender/creatureanimation.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <components/esm/loadcrea.hpp>  // lines 4-4
- #include <typeinfo>  // lines 8-8
- #include <vector>  // lines 10-10
- #include "OgreController.h"  // lines 13-13
- #include "OgreMath.h"  // lines 15-15
- #include "OgreNode.h"  // lines 17-17
- #include "OgrePrerequisites.h"  // lines 18-18
- #include "OgrePrerequisites.h"  // lines 19-19
- #include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // lines 20-20
- #include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // lines 21-21
- #include "apps/openmw/mwrender/../mwworld/containerstore.hpp"  // lines 22-22
- #include "apps/openmw/mwrender/../mwworld/containerstore.hpp"  // lines 23-23
- #include "apps/openmw/mwrender/../mwworld/inventorystore.hpp"  // lines 25-25
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 27-27
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwrender/animation.hpp"  // lines 31-31
- #include "apps/openmw/mwrender/weaponanimation.hpp"  // lines 33-33
- #include "components/esm/defs.hpp"  // lines 35-35
- #include "components/esm/loadweap.hpp"  // lines 37-37

The full include-list for apps/openmw/mwrender/creatureanimation.cpp:
#include "creatureanimation.hpp"
#include <OgreBone.h>                   // for Bone
#include <OgreEntity.h>                 // for Entity
#include <OgreSkeletonInstance.h>       // for SkeletonInstance
#include <typeinfo>                     // for type_info
#include <vector>                       // for vector, vector<>::iterator
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreController.h"             // for Controller
#include "OgreMath.h"                   // for Degree
#include "OgreNode.h"                   // for Node
#include "apps/openmw/mwrender/../mwbase/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/inventorystore.hpp"
#include "apps/openmw/mwrender/../mwworld/livecellref.hpp"
#include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwrender/animation.hpp"  // for Animation, etc
#include "apps/openmw/mwrender/weaponanimation.hpp"
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadweap.hpp"  // for Weapon, etc
#include "renderconst.hpp"
namespace ESM { struct Creature; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwgui/trainingwindow.hpp should add these lines:

apps/openmw/mwgui/trainingwindow.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 16-16
- namespace MyGUI { class Button; }  // lines 19-19
- namespace MyGUI { class TextBox; }  // lines 20-20
- namespace MyGUI { class Widget; }  // lines 21-21

The full include-list for apps/openmw/mwgui/trainingwindow.hpp:
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace MWWorld { class Ptr; }  // lines 14-14
namespace MyGUI { class Button; }  // lines 8-8
namespace MyGUI { class TextBox; }  // lines 9-9
namespace MyGUI { class Widget; }  // lines 10-10
---

plugins/mygui_resource_plugin/plugin.hpp should add these lines:

plugins/mygui_resource_plugin/plugin.hpp should remove these lines:
- #include <map>  // lines 6-6
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9

The full include-list for plugins/mygui_resource_plugin/plugin.hpp:
#include <MyGUI_Plugin.h>               // for IPlugin
#include <MyGUI_UString.h>              // for UString
#include <string>                       // for string
---

plugins/mygui_resource_plugin/plugin.cpp should add these lines:

plugins/mygui_resource_plugin/plugin.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <MyGUI_LanguageManager.h>  // lines 2-2
- #include <OgreHardwarePixelBuffer.h>  // lines 5-5
- #include <string.h>  // lines 26-26
- #include <string.h>  // lines 27-27
- #include <boost/filesystem/path.hpp>  // lines 7-7
- #include <boost/filesystem/path.hpp>  // lines 8-8
- #include <boost/lexical_cast.hpp>  // lines 9-9
- #include <boost/lexical_cast.hpp>  // lines 10-10
- #include <boost/program_options/errors.hpp>  // lines 11-11
- #include <boost/program_options/errors.hpp>  // lines 12-12
- #include <boost/program_options/options_description.hpp>  // lines 14-14
- #include <boost/program_options/value_semantic.hpp>  // lines 15-15
- #include <boost/program_options/value_semantic.hpp>  // lines 16-16
- #include <boost/program_options/variables_map.hpp>  // lines 18-18
- #include <boost/version.hpp>  // lines 20-20
- #include <components/bsa/resources.hpp>  // lines 21-21
- #include <components/widgets/tags.hpp>  // lines 24-24
- #include <iostream>  // lines 28-28
- #include <iostream>  // lines 29-29
- #include <sstream>  // lines 30-30
- #include <sstream>  // lines 31-31
- #include <utility>  // lines 32-32
- #include <utility>  // lines 33-33
- #include <vector>  // lines 34-34
- #include <vector>  // lines 35-35
- #include "MyGUI_RTTI.h"  // lines 40-40
- #include "MyGUI_UString.h"  // lines 42-42
- #include "OgreHardwareBuffer.h"  // lines 43-43
- #include "OgreHardwareBuffer.h"  // lines 44-44
- #include "OgrePixelFormat.h"  // lines 45-45
- #include "OgrePixelFormat.h"  // lines 46-46
- #include "OgrePlatform.h"  // lines 47-47
- #include "OgrePlatform.h"  // lines 48-48
- #include "OgrePrerequisites.h"  // lines 50-50
- #include "OgreResourceGroupManager.h"  // lines 51-51
- #include "OgreResourceGroupManager.h"  // lines 52-52
- #include "OgreSharedPtr.h"  // lines 54-54
- #include "OgreTexture.h"  // lines 55-55
- #include "OgreTexture.h"  // lines 56-56
- #include "components/bsa/../files/multidircollection.hpp"  // lines 58-58
- #include "components/files/collections.hpp"  // lines 60-60
- #include "components/to_utf8/to_utf8.hpp"  // lines 62-62

The full include-list for plugins/mygui_resource_plugin/plugin.cpp:
#include "plugin.hpp"
#include <MyGUI_LogManager.h>           // for MYGUI_LOGGING
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <boost/any.hpp>                // for any
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/variables_map.hpp>  // for notify, etc
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <components/fontloader/fontloader.hpp>  // for FontLoader
#include <components/widgets/widgets.hpp>  // for registerAllWidgets
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_UString.h"              // for UString
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "components/bsa/../files/multidircollection.hpp"
#include "components/files/collections.hpp"  // for Collections
#include "components/to_utf8/to_utf8.hpp"  // for calculateEncoding
---

apps/openmw/mwgui/trainingwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Class; }
namespace ESM { struct GameSetting; }
namespace ESM { struct NPC; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/trainingwindow.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 2-2
- #include <algorithm>  // lines 3-3
- #include <string>  // lines 4-4
- #include <string>  // lines 5-5
- #include <utility>  // lines 7-7
- #include <vector>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_Align.h"  // lines 20-20
- #include "MyGUI_Align.h"  // lines 21-21
- #include "MyGUI_Button.h"  // lines 23-23
- #include "MyGUI_RTTI.h"  // lines 26-26
- #include "MyGUI_RTTI.h"  // lines 27-27
- #include "MyGUI_StringUtility.h"  // lines 28-28
- #include "MyGUI_StringUtility.h"  // lines 29-29
- #include "MyGUI_TextBox.h"  // lines 30-30
- #include "MyGUI_TextBox.h"  // lines 31-31
- #include "MyGUI_Types.h"  // lines 33-33
- #include "MyGUI_Widget.h"  // lines 34-34
- #include "MyGUI_Widget.h"  // lines 35-35
- #include "MyGUI_WidgetDefines.h"  // lines 37-37
- #include "MyGUI_WidgetInput.h"  // lines 38-38
- #include "MyGUI_WidgetInput.h"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 51-51
- #include "components/esm/loadclas.hpp"  // lines 52-52
- #include "components/esm/loadclas.hpp"  // lines 53-53
- #include "components/esm/loadgmst.hpp"  // lines 54-54
- #include "components/esm/loadgmst.hpp"  // lines 55-55
- #include "components/esm/loadnpc.hpp"  // lines 56-56
- #include "components/esm/loadnpc.hpp"  // lines 57-57
- #include "components/esm/loadskil.hpp"  // lines 59-59
- #include "tooltips.hpp"  // lines 60-60

The full include-list for apps/openmw/mwgui/trainingwindow.cpp:
#include "trainingwindow.hpp"
#include <utility>                      // for pair
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace ESM { struct Class; }
namespace ESM { struct GameSetting; }
namespace ESM { struct NPC; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwgui/formatting.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_EditBox.h:11:
In file included from /usr/include/MYGUI/MyGUI_TextBox.h:11:
/usr/include/MYGUI/MyGUI_Widget.h:69:41: error: incomplete type 'MyGUI::ImageBox' named in nested name specifier
                        return static_cast<T*>(createWidgetT(T::getClassTypeName(), _skin, _coord, _align, _name));
                                                             ^~~
apps/openmw/mwgui/formatting.cpp:477:33: note: in instantiation of function template specialization 'MyGUI::Widget::createWidget<MyGUI::ImageBox>' requested here
            mImageBox = parent->createWidget<MyGUI::ImageBox> ("ImageBox",
                                ^
/usr/include/MYGUI/MyGUI_Prerequest.h:69:8: note: forward declaration of 'MyGUI::ImageBox'
        class ImageBox;
              ^
In file included from apps/openmw/mwgui/formatting.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_EditBox.h:11:
In file included from /usr/include/MYGUI/MyGUI_TextBox.h:11:
/usr/include/MYGUI/MyGUI_Widget.h:69:42: error: incomplete definition of type 'MyGUI::ImageBox'
                        return static_cast<T*>(createWidgetT(T::getClassTypeName(), _skin, _coord, _align, _name));
                                                             ~^~
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:17:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/statswindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from components/terrain/material.cpp:32:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/itemview.cpp:16:
In file included from apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemview.cpp:17:
apps/openmw/mwgui/itemview.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from components/terrain/material.cpp:43:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^

apps/openmw/mwgui/merchantrepair.hpp should add these lines:

apps/openmw/mwgui/merchantrepair.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 4-4
- namespace MyGUI { class Button; }  // lines 14-14
- namespace MyGUI { class ScrollView; }  // lines 15-15
- namespace MyGUI { class TextBox; }  // lines 16-16
- namespace MyGUI { class Widget; }  // lines 17-17

The full include-list for apps/openmw/mwgui/merchantrepair.hpp:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class Button; }  // lines 9-9
namespace MyGUI { class ScrollView; }  // lines 10-10
namespace MyGUI { class TextBox; }  // lines 11-11
namespace MyGUI { class Widget; }  // lines 12-12
---
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/openmw/mwgui/merchantrepair.cpp should add these lines:

apps/openmw/mwgui/merchantrepair.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <components/esm/loadgmst.hpp>  // lines 4-4
- #include <string>  // lines 8-8
- #include "../mwbase/soundmanager.hpp"  // lines 12-12
- #include "../mwworld/esmstore.hpp"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_Align.h"  // lines 20-20
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_StringUtility.h"  // lines 26-26
- #include "MyGUI_TextBox.h"  // lines 27-27
- #include "MyGUI_TextBox.h"  // lines 28-28
- #include "MyGUI_Types.h"  // lines 30-30
- #include "MyGUI_Widget.h"  // lines 31-31
- #include "MyGUI_Widget.h"  // lines 32-32
- #include "MyGUI_WidgetInput.h"  // lines 33-33
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 42-42

The full include-list for apps/openmw/mwgui/merchantrepair.cpp:
#include "merchantrepair.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
---
In file included from apps/openmw/mwgui/statswindow.cpp:24:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from components/terrain/material.cpp:43:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
components/terrain/material.cpp:185:60: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
            material->setProperty ("allow_fixed_function", sh::makeProperty<sh::BooleanValue>(new sh::BooleanValue(false)));
                                                           ^~~~~~~~~~~~~~~~
                                                           makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^

(components/esm/loadrace.hpp has correct #includes/fwd-decls)

components/esm/loadrace.cpp should add these lines:

components/esm/loadrace.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include "components/esm/spelllist.hpp"  // lines 5-5

The full include-list for components/esm/loadrace.cpp:
#include "loadrace.hpp"
#include <vector>                       // for vector
#include "components/esm/spelllist.hpp"  // for SpellList
#include "defs.hpp"                     // for RecNameInts::REC_RACE
#include "esmreader.hpp"                // for ESMReader
#include "esmwriter.hpp"                // for ESMWriter
---
components/terrain/material.cpp:185:81: error: no member named 'BooleanValue' in namespace 'sh'
            material->setProperty ("allow_fixed_function", sh::makeProperty<sh::BooleanValue>(new sh::BooleanValue(false)));
                                                                            ~~~~^
components/terrain/material.cpp:191:51: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->setProperty ("vertex_program", sh::makeProperty<sh::StringValue>(new sh::StringValue("terrain_vertex")));
                                                  ^~~~~~~~~~~~~~~~
                                                  makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/terrain/material.cpp:191:72: error: no member named 'StringValue' in namespace 'sh'
                p->setProperty ("vertex_program", sh::makeProperty<sh::StringValue>(new sh::StringValue("terrain_vertex")));
                                                                   ~~~~^
components/terrain/material.cpp:192:53: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->setProperty ("fragment_program", sh::makeProperty<sh::StringValue>(new sh::StringValue("terrain_fragment")));
                                                    ^~~~~~~~~~~~~~~~
                                                    makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^

components/contentselector/model/contentmodel.hpp should add these lines:

components/contentselector/model/contentmodel.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4
- #include <QSet>  // lines 6-6
- #include <QStringList>  // lines 7-7
- #include "loadordererror.hpp"  // lines 10-10
- namespace ContentSelectorModel { namespace ContentSelectorModel { class LoadOrderError; } }  // lines 14-14

The full include-list for components/contentselector/model/contentmodel.hpp:
#include <QIcon>                        // for QIcon
#include <QtCore>                       // for QString, QModelIndex, etc
namespace ContentSelectorModel { class EsmFile; }  // lines 22-22
namespace ContentSelectorModel { class LoadOrderError; }  // lines 17-17
---
components/terrain/material.cpp:192:74: error: no member named 'StringValue' in namespace 'sh'
                p->setProperty ("fragment_program", sh::makeProperty<sh::StringValue>(new sh::StringValue("terrain_fragment")));
                                                                     ~~~~^
In file included from apps/openmw/mwscript/cellextensions.cpp:14:
apps/openmw/mwscript/../mwworld/player.hpp:47:23: error: field has incomplete type 'Ogre::Vector3'
        Ogre::Vector3 mLastKnownExteriorPosition;
                      ^
apps/openmw/mwscript/../mwbase/world.hpp:15:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwscript/cellextensions.cpp:14:
apps/openmw/mwscript/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwscript/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwscript/../mwworld/player.hpp:73:23: error: incomplete result type 'Ogre::Vector3' in function definition
        Ogre::Vector3 getLastKnownExteriorPosition() const { return mLastKnownExteriorPosition; }
                      ^
apps/openmw/mwscript/../mwbase/world.hpp:15:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwscript/cellextensions.cpp:23:
In file included from ./components/misc/stringops.hpp:7:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/locale:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_facets_nonio.h:59:39: error: use of undeclared identifier 'locale'; did you mean '::std::locale'?
    struct __timepunct_cache : public locale::facet
                                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h:62:9: note: '::std::locale' declared here
  class locale
        ^
In file included from apps/openmw/mwscript/cellextensions.cpp:23:
In file included from ./components/misc/stringops.hpp:7:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/locale:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_facets_nonio.h:142:22: error: unknown type name 'locale'; did you mean '::std::locale'?
      _M_cache(const locale& __loc);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h:62:9: note: '::std::locale' declared here
  class locale
        ^
In file included from apps/openmw/mwscript/cellextensions.cpp:23:
In file included from ./components/misc/stringops.hpp:7:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/locale:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_facets_nonio.h:177:32: error: use of undeclared identifier 'locale'; did you mean '::std::locale'?
    class __timepunct : public locale::facet
                               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_classes.h:62:9: note: '::std::locale' declared here
  class locale
        ^
In file included from apps/openmw/mwscript/cellextensions.cpp:23:
In file included from ./components/misc/stringops.hpp:7:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/locale:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/locale_facets_nonio.h:182:15: error: no template named 'basic_string'; did you mean '::std::basic_string'?
      typedef basic_string<_CharT>      __string_type;
              ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:112:11: note: '::std::basic_string' declared here
    class basic_string
          ^
components/terrain/material.cpp:193:89: error: no type named 'BooleanValue' in namespace 'sh'; did you mean simply 'BooleanValue'?
                p->mShaderProperties.setProperty ("is_first_pass", sh::makeProperty(new sh::BooleanValue(true)));
                                                                                        ^~~~~~~~~~~~~~~~
                                                                                        BooleanValue
./extern/shiny/Main/PropertyBase.hpp:93:8: note: 'BooleanValue' declared here
        class BooleanValue : public PropertyValue
              ^
components/terrain/material.cpp:193:68: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->mShaderProperties.setProperty ("is_first_pass", sh::makeProperty(new sh::BooleanValue(true)));
                                                                   ^~~~~~~~~~~~~~~~
                                                                   makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/contentselector/model/contentmodel.cpp should add these lines:
#include <QAbstractTableModel>          // for QModelIndex, etc
#include <QSet>                         // for QSet
#include <QStringList>                  // for QStringList, operator>>

components/contentselector/model/contentmodel.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 1-1
- #include <qatomic_i386.h>  // lines 2-2
- #include <QDebug>  // lines 3-3
- #include <QDir>  // lines 4-4
- #include <QTextCodec>  // lines 5-5
- #include <string>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "components/contentselector/model/loadordererror.hpp"  // lines 13-13
- #include "components/esm/loadtes3.hpp"  // lines 16-16
- #include "components/to_utf8/to_utf8.hpp"  // lines 18-18

The full include-list for components/contentselector/model/contentmodel.cpp:
#include "contentmodel.hpp"
#include <QAbstractTableModel>          // for QModelIndex, etc
#include <QSet>                         // for QSet
#include <QStringList>                  // for QStringList, operator>>
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "components/contentselector/model/loadordererror.hpp"
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/loadtes3.hpp"  // for Header, Header::MasterData
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder, etc
#include "esmfile.hpp"                  // for EsmFile, etc
---
components/terrain/material.cpp:194:96: error: no type named 'BooleanValue' in namespace 'sh'; did you mean simply 'BooleanValue'?
                p->mShaderProperties.setProperty ("render_composite_map", sh::makeProperty(new sh::BooleanValue(false)));
                                                                                               ^~~~~~~~~~~~~~~~
                                                                                               BooleanValue
./extern/shiny/Main/PropertyBase.hpp:93:8: note: 'BooleanValue' declared here
        class BooleanValue : public PropertyValue
              ^
components/terrain/material.cpp:194:75: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->mShaderProperties.setProperty ("render_composite_map", sh::makeProperty(new sh::BooleanValue(false)));
                                                                          ^~~~~~~~~~~~~~~~
                                                                          makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/terrain/material.cpp:195:97: error: no type named 'BooleanValue' in namespace 'sh'; did you mean simply 'BooleanValue'?
                p->mShaderProperties.setProperty ("display_composite_map", sh::makeProperty(new sh::BooleanValue(true)));
                                                                                                ^~~~~~~~~~~~~~~~
                                                                                                BooleanValue
./extern/shiny/Main/PropertyBase.hpp:93:8: note: 'BooleanValue' declared here
        class BooleanValue : public PropertyValue
              ^
components/terrain/material.cpp:195:76: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->mShaderProperties.setProperty ("display_composite_map", sh::makeProperty(new sh::BooleanValue(true)));
                                                                           ^~~~~~~~~~~~~~~~
                                                                           makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/terrain/material.cpp:196:87: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
                p->mShaderProperties.setProperty ("num_layers", sh::makeProperty (new sh::StringValue("0")));
                                                                                      ^~~~~~~~~~~~~~~
                                                                                      StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
components/terrain/material.cpp:196:65: error: no member named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
                p->mShaderProperties.setProperty ("num_layers", sh::makeProperty (new sh::StringValue("0")));
                                                                ^~~~~~~~~~~~~~~~
                                                                makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
components/terrain/material.cpp:197:90: error: no type named 'StringValue' in namespace 'sh'; did you mean simply 'StringValue'?
                p->mShaderProperties.setProperty ("num_blendmaps", sh::makeProperty (new sh::StringValue("0")));
                                                                                         ^~~~~~~~~~~~~~~
                                                                                         StringValue
./extern/shiny/Main/PropertyBase.hpp:47:8: note: 'StringValue' declared here
        class StringValue : public PropertyValue
              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(extern/ogre-ffmpeg-videoplayer/videoplayer.hpp has correct #includes/fwd-decls)

extern/ogre-ffmpeg-videoplayer/videoplayer.cpp should add these lines:

extern/ogre-ffmpeg-videoplayer/videoplayer.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include <exception>  // lines 4-4
- #include <iostream>  // lines 6-6
- #include "OgrePrerequisites.h"  // lines 9-9
- #include "OgreSharedPtr.h"  // lines 11-11
- #include "OgreTexture.h"  // lines 13-13

The full include-list for extern/ogre-ffmpeg-videoplayer/videoplayer.cpp:
#include "videoplayer.hpp"
#include <stddef.h>                     // for NULL
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "audiofactory.hpp"             // for MovieAudioFactory
#include "videostate.hpp"               // for VideoState
---
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwdialogue/scripttest.cpp:132:31: error: expected ';' after expression
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
                              ^
                              ;
apps/openmw/mwdialogue/scripttest.cpp:132:22: error: no member named 'ManualRef' in namespace 'MWWorld'
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
            ~~~~~~~~~^
apps/openmw/mwdialogue/scripttest.cpp:132:32: error: use of undeclared identifier 'ref'
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
                               ^
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/itemview.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc

apps/openmw/mwgui/itemview.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include <string>  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_Types.h"  // lines 13-13
- namespace MyGUI { class ScrollView; }  // lines 19-19

The full include-list for apps/openmw/mwgui/itemview.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "itemmodel.hpp"                // for ItemModel, etc
namespace MyGUI { class ScrollView; }  // lines 17-17
---
apps/openmw/mwdialogue/scripttest.cpp:133:18: error: use of undeclared identifier 'ref'
            test(ref.getPtr(), compiled, total, extensions, warningsMode);
                 ^

apps/openmw/mwgui/itemview.cpp should add these lines:

apps/openmw/mwgui/itemview.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <stddef.h>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <stdexcept>  // lines 9-9
- #include <utility>  // lines 10-10
- #include "MyGUI_Widget.h"  // lines 14-14
- #include "MyGUI_WidgetInput.h"  // lines 15-15

The full include-list for apps/openmw/mwgui/itemview.cpp:
#include "itemview.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stddef.h>                     // for NULL
#include <cmath>                        // for ceil
#include "MyGUI_Align.h"                // for Align, operator|, etc
#include "MyGUI_Widget.h"               // for Widget
#include "itemmodel.hpp"                // for ItemModel, ItemStack, etc
#include "itemwidget.hpp"               // for ItemWidget, etc
---
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwdialogue/scripttest.cpp:139:31: error: expected ';' after expression
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
                              ^
                              ;
apps/openmw/mwdialogue/scripttest.cpp:139:22: error: no member named 'ManualRef' in namespace 'MWWorld'
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
            ~~~~~~~~~^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwdialogue/scripttest.cpp:139:32: error: use of undeclared identifier 'ref'
            MWWorld::ManualRef ref(MWBase::Environment::get().getWorld()->getStore(), it->mId);
                               ^
In file included from apps/openmw/mwgui/review.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwdialogue/scripttest.cpp:140:18: error: use of undeclared identifier 'ref'
            test(ref.getPtr(), compiled, total, extensions, warningsMode);
                 ^
In file included from apps/openmw/mwgui/screenfader.cpp:5:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/formatting.hpp should add these lines:

apps/openmw/mwgui/formatting.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include <string>  // lines 9-9
- #include <utility>  // lines 11-11
- #include <vector>  // lines 13-13
- #include "MyGUI_Align.h"  // lines 16-16
- namespace MyGUI { class EditBox; }  // lines 23-23
- namespace MyGUI { class ImageBox; }  // lines 24-24
- namespace MyGUI { class Widget; }  // lines 25-25

The full include-list for apps/openmw/mwgui/formatting.hpp:
#include <MyGUI_Colour.h>               // for Colour
#include <stddef.h>                     // for size_t
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "MyGUI_Align.h"                // for Align, operator|, etc
namespace MyGUI { class EditBox; }  // lines 19-19
namespace MyGUI { class ImageBox; }  // lines 20-20
namespace MyGUI { class Widget; }  // lines 21-21
---

(components/widgets/tags.hpp has correct #includes/fwd-decls)

components/widgets/tags.cpp should add these lines:

components/widgets/tags.cpp should remove these lines:
- #include <stddef.h>  // lines 3-3
- #include <ostream>  // lines 5-5
- #include <stdexcept>  // lines 7-7
- #include <utility>  // lines 9-9
- #include "MyGUI_StringUtility.h"  // lines 12-12
- #include "MyGUI_UString.h"  // lines 14-14

The full include-list for components/widgets/tags.cpp:
#include "tags.hpp"
#include <MyGUI_Colour.h>               // for Colour
#include <stddef.h>                     // for size_t
#include <ostream>                      // for basic_ostream::operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "MyGUI_StringUtility.h"        // for parseInt
#include "MyGUI_UString.h"              // for UString, operator+
---
In file included from apps/openmw/mwscript/statsextensions.cpp:5:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/formatting.cpp should add these lines:

apps/openmw/mwgui/formatting.cpp should remove these lines:
- #include <components/interpreter/defines.hpp>  // lines 5-5
- #include <istream>  // lines 9-9
- #include <stdexcept>  // lines 11-11
- #include "MyGUI_Colour.h"  // lines 14-14
- #include "MyGUI_IFont.h"  // lines 16-16
- #include "MyGUI_Prerequest.h"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_TextIterator.h"  // lines 24-24
- #include "MyGUI_Types.h"  // lines 26-26
- #include "MyGUI_Widget.h"  // lines 28-28
- #include "apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwscript/../mwworld/ptr.hpp"  // lines 30-30

The full include-list for apps/openmw/mwgui/formatting.cpp:
#include "formatting.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_FontManager.h>          // for FontManager
#include <boost/algorithm/string/replace.hpp>  // for replace_all
#include <boost/iterator/iterator_traits.hpp>
#include <components/misc/resourcehelpers.hpp>  // for correctBookartPath
#include <components/misc/stringops.hpp>  // for StringUtils
#include <istream>                      // for stringstream, basic_istream, etc
#include <stdexcept>                    // for runtime_error
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_IFont.h"                // for IFont
#include "MyGUI_Prerequest.h"           // for MYGUI_DEFINE_VERSION, etc
#include "MyGUI_RTTI.h"                 // for EditBox::getClassTypeName, etc
#include "MyGUI_StringUtility.h"        // for parseInt, toString
#include "MyGUI_TextIterator.h"         // for TextIterator
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "MyGUI_Widget.h"               // for Widget
---

extern/sdl4ogre/sdlcursormanager.hpp should add these lines:

extern/sdl4ogre/sdlcursormanager.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "GLX/../OgrePrerequisites.h"  // lines 9-9
- #include "SDL_mouse.h"  // lines 11-11
- #include "SDL_stdinc.h"  // lines 13-13
- #include "SDL_surface.h"  // lines 15-15

The full include-list for extern/sdl4ogre/sdlcursormanager.hpp:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "SDL_mouse.h"                  // for SDL_Cursor
#include "SDL_stdinc.h"                 // for Uint8, Uint32
#include "SDL_surface.h"                // for SDL_Surface
#include "cursormanager.hpp"            // for CursorManager
---

(extern/sdl4ogre/sdlcursormanager.cpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/topic.hpp has correct #includes/fwd-decls)

apps/openmw/mwdialogue/topic.cpp should add these lines:

apps/openmw/mwdialogue/topic.cpp should remove these lines:
- #include <stdexcept>  // lines 3-3
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"  // lines 9-9
- #include "apps/openmw/mwdialogue/journalentry.hpp"  // lines 11-11
- #include "components/esm/loaddial.hpp"  // lines 13-13

The full include-list for apps/openmw/mwdialogue/topic.cpp:
#include "topic.hpp"
#include <stdexcept>                    // for runtime_error
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"
#include "apps/openmw/mwdialogue/journalentry.hpp"  // for JournalEntry, etc
#include "components/esm/loaddial.hpp"  // for Dialogue
---

(apps/openmw/mwscript/cellextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/cellextensions.cpp should add these lines:
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }

apps/openmw/mwscript/cellextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <components/interpreter/runtime.hpp>  // lines 4-4
- #include <limits>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <string>  // lines 8-8
- #include <string>  // lines 9-9
- #include "../mwworld/player.hpp"  // lines 14-14
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 16-16
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "components/esm/loadcell.hpp"  // lines 21-21
- #include "components/interpreter/types.hpp"  // lines 22-22
- #include "components/misc/stringops.hpp"  // lines 23-23
- #include "components/misc/stringops.hpp"  // lines 24-24

The full include-list for apps/openmw/mwscript/cellextensions.cpp:
#include "cellextensions.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }
---

apps/openmw/mwrender/ripplesimulation.hpp should add these lines:

apps/openmw/mwrender/ripplesimulation.hpp should remove these lines:
- #include <OgreMaterial.h>  // lines 4-4
- #include <OgreTexture.h>  // lines 5-5
- #include "../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwrender/ripplesimulation.hpp:
#include <OgreVector2.h>                // for Vector2
#include <OgreVector3.h>                // for Vector3
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace Ogre { class Camera; }  // lines 17-17
namespace Ogre { class Rectangle2D; }  // lines 18-18
namespace Ogre { class RenderTexture; }  // lines 19-19
namespace Ogre { class SceneManager; }  // lines 20-20
---

apps/openmw/mwrender/occlusionquery.hpp should add these lines:

apps/openmw/mwrender/occlusionquery.hpp should remove these lines:
- #include "GLX/../OgrePrerequisites.h"  // lines 15-15
- #include "OgreCommon.h"  // lines 17-17
- #include "OgrePlatform.h"  // lines 19-19
- namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 34-34
- namespace Ogre { class AutoParamDataSource; }  // lines 38-38
- namespace Ogre { class Pass; }  // lines 39-39
- namespace Ogre { class Renderable; }  // lines 40-40

The full include-list for apps/openmw/mwrender/occlusionquery.hpp:
#include <OgreRenderObjectListener.h>   // for RenderObjectListener
#include <OgreRenderQueueListener.h>    // for RenderQueueListener
#include "GLX/../OgrePrerequisites.h"   // for String
#include "OgreCommon.h"                 // for LightList
#include "OgrePlatform.h"               // for uint8
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 23-23
namespace Ogre { class AutoParamDataSource; }  // lines 27-27
namespace Ogre { class Entity; }  // lines 9-9
namespace Ogre { class HardwareOcclusionQuery; }  // lines 10-10
namespace Ogre { class Pass; }  // lines 28-28
namespace Ogre { class Renderable; }  // lines 29-29
namespace Ogre { class SceneNode; }  // lines 11-11
---

apps/openmw/mwrender/occlusionquery.cpp should add these lines:
namespace Ogre { class RenderSystem; }

apps/openmw/mwrender/occlusionquery.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreEntity.h>  // lines 2-2
- #include <OgreHardwareOcclusionQuery.h>  // lines 3-3
- #include <OgreMesh.h>  // lines 4-4
- #include <OgreRenderSystem.h>  // lines 5-5
- #include <OgreSceneNode.h>  // lines 7-7
- #include <OgreSubEntity.h>  // lines 8-8
- #include <iostream>  // lines 10-10
- #include <iostream>  // lines 11-11
- #include "OgreAxisAlignedBox.h"  // lines 13-13
- #include "OgreAxisAlignedBox.h"  // lines 14-14
- #include "OgreException.h"  // lines 15-15
- #include "OgreException.h"  // lines 16-16
- #include "OgrePlane.h"  // lines 17-17
- #include "OgrePlane.h"  // lines 18-18
- #include "OgreResourceGroupManager.h"  // lines 19-19
- #include "OgreResourceGroupManager.h"  // lines 20-20
- #include "OgreSceneManager.h"  // lines 21-21
- #include "OgreSceneManager.h"  // lines 22-22
- #include "OgreSharedPtr.h"  // lines 23-23
- #include "OgreSharedPtr.h"  // lines 24-24
- #include "OgreVector3.h"  // lines 25-25
- #include "OgreVector3.h"  // lines 26-26
- #include "openengine/ogre/renderer.hpp"  // lines 28-28
- #include "openengine/ogre/renderer.hpp"  // lines 29-29
- #include "renderconst.hpp"  // lines 30-30
- namespace Ogre { namespace Ogre { class AutoParamDataSource; } }  // lines 33-33
- namespace Ogre { namespace Ogre { class AutoParamDataSource; } }  // lines 37-37
- namespace Ogre { namespace Ogre { class Pass; } }  // lines 34-34
- namespace Ogre { namespace Ogre { class Pass; } }  // lines 38-38
- namespace Ogre { namespace Ogre { class Renderable; } }  // lines 35-35
- namespace Ogre { namespace Ogre { class Renderable; } }  // lines 39-39

The full include-list for apps/openmw/mwrender/occlusionquery.cpp:
#include "occlusionquery.hpp"
#include <OgreRoot.h>                   // for Root
#include <stddef.h>                     // for NULL
namespace Ogre { class RenderSystem; }
---

apps/openmw/mwrender/ripplesimulation.cpp should add these lines:

apps/openmw/mwrender/ripplesimulation.cpp should remove these lines:
- #include <stddef.h>  // lines 11-11
- #include <cmath>  // lines 13-13
- #include <extern/shiny/Main/Factory.hpp>  // lines 9-9
- #include <string>  // lines 15-15
- #include "../mwbase/environment.hpp"  // lines 17-17
- #include "../mwbase/world.hpp"  // lines 18-18
- #include "OgreAxisAlignedBox.h"  // lines 20-20
- #include "OgrePixelFormat.h"  // lines 22-22
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "OgreSceneManager.h"  // lines 26-26
- #include "OgreTexture.h"  // lines 28-28
- #include "OgreVector2.h"  // lines 30-30
- #include "OgreVector3.h"  // lines 32-32
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 33-33
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 34-34
- #include "components/esm/defs.hpp"  // lines 35-35
- #include "components/esm/defs.hpp"  // lines 36-36
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 37-37
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 38-38

The full include-list for apps/openmw/mwrender/ripplesimulation.cpp:
#include "ripplesimulation.hpp"
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRectangle2D.h>            // for Rectangle2D
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRoot.h>                   // for Root
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreStringConverter.h>        // for StringConverter
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <stddef.h>                     // for NULL
#include <cmath>                        // for fmod
#include <string>                       // for operator+, basic_string
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgrePixelFormat.h"            // for PixelFormat::PF_R8G8B8
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneManager.h"           // for SceneManager, etc
#include "OgreTexture.h"                // for TextureType::TEX_TYPE_2D, etc
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
---
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:37:31: error: 'system' is not a class, namespace, or enumeration
  BOOST_FILESYSTEM_DECL const system::error_category& codecvt_error_category();
                              ^
/usr/include/stdlib.h:717:12: note: 'system' declared here
extern int system (const char *__command) __wur;
           ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:76:14: error: no template named 'disable_if' in namespace 'Ogre::boost'; did you mean '::boost::disable_if'?
    typename boost::disable_if<boost::is_array<Container>, bool>::type
             ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:59:10: note: '::boost::disable_if' declared here
  struct disable_if : public disable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:76:32: error: no template named 'is_array' in namespace 'Ogre::boost'; did you mean '::boost::is_array'?
    typename boost::disable_if<boost::is_array<Container>, bool>::type
                               ^~~~~~~
/usr/include/boost/type_traits/is_array.hpp:34:30: note: '::boost::is_array' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_array,T,false)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:199:14: error: no template named 'disable_if' in namespace 'Ogre::boost'; did you mean '::boost::disable_if'?
    typename boost::disable_if<boost::is_array<Container>, void>::type
             ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:59:10: note: '::boost::disable_if' declared here
  struct disable_if : public disable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:199:32: error: no template named 'is_array' in namespace 'Ogre::boost'; did you mean '::boost::is_array'?
    typename boost::disable_if<boost::is_array<Container>, void>::type
                               ^~~~~~~
/usr/include/boost/type_traits/is_array.hpp:34:30: note: '::boost::is_array' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_array,T,false)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^

apps/openmw/mwrender/debugging.hpp should add these lines:
#include <vector>                       // for vector

apps/openmw/mwrender/debugging.hpp should remove these lines:
- #include <openengine/ogre/renderer.hpp>  // lines 4-4
- #include <string>  // lines 6-6
- namespace Ogre { namespace ESM { struct Pathgrid; } }  // lines 17-17
- namespace Ogre { namespace OEngine { namespace Ogre { class Vector3; } } }  // lines 32-32
- namespace Ogre { namespace OEngine { namespace Ogre { class Viewport; } } }  // lines 33-33
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Ptr; } } } }  // lines 39-39
- namespace Ogre { namespace Ogre { class ManualObject; } }  // lines 10-10
- namespace Ogre { namespace Ogre { class ManualObject; } }  // lines 12-12

The full include-list for apps/openmw/mwrender/debugging.hpp:
#include <map>                          // for map, map<>::value_compare
#include <utility>                      // for pair
#include <vector>                       // for vector
namespace Ogre { namespace OEngine { namespace Ogre { class SceneManager; } } }  // lines 30-30
namespace Ogre { namespace OEngine { namespace Ogre { class SceneNode; } } }  // lines 31-31
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class CellStore; } } } }  // lines 38-38
namespace Ogre { namespace OEngine { namespace Physic { class PhysicEngine; } } }  // lines 25-25
---

apps/openmw/mwrender/debugging.cpp should add these lines:

apps/openmw/mwrender/debugging.cpp should remove these lines:
- #include <OgreManualObject.h>  // lines 1-1
- #include <OgreMaterial.h>  // lines 2-2
- #include <OgreMaterialManager.h>  // lines 3-3
- #include <OgreSceneManager.h>  // lines 4-4
- #include <OgreTechnique.h>  // lines 5-5
- #include <math.h>  // lines 7-7
- #include <math.h>  // lines 8-8
- #include <stddef.h>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <components/esm/loadpgrd.hpp>  // lines 6-6
- #include <openengine/bullet/physic.hpp>  // lines 9-9
- #include <string>  // lines 16-16
- #include "../mwworld/cellstore.hpp"  // lines 19-19
- #include "../mwworld/esmstore.hpp"  // lines 20-20
- #include "GLX/../OgrePrerequisites.h"  // lines 21-21
- #include "GLX/../OgrePrerequisites.h"  // lines 22-22
- #include "OgrePass.h"  // lines 23-23
- #include "OgrePass.h"  // lines 24-24
- #include "OgrePlatform.h"  // lines 25-25
- #include "OgreRenderOperation.h"  // lines 26-26
- #include "OgreRenderOperation.h"  // lines 27-27
- #include "OgreResourceGroupManager.h"  // lines 28-28
- #include "OgreResourceGroupManager.h"  // lines 29-29
- #include "OgreSharedPtr.h"  // lines 30-30
- #include "OgreSharedPtr.h"  // lines 31-31
- #include "OgreVector3.h"  // lines 32-32
- #include "OgreVector3.h"  // lines 33-33
- #include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"  // lines 34-34
- #include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"  // lines 35-35
- #include "components/esm/loadcell.hpp"  // lines 36-36
- #include "components/esm/loadcell.hpp"  // lines 37-37
- #include "components/esm/loadland.hpp"  // lines 38-38
- #include "components/esm/loadland.hpp"  // lines 39-39
- #include "renderconst.hpp"  // lines 41-41
- namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class MovableObject; } } } }  // lines 44-44
- namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class MovableObject; } } } }  // lines 46-46

The full include-list for apps/openmw/mwrender/debugging.cpp:
#include "debugging.hpp"
#include <stddef.h>                     // for NULL
#include <cassert>                      // for assert
#include <string>                       // for string
#include "../mwbase/world.hpp"          // for World, etc
---
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
In file included from /usr/include/boost/filesystem/path.hpp:30:
/usr/include/boost/io/detail/quoted_manip.hpp:138:37: error: expected ';' after expression
          boost::io::ios_flags_saver ifs(is);
                                    ^
/usr/include/boost/io/detail/quoted_manip.hpp:138:22: error: no member named 'ios_flags_saver' in namespace 'Ogre::boost::io'
          boost::io::ios_flags_saver ifs(is);
          ~~~~~~~~~~~^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:136:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^

apps/openmw/mwgui/statswindow.hpp should add these lines:
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum

apps/openmw/mwgui/statswindow.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <map>  // lines 5-5
- #include <set>  // lines 6-6
- #include <set>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "../mwmechanics/stat.hpp"  // lines 13-13
- #include "MyGUI_RTTI.h"  // lines 14-14
- #include "MyGUI_Types.h"  // lines 15-15
- #include "MyGUI_Types.h"  // lines 16-16
- #include "MyGUI_Widget.h"  // lines 17-17
- #include "MyGUI_Widget.h"  // lines 18-18
- #include "MyGUI_Window.h"  // lines 19-19
- #include "MyGUI_Window.h"  // lines 20-20
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 24-24
- namespace MWBase { namespace MWGui { class DragAndDrop; } }  // lines 35-35
- namespace MWBase { namespace MWGui { class WindowManager; } }  // lines 44-44
- namespace MWBase { namespace MyGUI { class ScrollView; } }  // lines 38-38
- namespace MWBase { namespace MyGUI { class TextBox; } }  // lines 39-39

The full include-list for apps/openmw/mwgui/statswindow.hpp:
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace MWBase { namespace MWGui { class DragAndDrop; } }  // lines 33-33
namespace MWBase { namespace MyGUI { class ScrollView; } }  // lines 28-28
namespace MWBase { namespace MyGUI { class TextBox; } }  // lines 29-29
---

apps/openmw/mwgui/statswindow.cpp should add these lines:

apps/openmw/mwgui/statswindow.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <MyGUI_ProgressBar.h>  // lines 3-3
- #include <MyGUI_ScrollView.h>  // lines 4-4
- #include <MyGUI_Window.h>  // lines 5-5
- #include <assert.h>  // lines 7-7
- #include <stddef.h>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <boost/array.hpp>  // lines 8-8
- #include <boost/array.hpp>  // lines 9-9
- #include <iterator>  // lines 14-14
- #include <iterator>  // lines 15-15
- #include <sstream>  // lines 16-16
- #include <sstream>  // lines 17-17
- #include <utility>  // lines 18-18
- #include <utility>  // lines 19-19
- #include "../mwbase/environment.hpp"  // lines 21-21
- #include "../mwbase/windowmanager.hpp"  // lines 22-22
- #include "../mwbase/world.hpp"  // lines 23-23
- #include "../mwmechanics/npcstats.hpp"  // lines 24-24
- #include "../mwworld/class.hpp"  // lines 25-25
- #include "../mwworld/esmstore.hpp"  // lines 26-26
- #include "../mwworld/player.hpp"  // lines 27-27
- #include "MyGUI_Align.h"  // lines 28-28
- #include "MyGUI_Align.h"  // lines 29-29
- #include "MyGUI_EventPair.h"  // lines 32-32
- #include "MyGUI_EventPair.h"  // lines 33-33
- #include "MyGUI_StringUtility.h"  // lines 34-34
- #include "MyGUI_StringUtility.h"  // lines 35-35
- #include "MyGUI_TSize.h"  // lines 36-36
- #include "MyGUI_TSize.h"  // lines 37-37
- #include "MyGUI_TextBox.h"  // lines 38-38
- #include "MyGUI_TextBox.h"  // lines 39-39
- #include "MyGUI_WidgetInput.h"  // lines 40-40
- #include "MyGUI_WidgetInput.h"  // lines 41-41
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 51-51
- #include "components/esm/attr.hpp"  // lines 52-52
- #include "components/esm/attr.hpp"  // lines 53-53
- #include "components/esm/loadbsgn.hpp"  // lines 54-54
- #include "components/esm/loadbsgn.hpp"  // lines 55-55
- #include "components/esm/loadclas.hpp"  // lines 56-56
- #include "components/esm/loadclas.hpp"  // lines 57-57
- #include "components/esm/loadfact.hpp"  // lines 58-58
- #include "components/esm/loadfact.hpp"  // lines 59-59
- #include "components/esm/loadgmst.hpp"  // lines 60-60
- #include "components/esm/loadgmst.hpp"  // lines 61-61
- #include "components/esm/loadnpc.hpp"  // lines 62-62
- #include "components/esm/loadnpc.hpp"  // lines 63-63
- #include "components/esm/loadrace.hpp"  // lines 64-64
- #include "components/esm/loadrace.hpp"  // lines 65-65
- #include "components/esm/loadskil.hpp"  // lines 66-66
- #include "components/esm/loadskil.hpp"  // lines 67-67
- #include "tooltips.hpp"  // lines 69-69
- namespace MWGui { class DragAndDrop; }  // lines 72-72
- namespace MWGui { class DragAndDrop; }  // lines 74-74

The full include-list for apps/openmw/mwgui/statswindow.cpp:
#include "statswindow.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
---
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:137:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type> >::type* =0)
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:197:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwgui/review.cpp:39:
./apps/openmw/mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:198:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type>, path&>::type
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:247:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:248:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type>, path&>::type
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:255:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<is_integral<CharT>, path&>::type
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwgui/mapwindow.cpp:11:
./components/esm/globalmap.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/globalmap.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:255:33: error: no template named 'is_integral'; did you mean '::boost::is_integral'?
      typename boost::enable_if<is_integral<CharT>, path&>::type
                                ^
/usr/include/boost/type_traits/is_integral.hpp:25:30: note: '::boost::is_integral' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_integral,T,false)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:298:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:299:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type>, path&>::type
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^

apps/openmw/mwgui/screenfader.hpp should add these lines:

apps/openmw/mwgui/screenfader.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <string>  // lines 8-8

The full include-list for apps/openmw/mwgui/screenfader.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ScreenFader; }  // lines 15-15
---

apps/openmw/mwgui/screenfader.cpp should add these lines:

apps/openmw/mwgui/screenfader.cpp should remove these lines:
- #include "MyGUI_Widget.h"  // lines 4-4
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 5-5
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 6-6

The full include-list for apps/openmw/mwgui/screenfader.cpp:
#include "screenfader.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include "MyGUI_Widget.h"               // for Widget
---
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

plugins/mygui_resource_plugin/plugin_export.cpp should add these lines:

plugins/mygui_resource_plugin/plugin_export.cpp should remove these lines:
- #include "MyGUI_Platform.h"  // lines 2-2
- #include "MyGUI_Prerequest.h"  // lines 5-5

The full include-list for plugins/mygui_resource_plugin/plugin_export.cpp:
#include "MyGUI_Platform.h"             // for MYGUI_EXPORT_DLL
#include "MyGUI_PluginManager.h"        // for PluginManager
#include "MyGUI_Prerequest.h"           // for nullptr
#include "plugin.hpp"                   // for ResourcePlugin
---

/usr/include/OGRE/OgrePass.h should add these lines:
#include <stddef.h>                     // for NULL, size_t
#include <functional>                   // for less
#include "GLX/../OgrePrerequisites.h"   // for Real, String, GpuProgramPtr, etc
#include "OgreGpuProgramParams.h"
#include "OgreIteratorWrapper.h"        // for ConstVectorIterator, etc
#include "OgreMemoryAllocatorConfig.h"  // for PassAlloc
#include "OgreMemorySTLAllocator.h"     // for STLAllocator
#include "OgrePlatform.h"               // for uint32, _OgreExport, uint16
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_MUTEX, etc
namespace Ogre { class AutoParamDataSource; }
namespace Ogre { class GpuProgramUsage; }
namespace Ogre { class Technique; }

/usr/include/OGRE/OgrePass.h should remove these lines:
- #include "OgreGpuProgram.h"  // lines 32-32
- #include "OgrePrerequisites.h"  // lines 31-31

The full include-list for /usr/include/OGRE/OgrePass.h:
#include <stddef.h>                     // for NULL, size_t
#include <functional>                   // for less
#include "GLX/../OgrePrerequisites.h"   // for Real, String, GpuProgramPtr, etc
#include "OgreBlendMode.h"              // for SceneBlendFactor, etc
#include "OgreColourValue.h"            // for ColourValue, etc
#include "OgreCommon.h"                 // for CompareFunction, etc
#include "OgreGpuProgramParams.h"
#include "OgreIteratorWrapper.h"        // for ConstVectorIterator, etc
#include "OgreLight.h"                  // for Light, Light::LightTypes, etc
#include "OgreMemoryAllocatorConfig.h"  // for PassAlloc
#include "OgreMemorySTLAllocator.h"     // for STLAllocator
#include "OgrePlatform.h"               // for uint32, _OgreExport, uint16
#include "OgreTextureUnitState.h"       // for TextureUnitState, etc
#include "OgreUserObjectBindings.h"     // for UserObjectBindings
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_MUTEX, etc
namespace Ogre { class AutoParamDataSource; }
namespace Ogre { class GpuProgramUsage; }
namespace Ogre { class Technique; }
---

extern/shiny/Platforms/Ogre/OgrePass.hpp should add these lines:

extern/shiny/Platforms/Ogre/OgrePass.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"  // lines 11-11
- namespace Ogre { class Pass; }  // lines 18-18

The full include-list for extern/shiny/Platforms/Ogre/OgrePass.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../../Main/Platform.hpp"      // for GpuProgramType, Pass
#include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"
namespace Ogre { class Pass; }  // lines 16-16
namespace sh { class OgreMaterial; }  // lines 23-23
---

extern/shiny/Platforms/Ogre/OgrePass.cpp should add these lines:

extern/shiny/Platforms/Ogre/OgrePass.cpp should remove these lines:
- #include <ostream>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include "OgreException.h"  // lines 10-10
- #include "OgreGpuProgramParams.h"  // lines 12-12
- #include "OgreSharedPtr.h"  // lines 17-17
- #include "OgreVector4.h"  // lines 20-20
- #include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"  // lines 22-22

The full include-list for extern/shiny/Platforms/Ogre/OgrePass.cpp:
#include "OgrePass.hpp"
#include <OgrePass.h>
#include <OgreTechnique.h>              // for Technique
#include <ostream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include <typeinfo>                     // for type_info
#include "OgreException.h"              // for Exception
#include "OgreGpuProgramParams.h"
#include "OgreMaterialSerializer.hpp"   // for OgreMaterialSerializer
#include "OgrePlatform.hpp"             // for OgrePlatform
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTextureUnitState.hpp"     // for OgreTextureUnitState
#include "OgreVector4.h"                // for Vector4
#include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"
---
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:570:14: error: no template named 'iterator_facade' in namespace 'Ogre::boost'; did you mean '::boost::iterator_facade'?
    : public boost::iterator_facade<
             ^~~~~~~
/usr/include/boost/iterator/iterator_facade.hpp:592:9: note: '::boost::iterator_facade' declared here
  class iterator_facade
        ^
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

(components/contentselector/model/loadordererror.hpp has correct #includes/fwd-decls)

(components/contentselector/model/loadordererror.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:19:
In file included from apps/openmw/mwinput/../engine.hpp:5:
/usr/include/boost/filesystem/path.hpp:573:7: error: no template named 'bidirectional_traversal_tag' in namespace 'Ogre::boost'; did you mean 'boost_concepts::BidirectionalTraversal'?
      boost::bidirectional_traversal_tag >
      ^~~~~~~
/usr/include/boost/iterator/iterator_concepts.hpp:159:17: note: 'boost_concepts::BidirectionalTraversal' declared here
  BOOST_concept(BidirectionalTraversal,(Iterator))
                ^
/usr/include/boost/concept/detail/concept_def.hpp:45:12: note: expanded from macro 'BOOST_concept'
    struct name                                                                
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/mapwindow.cpp:23:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwdialogue/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/travelwindow.cpp:17:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/loadingscreen.cpp:42:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/journalviewmodel.hpp should add these lines:

apps/openmw/mwgui/journalviewmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <memory>  // lines 9-9
- #include <utility>  // lines 12-12
- namespace boost { template <typename Signature> class function; }  // lines 17-17

The full include-list for apps/openmw/mwgui/journalviewmodel.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for intptr_t, uint8_t
#include <boost/function.hpp>           // for function
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr, etc
#include <string>                       // for string
#include <utility>                      // for pair
namespace boost { template <typename Signature> class function; }  // lines 15-15
---

apps/openmw/mwgui/journalviewmodel.cpp should add these lines:
#include <map>                          // for map, map<>::const_iterator

apps/openmw/mwgui/journalviewmodel.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <boost/smart_ptr/make_shared_object.hpp>  // lines 3-3
- #include <deque>  // lines 7-7
- #include <memory>  // lines 9-9
- #include <set>  // lines 11-11
- #include "MyGUI_UString.h"  // lines 22-22
- #include "apps/openmw/mwgui/../mwbase/../mwdialogue/quest.hpp"  // lines 24-24
- #include "apps/openmw/mwgui/../mwbase/../mwdialogue/topic.hpp"  // lines 26-26
- #include "components/misc/stringops.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/journalviewmodel.cpp:
#include "journalviewmodel.hpp"
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <algorithm>                    // for replace
#include <boost/smart_ptr/make_shared_object.hpp>  // for make_shared
#include <deque>                        // for _Deque_iterator, operator!=, etc
#include <map>                          // for map, map<>::const_iterator
#include <memory>                       // for allocator
#include <set>                          // for _Rb_tree_const_iterator, etc
#include <sstream>                      // for operator<<, tolower, etc
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwdialogue/journalentry.hpp"  // for Entry, etc
#include "../mwdialogue/keywordsearch.hpp"  // for KeywordSearch<>::Match, etc
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwdialogue/quest.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwdialogue/topic.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "components/translation/translation.hpp"  // for Storage
---
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwscript/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwscript/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwscript/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwscript/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/spellwindow.hpp should add these lines:

apps/openmw/mwgui/spellwindow.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwgui/spellwindow.hpp:
#include <string>                       // for string
#include "apps/openmw/mwgui/windowbase.hpp"  // for NoDrop
#include "spellmodel.hpp"               // for SpellModel, etc
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace MWGui { class DragAndDrop; }  // lines 12-12
namespace MWGui { class SpellIcons; }  // lines 23-23
namespace MWGui { class SpellView; }  // lines 24-24
namespace MWWorld { class Ptr; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 18-18
---
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwscript/statsextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwscript/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^

apps/openmw/mwgui/spellwindow.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
namespace MWMechanics { class CreatureStats; }

apps/openmw/mwgui/spellwindow.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <boost/format.hpp>  // lines 2-2
- #include <stdexcept>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include <utility>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../mwmechanics/creaturestats.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_Widget.h"  // lines 23-23
- #include "MyGUI_Widget.h"  // lines 24-24
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 26-26
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwworld/containerstore.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/mode.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/spellmodel.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 38-38
- #include "components/esm/loadspel.hpp"  // lines 40-40
- #include "inventorywindow.hpp"  // lines 42-42
- namespace MWGui { class DragAndDrop; }  // lines 50-50

The full include-list for apps/openmw/mwgui/spellwindow.cpp:
#include "spellwindow.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/spellcasting.hpp"  // for getSpellSuccessChance
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/mode.hpp"   // for GuiWindow::GW_Magic
#include "apps/openmw/mwgui/spellmodel.hpp"  // for SpellModel, Spell, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
#include "spellicons.hpp"               // for SpellIcons
#include "spellview.hpp"                // for SpellView
namespace MWGui { class DragAndDrop; }  // lines 48-48
namespace MWMechanics { class CreatureStats; }
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/containerstore.hpp:22:
apps/openmw/mwgui/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwgui/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^

(apps/openmw/mwgui/draganddrop.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/draganddrop.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwgui/draganddrop.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <string>  // lines 6-6
- #include "../mwbase/soundmanager.hpp"  // lines 9-9
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_Align.h"  // lines 13-13
- #include "MyGUI_ControllerItem.h"  // lines 14-14
- #include "MyGUI_ControllerItem.h"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 17-17
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 21-21

The full include-list for apps/openmw/mwgui/draganddrop.cpp:
#include "draganddrop.hpp"
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_Gui.h>                  // for Gui
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "controllers.hpp"              // for ControllerFollowMouse
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
---
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:9:
apps/openmw/mwgui/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/openmw/mwgui/travelwindow.cpp:20:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwgui/../mwworld/inventorystore.hpp:149:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwgui/../mwworld/containerstore.hpp:124:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/review.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
namespace MWMechanics { class AttributeValue; }
namespace MWMechanics { class SkillValue; }
namespace MWMechanics { template <typename T> class DynamicStat; }

apps/openmw/mwgui/review.hpp should remove these lines:
- #include <map>  // lines 6-6
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 16-16
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 17-17
- #include "components/esm/loadskil.hpp"  // lines 19-19
- namespace MWGui { class WindowManager; }  // lines 35-35
- namespace MyGUI { class ScrollView; }  // lines 28-28
- namespace MyGUI { class TextBox; }  // lines 29-29
- namespace MyGUI { class Widget; }  // lines 30-30

The full include-list for apps/openmw/mwgui/review.hpp:
#include <components/esm/attr.hpp>      // for Attribute, etc
#include <components/esm/loadclas.hpp>  // for Class
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_Types.h"                // for IntCoord
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "widgets.hpp"                  // for MWDynamicStatPtr
#include "windowbase.hpp"
namespace MWMechanics { class AttributeValue; }
namespace MWMechanics { class SkillValue; }
namespace MWMechanics { template <typename T> class DynamicStat; }
namespace MyGUI { class ScrollView; }  // lines 24-24
namespace MyGUI { class TextBox; }  // lines 25-25
namespace MyGUI { class Widget; }  // lines 26-26
---
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/review.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwgui/review.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <assert.h>  // lines 5-5
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <boost/array.hpp>  // lines 6-6
- #include <boost/array.hpp>  // lines 7-7
- #include <cmath>  // lines 10-10
- #include <cmath>  // lines 11-11
- #include <iterator>  // lines 12-12
- #include <iterator>  // lines 13-13
- #include <set>  // lines 14-14
- #include <set>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <utility>  // lines 17-17
- #include "../mwbase/world.hpp"  // lines 21-21
- #include "../mwworld/esmstore.hpp"  // lines 22-22
- #include "MyGUI_Align.h"  // lines 23-23
- #include "MyGUI_Align.h"  // lines 24-24
- #include "MyGUI_Button.h"  // lines 26-26
- #include "MyGUI_RTTI.h"  // lines 27-27
- #include "MyGUI_RTTI.h"  // lines 28-28
- #include "MyGUI_StringUtility.h"  // lines 29-29
- #include "MyGUI_StringUtility.h"  // lines 30-30
- #include "MyGUI_TCoord.h"  // lines 31-31
- #include "MyGUI_TCoord.h"  // lines 32-32
- #include "MyGUI_TextBox.h"  // lines 34-34
- #include "MyGUI_WidgetInput.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 42-42
- #include "components/esm/attr.hpp"  // lines 44-44
- #include "components/esm/loadbsgn.hpp"  // lines 46-46
- #include "components/esm/loadclas.hpp"  // lines 48-48
- #include "components/esm/loadrace.hpp"  // lines 50-50
- namespace MyGUI { class Widget; }  // lines 57-57

The full include-list for apps/openmw/mwgui/review.cpp:
#include "review.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <assert.h>                     // for assert
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_TextBox.h"              // for TextBox
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/widgets.hpp"  // for MWAttribute, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadrace.hpp"  // for Race
#include "tooltips.hpp"                 // for ToolTips
namespace MyGUI { class Widget; }  // lines 55-55
---
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/repair.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/terrain/material.hpp should add these lines:

components/terrain/material.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "OgrePrerequisites.h"  // lines 9-9
- #include "OgreSharedPtr.h"  // lines 11-11
- #include "components/terrain/defs.hpp"  // lines 13-13
- #include "storage.hpp"  // lines 14-14

The full include-list for components/terrain/material.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
#include "OgrePrerequisites.h"          // for MaterialPtr, TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "components/terrain/defs.hpp"  // for LayerInfo
---
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwdialogue/../mwmechanics/spells.hpp:8:
apps/openmw/mwdialogue/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
In file included from apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

components/terrain/material.cpp should add these lines:
namespace sh { class MaterialInstanceTextureUnit; }

components/terrain/material.cpp should remove these lines:
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <boost/functional/hash/hash.hpp>  // lines 6-6
- #include <boost/functional/hash/hash.hpp>  // lines 7-7
- #include <cmath>  // lines 12-12
- #include <ostream>  // lines 14-14
- #include "OgreBlendMode.h"  // lines 17-17
- #include "OgreCommon.h"  // lines 19-19
- #include "OgreConfig.h"  // lines 21-21
- #include "OgreMaterial.h"  // lines 23-23
- #include "OgreResourceGroupManager.h"  // lines 25-25
- #include "OgreStringConverter.h"  // lines 26-26
- #include "OgreStringConverter.h"  // lines 27-27
- #include "OgreTexture.h"  // lines 29-29
- #include "OgreTextureUnitState.h"  // lines 31-31
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 33-33
- #include "extern/shiny/Main/MaterialInstancePass.hpp"  // lines 35-35
- #include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"  // lines 36-36
- #include "extern/shiny/Main/MaterialInstanceTextureUnit.hpp"  // lines 37-37
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 38-38
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 39-39

The full include-list for components/terrain/material.cpp:
#include "material.hpp"
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgrePass.h>                   // for Pass
#include <OgreTechnique.h>              // for Technique
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <cmath>                        // for floor
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <ostream>                      // for stringstream, basic_ostream, etc
#include "OgreBlendMode.h"
#include "OgreCommon.h"                 // for FogMode::FOG_NONE, etc
#include "OgreConfig.h"                 // for OGRE_MAX_TEXTURE_LAYERS
#include "OgreMaterial.h"               // for Material
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreTexture.h"                // for Texture
#include "OgreTextureUnitState.h"       // for TextureUnitState, etc
#include "extern/shiny/Main/MaterialInstance.hpp"  // for MaterialInstance
#include "extern/shiny/Main/MaterialInstancePass.hpp"
namespace sh { class MaterialInstanceTextureUnit; }
---
In file included from apps/openmw/mwgui/mapwindow.cpp:27:
apps/openmw/mwgui/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwgui/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:20:10: error: unknown class name 'Widget'; did you mean '::MyGUI::Widget'?
                public Widget
                       ^~~~~~
                       ::MyGUI::Widget
apps/openmw/mwgui/../mwbase/windowmanager.hpp:21:11: note: '::MyGUI::Widget' declared here
    class Widget;
          ^
apps/openmw/mwgui/repair.cpp:20:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:28:11: error: unknown type name 'IntCoord'; did you mean '::MyGUI::IntCoord'?
                virtual IntCoord getTextRegion();
                        ^~~~~~~~
                        ::MyGUI::IntCoord
/usr/include/MYGUI/MyGUI_Types.h:35:29: note: '::MyGUI::IntCoord' declared here
        typedef types::TCoord<int> IntCoord;
                                   ^

components/nifogre/mesh.hpp should add these lines:

components/nifogre/mesh.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include <stdlib.h>  // lines 8-8
- namespace Ogre { class Mesh; }  // lines 15-15

The full include-list for components/nifogre/mesh.hpp:
#include <OgreResource.h>               // for ManualResourceLoader
#include <stddef.h>                     // for size_t
#include <stdlib.h>                     // for abort
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<<, etc
namespace Nif { class NiTriShape; }  // lines 20-20
namespace Ogre { class Mesh; }  // lines 14-14
---
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:31:11: error: unknown type name 'IntSize'; did you mean '::MyGUI::IntSize'?
                virtual IntSize getTextSize();
                        ^~~~~~~
                        ::MyGUI::IntSize
/usr/include/MYGUI/MyGUI_Types.h:29:28: note: '::MyGUI::IntSize' declared here
        typedef types::TSize<int> IntSize;
                                  ^
In file included from components/widgets/list.cpp:22:
components/widgets/list.hpp:9:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:34:33: error: unknown type name 'UString'; did you mean '::MyGUI::UString'?
                virtual void setCaption(const UString& _value);
                                              ^~~~~~~
                                              ::MyGUI::UString
apps/openmw/mwgui/../mwbase/windowmanager.hpp:22:11: note: '::MyGUI::UString' declared here
    class UString;
          ^

(components/nifogre/mesh.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:36:17: error: unknown type name 'UString'; did you mean '::MyGUI::UString'?
                virtual const UString& getCaption();
                              ^~~~~~~
                              ::MyGUI::UString
apps/openmw/mwgui/../mwbase/windowmanager.hpp:22:11: note: '::MyGUI::UString' declared here
    class UString;
          ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:49:29: error: unknown type name 'Align'; did you mean '::MyGUI::Align'?
                virtual void setTextAlign(Align _value);
                                          ^~~~~
                                          ::MyGUI::Align
/usr/include/MYGUI/MyGUI_Align.h:19:22: note: '::MyGUI::Align' declared here
        struct MYGUI_EXPORT Align
                            ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:51:3: error: unknown type name 'Align'; did you mean '::MyGUI::Align'?
                Align getTextAlign();
                ^~~~~
                ::MyGUI::Align
/usr/include/MYGUI/MyGUI_Align.h:19:22: note: '::MyGUI::Align' declared here
        struct MYGUI_EXPORT Align
                            ^
In file included from apps/openmw/mwgui/mapwindow.cpp:30:
In file included from /usr/include/MYGUI/MyGUI_Button.h:11:
/usr/include/MYGUI/MyGUI_TextBox.h:54:36: error: unknown type name 'Colour'; did you mean '::MyGUI::Colour'?
                virtual void setTextColour(const Colour& _value);
                                                 ^~~~~~
                                                 ::MyGUI::Colour
/usr/include/MYGUI/MyGUI_Colour.h:16:22: note: '::MyGUI::Colour' declared here
        struct MYGUI_EXPORT Colour
                            ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/openmw/mwgui/tradeitemmodel.hpp should add these lines:

apps/openmw/mwgui/tradeitemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 10-10
- namespace MWGui { class ItemModel; }  // lines 16-16

The full include-list for apps/openmw/mwgui/tradeitemmodel.hpp:
#include <stddef.h>                     // for size_t
#include <vector>                       // for vector
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
#include "itemmodel.hpp"                // for ItemModel::ModelIndex, etc
---
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/tradeitemmodel.cpp should add these lines:

apps/openmw/mwgui/tradeitemmodel.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <stdexcept>  // lines 5-5
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 11-11
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 13-13

The full include-list for apps/openmw/mwgui/tradeitemmodel.cpp:
#include "tradeitemmodel.hpp"
#include <algorithm>                    // for max
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
---
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/travelwindow.cpp:28:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwdialogue/filter.cpp:21:
apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from components/terrain/chunk.cpp:7:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:8:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwdialogue/filter.cpp:21:
apps/openmw/mwdialogue/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwdialogue/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/inventorywindow.cpp:26:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from components/terrain/chunk.cpp:7:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from components/terrain/chunk.cpp:7:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwgui/tradewindow.hpp should add these lines:
namespace Gui { class NumericEditBox; }

apps/openmw/mwgui/tradewindow.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include "MyGUI_MouseButton.h"  // lines 8-8
- class NumericEditBox;  // lines 31-31
- namespace MWWorld { class Ptr; }  // lines 22-22
- namespace MyGUI { class Button; }  // lines 25-25
- namespace MyGUI { class TextBox; }  // lines 27-27
- namespace MyGUI { class Widget; }  // lines 28-28

The full include-list for apps/openmw/mwgui/tradewindow.hpp:
#include <stddef.h>                     // for size_t
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace Gui { class NumericEditBox; }
namespace MWGui { class ItemView; }  // lines 43-43
namespace MWGui { class SortFilterItemModel; }  // lines 44-44
namespace MWGui { class TradeItemModel; }  // lines 45-45
namespace MWWorld { class Ptr; }  // lines 20-20
namespace MyGUI { class Button; }  // lines 14-14
namespace MyGUI { class ControllerItem; }  // lines 38-38
namespace MyGUI { class TextBox; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 16-16
---

apps/openmw/mwgui/tradewindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/tradewindow.cpp should remove these lines:
- #include <limits.h>  // lines 6-6
- #include <stdlib.h>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <string>  // lines 12-12
- #include <typeinfo>  // lines 13-13
- #include <typeinfo>  // lines 14-14
- #include <vector>  // lines 15-15
- #include <vector>  // lines 16-16
- #include "../mwbase/mechanicsmanager.hpp"  // lines 20-20
- #include "../mwbase/soundmanager.hpp"  // lines 21-21
- #include "MyGUI_ControllerItem.h"  // lines 26-26
- #include "MyGUI_ControllerItem.h"  // lines 27-27
- #include "MyGUI_RTTI.h"  // lines 31-31
- #include "MyGUI_StringUtility.h"  // lines 32-32
- #include "MyGUI_StringUtility.h"  // lines 33-33
- #include "MyGUI_TextBox.h"  // lines 34-34
- #include "MyGUI_TextBox.h"  // lines 35-35
- #include "MyGUI_Widget.h"  // lines 36-36
- #include "MyGUI_Widget.h"  // lines 37-37
- #include "MyGUI_WidgetInput.h"  // lines 38-38
- #include "MyGUI_WidgetInput.h"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwworld/esmstore.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwworld/esmstore.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/mode.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/mode.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/referenceinterface.hpp"  // lines 55-55
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 56-56
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 57-57
- #include "components/esm/attr.hpp"  // lines 59-59
- #include "components/esm/loadgmst.hpp"  // lines 60-60
- #include "components/esm/loadgmst.hpp"  // lines 61-61
- #include "components/esm/loadnpc.hpp"  // lines 62-62
- #include "components/esm/loadnpc.hpp"  // lines 63-63
- #include "components/esm/loadskil.hpp"  // lines 65-65
- #include "components/misc/stringops.hpp"  // lines 66-66
- #include "components/misc/stringops.hpp"  // lines 67-67
- #include "containeritemmodel.hpp"  // lines 68-68
- #include "dialogue.hpp"  // lines 71-71
- #include "inventorywindow.hpp"  // lines 72-72

The full include-list for apps/openmw/mwgui/tradewindow.cpp:
#include "tradewindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_InputManager.h>         // for InputManager
#include <limits.h>                     // for INT_MIN, INT_MAX
#include <stdlib.h>                     // for abs, rand
#include <components/widgets/numericeditbox.hpp>  // for NumericEditBox
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_RTTI.h"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "controllers.hpp"              // for ControllerRepeatEvent
#include "countdialog.hpp"              // for CountDialog, etc
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
#include "tradeitemmodel.hpp"           // for TradeItemModel
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---

(apps/openmw/mwscript/statsextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/statsextensions.cpp should add these lines:
namespace MWBase { namespace Loading { namespace ESM { struct Class; } } }
namespace MWBase { namespace Loading { namespace MWBase { class World; } } }

apps/openmw/mwscript/statsextensions.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <components/compiler/opcodes.hpp>  // lines 4-4
- #include <components/interpreter/interpreter.hpp>  // lines 5-5
- #include <components/interpreter/opcodes.hpp>  // lines 6-6
- #include <components/interpreter/runtime.hpp>  // lines 7-7
- #include <iostream>  // lines 12-12
- #include <map>  // lines 13-13
- #include <map>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <stdexcept>  // lines 16-16
- #include <string>  // lines 18-18
- #include <utility>  // lines 19-19
- #include <utility>  // lines 20-20
- #include "../mwbase/environment.hpp"  // lines 22-22
- #include "../mwbase/mechanicsmanager.hpp"  // lines 23-23
- #include "../mwmechanics/npcstats.hpp"  // lines 24-24
- #include "../mwworld/class.hpp"  // lines 25-25
- #include "../mwworld/esmstore.hpp"  // lines 26-26
- #include "../mwworld/player.hpp"  // lines 27-27
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"  // lines 28-28
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"  // lines 29-29
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 30-30
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 31-31
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/magiceffects.hpp"  // lines 32-32
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp"  // lines 33-33
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp"  // lines 34-34
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/stat.hpp"  // lines 35-35
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/stat.hpp"  // lines 36-36
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 37-37
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 38-38
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 39-39
- #include "apps/openmw/mwscript/../mwworld/../mwworld/livecellref.hpp"  // lines 40-40
- #include "apps/openmw/mwscript/../mwworld/../mwworld/livecellref.hpp"  // lines 41-41
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 42-42
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 43-43
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 44-44
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 45-45
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 46-46
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 47-47
- #include "components/esm/loadclas.hpp"  // lines 48-48
- #include "components/esm/loadclas.hpp"  // lines 49-49
- #include "components/esm/loadfact.hpp"  // lines 50-50
- #include "components/esm/loadfact.hpp"  // lines 51-51
- #include "components/esm/loadmgef.hpp"  // lines 52-52
- #include "components/esm/loadmgef.hpp"  // lines 53-53
- #include "components/esm/loadspel.hpp"  // lines 54-54
- #include "components/esm/loadspel.hpp"  // lines 55-55
- #include "components/interpreter/types.hpp"  // lines 56-56
- #include "components/interpreter/types.hpp"  // lines 57-57
- #include "components/misc/stringops.hpp"  // lines 59-59
- #include "ref.hpp"  // lines 60-60

The full include-list for apps/openmw/mwscript/statsextensions.cpp:
#include "statsextensions.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWBase { namespace Loading { namespace ESM { struct Class; } } }
namespace MWBase { namespace Loading { namespace MWBase { class World; } } }
---
In file included from apps/openmw/mwgui/messagebox.cpp:27:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

components/widgets/list.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1, etc

components/widgets/list.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include <vector>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "MyGUI_RTTI.h"  // lines 12-12
- #include "MyGUI_Widget.h"  // lines 14-14
- namespace MyGUI { class ScrollView; }  // lines 19-19

The full include-list for components/widgets/list.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1, etc
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Widget.h"               // for Widget
namespace MyGUI { class ScrollView; }  // lines 17-17
---

components/widgets/list.cpp should add these lines:

components/widgets/list.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 3-3
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include "MyGUI_Align.h"  // lines 10-10
- #include "MyGUI_Align.h"  // lines 11-11
- #include "MyGUI_ISubWidgetText.h"  // lines 12-12
- #include "MyGUI_ISubWidgetText.h"  // lines 13-13
- #include "MyGUI_ScrollView.h"  // lines 15-15
- #include "MyGUI_Types.h"  // lines 17-17
- #include "MyGUI_UString.h"  // lines 18-18
- #include "MyGUI_UString.h"  // lines 19-19
- #include "MyGUI_WidgetInput.h"  // lines 20-20
- #include "MyGUI_WidgetInput.h"  // lines 21-21

The full include-list for components/widgets/list.cpp:
#include "list.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include "MyGUI_ScrollView.h"           // for ScrollView
#include "MyGUI_Types.h"                // for IntPoint, IntSize
---

components/bsa/resources.hpp should add these lines:

components/bsa/resources.hpp should remove these lines:
- namespace Files { class Collections; }  // lines 10-10

The full include-list for components/bsa/resources.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
namespace Files { class Collections; }  // lines 8-8
---

components/bsa/resources.cpp should add these lines:

components/bsa/resources.cpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 5-5
- #include <stdexcept>  // lines 8-8
- #include "components/bsa/../files/collections.hpp"  // lines 12-12
- #include "components/bsa/../files/multidircollection.hpp"  // lines 14-14

The full include-list for components/bsa/resources.cpp:
#include "resources.hpp"
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <OgreStringConverter.h>        // for StringConverter
#include <boost/filesystem/path.hpp>    // for path
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include "bsa_archive.hpp"              // for addBSA, addDir
#include "components/bsa/../files/collections.hpp"  // for Collections
#include "components/bsa/../files/multidircollection.hpp"
---

apps/openmw/mwdialogue/scripttest.hpp should add these lines:

apps/openmw/mwdialogue/scripttest.hpp should remove these lines:
- #include <utility>  // lines 5-5
- namespace Compiler { class Extensions; }  // lines 10-10

The full include-list for apps/openmw/mwdialogue/scripttest.hpp:
#include <utility>                      // for pair
namespace Compiler { class Extensions; }  // lines 8-8
---
In file included from extern/shiny/Main/PropertyBase.cpp:10:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

apps/openmw/mwdialogue/scripttest.cpp should add these lines:
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwdialogue/scripttest.cpp should remove these lines:
- #include <exception>  // lines 7-7
- #include <iostream>  // lines 9-9
- #include <string>  // lines 11-11
- #include <vector>  // lines 13-13
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp"  // lines 20-20
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp"  // lines 21-21
- #include "apps/openmw/mwdialogue/../mwworld/esmstore.hpp"  // lines 23-23
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/loadcrea.hpp"  // lines 27-27
- #include "components/esm/loaddial.hpp"  // lines 29-29
- #include "components/esm/loadinfo.hpp"  // lines 31-31
- #include "components/esm/loadnpc.hpp"  // lines 33-33
- namespace Compiler { class Extensions; }  // lines 40-40

The full include-list for apps/openmw/mwdialogue/scripttest.cpp:
#include "scripttest.hpp"
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/locals.hpp>  // for Locals
#include <components/compiler/scanner.hpp>  // for Scanner
#include <components/compiler/scriptparser.hpp>  // for ScriptParser
#include <components/compiler/streamerrorhandler.hpp>
#include <exception>                    // for exception
#include <iostream>                     // for ostream, endl, etc
#include <string>                       // for allocator, string, etc
#include <vector>                       // for vector, vector<>::iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/world.hpp"          // for World
#include "../mwscript/compilercontext.hpp"  // for CompilerContext, etc
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwdialogue/../mwworld/esmstore.hpp"  // for ESMStore
#include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddial.hpp"  // for Dialogue
#include "components/esm/loadinfo.hpp"  // for DialInfo
#include "components/esm/loadnpc.hpp"   // for NPC
#include "filter.hpp"                   // for Filter
namespace Compiler { class Extensions; }  // lines 38-38
---
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
extern/shiny/Main/PropertyBase.cpp:15:12: error: cannot define or redeclare 'IntValue' here because namespace 'sh' does not enclose namespace 'IntValue'
        IntValue::IntValue(int in)
        ~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:16:12: error: use of undeclared identifier 'in'
                : mValue(in)
                         ^
extern/shiny/Main/PropertyBase.cpp:20:12: error: cannot define or redeclare 'IntValue' here because namespace 'sh' does not enclose namespace 'IntValue'
        IntValue::IntValue(const std::string& in)
        ~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:22:3: error: use of undeclared identifier 'mValue'
                mValue = boost::lexical_cast<int>(in);
                ^
extern/shiny/Main/PropertyBase.cpp:22:37: error: use of undeclared identifier 'in'
                mValue = boost::lexical_cast<int>(in);
                                                  ^
extern/shiny/Main/PropertyBase.cpp:25:24: error: cannot define or redeclare 'serialize' here because namespace 'sh' does not enclose namespace 'IntValue'
        std::string IntValue::serialize()
                    ~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:32:16: error: cannot define or redeclare 'BooleanValue' here because namespace 'sh' does not enclose namespace 'BooleanValue'
        BooleanValue::BooleanValue (bool in)
        ~~~~~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:33:12: error: use of undeclared identifier 'in'
                : mValue(in)
                         ^
extern/shiny/Main/PropertyBase.cpp:37:16: error: cannot define or redeclare 'BooleanValue' here because namespace 'sh' does not enclose namespace 'BooleanValue'
        BooleanValue::BooleanValue (const std::string& in)
        ~~~~~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:39:7: error: use of undeclared identifier 'in'
                if (in == "true")
                    ^
extern/shiny/Main/PropertyBase.cpp:40:4: error: use of undeclared identifier 'mValue'
                        mValue = true;
                        ^
extern/shiny/Main/PropertyBase.cpp:41:12: error: use of undeclared identifier 'in'
                else if (in == "false")
                         ^
extern/shiny/Main/PropertyBase.cpp:42:4: error: use of undeclared identifier 'mValue'
                        mValue = false;
                        ^
extern/shiny/Main/PropertyBase.cpp:46:65: error: use of undeclared identifier 'in'
                        msg << "sh::BooleanValue: Warning: Unrecognized value \"" << in << "\" for property value of type BooleanValue";
                                                                                     ^
extern/shiny/Main/PropertyBase.cpp:51:28: error: cannot define or redeclare 'serialize' here because namespace 'sh' does not enclose namespace 'BooleanValue'
        std::string BooleanValue::serialize ()
                    ~~~~~~~~~~~~~~^
extern/shiny/Main/PropertyBase.cpp:53:7: error: use of undeclared identifier 'mValue'
                if (mValue)
                    ^
extern/shiny/Main/PropertyBase.cpp:61:15: error: cannot define or redeclare 'StringValue' here because namespace 'sh' does not enclose namespace 'StringValue'
        StringValue::StringValue (const std::string& in)
        ~~~~~~~~~~~~~^
In file included from apps/openmw/mwgui/debugwindow.cpp:27:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwgui/repair.hpp should add these lines:

apps/openmw/mwgui/repair.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 17-17
- namespace MyGUI { class Button; }  // lines 20-20
- namespace MyGUI { class ScrollView; }  // lines 22-22
- namespace MyGUI { class TextBox; }  // lines 23-23
- namespace MyGUI { class Widget; }  // lines 24-24

The full include-list for apps/openmw/mwgui/repair.hpp:
#include "../mwmechanics/repair.hpp"    // for Repair
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ItemWidget; }  // lines 30-30
namespace MWWorld { class Ptr; }  // lines 15-15
namespace MyGUI { class Button; }  // lines 8-8
namespace MyGUI { class ScrollView; }  // lines 9-9
namespace MyGUI { class TextBox; }  // lines 10-10
namespace MyGUI { class Widget; }  // lines 11-11
---
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/repair.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/repair.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <iomanip>  // lines 5-5
- #include <ostream>  // lines 7-7
- #include <string>  // lines 8-8
- #include <string>  // lines 9-9
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_Button.h"  // lines 18-18
- #include "MyGUI_Button.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_TPoint.h"  // lines 27-27
- #include "MyGUI_TSize.h"  // lines 29-29
- #include "MyGUI_TextBox.h"  // lines 31-31
- #include "MyGUI_Types.h"  // lines 33-33
- #include "MyGUI_Widget.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwmechanics/repair.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 49-49
- #include "components/esm/loadrepa.hpp"  // lines 50-50
- #include "components/esm/loadrepa.hpp"  // lines 51-51

The full include-list for apps/openmw/mwgui/repair.cpp:
#include "repair.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <ostream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwmechanics/repair.hpp"  // for Repair
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "itemwidget.hpp"               // for ItemWidget
#include "widgets.hpp"                  // for MWDynamicStat, etc
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
In file included from ./apps/openmw/mwscript/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:25:
In file included from apps/openmw/mwdialogue/../mwbase/soundmanager.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
In file included from ./apps/openmw/mwscript/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
In file included from ./apps/openmw/mwscript/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:1:
/usr/include/MYGUI/MyGUI_ClipboardManager.h:51:3: error: use of undeclared identifier 'delegates'
                delegates::CMultiDelegate2<const std::string&, const std::string&> eventClipboardChanged;
                ^
/usr/include/MYGUI/MyGUI_ClipboardManager.h:51:29: error: expected member name or ';' after declaration specifiers
                delegates::CMultiDelegate2<const std::string&, const std::string&> eventClipboardChanged;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
./apps/openmw/mwscript/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
./apps/openmw/mwscript/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwscript/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
/usr/include/MYGUI/MyGUI_ClipboardManager.h:59:3: error: use of undeclared identifier 'delegates'
                delegates::CMultiDelegate2<const std::string&, std::string&> eventClipboardRequested;
                ^
/usr/include/MYGUI/MyGUI_ClipboardManager.h:59:29: error: expected member name or ';' after declaration specifiers
                delegates::CMultiDelegate2<const std::string&, std::string&> eventClipboardRequested;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~^
./apps/openmw/mwscript/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/globalscripts.cpp:14:
./apps/openmw/mwscript/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/loadingscreen.hpp should add these lines:
#include "OgreStringVector.h"           // for StringVector

apps/openmw/mwgui/loadingscreen.hpp should remove these lines:
- #include <OgreTimer.h>  // lines 4-4
- #include <stddef.h>  // lines 7-7
- #include <string>  // lines 9-9
- #include "GLX/OgreTimerImp.h"  // lines 12-12
- namespace MyGUI { namespace MyGUI { class ScrollBar; } }  // lines 17-17
- namespace MyGUI { namespace MyGUI { class TextBox; } }  // lines 18-18
- namespace MyGUI { namespace MyGUI { class Widget; } }  // lines 19-19
- namespace MyGUI { namespace Ogre { class RenderWindow; } }  // lines 22-22

The full include-list for apps/openmw/mwgui/loadingscreen.hpp:
#include <stddef.h>                     // for size_t
#include <components/loadinglistener/loadinglistener.hpp>  // for Listener
#include <string>                       // for string
#include "GLX/OgreTimerImp.h"           // for Timer
#include "OgreStringVector.h"           // for StringVector
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class BackgroundImage; }  // lines 41-41
namespace MyGUI { class ScrollBar; }  // lines 25-25
namespace MyGUI { class TextBox; }  // lines 26-26
namespace MyGUI { class Widget; }  // lines 27-27
namespace Ogre { class RenderWindow; }  // lines 31-31
namespace Ogre { class SceneManager; }  // lines 36-36
---

apps/openmw/mwgui/loadingscreen.cpp should add these lines:

apps/openmw/mwgui/loadingscreen.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <iostream>  // lines 8-8
- #include <iostream>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "GLX/../OgrePrerequisites.h"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_Types.h"  // lines 23-23
- #include "MyGUI_Widget.h"  // lines 25-25
- #include "OgreHardwareBuffer.h"  // lines 26-26
- #include "OgreHardwareBuffer.h"  // lines 27-27
- #include "OgreImage.h"  // lines 28-28
- #include "OgreImage.h"  // lines 29-29
- #include "OgreRenderQueue.h"  // lines 31-31
- #include "OgreResourceGroupManager.h"  // lines 33-33
- #include "OgreSharedPtr.h"  // lines 35-35
- #include "OgreStringVector.h"  // lines 37-37
- #include "OgreTexture.h"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 43-43
- #include "components/settings/settings.hpp"  // lines 45-45
- #include "components/settings/settings.hpp"  // lines 46-46

The full include-list for apps/openmw/mwgui/loadingscreen.cpp:
#include "loadingscreen.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <OgreTextureManager.h>         // for TextureManager
#include <stdlib.h>                     // for rand
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "OgreRenderQueue.h"
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringVector.h"           // for StringVector, etc
#include "OgreTexture.h"                // for Texture
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
#include "backgroundimage.hpp"          // for BackgroundImage
---

apps/openmw/mwgui/travelwindow.hpp should add these lines:

apps/openmw/mwgui/travelwindow.hpp should remove these lines:
- #include <string>  // lines 6-6
- class Button;  // lines 27-27
- class ScrollView;  // lines 28-28
- class TextBox;  // lines 29-29
- namespace MWGui { class WindowManager; }  // lines 40-40
- namespace MWWorld { class Ptr; }  // lines 25-25
- namespace MyGUI { class Gui; }  // lines 34-34
- struct Position;  // lines 22-22

The full include-list for apps/openmw/mwgui/travelwindow.hpp:
#include <string>                       // for string
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace ESM { struct Position; }  // lines 12-12
namespace MWWorld { class Ptr; }  // lines 15-15
namespace MyGUI { class Button; }  // lines 18-18
namespace MyGUI { class ScrollView; }  // lines 19-19
namespace MyGUI { class TextBox; }  // lines 20-20
namespace MyGUI { class Widget; }  // lines 35-35
---

apps/openmw/mwgui/travelwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/travelwindow.cpp should remove these lines:
- #include <math.h>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <istream>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "../mwbase/soundmanager.hpp"  // lines 17-17
- #include "../mwworld/cellstore.hpp"  // lines 22-22
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "MyGUI_Align.h"  // lines 26-26
- #include "MyGUI_Align.h"  // lines 27-27
- #include "MyGUI_RTTI.h"  // lines 30-30
- #include "MyGUI_RTTI.h"  // lines 31-31
- #include "MyGUI_StringUtility.h"  // lines 32-32
- #include "MyGUI_StringUtility.h"  // lines 33-33
- #include "MyGUI_TextBox.h"  // lines 35-35
- #include "MyGUI_Types.h"  // lines 37-37
- #include "MyGUI_Widget.h"  // lines 38-38
- #include "MyGUI_Widget.h"  // lines 39-39
- #include "MyGUI_WidgetInput.h"  // lines 40-40
- #include "MyGUI_WidgetInput.h"  // lines 41-41
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 53-53
- #include "components/esm/defs.hpp"  // lines 55-55
- #include "components/esm/loadgmst.hpp"  // lines 56-56
- #include "components/esm/loadgmst.hpp"  // lines 57-57
- #include "components/esm/loadnpc.hpp"  // lines 58-58
- #include "components/esm/loadnpc.hpp"  // lines 59-59

The full include-list for apps/openmw/mwgui/travelwindow.cpp:
#include "travelwindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <OgreVector3.h>                // for Vector3
#include <math.h>                       // for pow, sqrt
#include <istream>                      // for basic_istream::operator>>, etc
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/actionteleport.hpp"  // for ActionTeleport
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/defs.hpp"      // for Position
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---

apps/openmw/mwdialogue/filter.hpp should add these lines:

apps/openmw/mwdialogue/filter.hpp should remove these lines:
- #include <vector>  // lines 5-5
- #include "../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwdialogue/filter.hpp:
#include <string>                       // for string
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { struct DialInfo; }  // lines 12-12
namespace ESM { struct Dialogue; }  // lines 13-13
namespace MWDialogue { class SelectWrapper; }  // lines 18-18
---

apps/openmw/mwdialogue/filter.cpp should add these lines:
#include <vector>                       // for vector
#include "apps/openmw/mwdialogue/../mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
namespace ESM { struct NPC; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwdialogue/filter.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <list>  // lines 5-5
- #include <list>  // lines 6-6
- #include <map>  // lines 7-7
- #include <map>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include <stdexcept>  // lines 10-10
- #include <typeinfo>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <utility>  // lines 13-13
- #include <utility>  // lines 14-14
- #include "../mwmechanics/magiceffects.hpp"  // lines 22-22
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/aisequence.hpp"  // lines 28-28
- #include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/stat.hpp"  // lines 30-30
- #include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"  // lines 32-32
- #include "apps/openmw/mwdialogue/../mwworld/containerstore.hpp"  // lines 34-34
- #include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"  // lines 35-35
- #include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"  // lines 36-36
- #include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // lines 38-38
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 40-40
- #include "components/esm/loadcrea.hpp"  // lines 41-41
- #include "components/esm/loadcrea.hpp"  // lines 42-42
- #include "components/esm/loaddial.hpp"  // lines 43-43
- #include "components/esm/loaddial.hpp"  // lines 44-44
- #include "components/esm/loadfact.hpp"  // lines 46-46
- #include "components/esm/loadinfo.hpp"  // lines 48-48
- #include "components/esm/loadmgef.hpp"  // lines 50-50
- #include "components/esm/loadnpc.hpp"  // lines 51-51
- #include "components/esm/loadnpc.hpp"  // lines 52-52
- #include "components/misc/stringops.hpp"  // lines 54-54

The full include-list for apps/openmw/mwdialogue/filter.cpp:
#include "filter.hpp"
#include <stddef.h>                     // for NULL
#include <components/compiler/locals.hpp>  // for Locals
#include <vector>                       // for vector
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwdialogue/../mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/stat.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"
#include "apps/openmw/mwdialogue/../mwworld/containerstore.hpp"
#include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/loadfact.hpp"  // for RankData, Faction, etc
#include "components/esm/loadinfo.hpp"  // for DialInfo, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "selectwrapper.hpp"            // for SelectWrapper, etc
namespace ESM { struct NPC; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from components/nifogre/ogrenifloader.cpp:50:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from components/config/gamesettings.cpp:2:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from components/nifogre/ogrenifloader.cpp:50:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^

apps/openmw/mwgui/messagebox.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1
namespace MyGUI { class EditBox; }

apps/openmw/mwgui/messagebox.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include <vector>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "MyGUI_KeyCode.h"  // lines 12-12
- #include "MyGUI_Types.h"  // lines 14-14
- #include "openengine/gui/layout.hpp"  // lines 18-18
- namespace MWGui { class MessageBoxManager; }  // lines 33-33
- namespace MyGUI { class Button; }  // lines 25-25

The full include-list for apps/openmw/mwgui/messagebox.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "openengine/gui/layout.hpp"    // for Layout
#include "windowbase.hpp"               // for WindowModal
namespace MWGui { class InteractiveMessageBox; }  // lines 31-31
namespace MWGui { class MessageBox; }  // lines 32-32
namespace MyGUI { class EditBox; }
namespace MyGUI { class Widget; }  // lines 26-26
---
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:34:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:34:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/mwscript/userextensions.cpp:4:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
apps/openmw/mwscript/userextensions.cpp:71:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser1, new OpUser1);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/userextensions.cpp:72:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser2, new OpUser2);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/userextensions.cpp:73:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser3, new OpUser3<ImplicitRef>);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/userextensions.cpp:74:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser3Explicit, new OpUser3<ExplicitRef>);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/userextensions.cpp:75:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser4, new OpUser4<ImplicitRef>);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/userextensions.cpp:76:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::User::opcodeUser4Explicit, new OpUser4<ExplicitRef>);
                       ^
apps/openmw/mwscript/userextensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from components/config/gamesettings.cpp:2:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from components/nifogre/ogrenifloader.cpp:50:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/openmw/mwgui/messagebox.cpp should add these lines:

apps/openmw/mwgui/messagebox.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include "../mwbase/environment.hpp"  // lines 11-11
- #include "../mwbase/inputmanager.hpp"  // lines 12-12
- #include "MyGUI_Align.h"  // lines 13-13
- #include "MyGUI_Align.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_TSize.h"  // lines 18-18
- #include "MyGUI_UString.h"  // lines 20-20
- #include "MyGUI_Widget.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 23-23
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "MyGUI_WidgetStyle.h"  // lines 25-25
- #include "MyGUI_WidgetStyle.h"  // lines 26-26
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/messagebox.cpp:
#include "messagebox.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <stddef.h>                     // for NULL
#include <components/misc/stringops.hpp>  // for StringUtils
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
---

(apps/openmw/mwscript/miscextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/miscextensions.cpp should add these lines:
namespace MWBase { namespace Loading { namespace MWScript { class InterpreterContext; } } }
namespace MWBase { namespace Loading { namespace MWScript { struct Locals; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class ESMStore; } } }

apps/openmw/mwscript/miscextensions.cpp should remove these lines:
- #include <stddef.h>  // lines 9-9
- #include <cmath>  // lines 10-10
- #include <cmath>  // lines 11-11
- #include <components/compiler/locals.hpp>  // lines 2-2
- #include <components/compiler/opcodes.hpp>  // lines 3-3
- #include <components/esm/loadcrea.hpp>  // lines 4-4
- #include <components/esm/loadmgef.hpp>  // lines 5-5
- #include <components/interpreter/opcodes.hpp>  // lines 6-6
- #include <components/interpreter/runtime.hpp>  // lines 7-7
- #include <ostream>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <stdexcept>  // lines 16-16
- #include <string>  // lines 18-18
- #include <typeinfo>  // lines 19-19
- #include <typeinfo>  // lines 20-20
- #include <vector>  // lines 21-21
- #include <vector>  // lines 22-22
- #include "../mwbase/environment.hpp"  // lines 24-24
- #include "../mwbase/scriptmanager.hpp"  // lines 25-25
- #include "../mwbase/windowmanager.hpp"  // lines 26-26
- #include "../mwmechanics/creaturestats.hpp"  // lines 27-27
- #include "../mwmechanics/npcstats.hpp"  // lines 28-28
- #include "../mwmechanics/spellcasting.hpp"  // lines 29-29
- #include "../mwworld/cellstore.hpp"  // lines 30-30
- #include "../mwworld/class.hpp"  // lines 31-31
- #include "../mwworld/containerstore.hpp"  // lines 32-32
- #include "../mwworld/esmstore.hpp"  // lines 33-33
- #include "../mwworld/player.hpp"  // lines 34-34
- #include "OgreVector3.h"  // lines 35-35
- #include "OgreVector3.h"  // lines 36-36
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 37-37
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 38-38
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"  // lines 39-39
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"  // lines 40-40
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/drawstate.hpp"  // lines 41-41
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/drawstate.hpp"  // lines 42-42
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/magiceffects.hpp"  // lines 43-43
- #include "apps/openmw/mwscript/../mwbase/../mwmechanics/magiceffects.hpp"  // lines 44-44
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 45-45
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 46-46
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 48-48
- #include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"  // lines 49-49
- #include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"  // lines 50-50
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 51-51
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 52-52
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 53-53
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 54-54
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 55-55
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 56-56
- #include "components/esm/cellref.hpp"  // lines 57-57
- #include "components/esm/cellref.hpp"  // lines 58-58
- #include "components/esm/defs.hpp"  // lines 59-59
- #include "components/esm/defs.hpp"  // lines 60-60
- #include "components/esm/loadcell.hpp"  // lines 61-61
- #include "components/esm/loadcell.hpp"  // lines 62-62
- #include "components/esm/loaddoor.hpp"  // lines 63-63
- #include "components/esm/loaddoor.hpp"  // lines 64-64
- #include "components/esm/loadlevlist.hpp"  // lines 65-65
- #include "components/esm/loadlevlist.hpp"  // lines 66-66
- #include "components/interpreter/context.hpp"  // lines 67-67
- #include "components/interpreter/context.hpp"  // lines 68-68
- #include "components/interpreter/types.hpp"  // lines 69-69
- #include "components/interpreter/types.hpp"  // lines 70-70
- #include "components/misc/stringops.hpp"  // lines 71-71
- #include "components/misc/stringops.hpp"  // lines 72-72
- #include "interpretercontext.hpp"  // lines 73-73
- #include "ref.hpp"  // lines 75-75

The full include-list for apps/openmw/mwscript/miscextensions.cpp:
#include "miscextensions.hpp"
#include <stddef.h>                     // for size_t
#include <cstdlib>                      // for strtol
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World, etc
namespace MWBase { namespace Loading { namespace MWScript { class InterpreterContext; } } }
namespace MWBase { namespace Loading { namespace MWScript { struct Locals; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class ESMStore; } } }
---
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:28:
apps/openmw/mwdialogue/../mwgui/dialogue.hpp:20:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/debugwindow.hpp should add these lines:

apps/openmw/mwgui/debugwindow.hpp should remove these lines:
- namespace MyGUI { class EditBox; }  // lines 10-10
- namespace MyGUI { class TabControl; }  // lines 11-11

The full include-list for apps/openmw/mwgui/debugwindow.hpp:
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class EditBox; }  // lines 7-7
namespace MyGUI { class TabControl; }  // lines 8-8
---

apps/openmw/mwgui/debugwindow.cpp should add these lines:
namespace MyGUI { class TabItem; }

apps/openmw/mwgui/debugwindow.cpp should remove these lines:
- #include <MyGUI_TabItem.h>  // lines 5-5
- #include <stddef.h>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <ostream>  // lines 11-11
- #include <string>  // lines 13-13
- #include "LinearMath/btScalar.h"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_Align.h"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 21-21
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_Types.h"  // lines 24-24
- #include "MyGUI_Widget.h"  // lines 26-26
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/debugwindow.cpp:
#include "debugwindow.hpp"
#include <LinearMath/btQuickprof.h>     // for CProfileIterator, etc
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_TabControl.h>           // for TabControl
#include <stddef.h>                     // for size_t
#include <ostream>                      // for stringstream, basic_ostream
#include <string>                       // for string
#include "LinearMath/btScalar.h"        // for SIMD_EPSILON
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
namespace MyGUI { class TabItem; }
---

(components/misc/resourcehelpers.hpp has correct #includes/fwd-decls)

components/misc/resourcehelpers.cpp should add these lines:

components/misc/resourcehelpers.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include <ostream>  // lines 6-6
- #include "OgrePrerequisites.h"  // lines 9-9

The full include-list for components/misc/resourcehelpers.cpp:
#include "resourcehelpers.hpp"
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <algorithm>                    // for find_if
#include <components/misc/stringops.hpp>  // for StringUtils
#include <ostream>                      // for basic_ostream, etc
#include "OgrePrerequisites.h"          // for String
---

(apps/openmw/mwscript/userextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/userextensions.cpp should add these lines:

apps/openmw/mwscript/userextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 4-4
- namespace MWScript { struct ExplicitRef; }  // lines 11-11
- namespace MWScript { struct ImplicitRef; }  // lines 12-12

The full include-list for apps/openmw/mwscript/userextensions.cpp:
#include "userextensions.hpp"
#include <components/interpreter/context.hpp>  // for Context
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
---
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/locals.hpp should add these lines:

apps/openmw/mwscript/locals.hpp should remove these lines:
- #include <string>  // lines 6-6

The full include-list for apps/openmw/mwscript/locals.hpp:
#include <components/interpreter/types.hpp>  // for Type_Float, etc
#include <string>                       // for string
#include <vector>                       // for vector
namespace ESM { struct Locals; }  // lines 11-11
namespace ESM { struct Script; }  // lines 12-12
---
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:32:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/locals.cpp should add these lines:

apps/openmw/mwscript/locals.cpp should remove these lines:
- #include <exception>  // lines 7-7
- #include <utility>  // lines 10-10
- #include "components/interpreter/types.hpp"  // lines 15-15

The full include-list for apps/openmw/mwscript/locals.cpp:
#include "locals.hpp"
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/locals.hpp>  // for Locals
#include <components/esm/loadscpt.hpp>  // for Script
#include <components/esm/locals.hpp>    // for Locals
#include <components/esm/variant.hpp>   // for Variant, VarType::VT_Int, etc
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <utility>                      // for pair, make_pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "components/interpreter/types.hpp"  // for Type_Float, etc
---
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/guiextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/companionitemmodel.cpp:1:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwgui/mapwindow.hpp should add these lines:

apps/openmw/mwgui/mapwindow.hpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <components/esm/cellid.hpp>  // lines 4-4
- #include <set>  // lines 9-9
- #include <string>  // lines 11-11
- #include <utility>  // lines 13-13
- #include <vector>  // lines 14-14
- #include <vector>  // lines 15-15
- #include "MyGUI_MouseButton.h"  // lines 19-19
- #include "MyGUI_MouseButton.h"  // lines 26-26
- #include "MyGUI_Types.h"  // lines 20-20
- #include "MyGUI_Types.h"  // lines 21-21
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23
- #include "windowpinnablebase.hpp"  // lines 24-24
- namespace MWBase { namespace MWGui { namespace MWGui { class DragAndDrop; } } }  // lines 30-30
- namespace MWBase { namespace MyGUI { class Button; } }  // lines 41-41
- namespace MWBase { namespace MyGUI { class ImageBox; } }  // lines 42-42
- namespace MWBase { namespace MyGUI { class ScrollView; } }  // lines 43-43
- namespace MWBase { namespace MyGUI { class TextBox; } }  // lines 45-45
- namespace MWBase { namespace MyGUI { class Widget; } }  // lines 46-46

The full include-list for apps/openmw/mwgui/mapwindow.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint32_t
#include <components/esm/custommarkerstate.hpp>  // for CustomMarker
#include <string>                       // for string
#include <utility>                      // for pair
namespace MWBase { class DragAndDrop; }  // lines 27-27
namespace MWBase { namespace ESM { class ESMReader; } }  // lines 56-56
namespace MWBase { namespace ESM { class ESMWriter; } }  // lines 57-57
namespace MWBase { namespace Loading { class Listener; } }  // lines 62-62
namespace MWBase { namespace MWGui { namespace MyGUI { class Button; } } }  // lines 33-33
namespace MWBase { namespace MWGui { namespace MyGUI { class ImageBox; } } }  // lines 34-34
namespace MWBase { namespace MWGui { namespace MyGUI { class ScrollView; } } }  // lines 35-35
namespace MWBase { namespace MWGui { namespace MyGUI { class TextBox; } } }  // lines 36-36
namespace MWBase { namespace MWGui { namespace MyGUI { class Widget; } } }  // lines 37-37
namespace MWBase { namespace MWRender { class GlobalMap; } }  // lines 51-51
---

apps/openmw/mwgui/mapwindow.cpp should add these lines:
namespace MWBase { namespace MWGui { class ConfirmationDialog; } }

apps/openmw/mwgui/mapwindow.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <MyGUI_Gui.h>  // lines 2-2
- #include <MyGUI_ImageBox.h>  // lines 3-3
- #include <MyGUI_InputManager.h>  // lines 4-4
- #include <MyGUI_LanguageManager.h>  // lines 5-5
- #include <MyGUI_RenderManager.h>  // lines 6-6
- #include <MyGUI_RotatingSkin.h>  // lines 7-7
- #include <MyGUI_ScrollView.h>  // lines 8-8
- #include <stdlib.h>  // lines 13-13
- #include <algorithm>  // lines 14-14
- #include <algorithm>  // lines 15-15
- #include <cmath>  // lines 17-17
- #include <components/esm/globalmap.hpp>  // lines 11-11
- #include <stdexcept>  // lines 18-18
- #include <stdexcept>  // lines 19-19
- #include "../mwbase/windowmanager.hpp"  // lines 22-22
- #include "../mwrender/globalmap.hpp"  // lines 24-24
- #include "../mwworld/esmstore.hpp"  // lines 26-26
- #include "../mwworld/player.hpp"  // lines 27-27
- #include "MyGUI_Align.h"  // lines 28-28
- #include "MyGUI_Align.h"  // lines 29-29
- #include "MyGUI_Button.h"  // lines 30-30
- #include "MyGUI_Button.h"  // lines 31-31
- #include "MyGUI_Colour.h"  // lines 32-32
- #include "MyGUI_Colour.h"  // lines 33-33
- #include "MyGUI_EventPair.h"  // lines 34-34
- #include "MyGUI_ISubWidget.h"  // lines 35-35
- #include "MyGUI_ISubWidget.h"  // lines 36-36
- #include "MyGUI_ISubWidgetRect.h"  // lines 37-37
- #include "MyGUI_ISubWidgetRect.h"  // lines 38-38
- #include "MyGUI_RTTI.h"  // lines 40-40
- #include "MyGUI_StringUtility.h"  // lines 41-41
- #include "MyGUI_StringUtility.h"  // lines 42-42
- #include "MyGUI_TPoint.h"  // lines 43-43
- #include "MyGUI_TPoint.h"  // lines 44-44
- #include "MyGUI_TextBox.h"  // lines 45-45
- #include "MyGUI_TextBox.h"  // lines 46-46
- #include "MyGUI_TextIterator.h"  // lines 47-47
- #include "MyGUI_TextIterator.h"  // lines 48-48
- #include "MyGUI_UString.h"  // lines 49-49
- #include "MyGUI_UString.h"  // lines 50-50
- #include "MyGUI_Widget.h"  // lines 51-51
- #include "MyGUI_Widget.h"  // lines 52-52
- #include "MyGUI_WidgetInput.h"  // lines 53-53
- #include "MyGUI_WidgetInput.h"  // lines 54-54
- #include "OgreVector3.h"  // lines 56-56
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 57-57
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 58-58
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/refdata.hpp"  // lines 60-60
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 62-62
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 63-63
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 64-64
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 65-65
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 66-66
- #include "components/esm/cellid.hpp"  // lines 68-68
- #include "components/esm/custommarkerstate.hpp"  // lines 70-70
- #include "components/esm/defs.hpp"  // lines 71-71
- #include "components/esm/defs.hpp"  // lines 72-72
- #include "components/esm/esmwriter.hpp"  // lines 73-73
- #include "components/esm/esmwriter.hpp"  // lines 74-74
- #include "components/esm/loadcell.hpp"  // lines 76-76
- #include "components/misc/stringops.hpp"  // lines 78-78
- #include "components/settings/settings.hpp"  // lines 79-79
- #include "components/settings/settings.hpp"  // lines 80-80
- #include "confirmationdialog.hpp"  // lines 81-81
- namespace MWBase { namespace MWGui { class DragAndDrop; } }  // lines 87-87

The full include-list for apps/openmw/mwgui/mapwindow.cpp:
#include "mapwindow.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreVector2.h>                // for Vector2
#include <stdlib.h>                     // for abs
#include <cmath>                        // for atan2
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World, etc
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/cellid.hpp"    // for CellId, CellId::CellIndex
#include "components/esm/custommarkerstate.hpp"  // for CustomMarker
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWBase { namespace MWGui { class ConfirmationDialog; } }
namespace MWBase { namespace MWGui { class DragAndDrop; } }  // lines 85-85
---

extern/shiny/Main/PropertyBase.hpp should add these lines:

extern/shiny/Main/PropertyBase.hpp should remove these lines:
- #include <stddef.h>  // lines 8-8
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <typeinfo>  // lines 13-13
- class LinkedValue;  // lines 17-17
- class StringValue;  // lines 19-19

The full include-list for extern/shiny/Main/PropertyBase.hpp:
#include <stddef.h>                     // for NULL
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr, etc
#include <iosfwd>                       // for ofstream
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <typeinfo>                     // for type_info
class PropertySetGet;  // lines 18-18
---

extern/shiny/Main/PropertyBase.cpp should add these lines:

extern/shiny/Main/PropertyBase.cpp should remove these lines:
- #include <boost/algorithm/string/classification.hpp>  // lines 2-2
- #include <boost/algorithm/string/split.hpp>  // lines 3-3
- #include <boost/lexical_cast.hpp>  // lines 4-4
- #include <sstream>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include <utility>  // lines 7-7
- #include <vector>  // lines 8-8

The full include-list for extern/shiny/Main/PropertyBase.cpp:
#include "PropertyBase.hpp"
#include <assert.h>                     // for assert
---

components/terrain/chunk.hpp should add these lines:

components/terrain/chunk.hpp should remove these lines:
- #include <vector>  // lines 7-7
- #include "OgreAxisAlignedBox.h"  // lines 10-10
- #include "OgreCommon.h"  // lines 12-12
- #include "OgrePlatform.h"  // lines 14-14
- #include "OgrePrerequisites.h"  // lines 16-16
- #include "OgreSharedPtr.h"  // lines 18-18
- namespace Ogre { class Camera; }  // lines 30-30
- namespace Ogre { class HardwareIndexBufferSharedPtr; }  // lines 31-31
- namespace Ogre { class HardwareVertexBufferSharedPtr; }  // lines 32-32
- namespace Ogre { class IndexData; }  // lines 33-33
- namespace Ogre { class Matrix4; }  // lines 34-34
- namespace Ogre { class RenderOperation; }  // lines 35-35
- namespace Ogre { class RenderQueue; }  // lines 36-36
- namespace Ogre { class VertexData; }  // lines 37-37

The full include-list for components/terrain/chunk.hpp:
#include <OgreMovableObject.h>          // for MovableObject
#include <OgreRenderable.h>             // for Renderable
#include <vector>                       // for vector
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreCommon.h"                 // for LightList
#include "OgrePlatform.h"               // for uint8
#include "OgrePrerequisites.h"          // for MaterialPtr, Real, String
#include "OgreSharedPtr.h"              // for SharedPtr
namespace Ogre { class Camera; }  // lines 21-21
namespace Ogre { class HardwareIndexBufferSharedPtr; }  // lines 22-22
namespace Ogre { class HardwareVertexBufferSharedPtr; }  // lines 23-23
namespace Ogre { class IndexData; }  // lines 24-24
namespace Ogre { class Matrix4; }  // lines 25-25
namespace Ogre { class RenderOperation; }  // lines 26-26
namespace Ogre { class RenderQueue; }  // lines 27-27
namespace Ogre { class VertexData; }  // lines 28-28
---

components/terrain/chunk.cpp should add these lines:

components/terrain/chunk.cpp should remove these lines:
- #include <assert.h>  // lines 6-6
- #include "OgreHardwareBuffer.h"  // lines 11-11
- #include "OgreHardwareIndexBuffer.h"  // lines 13-13
- #include "OgreHardwareVertexBuffer.h"  // lines 15-15
- #include "OgreMaterial.h"  // lines 17-17
- #include "OgreMatrix4.h"  // lines 19-19
- #include "OgreMemoryAllocatorConfig.h"  // lines 21-21
- #include "OgreRenderOperation.h"  // lines 23-23
- #include "OgreRenderable.h"  // lines 25-25
- #include "OgreVector3.h"  // lines 27-27
- #include "OgreVertexIndexData.h"  // lines 29-29
- namespace Ogre { class Camera; }  // lines 35-35

The full include-list for components/terrain/chunk.cpp:
#include "chunk.hpp"
#include <OgreHardwareBufferManager.h>  // for HardwareBufferManager
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgreRenderQueue.h>            // for RenderQueue
#include <OgreSceneNode.h>              // for SceneNode
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreHardwareIndexBuffer.h"
#include "OgreHardwareVertexBuffer.h"   // for HardwareVertexBuffer, etc
#include "OgreMaterial.h"               // for Material
#include "OgreMatrix4.h"                // for Matrix4
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_DELETE, OGRE_NEW
#include "OgreRenderOperation.h"        // for RenderOperation, etc
#include "OgreRenderable.h"             // for Renderable, etc
#include "OgreVector3.h"                // for Vector3
#include "OgreVertexIndexData.h"        // for VertexData, IndexData
namespace Ogre { class Camera; }  // lines 33-33
---
apps/openmw/mwgui/soulgemdialog.cpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:27:
apps/openmw/mwgui/../mwrender/characterpreview.hpp:127:9: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
        MWWorld::LiveCellRef<ESM::NPC>  mRef;
        ^~~~~~~~~~~~~~~~~~~~
        LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/savegamedialog.cpp:37:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
In file included from apps/openmw/mwsound/../mwbase/world.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwinput/inputmanagerimp.hpp should add these lines:
#include "components/settings/settings.hpp"  // for CategorySettingVector
namespace MWWorld { class Player; }
namespace OEngine { namespace Render { class OgreRenderer; } }
namespace OMW { class Engine; }

apps/openmw/mwinput/inputmanagerimp.hpp should remove these lines:
- #include <extern/oics/ICSChannelListener.h>  // lines 64-64
- #include <extern/oics/ICSInputControlSystem.h>  // lines 65-65
- #include <extern/sdl4ogre/sdlinputwrapper.hpp>  // lines 4-4
- #include <map>  // lines 66-66
- #include <map>  // lines 67-67
- #include <string>  // lines 69-69
- #include <vector>  // lines 70-70
- #include <vector>  // lines 71-71
- #include "../mwbase/inputmanager.hpp"  // lines 6-6
- #include "../mwgui/mode.hpp"  // lines 7-7
- #include "SDL_events.h"  // lines 8-8
- #include "SDL_scancode.h"  // lines 9-9
- #include "SDL_scancode.h"  // lines 10-10
- #include "SDL_stdinc.h"  // lines 11-11
- #include "SDL_stdinc.h"  // lines 12-12
- #include "extern/oics/../sdl4ogre/events.h"  // lines 13-13
- #include "extern/oics/../sdl4ogre/events.h"  // lines 14-14
- #include "extern/oics/ICSControl.h"  // lines 15-15
- #include "extern/oics/ICSControl.h"  // lines 16-16
- namespace MWBase { class Engine; }  // lines 51-51
- namespace MWBase { namespace Loading { class WindowManager; } }  // lines 47-47
- namespace MWBase { namespace Loading { namespace ICS { class Channel; } } }  // lines 26-26
- namespace MWBase { namespace Loading { namespace ICS { namespace ICS { class Channel; } } } }  // lines 20-20
- namespace MWBase { namespace Loading { namespace ICS { namespace SFO { class InputWrapper; } } } }  // lines 23-23
- namespace MWBase { namespace Loading { namespace MWWorld { class Player; } } }  // lines 43-43
- namespace MWBase { namespace Loading { namespace SFO { class InputWrapper; } } }  // lines 29-29

The full include-list for apps/openmw/mwinput/inputmanagerimp.hpp:
#include <string>                       // for string
#include "components/settings/settings.hpp"  // for CategorySettingVector
namespace ICS { class InputControlSystem; }  // lines 56-56
namespace MWWorld { class Player; }
namespace MyGUI { class MouseButton; }  // lines 61-61
namespace OEngine { namespace Render { class OgreRenderer; } }
namespace OMW { class Engine; }
---
In file included from apps/openmw/mwgui/inventorywindow.cpp:30:
apps/openmw/mwgui/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:17:
apps/openmw/mwsound/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwsound/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/inventorywindow.cpp:31:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwdialogue/selectwrapper.hpp should add these lines:

apps/openmw/mwdialogue/selectwrapper.hpp should remove these lines:
- #include <string>  // lines 6-6

The full include-list for apps/openmw/mwdialogue/selectwrapper.hpp:
#include <components/esm/loadinfo.hpp>  // for DialInfo
#include <string>                       // for string
---

(apps/openmw/mwdialogue/selectwrapper.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/companionitemmodel.hpp should add these lines:

apps/openmw/mwgui/companionitemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 8-8
- namespace MWGui { struct ItemStack; }  // lines 14-14

The full include-list for apps/openmw/mwgui/companionitemmodel.hpp:
#include <stddef.h>                     // for size_t
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "inventoryitemmodel.hpp"       // for InventoryItemModel
namespace MWGui { struct ItemStack; }  // lines 12-12
---

apps/openmw/mwgui/companionitemmodel.cpp should add these lines:

apps/openmw/mwgui/companionitemmodel.cpp should remove these lines:
- #include "apps/openmw/mwgui/inventoryitemmodel.hpp"  // lines 4-4
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 6-6

The full include-list for apps/openmw/mwgui/companionitemmodel.cpp:
#include "companionitemmodel.hpp"
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/inventoryitemmodel.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack
---

apps/openmw/mwinput/inputmanagerimp.cpp should add these lines:
namespace MWWorld { class InventoryStore; }
namespace OEngine { namespace Render { class OgreRenderer; } }

apps/openmw/mwinput/inputmanagerimp.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_Widget.h>  // lines 3-3
- #include <ctype.h>  // lines 6-6
- #include <ctype.h>  // lines 7-7
- #include <stddef.h>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <boost/lexical_cast.hpp>  // lines 5-5
- #include <openengine/ogre/renderer.hpp>  // lines 8-8
- #include <sstream>  // lines 13-13
- #include <sstream>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <utility>  // lines 17-17
- #include "../mwbase/soundmanager.hpp"  // lines 20-20
- #include "../mwbase/statemanager.hpp"  // lines 21-21
- #include "../mwbase/windowmanager.hpp"  // lines 22-22
- #include "../mwbase/world.hpp"  // lines 23-23
- #include "../mwgui/windowbase.hpp"  // lines 24-24
- #include "../mwmechanics/npcstats.hpp"  // lines 25-25
- #include "../mwworld/esmstore.hpp"  // lines 26-26
- #include "../mwworld/inventorystore.hpp"  // lines 27-27
- #include "../mwworld/player.hpp"  // lines 28-28
- #include "MyGUI_KeyCode.h"  // lines 29-29
- #include "MyGUI_KeyCode.h"  // lines 30-30
- #include "MyGUI_MouseButton.h"  // lines 32-32
- #include "MyGUI_RTTI.h"  // lines 33-33
- #include "MyGUI_RTTI.h"  // lines 34-34
- #include "MyGUI_Types.h"  // lines 36-36
- #include "SDL_keyboard.h"  // lines 37-37
- #include "SDL_keyboard.h"  // lines 38-38
- #include "SDL_mouse.h"  // lines 41-41
- #include "apps/openmw/mwinput/../mwbase/../mwgui/mode.hpp"  // lines 42-42
- #include "apps/openmw/mwinput/../mwbase/../mwgui/mode.hpp"  // lines 43-43
- #include "apps/openmw/mwinput/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 44-44
- #include "apps/openmw/mwinput/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 45-45
- #include "apps/openmw/mwinput/../mwbase/../mwmechanics/drawstate.hpp"  // lines 47-47
- #include "apps/openmw/mwinput/../mwbase/environment.hpp"  // lines 48-48
- #include "apps/openmw/mwinput/../mwbase/environment.hpp"  // lines 49-49
- #include "apps/openmw/mwinput/../mwdialogue/../mwworld/ptr.hpp"  // lines 51-51
- #include "apps/openmw/mwinput/../mwworld/containerstore.hpp"  // lines 52-52
- #include "apps/openmw/mwinput/../mwworld/containerstore.hpp"  // lines 53-53
- #include "apps/openmw/mwinput/../mwworld/store.hpp"  // lines 54-54
- #include "apps/openmw/mwinput/../mwworld/store.hpp"  // lines 55-55
- #include "components/esm/loadgmst.hpp"  // lines 56-56
- #include "components/esm/loadgmst.hpp"  // lines 57-57
- #include "components/settings/settings.hpp"  // lines 59-59
- #include "extern/oics/ICSChannel.h"  // lines 60-60
- #include "extern/oics/ICSChannel.h"  // lines 61-61
- #include "extern/oics/ICSInputControlSystem.h"  // lines 62-62
- #include "extern/oics/ICSInputControlSystem.h"  // lines 63-63
- #include "extern/oics/ICSPrerequisites.h"  // lines 65-65
- #include "extern/sdl4ogre/OISCompat.h"  // lines 66-66
- #include "extern/sdl4ogre/OISCompat.h"  // lines 67-67
- #include "extern/sdl4ogre/sdlinputwrapper.hpp"  // lines 68-68
- #include "extern/sdl4ogre/sdlinputwrapper.hpp"  // lines 69-69

The full include-list for apps/openmw/mwinput/inputmanagerimp.cpp:
#include "inputmanagerimp.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <OgreRenderWindow.h>           // for RenderWindow
#include <stddef.h>                     // for size_t, NULL
#include "../engine.hpp"                // for Engine
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_Types.h"                // for IntSize
#include "SDL_keycode.h"                // for SDLK_SCANCODE_MASK
#include "SDL_mouse.h"                  // for SDL_BUTTON_RIGHT, etc
#include "apps/openmw/mwinput/../mwbase/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwinput/../mwdialogue/../mwworld/ptr.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "extern/oics/ICSPrerequisites.h"  // for ICS_MAX_DEVICE_BUTTONS
namespace MWWorld { class InventoryStore; }
namespace OEngine { namespace Render { class OgreRenderer; } }
---
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
./apps/openmw/mwrender/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
./apps/openmw/mwrender/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwrender/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/activatoranimation.cpp:8:
./apps/openmw/mwrender/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/containerextensions.cpp:6:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
apps/openmw/mwrender/activatoranimation.cpp:27:1: error: use of undeclared identifier 'ActivatorAnimation'
ActivatorAnimation::~ActivatorAnimation()
^
In file included from apps/openmw/mwgui/journalwindow.cpp:9:
./components/widgets/list.hpp:9:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwrender/activatoranimation.cpp:31:1: error: use of undeclared identifier 'ActivatorAnimation'
ActivatorAnimation::ActivatorAnimation(const MWWorld::Ptr &ptr, const std::string& model)
^
apps/openmw/mwrender/activatoranimation.cpp:48:6: error: use of undeclared identifier 'ActivatorAnimation'
void ActivatorAnimation::addLight(const ESM::Light *light)
     ^
apps/openmw/mwrender/activatoranimation.cpp:53:6: error: use of undeclared identifier 'ActivatorAnimation'
void ActivatorAnimation::removeParticles()
     ^

apps/openmw/mwscript/globalscripts.hpp should add these lines:

apps/openmw/mwscript/globalscripts.hpp should remove these lines:
- #include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"  // lines 9-9

The full include-list for apps/openmw/mwscript/globalscripts.hpp:
#include <stdint.h>                     // for uint32_t
#include <map>                          // for map
#include <string>                       // for string
#include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"
namespace ESM { class ESMReader; }  // lines 13-13
namespace ESM { class ESMWriter; }  // lines 14-14
namespace Loading { class Listener; }  // lines 19-19
namespace MWWorld { struct ESMStore; }  // lines 24-24
---

apps/openmw/mwscript/globalscripts.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/globalscripts.cpp should remove these lines:
- #include <utility>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 17-17
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "components/esm/esmwriter.hpp"  // lines 21-21
- #include "components/esm/loadscpt.hpp"  // lines 23-23
- #include "components/esm/loadsscr.hpp"  // lines 25-25

The full include-list for apps/openmw/mwscript/globalscripts.cpp:
#include "globalscripts.hpp"
#include <components/esm/globalscript.hpp>  // for GlobalScript
#include <components/misc/stringops.hpp>  // for StringUtils
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_GSCR
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadsscr.hpp"  // for StartScript
#include "interpretercontext.hpp"       // for InterpreterContext
---
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

components/nif/node.hpp should add these lines:

components/nif/node.hpp should remove these lines:
- #include "controlled.hpp"  // lines 12-12
- #include "controller.hpp"  // lines 13-13
- #include "extra.hpp"  // lines 15-15
- #include "property.hpp"  // lines 17-17

The full include-list for components/nif/node.hpp:
#include <OgreMatrix4.h>                // for Matrix4
#include <stddef.h>                     // for NULL, size_t
#include "OgreMatrix3.h"                // for Matrix3
#include "OgreVector3.h"                // for Vector3
#include "base.hpp"                     // for Named
#include "components/nif/nifstream.hpp"  // for NIFStream
#include "components/nif/recordptr.hpp"  // for NodeList, etc
#include "data.hpp"                     // for NiSkinData, etc
#include "niftypes.hpp"                 // for Transformation
namespace Nif { class NIFFile; }  // lines 20-20
namespace Nif { class NiAlphaProperty; }  // lines 21-21
namespace Nif { class NiMaterialProperty; }  // lines 22-22
namespace Nif { class NiNode; }  // lines 34-34
namespace Nif { class NiSpecularProperty; }  // lines 23-23
namespace Nif { class NiStencilProperty; }  // lines 24-24
namespace Nif { class NiTexturingProperty; }  // lines 25-25
namespace Nif { class NiVertexColorProperty; }  // lines 26-26
namespace Nif { class NiWireframeProperty; }  // lines 27-27
namespace Nif { class NiZBufferProperty; }  // lines 28-28
---

components/nif/node.cpp should add these lines:

components/nif/node.cpp should remove these lines:
- #include <iostream>  // lines 2-2
- #include <string>  // lines 4-4
- #include "OgreMatrix4.h"  // lines 7-7
- #include "OgreQuaternion.h"  // lines 9-9
- #include "components/nif/niftypes.hpp"  // lines 11-11
- #include "components/nif/property.hpp"  // lines 13-13
- #include "components/nif/record.hpp"  // lines 15-15

The full include-list for components/nif/node.cpp:
#include "node.hpp"
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <string>                       // for operator<<
#include "OgreMatrix4.h"                // for Matrix4, Matrix4::IDENTITY
#include "OgreQuaternion.h"             // for Quaternion
#include "components/nif/niftypes.hpp"  // for Transformation
#include "components/nif/property.hpp"  // for Property, NiAlphaProperty, etc
#include "components/nif/record.hpp"
---
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwscript/containerextensions.cpp:16:
In file included from apps/openmw/mwscript/../mwworld/actionequip.hpp:4:
In file included from apps/openmw/mwscript/../mwworld/action.hpp:6:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/containerextensions.cpp:18:
In file included from apps/openmw/mwscript/../mwworld/containerstore.hpp:22:
apps/openmw/mwscript/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwscript/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^

(apps/openmw/mwgui/soulgemdialog.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/soulgemdialog.cpp should add these lines:

apps/openmw/mwgui/soulgemdialog.cpp should remove these lines:
- #include <string>  // lines 1-1
- #include <string>  // lines 2-2
- #include <vector>  // lines 3-3
- #include <vector>  // lines 4-4
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 11-11
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 13-13
- #include "messagebox.hpp"  // lines 14-14

The full include-list for apps/openmw/mwgui/soulgemdialog.cpp:
#include "soulgemdialog.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
---
In file included from apps/openmw/mwscript/containerextensions.cpp:19:
apps/openmw/mwscript/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
apps/openmw/mwscript/../mwworld/inventorystore.hpp:149:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:124:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:145:49: warning: 'destruct' is deprecated [-Wdeprecated-declarations]
    if(pkt->data != flush_pkt.data && pkt1->pkt.destruct == NULL)
                                                ^
/usr/include/libavcodec/avcodec.h:994:13: note: 'destruct' has been explicitly marked deprecated here
    void  (*destruct)(struct AVPacket *);
            ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:399:15: warning: 'avcodec_default_get_buffer' is deprecated [-Wdeprecated-declarations]
    int ret = avcodec_default_get_buffer(c, pic);
              ^
/usr/include/libavcodec/avcodec.h:3493:26: note: 'avcodec_default_get_buffer' has been explicitly marked deprecated here
attribute_deprecated int avcodec_default_get_buffer(AVCodecContext *s, AVFrame *pic);
                         ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:408:5: warning: 'avcodec_default_release_buffer' is deprecated [-Wdeprecated-declarations]
    avcodec_default_release_buffer(c, pic);
    ^
/usr/include/libavcodec/avcodec.h:3494:27: note: 'avcodec_default_release_buffer' has been explicitly marked deprecated here
attribute_deprecated void avcodec_default_release_buffer(AVCodecContext *s, AVFrame *pic);
                          ^
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwscript/containerextensions.cpp:177:58: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    MWWorld::ContainerStoreIterator it = invStore.begin();
                                                         ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:178:34: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    for (; it != invStore.end(); ++it)
                                 ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:183:31: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    if (it == invStore.end())
                              ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:249:31: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    if (it == invStore.end() || it->getTypeName () != typeid(ESM::Armor).name())
                              ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:283:35: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                        if (it != invStore.end() && ::Misc::StringUtils::ciEqual(it->getCellRef().getRefId(), item))
                                  ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:307:63: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    for (MWWorld::ContainerStoreIterator it = invStore.begin(MWWorld::ContainerStore::Type_Miscellaneous);
                                                              ^~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwgui/exposedwindow.hpp should add these lines:

apps/openmw/mwgui/exposedwindow.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 9-9
- #include "MyGUI_WidgetDefines.h"  // lines 11-11
- namespace MyGUI { class Widget; }  // lines 16-16

The full include-list for apps/openmw/mwgui/exposedwindow.hpp:
#include <MyGUI_Window.h>               // for Window
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_WidgetDefines.h"        // for VectorWidgetPtr
namespace MyGUI { class Widget; }  // lines 14-14
---
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/exposedwindow.cpp should add these lines:

apps/openmw/mwgui/exposedwindow.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include <ostream>  // lines 4-4
- #include "MyGUI_Diagnostic.h"  // lines 7-7
- #include "MyGUI_LogStream.h"  // lines 9-9
- #include "MyGUI_Widget.h"  // lines 11-11

The full include-list for apps/openmw/mwgui/exposedwindow.cpp:
#include "exposedwindow.hpp"
#include <stddef.h>                     // for NULL
#include <ostream>                      // for basic_ostream, operator<<
#include "MyGUI_Diagnostic.h"           // for MYGUI_ASSERT
#include "MyGUI_LogStream.h"            // for LogStream
#include "MyGUI_Widget.h"               // for Widget
---
extern/ogre-ffmpeg-videoplayer/videostate.cpp:508:33: error: use of undeclared identifier 'av_rescale_q'
                    timestamp = av_rescale_q(seek_target, avTimeBaseQ, self->format_ctx->streams[streamIndex]->time_base);
                                ^
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:520:41: error: use of undeclared identifier 'av_rescale_q'
                        flush_pkt.pts = av_rescale_q(seek_target, avTimeBaseQ,
                                        ^
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/fontloader/fontloader.hpp should add these lines:

components/fontloader/fontloader.hpp should remove these lines:
- #include <string>  // lines 6-6

The full include-list for components/fontloader/fontloader.hpp:
#include <components/to_utf8/to_utf8.hpp>  // for FromType
#include <string>                       // for string
---
extern/ogre-ffmpeg-videoplayer/videostate.cpp:527:41: error: use of undeclared identifier 'av_rescale_q'
                        flush_pkt.pts = av_rescale_q(seek_target, avTimeBaseQ,
                                        ^
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/journalbooks.hpp should add these lines:

apps/openmw/mwgui/journalbooks.hpp should remove these lines:
- #include <stdint.h>  // lines 5-5
- #include <string>  // lines 7-7

The full include-list for apps/openmw/mwgui/journalbooks.hpp:
#include <stdint.h>                     // for uintptr_t
#include <string>                       // for string
#include "bookpage.hpp"                 // for BookTypesetter, etc
#include "journalviewmodel.hpp"         // for JournalViewModel, etc
---
extern/ogre-ffmpeg-videoplayer/videostate.cpp:629:19: warning: 'get_buffer' is deprecated [-Wdeprecated-declarations]
        codecCtx->get_buffer = our_get_buffer;
                  ^
/usr/include/libavcodec/avcodec.h:1939:11: note: 'get_buffer' has been explicitly marked deprecated here
    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);
          ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:630:19: warning: 'release_buffer' is deprecated [-Wdeprecated-declarations]
        codecCtx->release_buffer = our_release_buffer;
                  ^
/usr/include/libavcodec/avcodec.h:1953:12: note: 'release_buffer' has been explicitly marked deprecated here
    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);
           ^

apps/openmw/mwgui/journalbooks.cpp should add these lines:

apps/openmw/mwgui/journalbooks.cpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <stdio.h>  // lines 7-7
- #include <string.h>  // lines 9-9
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include "MyGUI_Colour.h"  // lines 12-12
- #include "MyGUI_UString.h"  // lines 14-14
- #include "apps/openmw/mwgui/bookpage.hpp"  // lines 16-16
- #include "apps/openmw/mwgui/journalviewmodel.hpp"  // lines 18-18

The full include-list for apps/openmw/mwgui/journalbooks.cpp:
#include "journalbooks.hpp"
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <stddef.h>                     // for size_t
#include <stdio.h>                      // for sprintf
#include <string.h>                     // for strlen
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include "MyGUI_Colour.h"               // for Colour, Colour::Black
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/bookpage.hpp"  // for BookTypesetter, etc
#include "apps/openmw/mwgui/journalviewmodel.hpp"  // for JournalViewModel, etc
---

components/fontloader/fontloader.cpp should add these lines:

components/fontloader/fontloader.cpp should remove these lines:
- #include <stddef.h>  // lines 9-9
- #include <ostream>  // lines 12-12
- #include <utility>  // lines 15-15
- #include <vector>  // lines 17-17
- #include "MyGUI_FontData.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_TSize.h"  // lines 24-24
- #include "MyGUI_Types.h"  // lines 26-26
- #include "MyGUI_Version.h"  // lines 28-28
- #include "OgreDataStream.h"  // lines 30-30
- #include "OgreImage.h"  // lines 32-32
- #include "OgrePixelFormat.h"  // lines 34-34
- #include "OgrePrerequisites.h"  // lines 36-36
- #include "OgreSharedPtr.h"  // lines 38-38
- #include "OgreStringVector.h"  // lines 40-40
- #include "OgreTexture.h"  // lines 42-42
- #include "components/to_utf8/to_utf8.hpp"  // lines 44-44

The full include-list for components/fontloader/fontloader.cpp:
#include "fontloader.hpp"
#include <MyGUI_FactoryManager.h>       // for FactoryManager
#include <MyGUI_ResourceManager.h>      // for ResourceManager
#include <MyGUI_ResourceManualFont.h>   // for ResourceManualFont
#include <MyGUI_XmlDocument.h>          // for Element, ElementPtr, etc
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager, etc
#include <OgreTextureManager.h>         // for TextureManager
#include <stddef.h>                     // for size_t
#include <components/misc/stringops.hpp>  // for StringUtils
#include <map>                          // for map, multimap, etc
#include <ostream>                      // for basic_ostream, operator<<, etc
#include <stdexcept>                    // for logic_error, runtime_error
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector, vector<>::iterator
#include "MyGUI_FontData.h"             // for Enum, Enum::Cursor, etc
#include "MyGUI_StringUtility.h"        // for toString
#include "MyGUI_TSize.h"                // for TSize, operator<<
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Version.h"              // for Version
#include "OgreDataStream.h"             // for DataStream, DataStreamPtr
#include "OgreImage.h"                  // for Image
#include "OgrePixelFormat.h"            // for PixelFormat::PF_BYTE_RGBA
#include "OgrePrerequisites.h"          // for uchar, TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringVector.h"           // for StringVector, etc
#include "OgreTexture.h"                // for Texture, etc
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder, FromType, etc
---
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwscript/scriptmanagerimp.cpp:23:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/scriptmanagerimp.cpp:28:
apps/openmw/mwscript/scriptmanagerimp.hpp:43:38: error: field has incomplete type 'Interpreter::Interpreter'
            Interpreter::Interpreter mInterpreter;
                                     ^
apps/openmw/mwscript/extensions.hpp:10:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwscript/guiextensions.cpp:34:52: error: expected class name
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10        class OpEnableWindow : public Interpreter::Opcode0:

apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp                                                   ^:
61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwscript/guiextensions.cpp:48:50: error: expected class name
        class OpEnableRest : public Interpreter::Opcode0
                                                 ^
apps/openmw/mwscript/guiextensions.cpp:59:52: error: expected class name
        class OpShowRestMenu : public Interpreter::Opcode0
                                                   ^
apps/openmw/mwscript/guiextensions.cpp:72:52: error: expected class name
        class OpShowDialogue : public Interpreter::Opcode0
                                                   ^
apps/openmw/mwscript/guiextensions.cpp:88:56: error: expected class name
        class OpGetButtonPressed : public Interpreter::Opcode0
                                                       ^
apps/openmw/mwscript/guiextensions.cpp:98:54: error: expected class name
        class OpToggleFogOfWar : public Interpreter::Opcode0
                                                     ^
apps/openmw/mwgui/windowpinnablebase.cpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwscript/guiextensions.cpp:109:54: error: expected class name
        class OpToggleFullHelp : public Interpreter::Opcode0
                                                     ^
apps/openmw/mwscript/guiextensions.cpp:120:47: error: expected class name
        class OpShowMap : public Interpreter::Opcode0
                                              ^
apps/openmw/mwscript/guiextensions.cpp:151:47: error: expected class name
        class OpFillMap : public Interpreter::Opcode0
                                              ^
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/pickpocketitemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
In file included from components/nif/data.cpp:1:
./components/nif/niffile.hpp:37:10: error: no type named 'vector' in namespace 'std'
    std::vector<Record*> records;
    ~~~~~^
./components/nif/niffile.hpp:37:16: error: expected member name or ';' after declaration specifiers
    std::vector<Record*> records;
    ~~~~~~~~~~~^
./components/nif/niffile.hpp:40:10: error: no type named 'vector' in namespace 'std'
    std::vector<Record*> roots;
    ~~~~~^
./components/nif/niffile.hpp:40:16: error: expected member name or ';' after declaration specifiers
    std::vector<Record*> roots;
    ~~~~~~~~~~~^
./components/nif/niffile.hpp:76:23: error: use of undeclared identifier 'records'
        Record *res = records.at(index);
                      ^
./components/nif/niffile.hpp:80:40: error: use of undeclared identifier 'records'
    size_t numRecords() const { return records.size(); }
                                       ^
./components/nif/niffile.hpp:85:23: error: use of undeclared identifier 'roots'
        Record *res = roots.at(index);
                      ^
./components/nif/niffile.hpp:89:38: error: use of undeclared identifier 'roots'
    size_t numRoots() const { return roots.size(); }
                                     ^
In file included from libs/openengine/bullet/physic.cpp:5:
./components/nifbullet/bulletnifloader.hpp:76:35: error: expected class name
struct TriangleMeshShape : public btBvhTriangleMeshShape
                                  ^
./components/nifbullet/bulletnifloader.hpp:79:11: error: member initializer 'btBvhTriangleMeshShape' does not name a non-static data member or base class
        : btBvhTriangleMeshShape(meshInterface, useQuantizedAabbCompression)
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./components/nifbullet/bulletnifloader.hpp:85:16: error: use of undeclared identifier 'getTriangleInfoMap'
        delete getTriangleInfoMap();
               ^
extern/shiny/Main/ScriptLoader.cpp:27:19: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                std::ifstream in((*dir).path().string().c_str(), std::ios::binary);
                                              ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:86:10: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                        stream.close();
                              ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:93:9: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                stream.close();
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:99:14: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                if (!stream.good())
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:106:18: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                int ch = stream.get();
                               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:108:43: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                while ((ch == ' ' || ch == 9) && !stream.eof())
                                                        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:110:15: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                        ch = stream.get();
                                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:113:14: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                if (!stream.good())
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:124:16: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                ch = stream.get();
                                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:125:50: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                        } while ((ch == '\r' || ch == '\n') && !stream.eof());
                                                                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:125:51: error: expected ')'
                        } while ((ch == '\r' || ch == '\n') && !stream.eof());
                                                                       ^
extern/shiny/Main/ScriptLoader.cpp:125:12: note: to match this '('
                        } while ((ch == '\r' || ch == '\n') && !stream.eof());
                                ^
extern/shiny/Main/ScriptLoader.cpp:127:10: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                        stream.unget();
                              ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:160:21: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                int ch2 = stream.peek();
                                                ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:165:12: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                        stream.get();
                                              ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:168:18: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                                ch = stream.get();
                                                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:169:50: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                                        } while (ch != '\r' && ch != '\n' && !stream.eof());
                                                                                    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:169:51: error: expected ')'
                                        } while (ch != '\r' && ch != '\n' && !stream.eof());
                                                                                     ^
extern/shiny/Main/ScriptLoader.cpp:169:14: note: to match this '('
                                        } while (ch != '\r' && ch != '\n' && !stream.eof());
                                                ^
extern/shiny/Main/ScriptLoader.cpp:180:15: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                        ch = stream.get();
                                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
extern/shiny/Main/ScriptLoader.cpp:182:43: error: implicit instantiation of undefined template 'std::basic_ifstream<char, std::char_traits<char> >'
                } while (ch > 32 && ch <= 122 && !stream.eof());
                                                        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:111:11: note: template is declared here
    class basic_ifstream;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
./components/nifbullet/bulletnifloader.hpp:86:16: error: use of undeclared identifier 'm_meshInterface'
        delete m_meshInterface;
               ^
apps/openmw/mwdialogue/hypertextparser.cpp:52:66: error: member access into incomplete type 'const MWWorld::ESMStore'
                MWBase::Environment::get().getWorld()->getStore().get<ESM::Dialogue>();
                                                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/globals.hpp:24:11: note: forward declaration of 'MWWorld::ESMStore'
    class ESMStore;
          ^
./components/nifbullet/bulletnifloader.hpp:94:40: error: use of undeclared identifier 'OEngine'
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                       ^
./components/nifbullet/bulletnifloader.hpp:94:57: error: expected class name
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                                        ^
./components/nifbullet/bulletnifloader.hpp:152:5: error: use of undeclared identifier 'OEngine'
    OEngine::Physic::BulletShape* mShape;//current shape
    ^

components/files/linuxpath.hpp should add these lines:

components/files/linuxpath.hpp should remove these lines:
- #include <boost/filesystem.hpp>  // lines 8-8

The full include-list for components/files/linuxpath.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <string>                       // for string
---

apps/openmw/mwgui/levelupdialog.hpp should add these lines:

apps/openmw/mwgui/levelupdialog.hpp should remove these lines:
- #include <vector>  // lines 4-4
- #include <vector>  // lines 5-5
- namespace MyGUI { class Button; }  // lines 16-16
- namespace MyGUI { class EditBox; }  // lines 17-17
- namespace MyGUI { class ImageBox; }  // lines 18-18
- namespace MyGUI { class TextBox; }  // lines 19-19
- namespace MyGUI { class Widget; }  // lines 20-20

The full include-list for apps/openmw/mwgui/levelupdialog.hpp:
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class Button; }  // lines 10-10
namespace MyGUI { class EditBox; }  // lines 11-11
namespace MyGUI { class ImageBox; }  // lines 12-12
namespace MyGUI { class TextBox; }  // lines 13-13
namespace MyGUI { class Widget; }  // lines 14-14
---
In file included from extern/shiny/Platforms/Ogre/OgrePlatform.cpp:15:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2:
components/files/linuxpath.cpp should add these lines:

components/files/linuxpath.cpp should remove these lines:
- #include <ctype.h>  // lines 4-4
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <istream>  // lines 6-6

The full include-list for components/files/linuxpath.cpp:
#include "linuxpath.hpp"
#include <ctype.h>                      // for tolower
#include <pwd.h>                        // for getpwuid, passwd
#include <unistd.h>                     // for getuid
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/operations.hpp>  // for is_directory, etc
#include <cstdlib>                      // for getenv, NULL
#include <cstring>                      // for strcasecmp
#include <istream>                      // for basic_istream
---

apps/openmw/mwgui/levelupdialog.cpp should add these lines:
namespace ESM { struct Class; }
namespace ESM { struct NPC; }
namespace MWMechanics { class NpcStats; }

apps/openmw/mwgui/levelupdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <string>  // lines 7-7
- #include "../mwbase/soundmanager.hpp"  // lines 10-10
- #include "../mwbase/windowmanager.hpp"  // lines 11-11
- #include "../mwmechanics/npcstats.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "../mwworld/fallback.hpp"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 21-21
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_TPoint.h"  // lines 23-23
- #include "MyGUI_TPoint.h"  // lines 24-24
- #include "MyGUI_TextBox.h"  // lines 25-25
- #include "MyGUI_TextBox.h"  // lines 26-26
- #include "MyGUI_Types.h"  // lines 28-28
- #include "MyGUI_UString.h"  // lines 29-29
- #include "MyGUI_UString.h"  // lines 30-30
- #include "MyGUI_Widget.h"  // lines 32-32
- #include "MyGUI_WidgetInput.h"  // lines 33-33
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 48-48
- #include "components/esm/loadclas.hpp"  // lines 49-49
- #include "components/esm/loadclas.hpp"  // lines 50-50
- #include "components/esm/loadnpc.hpp"  // lines 51-51
- #include "components/esm/loadnpc.hpp"  // lines 52-52

The full include-list for apps/openmw/mwgui/levelupdialog.cpp:
#include "levelupdialog.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Types.h"                // for IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace ESM { struct Class; }
namespace ESM { struct NPC; }
namespace MWMechanics { class NpcStats; }
---
 error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^

apps/openmw/mwgui/pickpocketitemmodel.hpp should add these lines:

apps/openmw/mwgui/pickpocketitemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <vector>  // lines 7-7
- namespace MWWorld { class Ptr; }  // lines 14-14

The full include-list for apps/openmw/mwgui/pickpocketitemmodel.hpp:
#include <stddef.h>                     // for size_t
#include <vector>                       // for vector
#include "itemmodel.hpp"                // for ItemStack, etc
namespace MWWorld { class Ptr; }  // lines 12-12
---
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/pickpocketitemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/pickpocketitemmodel.cpp should remove these lines:
- #include <stdlib.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 9-9
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 11-11
- #include "components/esm/loadskil.hpp"  // lines 13-13

The full include-list for apps/openmw/mwgui/pickpocketitemmodel.cpp:
#include "pickpocketitemmodel.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <algorithm>                    // for find
#include <stdexcept>                    // for runtime_error
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
---

apps/openmw/mwdialogue/dialoguemanagerimp.hpp should add these lines:
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwdialogue/dialoguemanagerimp.hpp should remove these lines:
- #include <components/translation/translation.hpp>  // lines 5-5
- #include <map>  // lines 8-8
- #include <set>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwdialogue/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 16-16
- #include "components/esm/loaddial.hpp"  // lines 17-17
- #include "components/interpreter/types.hpp"  // lines 18-18
- namespace ESM { struct Dialogue; }  // lines 36-36

The full include-list for apps/openmw/mwdialogue/dialoguemanagerimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <components/compiler/streamerrorhandler.hpp>
#include <iosfwd>                       // for ostream
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwscript/compilercontext.hpp"  // for CompilerContext
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace Compiler { class Extensions; }  // lines 21-21
namespace ESM { class ESMReader; }  // lines 24-24
namespace ESM { class ESMWriter; }  // lines 25-25
namespace Loading { class Listener; }  // lines 28-28
namespace Translation { class Storage; }  // lines 31-31
---

apps/openmw/mwgui/windowpinnablebase.hpp should add these lines:

apps/openmw/mwgui/windowpinnablebase.hpp should remove these lines:
- #include <string>  // lines 5-5
- class Widget;  // lines 13-13
- namespace MWGui { class WindowManager; }  // lines 18-18

The full include-list for apps/openmw/mwgui/windowpinnablebase.hpp:
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class Widget; }  // lines 10-10
---

apps/openmw/mwgui/windowpinnablebase.cpp should add these lines:
namespace MWGui { class ExposedWindow; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/windowpinnablebase.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <stddef.h>  // lines 3-3
- #include <vector>  // lines 5-5
- #include "MyGUI_RTTI.h"  // lines 9-9
- #include "MyGUI_RTTI.h"  // lines 10-10
- #include "MyGUI_Widget.h"  // lines 12-12
- #include "MyGUI_WidgetDefines.h"  // lines 14-14
- #include "MyGUI_WidgetInput.h"  // lines 15-15
- #include "MyGUI_WidgetInput.h"  // lines 16-16
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 18-18
- #include "exposedwindow.hpp"  // lines 19-19

The full include-list for apps/openmw/mwgui/windowpinnablebase.cpp:
#include "windowpinnablebase.hpp"
#include <stddef.h>                     // for NULL
#include <vector>                       // for vector, vector<>::iterator
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetDefines.h"        // for VectorWidgetPtr
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
namespace MWGui { class ExposedWindow; }
namespace MyGUI { class Button; }
---

apps/openmw/mwgui/inventorywindow.hpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/inventorywindow.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 7-7
- #include "apps/openmw/mwgui/../mwrender/../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwgui/../mwrender/characterpreview.hpp"  // lines 9-9

The full include-list for apps/openmw/mwgui/inventorywindow.hpp:
#include <memory>                       // for auto_ptr
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
#include "mode.hpp"                     // for GuiMode
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace MWGui { class DragAndDrop; }  // lines 33-33
namespace MWGui { class ItemModel; }  // lines 34-34
namespace MWGui { class ItemView; }  // lines 35-35
namespace MWGui { class SortFilterItemModel; }  // lines 36-36
namespace MWGui { class TradeItemModel; }  // lines 37-37
namespace MWGui { namespace Widgets { class MWDynamicStat; } }  // lines 30-30
namespace MWRender { class InventoryPreview; }  // lines 23-23
namespace MyGUI { class Button; }  // lines 14-14
namespace MyGUI { class ImageBox; }  // lines 15-15
namespace MyGUI { class TextBox; }  // lines 16-16
namespace MyGUI { class Widget; }  // lines 17-17
namespace MyGUI { class Window; }  // lines 18-18
---

apps/openmw/mwgui/savegamedialog.hpp should add these lines:

apps/openmw/mwgui/savegamedialog.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include "MyGUI_KeyCode.h"  // lines 8-8
- #include "MyGUI_Types.h"  // lines 10-10
- namespace MyGUI { class Button; }  // lines 23-23
- namespace MyGUI { class ComboBox; }  // lines 24-24
- namespace MyGUI { class EditBox; }  // lines 25-25
- namespace MyGUI { class ImageBox; }  // lines 26-26
- namespace MyGUI { class ListBox; }  // lines 27-27
- namespace MyGUI { class Widget; }  // lines 28-28

The full include-list for apps/openmw/mwgui/savegamedialog.hpp:
#include <stddef.h>                     // for size_t
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "windowbase.hpp"               // for WindowModal
namespace MWState { class Character; }  // lines 33-33
namespace MWState { class Slot; }  // lines 34-34
namespace MyGUI { class Button; }  // lines 16-16
namespace MyGUI { class ComboBox; }  // lines 17-17
namespace MyGUI { class EditBox; }  // lines 18-18
namespace MyGUI { class ImageBox; }  // lines 19-19
namespace MyGUI { class ListBox; }  // lines 20-20
namespace MyGUI { class Widget; }  // lines 21-21
---

components/nifogre/ogrenifloader.hpp should add these lines:
#include "OgreController.h"             // for Controller, ControllerValue

components/nifogre/ogrenifloader.hpp should remove these lines:
- #include <OgreResource.h>  // lines 27-27
- #include "GLX/../OgrePrerequisites.h"  // lines 33-33
- #include "OgreQuaternion.h"  // lines 35-35
- #include "OgreSharedPtr.h"  // lines 37-37
- #include "OgreVector3.h"  // lines 39-39
- namespace Ogre { class Camera; }  // lines 51-51
- namespace Ogre { class Entity; }  // lines 52-52
- namespace Ogre { class Light; }  // lines 53-53
- namespace Ogre { class MovableObject; }  // lines 54-54
- namespace Ogre { class Node; }  // lines 55-55
- namespace Ogre { class ParticleSystem; }  // lines 56-56
- namespace Ogre { class SceneManager; }  // lines 57-57
- namespace Ogre { class SceneNode; }  // lines 58-58

The full include-list for components/nifogre/ogrenifloader.hpp:
#include <map>                          // for map, multimap, etc
#include <string>                       // for string
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for MaterialPtr, Real
#include "OgreController.h"             // for Controller, ControllerValue
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3
namespace Ogre { class Camera; }  // lines 42-42
namespace Ogre { class Entity; }  // lines 43-43
namespace Ogre { class Light; }  // lines 44-44
namespace Ogre { class MovableObject; }  // lines 45-45
namespace Ogre { class Node; }  // lines 46-46
namespace Ogre { class ParticleSystem; }  // lines 47-47
namespace Ogre { class SceneManager; }  // lines 48-48
namespace Ogre { class SceneNode; }  // lines 49-49
---

apps/openmw/mwdialogue/dialoguemanagerimp.cpp should add these lines:
#include "components/compiler/parser.hpp"  // for Scanner
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
namespace ESM { struct Faction; }
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwdialogue/dialoguemanagerimp.cpp should remove these lines:
- #include <stddef.h>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <components/interpreter/defines.hpp>  // lines 7-7
- #include <components/interpreter/interpreter.hpp>  // lines 8-8
- #include <cstdlib>  // lines 12-12
- #include <exception>  // lines 14-14
- #include <list>  // lines 16-16
- #include <typeinfo>  // lines 17-17
- #include <typeinfo>  // lines 18-18
- #include <utility>  // lines 19-19
- #include "../mwscript/extensions.hpp"  // lines 31-31
- #include "../mwworld/esmstore.hpp"  // lines 35-35
- #include "apps/openmw/mwdialogue/../mwbase/../mwgui/mode.hpp"  // lines 37-37
- #include "apps/openmw/mwdialogue/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 39-39
- #include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"  // lines 40-40
- #include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"  // lines 41-41
- #include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"  // lines 42-42
- #include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"  // lines 43-43
- #include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 46-46
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 47-47
- #include "components/compiler/streamerrorhandler.hpp"  // lines 49-49
- #include "components/esm/aipackage.hpp"  // lines 50-50
- #include "components/esm/defs.hpp"  // lines 52-52
- #include "components/esm/esmwriter.hpp"  // lines 54-54
- #include "components/esm/loadcrea.hpp"  // lines 55-55
- #include "components/esm/loadcrea.hpp"  // lines 56-56
- #include "components/esm/loadfact.hpp"  // lines 57-57
- #include "components/esm/loadfact.hpp"  // lines 58-58
- #include "components/esm/loadgmst.hpp"  // lines 59-59
- #include "components/esm/loadgmst.hpp"  // lines 60-60
- #include "components/esm/loadnpc.hpp"  // lines 62-62
- #include "components/esm/loadskil.hpp"  // lines 64-64
- #include "components/misc/stringops.hpp"  // lines 66-66
- #include "components/translation/translation.hpp"  // lines 67-67
- #include "components/translation/translation.hpp"  // lines 68-68
- #include "hypertextparser.hpp"  // lines 71-71
- namespace Compiler { class Extensions; }  // lines 83-83
- namespace ESM { class ESMReader; }  // lines 86-86
- namespace Loading { class Listener; }  // lines 89-89

The full include-list for apps/openmw/mwdialogue/dialoguemanagerimp.cpp:
#include "dialoguemanagerimp.hpp"
#include <stddef.h>                     // for NULL
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/locals.hpp>  // for Locals
#include <components/compiler/scriptparser.hpp>  // for ScriptParser
#include <components/esm/dialoguestate.hpp>  // for DialogueState
#include <components/esm/loadinfo.hpp>  // for DialInfo
#include <exception>                    // for exception
#include <iostream>                     // for cout
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/dialogue.hpp"        // for DialogueWindow, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwscript/compilercontext.hpp"  // for CompilerContext, etc
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "apps/openmw/mwdialogue/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwdialogue/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // for RefData
#include "components/compiler/parser.hpp"  // for Scanner
#include "components/compiler/streamerrorhandler.hpp"
#include "components/esm/defs.hpp"      // for RecNameInts::REC_DIAS
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "filter.hpp"                   // for Filter
namespace Compiler { class Extensions; }  // lines 81-81
namespace ESM { class ESMReader; }  // lines 74-74
namespace ESM { struct Faction; }
namespace ESM { struct GameSetting; }
namespace Loading { class Listener; }  // lines 77-77
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---

apps/openmw/mwgui/inventorywindow.cpp should add these lines:
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_Barter, etc

apps/openmw/mwgui/inventorywindow.cpp should remove these lines:
- #include <stddef.h>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 7-7
- #include <stdexcept>  // lines 12-12
- #include <string>  // lines 14-14
- #include <typeinfo>  // lines 15-15
- #include <typeinfo>  // lines 16-16
- #include <utility>  // lines 17-17
- #include <utility>  // lines 18-18
- #include <vector>  // lines 19-19
- #include <vector>  // lines 20-20
- #include "../mwbase/soundmanager.hpp"  // lines 25-25
- #include "../mwrender/characterpreview.hpp"  // lines 27-27
- #include "MyGUI_EventPair.h"  // lines 33-33
- #include "MyGUI_EventPair.h"  // lines 34-34
- #include "MyGUI_MouseButton.h"  // lines 36-36
- #include "MyGUI_RTTI.h"  // lines 37-37
- #include "MyGUI_RTTI.h"  // lines 38-38
- #include "MyGUI_StringUtility.h"  // lines 39-39
- #include "MyGUI_StringUtility.h"  // lines 40-40
- #include "MyGUI_TPoint.h"  // lines 42-42
- #include "MyGUI_TextBox.h"  // lines 44-44
- #include "MyGUI_Types.h"  // lines 46-46
- #include "MyGUI_Widget.h"  // lines 48-48
- #include "MyGUI_WidgetInput.h"  // lines 49-49
- #include "MyGUI_WidgetInput.h"  // lines 50-50
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/action.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/action.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 56-56
- #include "apps/openmw/mwgui/../mwworld/containerstore.hpp"  // lines 58-58
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 60-60
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 62-62
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 63-63
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 64-64
- #include "bookwindow.hpp"  // lines 65-65
- #include "components/esm/loadalch.hpp"  // lines 66-66
- #include "components/esm/loadalch.hpp"  // lines 67-67
- #include "components/esm/loadappa.hpp"  // lines 68-68
- #include "components/esm/loadappa.hpp"  // lines 69-69
- #include "components/esm/loadarmo.hpp"  // lines 70-70
- #include "components/esm/loadarmo.hpp"  // lines 71-71
- #include "components/esm/loadbook.hpp"  // lines 72-72
- #include "components/esm/loadbook.hpp"  // lines 73-73
- #include "components/esm/loadclot.hpp"  // lines 74-74
- #include "components/esm/loadclot.hpp"  // lines 75-75
- #include "components/esm/loadingr.hpp"  // lines 76-76
- #include "components/esm/loadingr.hpp"  // lines 77-77
- #include "components/esm/loadligh.hpp"  // lines 78-78
- #include "components/esm/loadligh.hpp"  // lines 79-79
- #include "components/esm/loadlock.hpp"  // lines 80-80
- #include "components/esm/loadlock.hpp"  // lines 81-81
- #include "components/esm/loadmisc.hpp"  // lines 82-82
- #include "components/esm/loadmisc.hpp"  // lines 83-83
- #include "components/esm/loadprob.hpp"  // lines 84-84
- #include "components/esm/loadprob.hpp"  // lines 85-85
- #include "components/esm/loadrepa.hpp"  // lines 86-86
- #include "components/esm/loadrepa.hpp"  // lines 87-87
- #include "components/esm/loadweap.hpp"  // lines 88-88
- #include "components/esm/loadweap.hpp"  // lines 89-89
- #include "components/misc/stringops.hpp"  // lines 91-91
- #include "components/settings/settings.hpp"  // lines 92-92
- #include "components/settings/settings.hpp"  // lines 93-93
- #include "inventoryitemmodel.hpp"  // lines 96-96
- #include "scrollwindow.hpp"  // lines 99-99
- #include "spellwindow.hpp"  // lines 101-101
- #include "tradewindow.hpp"  // lines 103-103
- namespace MyGUI { class ITexture; }  // lines 109-109

The full include-list for apps/openmw/mwgui/inventorywindow.cpp:
#include "inventorywindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_Window.h>               // for Window
#include <stddef.h>                     // for NULL, size_t
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/world.hpp"          // for World
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "MyGUI_MouseButton.h"          // for MouseButton, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_Barter, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "countdialog.hpp"              // for CountDialog, etc
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
#include "tradeitemmodel.hpp"           // for TradeItemModel
#include "widgets.hpp"                  // for MWDynamicStat
namespace MyGUI { class ITexture; }  // lines 107-107
---

apps/openmw/mwgui/savegamedialog.cpp should add these lines:

apps/openmw/mwgui/savegamedialog.cpp should remove these lines:
- #include <OgreTextureManager.h>  // lines 5-5
- #include <assert.h>  // lines 7-7
- #include <locale.h>  // lines 13-13
- #include <time.h>  // lines 15-15
- #include <algorithm>  // lines 16-16
- #include <algorithm>  // lines 17-17
- #include <boost/filesystem/path.hpp>  // lines 9-9
- #include <components/misc/stringops.hpp>  // lines 10-10
- #include <components/settings/settings.hpp>  // lines 11-11
- #include <list>  // lines 18-18
- #include <list>  // lines 19-19
- #include <ostream>  // lines 21-21
- #include <stdexcept>  // lines 22-22
- #include <stdexcept>  // lines 23-23
- #include <string>  // lines 25-25
- #include <vector>  // lines 26-26
- #include <vector>  // lines 27-27
- #include "../mwbase/world.hpp"  // lines 32-32
- #include "../mwworld/esmstore.hpp"  // lines 34-34
- #include "MyGUI_Button.h"  // lines 36-36
- #include "MyGUI_EditBox.h"  // lines 40-40
- #include "MyGUI_EventPair.h"  // lines 41-41
- #include "MyGUI_EventPair.h"  // lines 42-42
- #include "MyGUI_Macros.h"  // lines 44-44
- #include "MyGUI_RTTI.h"  // lines 45-45
- #include "MyGUI_RTTI.h"  // lines 46-46
- #include "MyGUI_UString.h"  // lines 48-48
- #include "MyGUI_Widget.h"  // lines 49-49
- #include "MyGUI_Widget.h"  // lines 50-50
- #include "MyGUI_WidgetInput.h"  // lines 51-51
- #include "MyGUI_WidgetInput.h"  // lines 52-52
- #include "OgreDataStream.h"  // lines 54-54
- #include "OgrePixelFormat.h"  // lines 55-55
- #include "OgrePixelFormat.h"  // lines 56-56
- #include "OgrePrerequisites.h"  // lines 58-58
- #include "OgreResourceGroupManager.h"  // lines 59-59
- #include "OgreResourceGroupManager.h"  // lines 60-60
- #include "OgreSharedPtr.h"  // lines 62-62
- #include "OgreTexture.h"  // lines 64-64
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 66-66
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 67-67
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 68-68
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 70-70
- #include "components/esm/loadclas.hpp"  // lines 71-71
- #include "components/esm/loadclas.hpp"  // lines 72-72
- #include "components/esm/savedgame.hpp"  // lines 74-74

The full include-list for apps/openmw/mwgui/savegamedialog.cpp:
#include "savegamedialog.hpp"
#include <MyGUI_ComboBox.h>             // for ComboBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_ListBox.h>              // for ListBox
#include <OgreImage.h>                  // for Image
#include <assert.h>                     // for assert
#include <locale.h>                     // for setlocale, LC_TIME
#include <time.h>                       // for localtime, time_t
#include <boost/filesystem/path.hpp>    // for path
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwstate/character.hpp"     // for Slot, Character, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_UString.h"              // for UString
#include "OgreDataStream.h"             // for DataStreamPtr
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "components/esm/savedgame.hpp"  // for SavedGame, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
---

(libs/openengine/ogre/imagerotate.hpp has correct #includes/fwd-decls)

libs/openengine/ogre/imagerotate.cpp should add these lines:
#include "OgreRenderTexture.h"          // for RenderTexture
#include "OgreSceneNode.h"              // for SceneNode

libs/openengine/ogre/imagerotate.cpp should remove these lines:
- #include "GLX/../OgrePrerequisites.h"  // lines 14-14
- #include "OgreAxisAlignedBox.h"  // lines 16-16
- #include "OgreColourValue.h"  // lines 18-18
- #include "OgreMaterial.h"  // lines 20-20
- #include "OgreMath.h"  // lines 22-22
- #include "OgrePass.h"  // lines 24-24
- #include "OgrePixelFormat.h"  // lines 26-26
- #include "OgreRenderQueue.h"  // lines 28-28
- #include "OgreResourceGroupManager.h"  // lines 30-30
- #include "OgreSharedPtr.h"  // lines 32-32
- namespace Ogre { class Camera; }  // lines 38-38

The full include-list for libs/openengine/ogre/imagerotate.cpp:
#include "imagerotate.hpp"
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgreRectangle2D.h>            // for Rectangle2D
#include <OgreRenderTarget.h>           // for RenderTarget
#include <OgreRoot.h>                   // for Root
#include <OgreSceneManager.h>           // for SceneManager, etc
#include <OgreTechnique.h>              // for Technique
#include <OgreTexture.h>                // for Texture, etc
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreTextureUnitState.h>       // for TextureUnitState, etc
#include <OgreViewport.h>               // for Viewport
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr, MaterialPtr
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreColourValue.h"            // for ColourValue
#include "OgreMaterial.h"               // for Material
#include "OgreMath.h"                   // for Degree, Radian
#include "OgrePass.h"                   // for Pass
#include "OgrePixelFormat.h"            // for PixelFormat::PF_A8B8G8R8
#include "OgreRenderQueue.h"
#include "OgreRenderTexture.h"          // for RenderTexture
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneNode.h"              // for SceneNode
#include "OgreSharedPtr.h"              // for SharedPtr
namespace Ogre { class Camera; }  // lines 36-36
---

(apps/openmw/mwscript/guiextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/guiextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/guiextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <string>  // lines 6-6
- #include "apps/openmw/mwscript/../mwbase/../mwgui/mode.hpp"  // lines 13-13
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 17-17
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 19-19
- #include "components/esm/loadcell.hpp"  // lines 21-21
- #include "components/interpreter/context.hpp"  // lines 23-23
- #include "components/misc/stringops.hpp"  // lines 26-26
- #include "ref.hpp"  // lines 28-28

The full include-list for apps/openmw/mwscript/guiextensions.cpp:
#include "guiextensions.hpp"
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string, operator!=, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/store.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/interpreter/context.hpp"  // for Context
#include "components/interpreter/types.hpp"  // for Data
#include "components/misc/stringops.hpp"  // for StringUtils
---
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemmodel.cpp:7:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwscript/containerextensions.hpp has correct #includes/fwd-decls)

components/nifogre/ogrenifloader.cpp should add these lines:

components/nifogre/ogrenifloader.cpp should remove these lines:
- #include <assert.h>  // lines 41-41
- #include <ctype.h>  // lines 49-49
- #include <stddef.h>  // lines 52-52
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 43-43
- #include <iostream>  // lines 55-55
- #include <iterator>  // lines 57-57
- #include <stdexcept>  // lines 59-59
- #include <utility>  // lines 61-61
- #include "OgreAnimationState.h"  // lines 64-64
- #include "OgreAny.h"  // lines 66-66
- #include "OgreBone.h"  // lines 68-68
- #include "OgreColourValue.h"  // lines 70-70
- #include "OgreController.h"  // lines 72-72
- #include "OgreLight.h"  // lines 74-74
- #include "OgreMaterial.h"  // lines 76-76
- #include "OgreMath.h"  // lines 78-78
- #include "OgreMemoryAllocatorConfig.h"  // lines 80-80
- #include "OgreMovableObject.h"  // lines 82-82
- #include "OgreNode.h"  // lines 84-84
- #include "OgreParticle.h"  // lines 86-86
- #include "OgreParticleIterator.h"  // lines 88-88
- #include "OgrePass.h"  // lines 90-90
- #include "OgreSkeleton.h"  // lines 92-92
- #include "OgreStringConverter.h"  // lines 94-94
- #include "OgreTextureUnitState.h"  // lines 96-96
- #include "OgreUserObjectBindings.h"  // lines 98-98
- #include "OgreVector4.h"  // lines 100-100
- #include "components/nif/base.hpp"  // lines 102-102
- #include "components/nif/controlled.hpp"  // lines 104-104
- #include "components/nif/controller.hpp"  // lines 106-106
- #include "components/nif/data.hpp"  // lines 108-108
- #include "components/nif/extra.hpp"  // lines 110-110
- #include "components/nif/niffile.hpp"  // lines 112-112
- #include "components/nif/nifkey.hpp"  // lines 114-114
- #include "components/nif/property.hpp"  // lines 116-116
- #include "components/nif/record.hpp"  // lines 118-118
- #include "components/nif/recordptr.hpp"  // lines 120-120

The full include-list for components/nifogre/ogrenifloader.cpp:
#include "ogrenifloader.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreControllerManager.h>      // for ControllerValueRealPtr, etc
#include <OgreEntity.h>                 // for Entity
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgreMesh.h>                   // for Mesh
#include <OgreMeshManager.h>            // for MeshManager
#include <OgreParticleAffector.h>       // for ParticleAffector
#include <OgreParticleEmitter.h>        // for ParticleEmitter
#include <OgreParticleSystem.h>         // for ParticleSystem
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreSkeletonInstance.h>       // for SkeletonInstance
#include <OgreSkeletonManager.h>        // for SkeletonManager
#include <OgreSubEntity.h>              // for SubEntity
#include <OgreTagPoint.h>               // for TagPoint
#include <OgreTechnique.h>              // for Technique::PassIterator, etc
#include <assert.h>                     // for assert
#include <ctype.h>                      // for isspace
#include <stddef.h>                     // for NULL, size_t
#include <algorithm>                    // for max, min
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include <components/misc/stringops.hpp>  // for StringUtils
#include <components/nif/node.hpp>      // for Node, NiNode, etc
#include <components/nifcache/nifcache.hpp>  // for NIFFilePtr, Cache
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <iterator>                     // for distance, reverse_iterator
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "OgreAnimationState.h"         // for AnimationState
#include "OgreAny.h"                    // for Any, any_cast
#include "OgreBone.h"                   // for Bone
#include "OgreColourValue.h"            // for ColourValue
#include "OgreController.h"             // for Controller, ControllerValue
#include "OgreLight.h"                  // for Light
#include "OgreMaterial.h"               // for Material::TechniqueIterator, etc
#include "OgreMath.h"                   // for Radian
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_NEW
#include "OgreMovableObject.h"          // for MovableObject
#include "OgreNode.h"                   // for Node, etc
#include "OgreParticle.h"               // for Particle
#include "OgreParticleIterator.h"       // for ParticleIterator
#include "OgrePass.h"                   // for Pass, etc
#include "OgreSkeleton.h"               // for Skeleton, SkeletonPtr
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreTextureUnitState.h"       // for TextureUnitState
#include "OgreUserObjectBindings.h"     // for UserObjectBindings
#include "OgreVector4.h"                // for Vector4
#include "components/nif/base.hpp"      // for Controller, Extra, etc
#include "components/nif/controlled.hpp"  // for NiGravity, etc
#include "components/nif/controller.hpp"
#include "components/nif/data.hpp"      // for NiMorphData::MorphData, etc
#include "components/nif/extra.hpp"     // for NiStringExtraData, etc
#include "components/nif/niffile.hpp"   // for NIFFile
#include "components/nif/nifkey.hpp"    // for FloatKeyMap, etc
#include "components/nif/property.hpp"  // for NiTexturingProperty, etc
#include "components/nif/record.hpp"    // for Record, etc
#include "components/nif/recordptr.hpp"  // for ControllerPtr, ExtraPtr, etc
#include "controller.hpp"               // for DefaultFunction, etc
#include "material.hpp"                 // for NIFMaterialLoader
#include "mesh.hpp"                     // for NIFMeshLoader
#include "particles.hpp"                // for NiNodeHolder, operator<<
#include "skeleton.hpp"                 // for NIFSkeletonLoader
---

apps/openmw/mwscript/containerextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/containerextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 4-4
- #include <components/interpreter/interpreter.hpp>  // lines 6-6
- #include <typeinfo>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include "MyGUI_UString.h"  // lines 21-21
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 22-22
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 23-23
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 25-25
- #include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"  // lines 27-27
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 29-29
- #include "apps/openmw/mwscript/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwscript/../mwworld/livecellref.hpp"  // lines 31-31
- #include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // lines 33-33
- #include "components/esm/loadarmo.hpp"  // lines 34-34
- #include "components/esm/loadarmo.hpp"  // lines 35-35
- #include "components/esm/loadweap.hpp"  // lines 36-36
- #include "components/interpreter/types.hpp"  // lines 38-38
- #include "components/misc/stringops.hpp"  // lines 40-40
- #include "ref.hpp"  // lines 42-42

The full include-list for apps/openmw/mwscript/containerextensions.cpp:
#include "containerextensions.hpp"
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <boost/format.hpp>             // for format, str, basic_format
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator==
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"
#include "../mwworld/actionequip.hpp"   // for ActionEquip
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"
#include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
#include "components/misc/stringops.hpp"  // for StringUtils
---

components/terrain/world.hpp should add these lines:

components/terrain/world.hpp should remove these lines:
- #include "OgreAxisAlignedBox.h"  // lines 5-5
- namespace Ogre { class Vector2; }  // lines 11-11
- namespace Ogre { class Vector3; }  // lines 14-14

The full include-list for components/terrain/world.hpp:
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "buffercache.hpp"              // for BufferCache
#include "defs.hpp"                     // for Alignment
namespace Ogre { class SceneManager; }  // lines 20-20
namespace Ogre { class Vector2; }  // lines 10-10
namespace Ogre { class Vector3; }  // lines 12-12
namespace Terrain { class Storage; }  // lines 25-25
---

components/terrain/world.cpp should add these lines:

components/terrain/world.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include "OgrePrerequisites.h"  // lines 6-6
- #include "OgreVector3.h"  // lines 8-8
- #include "components/terrain/defs.hpp"  // lines 10-10

The full include-list for components/terrain/world.cpp:
#include "world.hpp"
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox
#include <algorithm>                    // for swap
#include "OgrePrerequisites.h"          // for Real
#include "OgreVector3.h"                // for Vector3
#include "components/terrain/defs.hpp"  // for convertPosition, Alignment, etc
#include "storage.hpp"                  // for Storage
---
In file included from libs/openengine/bullet/physic.cpp:67:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
apps/openmw/mwgui/textinput.cpp:6:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:106:3: error: unknown type name 'OgreMaterial'; did you mean 'Material'?
                OgreMaterial* material = new OgreMaterial(name, mResourceGroup);
                ^~~~~~~~~~~~
                Material
extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:14:7: note: 'Material' declared here
class Material;
      ^

components/config/gamesettings.hpp should add these lines:
#include <boost/filesystem/path.hpp>    // for path

components/config/gamesettings.hpp should remove these lines:
- #include <QBool>  // lines 5-5
- #include <QTextStream>  // lines 9-9
- #include <vector>  // lines 11-11
- class QTextStream;  // lines 15-15

The full include-list for components/config/gamesettings.hpp:
#include <QBool>                        // for QBool
#include <QMap>                         // for QMap
#include <QString>                      // for QString
#include <QStringList>                  // for QStringList
#include <boost/filesystem/path.hpp>    // for path
#include <vector>                       // for allocator, vector
class QTextStream;  // lines 13-13
namespace Files { struct ConfigurationManager; }  // lines 21-21
---
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
libs/openengine/bullet/physic.cpp:97:16: error: cannot initialize return object of type 'btCollisionShape *' with an lvalue of type 'NifBullet::TriangleMeshShape *'
        return newShape;
               ^~~~~~~~
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:106:32: error: unknown type name 'OgreMaterial'; did you mean 'Material'?
                OgreMaterial* material = new OgreMaterial(name, mResourceGroup);
                                             ^~~~~~~~~~~~
                                             Material
extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:14:7: note: 'Material' declared here
class Material;
      ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:106:32: error: allocating an object of abstract class type 'sh::Material'
                OgreMaterial* material = new OgreMaterial(name, mResourceGroup);
                                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:67:35: note: unimplemented pure virtual method 'createPass' in 'Material'
                virtual boost::shared_ptr<Pass> createPass (const std::string& configuration, unsigned short lodIndex) = 0;
                                                ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:68:16: note: unimplemented pure virtual method 'createConfiguration' in 'Material'
                virtual bool createConfiguration (const std::string& name, unsigned short lodIndex) = 0; ///< @return false if already exists
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:69:16: note: unimplemented pure virtual method 'removeAll' in 'Material'
                virtual void removeAll () = 0; ///< remove all configurations
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:71:16: note: unimplemented pure virtual method 'isUnreferenced' in 'Material'
                virtual bool isUnreferenced() = 0;
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:72:16: note: unimplemented pure virtual method 'unreferenceTextures' in 'Material'
                virtual void unreferenceTextures() = 0;
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:73:16: note: unimplemented pure virtual method 'ensureLoaded' in 'Material'
                virtual void ensureLoaded() = 0;
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:75:16: note: unimplemented pure virtual method 'setLodLevels' in 'Material'
                virtual void setLodLevels (const std::string& lodLevels) = 0;
                             ^
./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:77:16: note: unimplemented pure virtual method 'setShadowCasterMaterial' in 'Material'
                virtual void setShadowCasterMaterial (const std::string& name) = 0;
                             ^

components/config/gamesettings.cpp should add these lines:
#include <QTextStream>                  // for QTextStream

components/config/gamesettings.cpp should remove these lines:
- #include <QtCore>  // lines 6-6
- #include "components/files/multidircollection.hpp"  // lines 9-9
- #include "components/files/multidircollection.hpp"  // lines 10-10

The full include-list for components/config/gamesettings.cpp:
#include "gamesettings.hpp"
#include <QMap>                         // for QMap, QMapIterator
#include <QString>                      // for QString, QLatin1String
#include <QTextStream>                  // for QTextStream
#include <QtCore>                       // for QByteArray, etc
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <string>                       // for string
#include "launchersettings.hpp"         // for LauncherSettings
---
libs/openengine/bullet/physic.cpp:146:47: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
            mShape.reset(new btCylinderShapeZ(BtOgre::Convert::toBullet(mHalfExtents)));
                                              ^~~~~~
                                              Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:132:4: error: unknown type name 'OgreMaterial'; did you mean 'Material'?
                        OgreMaterial* _m = static_cast<OgreMaterial*>(m->getMaterial());
                        ^~~~~~~~~~~~
                        Material
extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:14:7: note: 'Material' declared here
class Material;
      ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwscript/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

extern/shiny/Main/ScriptLoader.hpp should add these lines:

extern/shiny/Main/ScriptLoader.hpp should remove these lines:
- #include <iosfwd>  // lines 6-6

The full include-list for extern/shiny/Main/ScriptLoader.hpp:
#include <cassert>                      // for assert
#include <iosfwd>                       // for ifstream
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector, vector<>::iterator
namespace sh { class ScriptNode; }  // lines 14-14
---
libs/openengine/bullet/physic.cpp:146:55: error: no member named 'Convert' in namespace 'Ogre'
            mShape.reset(new btCylinderShapeZ(BtOgre::Convert::toBullet(mHalfExtents)));
                                              ~~~~~~~~^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:132:35: error: unknown type name 'OgreMaterial'; did you mean 'Material'?
                        OgreMaterial* _m = static_cast<OgreMaterial*>(m->getMaterial());
                                                       ^~~~~~~~~~~~
                                                       Material
extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:14:7: note: 'Material' declared here
class Material;
      ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:133:15: error: no member named 'getOgreTechniqueForConfiguration' in 'sh::Material'
                        return _m->getOgreTechniqueForConfiguration (schemeName, lodIndex);
                               ~~  ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:168:15: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        if (typeid(*value) == typeid(Vector4))
                                   ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwscript/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:170:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(Vector3))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:172:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(Vector2))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:174:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(FloatValue))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:176:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(IntValue))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:187:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value) == typeid(Vector4))
                           ^

extern/shiny/Main/ScriptLoader.cpp should add these lines:

extern/shiny/Main/ScriptLoader.cpp should remove these lines:
- #include <stddef.h>  // lines 8-8
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <boost/filesystem/path.hpp>  // lines 4-4
- #include <boost/iterator/iterator_facade.hpp>  // lines 6-6
- #include <stdexcept>  // lines 11-11

The full include-list for extern/shiny/Main/ScriptLoader.cpp:
#include "ScriptLoader.hpp"
#include <stddef.h>                     // for NULL
#include <boost/filesystem/operations.hpp>
#include <boost/filesystem/path.hpp>    // for path, operator==
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <map>                          // for map, map<>::iterator, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include <vector>                       // for vector, vector<>::iterator
---
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:195:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(Vector3))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:202:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(Vector2))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:208:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(FloatValue))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:210:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(IntValue))
                                ^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
libs/openengine/bullet/physic.cpp:149:41: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
            mShape.reset(new btBoxShape(BtOgre::Convert::toBullet(mHalfExtents)));
                                        ^~~~~~
                                        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:2:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwrender/activatoranimation.cpp should add these lines:

apps/openmw/mwrender/activatoranimation.cpp should remove these lines:
- #include <OgreParticleSystem.h>  // lines 1-1
- #include <OgreSceneNode.h>  // lines 2-2
- #include <vector>  // lines 3-3
- #include <vector>  // lines 4-4
- #include "OgreSharedPtr.h"  // lines 6-6
- #include "OgreSharedPtr.h"  // lines 7-7
- #include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 9-9
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 10-10
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 11-11
- #include "apps/openmw/mwrender/animation.hpp"  // lines 12-12
- #include "apps/openmw/mwrender/animation.hpp"  // lines 13-13
- #include "components/nifogre/ogrenifloader.hpp"  // lines 14-14
- #include "components/nifogre/ogrenifloader.hpp"  // lines 15-15
- #include "renderconst.hpp"  // lines 16-16
- namespace ESM { struct Light; }  // lines 19-19
- namespace ESM { struct Light; }  // lines 21-21

The full include-list for apps/openmw/mwrender/activatoranimation.cpp:
---
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from In file included from apps/openmw/mwrender/refraction.cpp:10:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwscript/../mwmechanics/spells.hpp:8:
apps/openmw/mwscript/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwscript/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwscript/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwscript/dialogueextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwscript/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/refraction.cpp:10:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/water.cpp:12:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwrender/refraction.cpp:10:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/soundextensions.cpp:2:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/refraction.cpp:89:9: error: no type named 'Vector4' in namespace 'sh'; did you mean simply 'Vector4'?
        sh::Vector4* row3 = new sh::Vector4(projMatrix[2][0], projMatrix[2][1], projMatrix[2][2], projMatrix[2][3]);
        ^~~~~~~~~~~
        Vector4
./extern/shiny/Main/PropertyBase.hpp:127:8: note: 'Vector4' declared here
        class Vector4 : public PropertyValue
              ^
In file included from apps/openmw/mwgui/mainmenu.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/water.cpp:12:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwgui/mainmenu.cpp:25:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwrender/refraction.cpp:89:33: error: no type named 'Vector4' in namespace 'sh'; did you mean simply 'Vector4'?
        sh::Vector4* row3 = new sh::Vector4(projMatrix[2][0], projMatrix[2][1], projMatrix[2][2], projMatrix[2][3]);
                                ^~~~~~~~~~~
                                Vector4
./extern/shiny/Main/PropertyBase.hpp:127:8: note: 'Vector4' declared here
        class Vector4 : public PropertyValue
              ^
In file included from apps/openmw/mwrender/water.cpp:12:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwrender/refraction.cpp:90:70: error: no template named 'makeProperty' in namespace 'sh'; did you mean simply 'makeProperty'?
        sh::Factory::getInstance ().setSharedParameter ("vpRow2Fix", sh::makeProperty<sh::Vector4> (row3));
                                                                     ^~~~~~~~~~~~~~~~
                                                                     makeProperty
./extern/shiny/Main/PropertyBase.hpp:244:26: note: 'makeProperty' declared here
        inline PropertyValuePtr makeProperty (T* p)
                                ^
In file included from apps/openmw/mwscript/aiextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
apps/openmw/mwrender/refraction.cpp:90:91: error: no member named 'Vector4' in namespace 'sh'
        sh::Factory::getInstance ().setSharedParameter ("vpRow2Fix", sh::makeProperty<sh::Vector4> (row3));
                                                                                      ~~~~^

apps/openmw/mwdialogue/hypertextparser.hpp should add these lines:

apps/openmw/mwdialogue/hypertextparser.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5

The full include-list for apps/openmw/mwdialogue/hypertextparser.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string, basic_string
#include <vector>                       // for vector
---

apps/openmw/mwdialogue/hypertextparser.cpp should add these lines:

apps/openmw/mwdialogue/hypertextparser.cpp should remove these lines:
- #include <list>  // lines 3-3
- #include "../mwbase/environment.hpp"  // lines 5-5
- #include "../mwbase/world.hpp"  // lines 6-6
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"  // lines 8-8
- #include "components/misc/stringops.hpp"  // lines 10-10

The full include-list for apps/openmw/mwdialogue/hypertextparser.cpp:
#include "hypertextparser.hpp"
#include <components/esm/loaddial.hpp>  // for Dialogue
#include <list>                         // for list, etc
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "keywordsearch.hpp"            // for KeywordSearch<>::Match, etc
---
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionteleport.cpp:10:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

extern/ogre-ffmpeg-videoplayer/videostate.hpp should add these lines:

extern/ogre-ffmpeg-videoplayer/videostate.hpp should remove these lines:
- #include <stddef.h>  // lines 12-12
- #include <stdint.h>  // lines 14-14
- #include <sys/types.h>  // lines 16-16
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <boost/thread/pthread/condition_variable_fwd.hpp>  // lines 7-7
- #include <boost/thread/thread_only.hpp>  // lines 10-10
- #include <string>  // lines 18-18
- #include <vector>  // lines 30-30
- #include "OgreDataStream.h"  // lines 26-26
- #include "OgrePrerequisites.h"  // lines 27-27
- #include "OgreSharedPtr.h"  // lines 28-28
- #include "videodefs.hpp"  // lines 29-29

The full include-list for extern/ogre-ffmpeg-videoplayer/videostate.hpp:
#include <stddef.h>                     // for NULL
#include <stdint.h>                     // for uint8_t, uint64_t
#include <sys/types.h>                  // for int64_t
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <boost/thread/pthread/condition_variable_fwd.hpp>
#include <boost/thread/pthread/mutex.hpp>  // for mutex
#include <boost/thread/thread_only.hpp>  // for thread
#include <string>                       // for string
#include <vector>                       // for vector
#include "OgreDataStream.h"             // for DataStreamPtr
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
namespace Video { class MovieAudioDecoder; }  // lines 49-49
namespace Video { class MovieAudioFactory; }  // lines 50-50
namespace Video { struct VideoState; }  // lines 51-51
struct AVFormatContext;  // lines 36-36
struct AVFrame;  // lines 38-38
struct AVPacket;  // lines 39-39
struct AVPacketList;  // lines 40-40
struct AVStream;  // lines 42-42
struct SwsContext;  // lines 43-43
---
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
libs/openengine/ogre/renderer.cpp:62:15: error: incomplete type 'Ogre::Root' named in nested name specifier
        Ogre::Root::getSingleton().destroyRenderTarget(mWindow);
        ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
libs/openengine/ogre/renderer.cpp:65:5: warning: deleting pointer to incomplete type 'OgreInit::OgreInit' may cause undefined behavior [-Wdelete-incomplete]
    delete mOgreInit;
    ^      ~~~~~~~~~
libs/openengine/ogre/renderer.hpp:27:11: note: forward declaration of 'Ogre::OgreInit::OgreInit'
    class OgreInit;
          ^
libs/openengine/ogre/renderer.cpp:123:21: error: allocation of incomplete type 'OgreInit::OgreInit'
    mOgreInit = new OgreInit::OgreInit();
                    ^~~~~~~~~~~~~~~~~~
libs/openengine/ogre/renderer.hpp:27:11: note: forward declaration of 'Ogre::OgreInit::OgreInit'
    class OgreInit;
          ^
libs/openengine/ogre/renderer.cpp:124:22: error: member access into incomplete type 'OgreInit::OgreInit'
    mRoot = mOgreInit->init(logPath + "/ogre.log");
                     ^
libs/openengine/ogre/renderer.hpp:27:11: note: forward declaration of 'Ogre::OgreInit::OgreInit'
    class OgreInit;
          ^
libs/openengine/ogre/renderer.cpp:126:29: error: member access into incomplete type 'Ogre::Root'
    RenderSystem* rs = mRoot->getRenderSystemByName(renderSystem);
                            ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
libs/openengine/ogre/renderer.cpp:129:10: error: member access into incomplete type 'Ogre::Root'
    mRoot->setRenderSystem(rs);
         ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
libs/openengine/ogre/renderer.cpp:138:10: error: member access into incomplete type 'Ogre::Root'
    mRoot->initialise(false);
         ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
libs/openengine/ogre/renderer.cpp:189:19: error: member access into incomplete type 'Ogre::Root'
    mScene = mRoot->createSceneManager(ST_GENERIC);
                  ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
libs/openengine/ogre/renderer.cpp:268:2: error: expected '}'
}
 ^
libs/openengine/ogre/renderer.hpp:17:1: note: to match this '{'
{
^
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/textinput.hpp should add these lines:

apps/openmw/mwgui/textinput.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "MyGUI_DeprecatedTypes.h"  // lines 8-8
- namespace MWGui { class WindowManager; }  // lines 21-21
- namespace MyGUI { class EditBox; }  // lines 15-15
- namespace MyGUI { class Widget; }  // lines 16-16

The full include-list for apps/openmw/mwgui/textinput.hpp:
#include <string>                       // for string
#include "MyGUI_DeprecatedTypes.h"      // for Edit
#include "windowbase.hpp"
namespace MyGUI { class EditBox; }  // lines 12-12
namespace MyGUI { class Widget; }  // lines 13-13
---

apps/openmw/mwgui/textinput.cpp should add these lines:
namespace MyGUI { class Button; }

apps/openmw/mwgui/textinput.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include "MyGUI_EventPair.h"  // lines 8-8
- #include "MyGUI_EventPair.h"  // lines 9-9
- #include "MyGUI_RTTI.h"  // lines 10-10
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_UString.h"  // lines 13-13
- #include "MyGUI_WidgetInput.h"  // lines 14-14
- #include "MyGUI_WidgetInput.h"  // lines 15-15
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 16-16
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 17-17
- namespace MyGUI { class Widget; }  // lines 23-23

The full include-list for apps/openmw/mwgui/textinput.cpp:
#include "textinput.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_UString.h"              // for UString
namespace MyGUI { class Button; }
namespace MyGUI { class Widget; }  // lines 21-21
---
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/companionwindow.cpp:9:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

extern/ogre-ffmpeg-videoplayer/videostate.cpp should add these lines:

extern/ogre-ffmpeg-videoplayer/videostate.cpp should remove these lines:
- #include <assert.h>  // lines 20-20
- #include <libavcodec/version.h>  // lines 34-34
- #include <libavformat/avio.h>  // lines 36-36
- #include <libavformat/version.h>  // lines 38-38
- #include <libavutil/avutil.h>  // lines 40-40
- #include <libavutil/frame.h>  // lines 42-42
- #include <libavutil/mem.h>  // lines 44-44
- #include <libavutil/old_pix_fmts.h>  // lines 46-46
- #include <libavutil/rational.h>  // lines 48-48
- #include <libavutil/version.h>  // lines 50-50
- #include <stdio.h>  // lines 53-53
- #include <algorithm>  // lines 70-70
- #include <boost/cstdint.hpp>  // lines 22-22
- #include <boost/date_time/posix_time/posix_time_duration.hpp>  // lines 24-24
- #include <boost/date_time/time_duration.hpp>  // lines 26-26
- #include <boost/thread/lock_types.hpp>  // lines 28-28
- #include <boost/thread/pthread/condition_variable.hpp>  // lines 30-30
- #include <boost/thread/pthread/thread_data.hpp>  // lines 32-32
- #include <iostream>  // lines 72-72
- #include <new>  // lines 74-74
- #include <stdexcept>  // lines 76-76
- #include "OgreException.h"  // lines 2-2
- #include "OgrePixelFormat.h"  // lines 4-4
- #include "OgreTexture.h"  // lines 6-6
- #include "extern/ogre-ffmpeg-videoplayer/videodefs.hpp"  // lines 8-8

The full include-list for extern/ogre-ffmpeg-videoplayer/videostate.cpp:
#include "videostate.hpp"
#include <OgreHardwarePixelBuffer.h>
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager, etc
#include <OgreStringConverter.h>        // for StringConverter
#include <OgreTextureManager.h>         // for TextureManager
#include <assert.h>                     // for assert
#include <libavcodec/avcodec.h>         // for AVCodecContext, AVPacket, etc
#include <libavcodec/version.h>         // for LIBAVCODEC_VERSION_INT
#include <libavformat/avformat.h>       // for AVStream, AVFormatContext, etc
#include <libavformat/avio.h>           // for AVIOContext, etc
#include <libavformat/version.h>        // for LIBAVFORMAT_VERSION_MAJOR, etc
#include <libavutil/avutil.h>           // for AV_NOPTS_VALUE, etc
#include <libavutil/frame.h>            // for AVFrame, av_frame_alloc
#include <libavutil/mem.h>              // for av_free, av_freep, etc
#include <libavutil/old_pix_fmts.h>     // for AVPixelFormat::PIX_FMT_RGBA
#include <libavutil/rational.h>         // for av_q2d, AVRational
#include <libavutil/time.h>             // for av_gettime
#include <libavutil/version.h>          // for AV_VERSION_INT
#include <libswscale/swscale.h>         // for sws_freeContext, etc
#include <stdint.h>                     // for uint8_t, uint64_t
#include <stdio.h>                      // for fprintf, SEEK_CUR, SEEK_END, etc
#include <algorithm>                    // for max, min
#include <boost/cstdint.hpp>            // for __STDC_CONSTANT_MACROS
#include <boost/date_time/posix_time/posix_time_duration.hpp>
#include <boost/date_time/time_duration.hpp>  // for subsecond_duration
#include <boost/thread/lock_types.hpp>  // for unique_lock
#include <boost/thread/pthread/condition_variable.hpp>
#include <boost/thread/pthread/thread_data.hpp>  // for sleep
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <new>                          // for bad_alloc
#include <stdexcept>                    // for runtime_error
#include "OgreException.h"              // for Exception
#include "OgrePixelFormat.h"            // for PixelFormat::PF_BYTE_RGBA, etc
#include "OgreTexture.h"                // for Texture, etc
#include "audiodecoder.hpp"             // for MovieAudioDecoder
#include "audiofactory.hpp"             // for MovieAudioFactory
#include "extern/ogre-ffmpeg-videoplayer/videodefs.hpp"
---
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

(apps/openmw/mwdialogue/keywordsearch.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:16:
apps/openmw/mwrender/debugging.hpp:78:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridLines(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/GLX/../OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/soundextensions.cpp:8:
In file included from apps/openmw/mwscript/../mwbase/soundmanager.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:16:
apps/openmw/mwrender/debugging.hpp:79:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridPoints(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/GLX/../OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/aiextensions.cpp:15:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:17:
apps/openmw/mwrender/objects.hpp:53:40: error: no member named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'
    std::map<MWWorld::CellStore*,Ogre::AxisAlignedBox> mBounds;
                                 ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwrender/objects.hpp:77:5: error: no type named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    Ogre::AxisAlignedBox getDimensions(MWWorld::CellStore*);
    ^~~~~~~~~~~~~~~~~~~~
    AxisAlignedBox
/usr/include/OGRE/OgreAxisAlignedBox.h:54:20: note: 'AxisAlignedBox' declared here
        class _OgreExport AxisAlignedBox
                          ^

(apps/openmw/mwscript/dialogueextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/dialogueextensions.cpp should add these lines:

apps/openmw/mwscript/dialogueextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <string>  // lines 6-6
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 16-16
- #include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // lines 18-18
- #include "components/interpreter/types.hpp"  // lines 20-20

The full include-list for apps/openmw/mwscript/dialogueextensions.cpp:
#include "dialogueextensions.hpp"
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
---
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:18:
apps/openmw/mwrender/occlusionquery.hpp:48:76: error: expected class name
    class OcclusionQuery : public Ogre::RenderObjectListener, public Ogre::RenderQueueListener
                                                                           ^
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwgui/journalwindow.hpp should add these lines:

apps/openmw/mwgui/journalwindow.hpp should remove these lines:
- class WindowManager;  // lines 9-9
- namespace boost { template <class Y> class shared_ptr; }  // lines 12-12

The full include-list for apps/openmw/mwgui/journalwindow.hpp:
namespace MWGui { struct JournalViewModel; }  // lines 17-17
namespace boost { template <class Y> class shared_ptr; }  // lines 6-6
---
apps/openmw/mwrender/occlusionquery.hpp:98:10: error: no type named 'LightList' in namespace 'Ogre::OEngine::Ogre::Ogre'; did you mean simply 'LightList'?
                        const Ogre::LightList* pLightList, bool suppressRenderStateChanges);
                              ^~~~~~~~~~~~~~~
                              LightList
/usr/include/OGRE/OgreCommon.h:542:31: note: 'LightList' declared here
        typedef HashedVector<Light*> LightList;
                                     ^

apps/openmw/mwgui/journalwindow.cpp should add these lines:

apps/openmw/mwgui/journalwindow.cpp should remove these lines:
- #include <MyGUI_TextBox.h>  // lines 1-1
- #include <assert.h>  // lines 3-3
- #include <stdint.h>  // lines 11-11
- #include <boost/cstdint.hpp>  // lines 4-4
- #include <boost/cstdint.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 7-7
- #include <set>  // lines 12-12
- #include <stack>  // lines 13-13
- #include "../mwbase/soundmanager.hpp"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_RTTI.h"  // lines 25-25
- #include "MyGUI_StringUtility.h"  // lines 26-26
- #include "MyGUI_StringUtility.h"  // lines 27-27
- #include "MyGUI_TPoint.h"  // lines 29-29
- #include "MyGUI_TSize.h"  // lines 31-31
- #include "MyGUI_Types.h"  // lines 33-33
- #include "MyGUI_Widget.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "components/misc/stringops.hpp"  // lines 39-39
- #include "components/misc/stringops.hpp"  // lines 40-40

The full include-list for apps/openmw/mwgui/journalwindow.cpp:
#include "journalwindow.hpp"
#include <assert.h>                     // for assert
#include <stdint.h>                     // for intptr_t
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include <components/widgets/list.hpp>  // for MWList
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetInput.h"          // for EventHandle_WidgetVoid
#include "bookpage.hpp"                 // for BookPage, etc
#include "journalbooks.hpp"             // for JournalBooks::Book, etc
#include "journalviewmodel.hpp"         // for JournalViewModel, etc
#include "windowbase.hpp"               // for WindowBase
---
In file included from apps/openmw/mwworld/actionteleport.cpp:22:
apps/openmw/mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/actionteleport.cpp:27:30: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
    void getFollowers (const MWWorld::Ptr& actor, std::set<MWWorld::Ptr>& out)
                             ^~~~~~~~~~~~
                             Ptr
apps/openmw/mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwworld/actionteleport.cpp:27:69: error: no member named 'Ptr' in namespace 'MWBase::Loading::MWWorld'
    void getFollowers (const MWWorld::Ptr& actor, std::set<MWWorld::Ptr>& out)
                                                           ~~~~~~~~~^
apps/openmw/mwworld/actionteleport.cpp:29:28: error: no member named 'Ptr' in namespace 'MWBase::Loading::MWWorld'
        std::list<MWWorld::Ptr> followers = MWBase::Environment::get().getMechanicsManager()->getActorsFollowing(actor);
                  ~~~~~~~~~^
apps/openmw/mwworld/actionteleport.cpp:29:33: error: C++ requires a type specifier for all declarations
        std::list<MWWorld::Ptr> followers = MWBase::Environment::get().getMechanicsManager()->getActorsFollowing(actor);
                                ^
In file included from apps/openmw/mwgui/spellmodel.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/cursor.hpp should add these lines:

apps/openmw/mwgui/cursor.hpp should remove these lines:
- #include <string>  // lines 7-7
- #include "MyGUI_RTTI.h"  // lines 10-10
- #include "MyGUI_Types.h"  // lines 12-12
- #include "MyGUI_XmlDocument.h"  // lines 14-14
- namespace MyGUI { class ImageBox; }  // lines 20-20
- namespace MyGUI { class Version; }  // lines 21-21

The full include-list for apps/openmw/mwgui/cursor.hpp:
#include <MyGUI_IPointer.h>             // for IPointer
#include <MyGUI_ResourceImageSet.h>     // for ResourceImageSetPtr
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_XmlDocument.h"          // for ElementPtr
namespace MyGUI { class ImageBox; }  // lines 17-17
namespace MyGUI { class Version; }  // lines 18-18
---

apps/openmw/mwgui/cursor.cpp should add these lines:

apps/openmw/mwgui/cursor.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include "MyGUI_StringUtility.h"  // lines 9-9

The full include-list for apps/openmw/mwgui/cursor.cpp:
#include "cursor.hpp"
#include <stddef.h>                     // for NULL
#include "MyGUI_IResource.h"            // for IResource
#include "MyGUI_ImageBox.h"             // for ImageBox
#include "MyGUI_ResourceImageSet.h"     // for ResourceImageSet, etc
#include "MyGUI_ResourceManager.h"      // for ResourceManager
#include "MyGUI_StringUtility.h"        // for parseInt
#include "MyGUI_Version.h"              // for Version
---
apps/openmw/mwworld/actionteleport.cpp:30:32: error: no member named 'Ptr' in namespace 'MWBase::Loading::MWWorld'
        for(std::list<MWWorld::Ptr>::iterator it = followers.begin();it != followers.end();++it)
                      ~~~~~~~~~^
In file included from apps/openmw/mwrender/water.cpp:58:
In file included from apps/openmw/mwrender/renderingmanager.hpp:18:
apps/openmw/mwrender/occlusionquery.hpp:100:39: error: no type named 'uint8' in namespace 'Ogre::OEngine::Ogre::Ogre'; did you mean simply 'uint8'?
        virtual void renderQueueEnded(Ogre::uint8 queueGroupId, const Ogre::String& invocation, bool& repeatThisInvocation);
                                      ^~~~~~~~~~~
                                      uint8
/usr/include/OGRE/OgrePlatform.h:361:23: note: 'uint8' declared here
typedef unsigned char uint8;
                      ^
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwworld/actionteleport.cpp:30:36: error: no template named 'iterator' in the global namespace; did you mean '__gnu_cxx::iterator'?
        for(std::list<MWWorld::Ptr>::iterator it = followers.begin();it != followers.end();++it)
                                   ^~~~~~~~~~
                                   __gnu_cxx::iterator
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h:118:12: note: '__gnu_cxx::iterator' declared here
    struct iterator
           ^
apps/openmw/mwworld/actionteleport.cpp:30:38: error: use of class template '::iterator' requires template arguments
        for(std::list<MWWorld::Ptr>::iterator it = followers.begin();it != followers.end();++it)
                                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_iterator_base_types.h:118:12: note: template is declared here
    struct iterator
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwworld/actionteleport.cpp:43:5: error: use of undeclared identifier 'ActionTeleport'; did you mean '::MWWorld::ActionTeleport'?
    ActionTeleport::ActionTeleport (const std::string& cellName,
    ^~~~~~~~~~~~~~
    ::MWWorld::ActionTeleport
apps/openmw/mwworld/actionteleport.hpp:17:11: note: '::MWWorld::ActionTeleport' declared here
    class ActionTeleport : public Action
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

components/nif/data.hpp should add these lines:

components/nif/data.hpp should remove these lines:
- #include <vector>  // lines 29-29
- #include "OgreMatrix3.h"  // lines 32-32
- #include "OgreQuaternion.h"  // lines 34-34
- #include "OgreVector2.h"  // lines 36-36
- #include "OgreVector3.h"  // lines 38-38
- #include "OgreVector4.h"  // lines 40-40
- #include "base.hpp"  // lines 41-41
- #include "components/nif/nifkey.hpp"  // lines 43-43
- #include "components/nif/nifstream.hpp"  // lines 45-45
- #include "components/nif/record.hpp"  // lines 47-47
- #include "components/nif/recordptr.hpp"  // lines 49-49
- namespace Nif { class NIFFile; }  // lines 54-54

The full include-list for components/nif/data.hpp:
#include <stddef.h>                     // for size_t
#include <vector>                       // for vector, allocator
#include "OgreMatrix3.h"                // for Matrix3
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "OgreVector4.h"                // for Vector4
#include "components/nif/nifkey.hpp"    // for FloatKeyMap, etc
#include "components/nif/nifstream.hpp"  // for NIFStream
#include "components/nif/record.hpp"    // for Record
#include "components/nif/recordptr.hpp"  // for NiSkinDataPtr, NodeList, etc
namespace Nif { class NIFFile; }  // lines 52-52
---

components/nif/data.cpp should add these lines:

components/nif/data.cpp should remove these lines:
- #include "components/nif/niffile.hpp"  // lines 2-2

The full include-list for components/nif/data.cpp:
#include "data.hpp"
#include "components/nif/niffile.hpp"   // for NIFFile
#include "node.hpp"                     // for Node
---
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/spellmodel.cpp:16:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwdialogue/journalimp.cpp:18:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/scriptmanagerimp.hpp should add these lines:
#include "apps/openmw/mwscript/extensions.hpp"  // for Interpreter
namespace Interpreter { class Context; }

apps/openmw/mwscript/scriptmanagerimp.hpp should remove these lines:
- #include <components/interpreter/interpreter.hpp>  // lines 6-6
- #include <utility>  // lines 11-11
- #include <vector>  // lines 13-13
- #include "components/compiler/locals.hpp"  // lines 17-17

The full include-list for apps/openmw/mwscript/scriptmanagerimp.hpp:
#include <components/compiler/fileparser.hpp>  // for FileParser
#include <components/compiler/streamerrorhandler.hpp>
#include <components/interpreter/types.hpp>  // for Type_Code
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "apps/openmw/mwscript/extensions.hpp"  // for Interpreter
#include "components/compiler/locals.hpp"  // for Locals
#include "globalscripts.hpp"            // for GlobalScripts
namespace Compiler { class Context; }  // lines 27-27
namespace Interpreter { class Context; }
namespace MWWorld { struct ESMStore; }  // lines 22-22
---

(extern/ogre-ffmpeg-videoplayer/libavwrapper.cpp has correct #includes/fwd-decls)

apps/openmw/mwscript/scriptmanagerimp.cpp should add these lines:
#include "components/esm/loadscpt.hpp"  // for Script
namespace Interpreter { class Context; }

apps/openmw/mwscript/scriptmanagerimp.cpp should remove these lines:
- #include <stdexcept>  // lines 12-12
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 16-16
- #include "apps/openmw/mwscript/globalscripts.hpp"  // lines 18-18
- #include "components/compiler/fileparser.hpp"  // lines 20-20
- #include "components/compiler/streamerrorhandler.hpp"  // lines 22-22
- #include "components/interpreter/interpreter.hpp"  // lines 23-23
- #include "components/interpreter/interpreter.hpp"  // lines 24-24
- #include "components/interpreter/types.hpp"  // lines 26-26
- #include "extensions.hpp"  // lines 27-27

The full include-list for apps/openmw/mwscript/scriptmanagerimp.cpp:
#include "scriptmanagerimp.hpp"
#include <algorithm>                    // for binary_search, sort, etc
#include <cassert>                      // for assert
#include <components/compiler/context.hpp>  // for Context
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/quickfileparser.hpp>  // for QuickFileParser
#include <components/compiler/scanner.hpp>  // for Scanner
#include <components/misc/stringops.hpp>  // for StringUtils
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwscript/globalscripts.hpp"  // for GlobalScripts
#include "components/compiler/fileparser.hpp"  // for FileParser
#include "components/compiler/streamerrorhandler.hpp"
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/interpreter/types.hpp"  // for Type_Code
namespace Interpreter { class Context; }
---
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/container.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/container.cpp:13:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/container.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/container.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwscript/aiextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwscript/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwscript/soundextensions.cpp:21:43: error: expected class name
        class OpSay : public Interpreter::Opcode0
                                          ^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwscript/aiextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwscript/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwscript/soundextensions.cpp:46:47: error: expected class name
        class OpSayDone : public Interpreter::Opcode0
                                              ^
In file included from apps/openmw/mwrender/sky.cpp:13:
In file included from ./extern/shiny/Platforms/Ogre/OgreMaterial.hpp:8:
In file included from ./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:9:
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
apps/openmw/mwscript/soundextensions.cpp:58:51: error: expected class name
        class OpStreamMusic : public Interpreter::Opcode0
                                                  ^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwscript/soundextensions.cpp:71:49: error: expected class name
        class OpPlaySound : public Interpreter::Opcode0
                                                ^
apps/openmw/mwscript/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwscript/soundextensions.cpp:84:51: error: expected class name
        class OpPlaySoundVP : public Interpreter::Opcode0
                                                  ^
apps/openmw/mwscript/soundextensions.cpp:104:51: error: expected class name
        class OpPlaySound3D : public Interpreter::Opcode0
                                                  ^
apps/openmw/mwscript/soundextensions.cpp:127:53: error: expected class name
        class OpPlaySoundVP3D : public Interpreter::Opcode0
                                                    ^
apps/openmw/mwscript/soundextensions.cpp:157:49: error: expected class name
        class OpStopSound : public Interpreter::Opcode0
                                                ^
apps/openmw/mwscript/soundextensions.cpp:173:55: error: expected class name
        class OpGetSoundPlaying : public Interpreter::Opcode0
                                                      ^
In file included from apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/container.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/animationextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
In file included from components/config/launchersettings.cpp:5:
./components/config/gamesettings.hpp:20:23: error: use of undeclared identifier 'boost'
  typedef std::vector<boost::filesystem::path> PathContainer;
                      ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/aiextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwscript/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwscript/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/tooltips.cpp:26:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/failedaction.cpp:2:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from In file included from apps/openmw/mwworld/failedaction.cpp:2:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/failedaction.cpp:2:
In file included from ./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/sky.cpp:26:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/failedaction.cpp:2:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/failedaction.cpp:2:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/actionteleport.hpp should add these lines:

apps/openmw/mwworld/actionteleport.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 12-12

The full include-list for apps/openmw/mwworld/actionteleport.hpp:
#include <components/esm/defs.hpp>      // for Position
#include <string>                       // for string
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 10-10
---

apps/openmw/mwworld/actionteleport.cpp should add these lines:

apps/openmw/mwworld/actionteleport.cpp should remove these lines:
- #include <list>  // lines 1-1
- #include <list>  // lines 2-2
- #include <set>  // lines 3-3
- #include <set>  // lines 4-4
- #include <utility>  // lines 5-5
- #include <utility>  // lines 6-6
- #include "../mwbase/environment.hpp"  // lines 8-8
- #include "../mwbase/mechanicsmanager.hpp"  // lines 9-9
- #include "../mwbase/world.hpp"  // lines 10-10
- #include "OgreVector3.h"  // lines 11-11
- #include "OgreVector3.h"  // lines 12-12
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 17-17
- #include "apps/openmw/mwworld/action.hpp"  // lines 18-18
- #include "apps/openmw/mwworld/action.hpp"  // lines 19-19
- #include "components/esm/defs.hpp"  // lines 20-20
- #include "components/esm/defs.hpp"  // lines 21-21
- #include "player.hpp"  // lines 22-22

The full include-list for apps/openmw/mwworld/actionteleport.cpp:
#include "actionteleport.hpp"
---
In file included from apps/openmw/mwworld/failedaction.cpp:2:
./apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/failedaction.cpp:20:58: error: member access into incomplete type 'MWBase::WindowManager'
            MWBase::Environment::get().getWindowManager()->messageBox(mMessage);
                                                         ^
apps/openmw/mwworld/../mwbase/environment.hpp:13:11: note: forward declaration of 'MWBase::WindowManager'
    class WindowManager;
          ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwgui/tooltips.cpp:27:
apps/openmw/mwgui/../mwmechanics/spellcasting.hpp:18:5: error: expected '{'
    struct EffectList;
    ^
apps/openmw/mwgui/../mwmechanics/spellcasting.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/../mwmechanics/spellcasting.hpp:82:23: error: field has incomplete type 'Ogre::Vector3'
        Ogre::Vector3 mHitPosition; // Used for spawning area orb
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^

apps/openmw/mwgui/companionwindow.hpp should add these lines:
#include "apps/openmw/mwgui/referenceinterface.hpp"

apps/openmw/mwgui/companionwindow.hpp should remove these lines:
- #include "widgets.hpp"  // lines 4-4
- namespace MWGui { namespace Widgets { class MWDynamicStat; } }  // lines 20-20
- namespace MWGui { namespace Widgets { class Ptr; } }  // lines 19-19
- namespace MyGUI { class Button; }  // lines 26-26
- namespace MyGUI { class TextBox; }  // lines 27-27
- namespace MyGUI { class Widget; }  // lines 28-28

The full include-list for apps/openmw/mwgui/companionwindow.hpp:
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class CompanionItemModel; }  // lines 33-33
namespace MWGui { class DragAndDrop; }  // lines 34-34
namespace MWGui { class ItemView; }  // lines 35-35
namespace MWGui { class MessageBoxManager; }  // lines 36-36
namespace MWGui { class SortFilterItemModel; }  // lines 37-37
namespace MWGui { namespace Widgets { class MWDynamicStat; } }  // lines 18-18
namespace MWWorld { class Ptr; }  // lines 8-8
namespace MyGUI { class Button; }  // lines 11-11
namespace MyGUI { class TextBox; }  // lines 12-12
namespace MyGUI { class Widget; }  // lines 13-13
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/tooltips.cpp:27:
apps/openmw/mwgui/../mwmechanics/spellcasting.hpp:94:31: error: no type named 'Ingredient' in namespace 'ESM'
        bool cast (const ESM::Ingredient* ingredient);
                         ~~~~~^

apps/openmw/mwgui/companionwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace MWGui { class CountDialog; }

apps/openmw/mwgui/companionwindow.cpp should remove these lines:
- #include <string>  // lines 3-3
- #include <typeinfo>  // lines 4-4
- #include <vector>  // lines 5-5
- #include "../mwmechanics/npcstats.hpp"  // lines 9-9
- #include "MyGUI_Button.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 13-13
- #include "MyGUI_StringUtility.h"  // lines 14-14
- #include "MyGUI_TextBox.h"  // lines 15-15
- #include "MyGUI_WidgetInput.h"  // lines 16-16
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 20-20
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 24-24
- #include "components/esm/loadnpc.hpp"  // lines 27-27
- #include "countdialog.hpp"  // lines 28-28
- #include "messagebox.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/companionwindow.cpp:
#include "companionwindow.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "apps/openmw/mwgui/widgets.hpp"  // for MWDynamicStat
#include "companionitemmodel.hpp"       // for CompanionItemModel
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
namespace MWGui { class CountDialog; }
namespace MyGUI { class Widget; }  // lines 35-35
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwrender/sky.cpp:61:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Platforms/Ogre/../../Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwrender/sky.cpp:61:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Platforms/Ogre/../../Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/waitdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
In file included from apps/openmw/mwrender/sky.cpp:        Spells & getSpells();66
:
        ^~~~~~apps/openmw/mwrender/sky.hpp
:        ESM::Spell29
:1apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:: 14error:: 12expected '{':
 note: 'ESM::Spell' declared here
namespace Ogre {
^
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:69:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:85:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:98:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:111:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:124:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:166:3: error: functions that differ only in their return type cannot be overloaded
  abs(long __i) { return __builtin_labs(__i); }
  ^
/usr/include/stdlib.h:775:12: note: previous declaration is here
extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
       ~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:169:3: error: functions that differ only in their return type cannot be overloaded
  div(long __i, long __j) { return ldiv(__i, __j); }
  ^
/usr/include/stdlib.h:789:14: note: previous declaration is here
extern div_t div (int __numer, int __denom)
       ~~~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:174:3: error: functions that differ only in their return type cannot be overloaded
  abs(long long __x) { return __builtin_llabs (__x); }
  ^
/usr/include/stdlib.h:775:12: note: previous declaration is here
extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
       ~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:214:3: error: functions that differ only in their return type cannot be overloaded
  div(long long __n, long long __d)
  ^
/usr/include/stdlib.h:789:14: note: previous declaration is here
extern div_t div (int __numer, int __denom)
       ~~~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:246:9: error: no member named 'div' in namespace '__gnu_cxx'; did you mean '::div'?
  using ::__gnu_cxx::div;
        ^~~~~~~~~~~~~
/usr/include/stdlib.h:789:14: note: '::div' declared here
extern div_t div (int __numer, int __denom)
             ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:23:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:203:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:207:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp, typename _Compare>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:211:3: error: templates must have C++ linkage
  template<typename _IIter, typename _OIter>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:215:3: error: templates must have C++ linkage
  template<typename _BIter1, typename _BIter2>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:232:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
apps/openmw/mwrender/sky.hpp:45:33: error: no type named 'String' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::String'?
        BillboardObject(  const Ogre::String& textureName,
                                ^~~~~~~~~~~~
                                ::Ogre::String
/usr/include/OGRE/GLX/../OgrePrerequisites.h:439:22: note: '::Ogre::String' declared here
        typedef _StringBase String;
                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:236:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp, typename _Compare>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:240:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:244:3: error: templates must have C++ linkage
  template<typename _OIter, typename _Size, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:250:3: error: templates must have C++ linkage
  template<typename _FIter1, typename _FIter2>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:254:3: error: templates must have C++ linkage
  template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwrender/sky.cpp:66:
apps/openmw/mwrender/sky.hpp:47:31: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean simply 'Vector3'?
                        const Ogre::Vector3& position,
                              ^~~~~~~~~~~~~
                              Vector3
./extern/shiny/Main/PropertyBase.hpp:116:8: note: 'Vector3' declared here
        class Vector3 : public PropertyValue
              ^
In file included from apps/openmw/mwgui/container.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/container.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwrender/sky.cpp:66:
apps/openmw/mwrender/sky.hpp:57:30: error: no type named 'ColourValue' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::ColourValue'?
        void setColour(const Ogre::ColourValue& pColour);
                             ^~~~~~~~~~~~~~~~~
                             ::Ogre::ColourValue
/usr/include/OGRE/OgreColourValue.h:57:23: note: '::Ogre::ColourValue' declared here
    class _OgreExport ColourValue
                      ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:9:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp:7:
In file included from ./components/esm/statstate.hpp:4:
./components/esm/esmreader.hpp:70:16: error: no type named 'DataStreamPtr' in namespace 'Ogre::Ogre'; did you mean simply 'DataStreamPtr'?
  void openRaw(Ogre::DataStreamPtr _esm, const std::string &name);
               ^~~~~~~~~~~~~~~~~~~
               DataStreamPtr
/usr/include/OGRE/OgreDataStream.h:308:32: note: 'DataStreamPtr' declared here
        typedef SharedPtr<DataStream> DataStreamPtr;
                                      ^
In file included from apps/openmw/mwrender/sky.cpp:66:
apps/openmw/mwrender/sky.hpp:58:32: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean simply 'Vector3'?
        void setPosition(const Ogre::Vector3& pPosition);
                               ^~~~~~~~~~~~~
                               Vector3
./extern/shiny/Main/PropertyBase.hpp:116:8: note: 'Vector3' declared here
        class Vector3 : public PropertyValue
              ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:9:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp:7:
In file included from ./components/esm/statstate.hpp:4:
./components/esm/esmreader.hpp:74:13: error: no type named 'DataStreamPtr' in namespace 'Ogre::Ogre'; did you mean simply 'DataStreamPtr'?
  void open(Ogre::DataStreamPtr _esm, const std::string &name);
            ^~~~~~~~~~~~~~~~~~~
            DataStreamPtr
/usr/include/OGRE/OgreDataStream.h:308:32: note: 'DataStreamPtr' declared here
        typedef SharedPtr<DataStream> DataStreamPtr;
                                      ^
In file included from apps/openmw/mwrender/sky.cpp:66:
apps/openmw/mwrender/sky.hpp:63:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean simply 'Vector3'?
        Ogre::Vector3 getPosition() const;
        ^~~~~~~~~~~~~
        Vector3
./extern/shiny/Main/PropertyBase.hpp:116:8: note: 'Vector3' declared here
        class Vector3 : public PropertyValue
              ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
./apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:9:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp:7:
In file included from ./components/esm/statstate.hpp:4:
./components/esm/esmreader.hpp:272:3: error: no type named 'DataStreamPtr' in namespace 'Ogre::Ogre'; did you mean simply 'DataStreamPtr'?
  Ogre::DataStreamPtr mEsm;
  ^~~~~~~~~~~~~~~~~~~
  DataStreamPtr
/usr/include/OGRE/OgreDataStream.h:308:32: note: 'DataStreamPtr' declared here
        typedef SharedPtr<DataStream> DataStreamPtr;
                                      ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/sky.cpp:66:
apps/openmw/mwrender/sky.hpp:71:9: error: no type named 'ColourValue' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::ColourValue'?
        Ogre::ColourValue mColour;
        ^~~~~~~~~~~~~~~~~
        ::Ogre::ColourValue
/usr/include/OGRE/OgreColourValue.h:57:23: note: '::Ogre::ColourValue' declared here
    class _OgreExport ColourValue
                      ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/animationextensions.cpp:13:
./apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/failedaction.hpp should add these lines:

apps/openmw/mwworld/failedaction.hpp should remove these lines:
- #include "ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwworld/failedaction.hpp:
#include <string>                       // for string
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 10-10
---

apps/openmw/mwworld/failedaction.cpp should add these lines:

apps/openmw/mwworld/failedaction.cpp should remove these lines:
- #include "../mwbase/environment.hpp"  // lines 1-1
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 2-2
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 3-3
- #include "apps/openmw/mwworld/action.hpp"  // lines 5-5
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 7-7

The full include-list for apps/openmw/mwworld/failedaction.cpp:
#include "failedaction.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
---
apps/openmw/mwscript/animationextensions.cpp:100:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::Animation::opcodeSkipAnim, new OpSkipAnim<ImplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/animationextensions.cpp:101:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment5 (Compiler::Animation::opcodeSkipAnimExplicit, new OpSkipAnim<ExplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/animationextensions.cpp:102:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment3 (Compiler::Animation::opcodePlayAnim, new OpPlayAnim<ImplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/animationextensions.cpp:103:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment3 (Compiler::Animation::opcodePlayAnimExplicit, new OpPlayAnim<ExplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/animationextensions.cpp:104:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment3 (Compiler::Animation::opcodeLoopAnim, new OpLoopAnim<ImplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
apps/openmw/mwscript/animationextensions.cpp:105:24: error: member access into incomplete type 'Interpreter::Interpreter'
            interpreter.installSegment3 (Compiler::Animation::opcodeLoopAnimExplicit, new OpLoopAnim<ExplicitRef>);
                       ^
apps/openmw/mwscript/animationextensions.hpp:11:11: note: forward declaration of 'Interpreter::Interpreter'
    class Interpreter;
          ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'Ogre::ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/openmw/mwgui/mainmenu.hpp should add these lines:

apps/openmw/mwgui/mainmenu.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <map>  // lines 6-6
- #include <string>  // lines 7-7
- #include <string>  // lines 8-8
- class ImageButton;  // lines 22-22
- namespace MyGUI { namespace MyGUI { class ImageBox; } }  // lines 12-12
- namespace MyGUI { namespace MyGUI { class TextBox; } }  // lines 13-13
- namespace MyGUI { namespace MyGUI { class Widget; } }  // lines 14-14

The full include-list for apps/openmw/mwgui/mainmenu.hpp:
#include <openengine/gui/layout.hpp>    // for Layout
namespace MWGui { class BackgroundImage; }  // lines 30-30
namespace MWGui { class SaveGameDialog; }  // lines 31-31
namespace MWGui { class VideoWidget; }  // lines 32-32
namespace MyGUI { class ImageBox; }  // lines 17-17
namespace MyGUI { class TextBox; }  // lines 18-18
namespace MyGUI { class Widget; }  // lines 19-19
---

apps/openmw/mwgui/mainmenu.cpp should add these lines:
#include <string>                       // for string

apps/openmw/mwgui/mainmenu.cpp should remove these lines:
- #include <OgreResourceGroupManager.h>  // lines 4-4
- #include <assert.h>  // lines 6-6
- #include <stddef.h>  // lines 10-10
- #include <list>  // lines 11-11
- #include <list>  // lines 12-12
- #include <ostream>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <vector>  // lines 17-17
- #include <vector>  // lines 18-18
- #include "../mwbase/soundmanager.hpp"  // lines 21-21
- #include "MyGUI_Align.h"  // lines 23-23
- #include "MyGUI_Align.h"  // lines 24-24
- #include "MyGUI_RTTI.h"  // lines 28-28
- #include "MyGUI_RTTI.h"  // lines 29-29
- #include "MyGUI_Types.h"  // lines 31-31
- #include "MyGUI_Widget.h"  // lines 33-33
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "MyGUI_WidgetInput.h"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 37-37
- #include "components/settings/settings.hpp"  // lines 39-39
- #include "components/settings/settings.hpp"  // lines 40-40
- #include "confirmationdialog.hpp"  // lines 41-41
- #include "openengine/gui/layout.hpp"  // lines 43-43
- #include "openengine/gui/layout.hpp"  // lines 44-44

The full include-list for apps/openmw/mwgui/mainmenu.cpp:
#include "mainmenu.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_TextBox.h>              // for TextBox
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/version/version.hpp>  // for OPENMW_VERSION, etc
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "MyGUI_ImageBox.h"             // for ImageBox
#include "MyGUI_Types.h"                // for IntSize, IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "backgroundimage.hpp"          // for BackgroundImage
#include "savegamedialog.hpp"           // for SaveGameDialog
#include "videowidget.hpp"              // for VideoWidget
---
apps/openmw/mwgui/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'Ogre::ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

(components/terrain/buffercache.hpp has correct #includes/fwd-decls)

components/terrain/buffercache.cpp should add these lines:

components/terrain/buffercache.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "OgreHardwareBuffer.h"  // lines 10-10
- #include "OgreHardwareIndexBuffer.h"  // lines 12-12
- #include "OgreHardwareVertexBuffer.h"  // lines 14-14
- #include "OgreSharedPtr.h"  // lines 16-16

The full include-list for components/terrain/buffercache.cpp:
#include "buffercache.hpp"
#include <OgreHardwareBufferManager.h>  // for HardwareBufferManager
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <vector>                       // for vector
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreHardwareIndexBuffer.h"
#include "OgreHardwareVertexBuffer.h"
#include "OgreSharedPtr.h"              // for SharedPtr
#include "defs.hpp"                     // for Direction::East, etc
---
apps/openmw/mwgui/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'Ogre::ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwscript/soundextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/soundextensions.cpp should remove these lines:
- #include <components/interpreter/interpreter.hpp>  // lines 2-2
- #include <string>  // lines 5-5
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 11-11
- #include "ref.hpp"  // lines 14-14

The full include-list for apps/openmw/mwscript/soundextensions.cpp:
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/soundmanager.hpp"   // for SoundManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "components/interpreter/types.hpp"  // for Data, Type_Float
#include "interpretercontext.hpp"       // for InterpreterContext
---
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:37:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals mLocals; // if we find the overhead of heaving a locals
            ^~~~~~~~
            Ogre::MWScript
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

extern/sdl4ogre/sdlwindowhelper.hpp should add these lines:

extern/sdl4ogre/sdlwindowhelper.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "OgreCommon.h"  // lines 8-8

The full include-list for extern/sdl4ogre/sdlwindowhelper.hpp:
#include <string>                       // for string
#include "OgreCommon.h"                 // for NameValuePairList
namespace Ogre { class RenderWindow; }  // lines 15-15
struct SDL_Window;  // lines 17-17
---
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

libs/openengine/gui/loglistener.hpp should add these lines:

libs/openengine/gui/loglistener.hpp should remove these lines:
- #include "MyGUI_LogLevel.h"  // lines 9-9

The full include-list for libs/openengine/gui/loglistener.hpp:
#include <MyGUI_ILogListener.h>         // for ILogListener
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <string>                       // for string
#include "MyGUI_LogLevel.h"             // for LogLevel
---

extern/shiny/Platforms/Ogre/OgrePlatform.hpp should add these lines:

extern/shiny/Platforms/Ogre/OgrePlatform.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 18-18
- #include <map>  // lines 20-20
- #include <string>  // lines 22-22
- #include "GLX/../OgrePrerequisites.h"  // lines 33-33
- #include "OgreTechnique.h"  // lines 27-27
- #include "extern/shiny/Platforms/Ogre/../../Main/Language.hpp"  // lines 29-29
- #include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"  // lines 31-31
- namespace Ogre { class Material; }  // lines 39-39
- namespace Ogre { class Renderable; }  // lines 40-40

The full include-list for extern/shiny/Platforms/Ogre/OgrePlatform.hpp:
#include <OgreGpuProgramParams.h>       // for GpuSharedParametersPtr
#include <OgreMaterialManager.h>        // for MaterialManager, etc
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map
#include <string>                       // for string
#include "../../Main/Platform.hpp"      // for GpuProgramType, Platform
#include "GLX/../OgrePrerequisites.h"   // for String
#include "OgreTechnique.h"              // for Technique
#include "extern/shiny/Platforms/Ogre/../../Main/Language.hpp"
#include "extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp"
namespace Ogre { class Material; }  // lines 36-36
namespace Ogre { class Renderable; }  // lines 37-37
namespace sh { class OgreMaterialSerializer; }  // lines 45-45
---
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

libs/openengine/gui/loglistener.cpp should add these lines:

libs/openengine/gui/loglistener.cpp should remove these lines:
- #include <ostream>  // lines 5-5

The full include-list for libs/openengine/gui/loglistener.cpp:
#include "loglistener.hpp"
#include <time.h>                       // for tm
#include <boost/filesystem/path.hpp>    // for path
#include <iomanip>                      // for operator<<, setfill, setw, etc
#include <ostream>                      // for basic_ostream, operator<<, etc
---
In file included from apps/openmw/mwgui/charactercreation.cpp:16:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:46:13: error: use of undeclared identifier 'ESM'; did you mean 'Ogre::ESM'?
            ESM::Position mPosition;
            ^~~
            Ogre::ESM
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:9:11: note: 'Ogre::ESM' declared here
namespace ESM
          ^

extern/sdl4ogre/sdlwindowhelper.cpp should add these lines:

extern/sdl4ogre/sdlwindowhelper.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <ostream>  // lines 9-9
- #include <utility>  // lines 12-12
- #include "GLX/../OgrePrerequisites.h"  // lines 15-15
- #include "OgreColourValue.h"  // lines 17-17
- #include "OgreImage.h"  // lines 19-19
- #include "OgrePlatform.h"  // lines 21-21
- #include "OgreResourceGroupManager.h"  // lines 23-23
- #include "OgreSharedPtr.h"  // lines 25-25
- #include "OgreTexture.h"  // lines 27-27
- #include "SDL_pixels.h"  // lines 29-29
- #include "SDL_stdinc.h"  // lines 31-31
- #include "SDL_surface.h"  // lines 33-33
- #include "SDL_version.h"  // lines 35-35
- #include "SDL_video.h"  // lines 37-37

The full include-list for extern/sdl4ogre/sdlwindowhelper.cpp:
#include "sdlwindowhelper.hpp"
#include <OgreRoot.h>                   // for Root
#include <OgreStringConverter.h>        // for StringConverter
#include <OgreTextureManager.h>         // for TextureManager
#include <SDL_endian.h>                 // for SDL_BIG_ENDIAN, etc
#include <SDL_syswm.h>                  // for SDL_SysWMinfo, etc
#include <stddef.h>                     // for size_t
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for make_pair
#include "GLX/../OgrePrerequisites.h"   // for String, TexturePtr
#include "OgreColourValue.h"            // for ColourValue
#include "OgreImage.h"                  // for Image
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "SDL_pixels.h"                 // for SDL_MapRGBA, etc
#include "SDL_stdinc.h"                 // for Uint8, Uint32, ::SDL_FALSE, etc
#include "SDL_surface.h"                // for SDL_Surface, etc
#include "SDL_version.h"                // for SDL_VERSION
#include "SDL_video.h"                  // for SDL_SetWindowIcon
---

extern/shiny/Platforms/Ogre/OgrePlatform.cpp should add these lines:

extern/shiny/Platforms/Ogre/OgrePlatform.cpp should remove these lines:
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 7-7
- #include <iostream>  // lines 9-9
- #include <utility>  // lines 13-13
- #include "OgreGpuProgramParams.h"  // lines 18-18
- #include "OgreMaterial.h"  // lines 20-20
- #include "OgreMaterialManager.h"  // lines 22-22
- #include "OgreMemoryAllocatorConfig.h"  // lines 25-25
- #include "OgreSharedPtr.h"  // lines 28-28
- #include "OgreVector4.h"  // lines 30-30
- #include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"  // lines 32-32
- namespace Ogre { class Renderable; }  // lines 37-37

The full include-list for extern/shiny/Platforms/Ogre/OgrePlatform.cpp:
#include "OgrePlatform.hpp"
#include <OgreDataStream.h>             // for FileStreamDataStream, etc
#include <OgreGpuProgramManager.h>      // for GpuProgramManager
#include <OgreHighLevelGpuProgramManager.h>
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <iostream>                     // for ios, operator|, fstream, etc
#include <stdexcept>                    // for runtime_error
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair
#include "../../Main/MaterialInstance.hpp"  // for MaterialInstance
#include "OgreGpuProgram.hpp"           // for OgreGpuProgram
#include "OgreGpuProgramParams.h"       // for GpuSharedParametersPtr, etc
#include "OgreMaterial.h"               // for Material
#include "OgreMaterialManager.h"        // for MaterialManager
#include "OgreMaterialSerializer.hpp"   // for OgreMaterialSerializer
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_NEW
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector4.h"                // for Vector4
#include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"
namespace Ogre { class Renderable; }  // lines 35-35
---
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:65:28: error: use of undeclared identifier 'ESM'; did you mean 'Ogre::ESM'?
            RefData (const ESM::CellRef& cellRef);
                           ^~~
                           Ogre::ESM
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:9:11: note: 'Ogre::ESM' declared here
namespace ESM
          ^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:67:28: error: use of undeclared identifier 'ESM'; did you mean 'Ogre::ESM'?
            RefData (const ESM::ObjectState& objectState);
                           ^~~
                           Ogre::ESM
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:9:11: note: 'Ogre::ESM' declared here
namespace ESM
          ^
apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:75:25: error: use of undeclared identifier 'ESM'; did you mean 'Ogre::ESM'?
            void write (ESM::ObjectState& objectState, const std::string& scriptId = "") const;
                        ^~~
                        Ogre::ESM
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:9:11: note: 'Ogre::ESM' declared here
namespace ESM
          ^
In file included from apps/openmw/mwworld/ptr.cpp:4:
In file included from apps/openmw/mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/ptr.cpp:18:20: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
        return mRef->mClass->getTypeName();
                   ^
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/ptr.cpp:34:16: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
    return mRef->mRef;
               ^
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/ptr.cpp:41:16: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
    return mRef->mData;
               ^
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:92:35: error: use of undeclared identifier 'ESM'; did you mean 'Ogre::ESM'?
            void setLocals (const ESM::Script& script);
                                  ^~~
                                  Ogre::ESM
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwscript/locals.hpp:9:11: note: 'Ogre::ESM' declared here
namespace ESM
          ^
In file included from apps/openmw/mwworld/containerstore.cpp:2:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/tooltips.cpp:50:
./apps/openmw/mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/containerstore.cpp:2:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/openmw/mwscript/animationextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/animationextensions.cpp should add these lines:

apps/openmw/mwscript/animationextensions.cpp should remove these lines:
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <string>  // lines 9-9
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwscript/../mwbase/environment.hpp"  // lines 16-16
- #include "components/interpreter/types.hpp"  // lines 18-18

The full include-list for apps/openmw/mwscript/animationextensions.cpp:
#include "animationextensions.hpp"
#include <components/interpreter/opcodes.hpp>  // for Opcode1, Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwscript/../mwbase/environment.hpp"
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
---
In file included from libs/openengine/gui/manager.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_ConsoleLogListener.h:11:
In file included from /usr/include/MYGUI/MyGUI_ILogListener.h:11:
/usr/include/MYGUI/MyGUI_LogLevel.h:36:31: error: use of undeclared identifier 'std'
                static LogLevel parse(const std::string& _value)
                                            ^
/usr/include/MYGUI/MyGUI_LogLevel.h:81:10: error: use of undeclared identifier 'std'
                friend std::ostream& operator << (std::ostream& _stream, const LogLevel&  _value)
                       ^
/usr/include/MYGUI/MyGUI_LogLevel.h:81:37: error: use of undeclared identifier 'std'
                friend std::ostream& operator << (std::ostream& _stream, const LogLevel&  _value)
                                                  ^
/usr/include/MYGUI/MyGUI_LogLevel.h:87:10: error: use of undeclared identifier 'std'
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                       ^
/usr/include/MYGUI/MyGUI_LogLevel.h:87:37: error: use of undeclared identifier 'std'
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                  ^
/usr/include/MYGUI/MyGUI_LogLevel.h:95:3: error: use of undeclared identifier 'std'
                std::string print() const
                ^
/usr/include/MYGUI/MyGUI_LogLevel.h:43:9: error: use of undeclared identifier 'strcmp'
                                if (strcmp(name, "") == 0 || name == _value)
                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:89:4: error: use of undeclared identifier 'std'
                        std::string value;
                        ^
/usr/include/MYGUI/MyGUI_LogLevel.h:89:16: error: use of undeclared identifier 'value'; did you mean '_value'?
                        std::string value;
                                    ^~~~~
                                    _value
/usr/include/MYGUI/MyGUI_LogLevel.h:87:71: note: '_value' declared here
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:90:15: error: use of undeclared identifier 'value'; did you mean '_value'?
                        _stream >> value;
                                   ^~~~~
                                   _value
/usr/include/MYGUI/MyGUI_LogLevel.h:87:71: note: '_value' declared here
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:97:11: error: cannot initialize return object of type 'int' with an rvalue of type 'const char *'
                        return getValueName(mValue);
                               ^~~~~~~~~~~~~~~~~~~~
In file included from libs/openengine/gui/manager.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_ConsoleLogListener.h:11:
/usr/include/MYGUI/MyGUI_ILogListener.h:28:26: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line) { }
                                       ^
/usr/include/MYGUI/MyGUI_ILogListener.h:28:96: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line) { }
                                                                                                             ^
In file included from libs/openengine/gui/manager.cpp:1:
/usr/include/MYGUI/MyGUI_ConsoleLogListener.h:24:26: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line);
                                       ^
/usr/include/MYGUI/MyGUI_ConsoleLogListener.h:24:96: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line);
                                                                                                             ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:50:37: error: no member named 'StringVector' in namespace 'MWWorld::Ogre'
        std::map<std::string, Ogre::StringVector> mMusicFiles;
                              ~~~~~~^
./apps/openmw/mwsound/soundmanagerimp.hpp:69:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerPos;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:70:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerDir;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

(apps/openmw/mwscript/aiextensions.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwrender/refraction.hpp should add these lines:

apps/openmw/mwrender/refraction.hpp should remove these lines:
- #include "GLX/../OgrePrerequisites.h"  // lines 9-9
- #include "OgrePlatform.h"  // lines 11-11

The full include-list for apps/openmw/mwrender/refraction.hpp:
#include <OgrePlane.h>                  // for Plane
#include <OgreRenderQueueListener.h>    // for RenderQueueListener
#include <OgreRenderTargetListener.h>   // for RenderTargetListener
#include "GLX/../OgrePrerequisites.h"   // for String
#include "OgrePlatform.h"               // for uint8
namespace Ogre { class Camera; }  // lines 17-17
namespace Ogre { class RenderTarget; }  // lines 18-18
---
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hppIn file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:71:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerUp;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^

apps/openmw/mwrender/refraction.cpp should add these lines:

apps/openmw/mwrender/refraction.cpp should remove these lines:
- #include <extern/shiny/Main/Factory.hpp>  // lines 10-10
- #include "OgreColourValue.h"  // lines 13-13
- #include "OgreMatrix4.h"  // lines 15-15
- #include "OgrePixelFormat.h"  // lines 17-17
- #include "OgrePlane.h"  // lines 19-19
- #include "OgreRenderSystem.h"  // lines 21-21
- #include "OgreResourceGroupManager.h"  // lines 23-23
- #include "OgreSharedPtr.h"  // lines 25-25
- #include "OgreTexture.h"  // lines 27-27
- #include "OgreVector3.h"  // lines 29-29
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 30-30
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 31-31
- namespace Ogre { struct RenderTargetEvent; }  // lines 38-38

The full include-list for apps/openmw/mwrender/refraction.cpp:
#include "refraction.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTarget.h>           // for RenderTarget
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRoot.h>                   // for Root
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include "OgreColourValue.h"            // for ColourValue
#include "OgreMatrix4.h"                // for Matrix4
#include "OgrePixelFormat.h"            // for PixelFormat::PF_R8G8B8
#include "OgrePlane.h"                  // for Plane
#include "OgreRenderSystem.h"           // for RenderSystem
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector3.h"                // for Vector3
#include "renderconst.hpp"              // for VisibilityFlags::RV_Actors, etc
namespace Ogre { struct RenderTargetEvent; }  // lines 36-36
---
:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/aiextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/aiextensions.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <iostream>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 24-24
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwscript/../mwmechanics/aisequence.hpp"  // lines 27-27
- #include "apps/openmw/mwscript/../mwmechanics/stat.hpp"  // lines 29-29
- #include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // lines 30-30
- #include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // lines 31-31
- #include "components/interpreter/types.hpp"  // lines 33-33
- #include "ref.hpp"  // lines 35-35

The full include-list for apps/openmw/mwscript/aiextensions.cpp:
#include "aiextensions.hpp"
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/aiactivate.hpp"  // for AiActivate
#include "../mwmechanics/aiescort.hpp"  // for AiEscort
#include "../mwmechanics/aifollow.hpp"  // for AiFollow
#include "../mwmechanics/aitravel.hpp"  // for AiTravel
#include "../mwmechanics/aiwander.hpp"  // for AiWander
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwscript/../mwmechanics/stat.hpp"  // for Stat
#include "components/interpreter/types.hpp"  // for Data, Type_Float, etc
#include "interpretercontext.hpp"       // for InterpreterContext
---
In file included from apps/openmw/mwgui/recharge.cpp:12:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/spellmodel.hpp should add these lines:

apps/openmw/mwgui/spellmodel.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <vector>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 12-12

The full include-list for apps/openmw/mwgui/spellmodel.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
---
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:88:9: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        DecoderPtr getDecoder();
        ^~~~~~~~~~
        ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^

apps/openmw/mwgui/spellmodel.cpp should add these lines:
namespace MWMechanics { class CreatureStats; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/spellmodel.cpp should remove these lines:
- #include <algorithm>  // lines 2-2
- #include <algorithm>  // lines 3-3
- #include <boost/lexical_cast.hpp>  // lines 1-1
- #include <map>  // lines 4-4
- #include <map>  // lines 5-5
- #include <sstream>  // lines 6-6
- #include <sstream>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <utility>  // lines 11-11
- #include "../mwbase/windowmanager.hpp"  // lines 14-14
- #include "../mwmechanics/creaturestats.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 21-21
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 24-24
- #include "apps/openmw/mwgui/../mwworld/containerstore.hpp"  // lines 26-26
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 28-28
- #include "components/esm/loadench.hpp"  // lines 30-30
- #include "components/esm/loadspel.hpp"  // lines 32-32
- #include "components/misc/stringops.hpp"  // lines 34-34

The full include-list for apps/openmw/mwgui/spellmodel.cpp:
#include "spellmodel.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/spellcasting.hpp"
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWMechanics { class CreatureStats; }
namespace MWWorld { class ESMStore; }
---

libs/openengine/bullet/physic.hpp should add these lines:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string

libs/openengine/bullet/physic.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <list>  // lines 8-8
- #include <vector>  // lines 11-11
- #include "BulletCollision/CollisionDispatch/btCollisionWorld.h"  // lines 19-19
- #include "BulletCollision/CollisionDispatch/btGhostObject.h"  // lines 20-20
- #include "BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.h"  // lines 21-21
- #include "BulletShapeLoader.h"  // lines 22-22
- #include "LinearMath/btScalar.h"  // lines 23-23
- #include "OgreQuaternion.h"  // lines 24-24
- #include "OgreVector3.h"  // lines 17-17
- class DebugDrawer;  // lines 58-58
- class btCollisionObject;  // lines 40-40
- class btCollisionShape;  // lines 41-41
- class btRigidBody;  // lines 46-46
- class btVector3;  // lines 48-48
- namespace MWWorld { class World; }  // lines 68-68
- namespace OEngine { class BulletShapeLoader; }  // lines 50-50
- namespace OEngine { namespace Physic { class RigidBody; } }  // lines 76-76
- namespace OEngine { namespace Physic { struct PhysicEvent; } }  // lines 77-77
- namespace Ogre { class SceneNode; }  // lines 54-54

The full include-list for libs/openengine/bullet/physic.hpp:
#include <BulletDynamics/Dynamics/btRigidBody.h>  // for btRigidBody
#include <stddef.h>                     // for NULL
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector
#include "BulletCollision/CollisionDispatch/btCollisionWorld.h"
#include "LinearMath/btScalar.h"        // for btScalar
#include "OgreQuaternion.h"             // for Quaternion, etc
#include "OgreVector3.h"                // for Vector3, Vector3::ZERO
class btBroadphaseInterface;  // lines 37-37
class btCollisionDispatcher;  // lines 38-38
class btCollisionObject;  // lines 25-25
class btCollisionShape;  // lines 26-26
class btDefaultCollisionConfiguration;  // lines 42-42
class btDiscreteDynamicsWorld;  // lines 43-43
class btHeightfieldTerrainShape;  // lines 44-44
class btSequentialImpulseConstraintSolver;  // lines 47-47
class btVector3;  // lines 27-27
namespace OEngine { namespace Physic { class BulletShapeLoader; } }  // lines 30-30
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 75-75
namespace Ogre { class SceneManager; }  // lines 63-63
namespace Ogre { class SceneNode; }  // lines 34-34
---
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:133:50: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        virtual MWBase::SoundPtr playTrack(const DecoderPtr& decoder, PlayType type);
                                                 ^~~~~~~~~~
                                                 ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:146:58: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual MWBase::SoundPtr playManualSound3D(const Ogre::Vector3& initialPos, const std::string& soundId,
                                                         ^~~~~~~~~~~~~
                                                         ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:4:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:4:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:185:46: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                             ^~~~~~~~~~~~~
                                             ::Ogre::Vector3In file included from 
apps/openmw/mwworld/containerstore.cpp:12apps/openmw/mwsound/../mwbase/soundmanager.hpp:
:In file included from 14apps/openmw/mwworld/../mwmechanics/levelledlist.hpp::114::
 In file included from noteapps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp: :'::Ogre::Vector3' declared here12
:
apps/openmw/mwworld/livecellref.hpp:129:1    class Vector3;:
           ^error
: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

libs/openengine/bullet/physic.cpp should add these lines:
class btManifoldPoint;

libs/openengine/bullet/physic.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <boost/lexical_cast.hpp>  // lines 4-4
- #include <cmath>  // lines 9-9
- #include <limits>  // lines 11-11
- #include <sstream>  // lines 12-12
- #include <sstream>  // lines 13-13
- #include <stdexcept>  // lines 15-15
- #include "BulletCollision/BroadphaseCollision/btBroadphaseInterface.h"  // lines 18-18
- #include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.h"  // lines 19-19
- #include "BulletCollision/CollisionDispatch/btCollisionDispatcher.h"  // lines 22-22
- #include "BulletCollision/CollisionDispatch/btCollisionObject.h"  // lines 24-24
- #include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"  // lines 26-26
- #include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h"  // lines 28-28
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 29-29
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 30-30
- #include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"  // lines 32-32
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 34-34
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 36-36
- #include "BulletCollision/CollisionShapes/btConcaveShape.h"  // lines 38-38
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 39-39
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 40-40
- #include "BulletCollision/CollisionShapes/btSphereShape.h"  // lines 42-42
- #include "BulletCollision/CollisionShapes/btTriangleMesh.h"  // lines 44-44
- #include "BulletCollision/NarrowPhaseCollision/btManifoldPoint.h"  // lines 45-45
- #include "BulletCollision/NarrowPhaseCollision/btManifoldPoint.h"  // lines 46-46
- #include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h"  // lines 48-48
- #include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"  // lines 50-50
- #include "BulletDynamics/Dynamics/btRigidBody.h"  // lines 52-52
- #include "LinearMath/btMotionState.h"  // lines 54-54
- #include "LinearMath/btQuaternion.h"  // lines 56-56
- #include "LinearMath/btTransform.h"  // lines 58-58
- #include "LinearMath/btVector3.h"  // lines 60-60
- #include "OgreSceneNode.h"  // lines 62-62
- #include "OgreSharedPtr.h"  // lines 63-63
- #include "OgreSharedPtr.h"  // lines 64-64
- #include "openengine/bullet/BulletShapeLoader.h"  // lines 66-66

The full include-list for libs/openengine/bullet/physic.cpp:
#include "physic.hpp"
#include <BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h>
#include <OgreSceneManager.h>           // for SceneManager
#include <assert.h>                     // for assert
#include <cmath>                        // for abs
#include <components/nifbullet/bulletnifloader.hpp>  // for getBoundingBox, etc
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for logic_error
#include "BulletCollision/BroadphaseCollision/btBroadphaseInterface.h"
#include "BulletCollision/BroadphaseCollision/btDbvtBroadphase.h"
#include "BulletCollision/CollisionDispatch/btCollisionDispatcher.h"
#include "BulletCollision/CollisionDispatch/btCollisionObject.h"
#include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"
#include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h"
#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "BulletCollision/CollisionShapes/btConcaveShape.h"
#include "BulletCollision/CollisionShapes/btSphereShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h"
#include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"
#include "BulletDynamics/Dynamics/btRigidBody.h"  // for btRigidBody, etc
#include "LinearMath/btMotionState.h"   // for btMotionState
#include "LinearMath/btQuaternion.h"    // for btQuaternion
#include "LinearMath/btTransform.h"     // for btTransform
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreSceneNode.h"              // for SceneNode
#include "openengine/bullet/BulletShapeLoader.h"  // for BulletShapePtr, etc
class btManifoldPoint;
---

apps/openmw/mwworld/ptr.cpp should add these lines:
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class ContainerStore; }
namespace MWWorld { class LiveCellRefBase; }

apps/openmw/mwworld/ptr.cpp should remove these lines:
- #include "class.hpp"  // lines 4-4
- #include "livecellref.hpp"  // lines 5-5
- namespace MWWorld { class CellRef; }  // lines 11-11
- namespace MWWorld { class RefData; }  // lines 12-12

The full include-list for apps/openmw/mwworld/ptr.cpp:
#include <cassert>                      // for assert
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class CellRef; }  // lines 8-8
namespace MWWorld { class ContainerStore; }
namespace MWWorld { class LiveCellRefBase; }
namespace MWWorld { class RefData; }  // lines 9-9
---
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:48:
In file included from apps/openmw/mwsound/openal_output.hpp:17:
./apps/openmw/mwsound/soundmanagerimp.hpp:185:72: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                       ^~~~~~~~~~~~~
                                                                       ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/recharge.cpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwscript/skyextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp
apps/openmw/mwgui/waitdialog.hpp should add these lines:

apps/openmw/mwgui/waitdialog.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <string>  // lines 7-7
- namespace MyGUI { class Button; }  // lines 18-18
- namespace MyGUI { class ProgressBar; }  // lines 19-19
- namespace MyGUI { class ScrollBar; }  // lines 21-21
- namespace MyGUI { class TextBox; }  // lines 22-22
- namespace MyGUI { class Widget; }  // lines 23-23

The full include-list for apps/openmw/mwgui/waitdialog.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { namespace Widgets { class MWScrollBar; } }  // lines 31-31
namespace MyGUI { class Button; }  // lines 12-12
namespace MyGUI { class ProgressBar; }  // lines 13-13
namespace MyGUI { class ScrollBar; }  // lines 14-14
namespace MyGUI { class TextBox; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 16-16
---
:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/waitdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/waitdialog.cpp should remove these lines:
- #include <stdlib.h>  // lines 4-4
- #include <stdexcept>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include "../mwbase/statemanager.hpp"  // lines 10-10
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "MyGUI_Button.h"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_ScrollBar.h"  // lines 22-22
- #include "MyGUI_ScrollBar.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_Widget.h"  // lines 28-28
- #include "MyGUI_WidgetInput.h"  // lines 29-29
- #include "MyGUI_WidgetInput.h"  // lines 30-30
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 44-44
- #include "components/esm/loadcell.hpp"  // lines 46-46
- #include "components/esm/loadgmst.hpp"  // lines 47-47
- #include "components/esm/loadgmst.hpp"  // lines 48-48
- #include "components/esm/loadregn.hpp"  // lines 50-50
- #include "components/settings/settings.hpp"  // lines 51-51
- #include "components/settings/settings.hpp"  // lines 52-52
- #include "widgets.hpp"  // lines 54-54

The full include-list for apps/openmw/mwgui/waitdialog.cpp:
#include "waitdialog.hpp"
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <stdlib.h>                     // for rand, RAND_MAX
#include <components/widgets/box.hpp>   // for Box
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadregn.hpp"  // for Region
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---
In file included from apps/openmw/mwgui/widgets.cpp:18:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

libs/openengine/ogre/renderer.hpp should add these lines:
#include <string>                       // for string
namespace Ogre { class Viewport; }

libs/openengine/ogre/renderer.hpp should remove these lines:
- #include <OgreTexture.h>  // lines 8-8
- #include <stddef.h>  // lines 10-10
- namespace Ogre { class ParticleAffectorFactory; }  // lines 19-19
- namespace Ogre { class ParticleEmitterFactory; }  // lines 20-20
- struct SDL_Surface;  // lines 13-13

The full include-list for libs/openengine/ogre/renderer.hpp:
#include <stddef.h>                     // for NULL
#include <stdint.h>                     // for uint16_t
#include <string>                       // for string
namespace Ogre { class Camera; }  // lines 18-18
namespace Ogre { class RenderWindow; }  // lines 21-21
namespace Ogre { class Root; }  // lines 22-22
namespace Ogre { class SceneManager; }  // lines 23-23
namespace Ogre { class Viewport; }
namespace Ogre { namespace OgreInit { class OgreInit; } }  // lines 27-27
struct SDL_Window;  // lines 14-14
---
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/itemmodel.hpp should add these lines:

apps/openmw/mwgui/itemmodel.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 8-8

The full include-list for apps/openmw/mwgui/itemmodel.hpp:
#include <stddef.h>                     // for size_t
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWGui { class ItemModel; }  // lines 14-14
---

libs/openengine/ogre/renderer.cpp should add these lines:

libs/openengine/ogre/renderer.cpp should remove these lines:
- #include <math.h>  // lines 12-12
- #include <components/ogreinit/ogreinit.hpp>  // lines 9-9
- #include <iostream>  // lines 15-15
- #include <utility>  // lines 18-18
- #include "GLX/../OgrePrerequisites.h"  // lines 21-21
- #include "OgreCommon.h"  // lines 23-23
- #include "OgreDataStream.h"  // lines 25-25
- #include "OgreImage.h"  // lines 27-27
- #include "OgreMath.h"  // lines 29-29
- #include "OgreMemoryAllocatorConfig.h"  // lines 31-31
- #include "OgrePixelFormat.h"  // lines 33-33
- #include "OgreRenderSystem.h"  // lines 35-35
- #include "OgreResourceGroupManager.h"  // lines 37-37
- #include "OgreSceneManager.h"  // lines 39-39
- #include "OgreSharedPtr.h"  // lines 41-41
- #include "SDL_error.h"  // lines 43-43
- #include "SDL_stdinc.h"  // lines 45-45
- #include "SDL_video.h"  // lines 47-47

The full include-list for libs/openengine/ogre/renderer.cpp:
#include "renderer.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreTexture.h>                // for TextureType::TEX_TYPE_2D, etc
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <math.h>                       // for pow
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <cassert>                      // for assert
#include <extern/sdl4ogre/sdlwindowhelper.hpp>  // for SDLWindowHelper
#include <iostream>                     // for char_traits, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for make_pair
#include "GLX/../OgrePrerequisites.h"   // for Real, uchar, String
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgreDataStream.h"             // for MemoryDataStream, etc
#include "OgreImage.h"                  // for Image
#include "OgreMath.h"                   // for Degree
#include "OgreMemoryAllocatorConfig.h"
#include "OgrePixelFormat.h"            // for PixelFormat, etc
#include "OgreRenderSystem.h"           // for RenderSystem
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneManager.h"           // for SceneManager
#include "OgreSharedPtr.h"              // for SharedPtr
#include "SDL_error.h"                  // for SDL_GetError
#include "SDL_stdinc.h"                 // for Uint16
#include "SDL_video.h"                  // for SDL_SetWindowGammaRamp, etc
---
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/itemmodel.cpp should add these lines:

apps/openmw/mwgui/itemmodel.cpp should remove these lines:
- #include <set>  // lines 2-2
- #include <string>  // lines 4-4
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 13-13
- #include "components/esm/loadgmst.hpp"  // lines 15-15
- #include "components/misc/stringops.hpp"  // lines 17-17

The full include-list for apps/openmw/mwgui/itemmodel.cpp:
#include "itemmodel.hpp"
#include <set>                          // for set
#include <string>                       // for string, operator!=, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/store.hpp"         // for Store, SharedIterator, etc
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/misc/stringops.hpp"  // for StringUtils
---
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/charactercreation.cpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/nifogre/particles.hpp should add these lines:

components/nifogre/particles.hpp should remove these lines:
- #include <iosfwd>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "GLX/../OgrePrerequisites.h"  // lines 12-12
- #include "OgreParticleAffector.h"  // lines 14-14
- #include "OgreParticleEmitter.h"  // lines 16-16
- namespace Ogre { class Bone; }  // lines 22-22
- namespace Ogre { class ParticleSystem; }  // lines 23-23

The full include-list for components/nifogre/particles.hpp:
#include <OgreParticleAffectorFactory.h>  // for ParticleAffectorFactory
#include <OgreParticleEmitterFactory.h>  // for ParticleEmitterFactory
#include <iosfwd>                       // for ostream
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for String
#include "OgreParticleAffector.h"       // for ParticleAffector
#include "OgreParticleEmitter.h"        // for ParticleEmitter
namespace Ogre { class Bone; }  // lines 19-19
namespace Ogre { class ParticleSystem; }  // lines 20-20
---

(components/nifogre/particles.cpp has correct #includes/fwd-decls)

apps/openmw/mwrender/water.hpp should add these lines:
#include "apps/openmw/mwrender/renderingmanager.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWWorld { class Ptr; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Camera; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Entity; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneManager; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneNode; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Vector3; } } } } }

apps/openmw/mwrender/water.hpp should remove these lines:
- #include <OgreMaterial.h>  // lines 4-4
- #include <OgreRenderQueue.h>  // lines 5-5
- #include <OgreRenderQueueListener.h>  // lines 6-6
- #include <OgreVector2.h>  // lines 7-7
- #include <stddef.h>  // lines 11-11
- #include <components/esm/loadcell.hpp>  // lines 8-8
- #include <extern/shiny/Main/MaterialInstance.hpp>  // lines 9-9
- #include <string>  // lines 13-13
- #include "../mwworld/ptr.hpp"  // lines 15-15
- #include "GLX/../OgrePrerequisites.h"  // lines 16-16
- #include "OgreColourValue.h"  // lines 17-17
- #include "OgreColourValue.h"  // lines 18-18
- #include "OgrePlatform.h"  // lines 19-19
- #include "OgreSharedPtr.h"  // lines 20-20
- #include "OgreSharedPtr.h"  // lines 21-21
- #include "renderconst.hpp"  // lines 22-22
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Camera; } } } }  // lines 43-43
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Entity; } } } }  // lines 44-44
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Ptr; } } } }  // lines 24-24
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Rectangle2D; } } } }  // lines 45-45
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace ESM { class RenderTarget; } } } } }  // lines 39-39
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace ESM { namespace ESM { struct Cell; } } } } } }  // lines 27-27
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace ESM { namespace MWWorld { namespace MWWorld { class Ptr; } } } } } } }  // lines 31-31
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace ESM { namespace MWWorld { namespace Ogre { class RenderTarget; } } } } } } }  // lines 34-34
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace ESM { namespace MWWorld { struct Cell; } } } } } }  // lines 36-36
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWRender { class RenderingManager; } } } } }  // lines 57-57

The full include-list for apps/openmw/mwrender/water.hpp:
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "apps/openmw/mwrender/renderingmanager.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWRender { class Refraction; } } } } }  // lines 56-56
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWRender { class RippleSimulation; } } } } }  // lines 58-58
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWRender { class SkyManager; } } } } }  // lines 59-59
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWWorld { class Ptr; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Camera; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Entity; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneManager; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneNode; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Vector3; } } } } }
---

apps/openmw/mwrender/water.cpp should add these lines:
namespace Ogre { class ColourValue; }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Camera; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneManager; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Viewport; } } } } }

apps/openmw/mwrender/water.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreEntity.h>  // lines 2-2
- #include <OgreHardwarePixelBuffer.h>  // lines 3-3
- #include <OgreMaterialManager.h>  // lines 4-4
- #include <OgreMeshManager.h>  // lines 5-5
- #include <OgreRenderTexture.h>  // lines 6-6
- #include <OgreRoot.h>  // lines 7-7
- #include <OgreSceneNode.h>  // lines 8-8
- #include <OgreTechnique.h>  // lines 9-9
- #include <OgreTextureManager.h>  // lines 10-10
- #include <OgreViewport.h>  // lines 11-11
- #include <extern/shiny/Main/Factory.hpp>  // lines 12-12
- #include <extern/shiny/Platforms/Ogre/OgreMaterial.hpp>  // lines 13-13
- #include <utility>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <vector>  // lines 16-16
- #include <vector>  // lines 17-17
- #include "OgreBlendMode.h"  // lines 19-19
- #include "OgreBlendMode.h"  // lines 20-20
- #include "OgreCommon.h"  // lines 21-21
- #include "OgreCommon.h"  // lines 22-22
- #include "OgreMatrix4.h"  // lines 23-23
- #include "OgreMatrix4.h"  // lines 24-24
- #include "OgrePass.h"  // lines 25-25
- #include "OgrePass.h"  // lines 26-26
- #include "OgrePixelFormat.h"  // lines 27-27
- #include "OgrePixelFormat.h"  // lines 28-28
- #include "OgrePlane.h"  // lines 29-29
- #include "OgrePlane.h"  // lines 30-30
- #include "OgreRenderSystem.h"  // lines 31-31
- #include "OgreRenderTarget.h"  // lines 32-32
- #include "OgreResourceGroupManager.h"  // lines 33-33
- #include "OgreResourceGroupManager.h"  // lines 34-34
- #include "OgreSceneManager.h"  // lines 35-35
- #include "OgreSceneManager.h"  // lines 36-36
- #include "OgreStringConverter.h"  // lines 37-37
- #include "OgreStringConverter.h"  // lines 38-38
- #include "OgreTexture.h"  // lines 39-39
- #include "OgreTexture.h"  // lines 40-40
- #include "OgreTextureUnitState.h"  // lines 41-41
- #include "OgreTextureUnitState.h"  // lines 42-42
- #include "OgreVector2.h"  // lines 43-43
- #include "OgreVector2.h"  // lines 44-44
- #include "OgreVector3.h"  // lines 45-45
- #include "OgreVector3.h"  // lines 46-46
- #include "apps/openmw/mwrender/renderconst.hpp"  // lines 47-47
- #include "apps/openmw/mwrender/renderconst.hpp"  // lines 48-48
- #include "components/esm/loadcell.hpp"  // lines 49-49
- #include "components/esm/loadcell.hpp"  // lines 50-50
- #include "components/settings/settings.hpp"  // lines 52-52
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 53-53
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 54-54
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 55-55
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 56-56
- #include "refraction.hpp"  // lines 57-57
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWWorld { class Ptr; } } } } }  // lines 66-66

The full include-list for apps/openmw/mwrender/water.cpp:
#include "water.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "renderingmanager.hpp"         // for RenderingManager, Vector3
#include "ripplesimulation.hpp"         // for RippleSimulation
#include "sky.hpp"                      // for SkyManager
namespace Ogre { class ColourValue; }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace MWWorld { class Ptr; } } } } }  // lines 64-64
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Camera; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class SceneManager; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { namespace Ogre { class Viewport; } } } } }
---
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellicons.cpp:13:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/controlextensions.cpp:3:
./components/interpreter/interpreter.hpp:15:1: error: expected '{'
}  // namespace Interpreter
^
./components/interpreter/interpreter.hpp:17:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwscript/skyextensions.cpp:13:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwscript/skyextensions.cpp:23:49: error: expected class name
        class OpToggleSky : public Interpreter::Opcode0
                                                ^
apps/openmw/mwscript/skyextensions.cpp:38:53: error: expected class name
        class OpTurnMoonWhite : public Interpreter::Opcode0
                                                    ^
apps/openmw/mwscript/skyextensions.cpp:48:51: error: expected class name
        class OpTurnMoonRed : public Interpreter::Opcode0
                                                  ^
apps/openmw/mwscript/skyextensions.cpp:58:54: error: expected class name
        class OpGetMasserPhase : public Interpreter::Opcode0
                                                     ^
apps/openmw/mwscript/skyextensions.cpp:68:55: error: expected class name
        class OpGetSecundaPhase : public Interpreter::Opcode0
                                                      ^
apps/openmw/mwscript/skyextensions.cpp:78:57: error: expected class name
        class OpGetCurrentWeather : public Interpreter::Opcode0
                                                        ^
apps/openmw/mwscript/skyextensions.cpp:88:53: error: expected class name
        class OpChangeWeather : public Interpreter::Opcode0
                                                    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/widgets.cpp:52:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
apps/openmw/mwrender/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwrender/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/cells.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/config/launchersettings.hpp should add these lines:

components/config/launchersettings.hpp should remove these lines:
- #include <QtCore>  // lines 5-5

The full include-list for components/config/launchersettings.hpp:
#include <QtCore>                       // for QString, QStringList, QMap
#include "gamesettings.hpp"             // for GameSettings
#include "settingsbase.hpp"             // for SettingsBase
---
In file included from apps/openmw/mwworld/cells.cpp:12:
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(components/config/launchersettings.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/controlextensions.cpp:10:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/controlextensions.cpp:12:
./apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:8:
In file included from apps/openmw/mwworld/../mwgui/itemmodel.hpp:6:
apps/openmw/mwworld/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/controlextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
In file included from ./apps/openmw/mwscript/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/controlextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:13:
./apps/openmw/mwscript/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
./apps/openmw/mwscript/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
./apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
./apps/openmw/mwscript/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
./apps/openmw/mwscript/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:7:
apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwworld/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:14:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwscript/skyextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/skyextensions.cpp should add these lines:

apps/openmw/mwscript/skyextensions.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include <string>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "components/interpreter/types.hpp"  // lines 15-15

The full include-list for apps/openmw/mwscript/skyextensions.cpp:
#include "skyextensions.hpp"
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
#include "interpretercontext.hpp"       // for InterpreterContext
---
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwworld/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwworld/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwworld/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwworld/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/controlextensions.cpp:13:
In file included from ./apps/openmw/mwscript/../mwmechanics/creaturestats.hpp:19:
./apps/openmw/mwscript/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
./apps/openmw/mwscript/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/containeritemmodel.cpp:9:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
fatal errorapps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
: too many errors emitted, stopping now [-ferror-limit=]
In file included from libs/openengine/gui/manager.cpp:5:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/recharge.hpp should add these lines:

apps/openmw/mwgui/recharge.hpp should remove these lines:
- namespace MyGUI { class Button; }  // lines 12-12
- namespace MyGUI { class ScrollView; }  // lines 13-13
- namespace MyGUI { class TextBox; }  // lines 15-15
- namespace MyGUI { class Widget; }  // lines 16-16

The full include-list for apps/openmw/mwgui/recharge.hpp:
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ItemWidget; }  // lines 28-28
namespace MWWorld { class Ptr; }  // lines 22-22
namespace MyGUI { class Button; }  // lines 7-7
namespace MyGUI { class ScrollView; }  // lines 8-8
namespace MyGUI { class TextBox; }  // lines 9-9
namespace MyGUI { class Widget; }  // lines 10-10
---
In file included from libs/openengine/gui/manager.cpp:5:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/openmw/mwgui/recharge.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwgui/recharge.cpp should remove these lines:
- #include <stdlib.h>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <boost/format.hpp>  // lines 3-3
- #include <string>  // lines 9-9
- #include "../mwbase/windowmanager.hpp"  // lines 11-11
- #include "../mwbase/world.hpp"  // lines 12-12
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_Align.h"  // lines 18-18
- #include "MyGUI_Button.h"  // lines 19-19
- #include "MyGUI_Button.h"  // lines 20-20
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_TPoint.h"  // lines 27-27
- #include "MyGUI_TSize.h"  // lines 29-29
- #include "MyGUI_TextBox.h"  // lines 31-31
- #include "MyGUI_Types.h"  // lines 33-33
- #include "MyGUI_Widget.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 55-55
- #include "components/esm/attr.hpp"  // lines 57-57
- #include "components/esm/loadcrea.hpp"  // lines 59-59
- #include "components/esm/loadench.hpp"  // lines 61-61
- #include "components/esm/loadgmst.hpp"  // lines 62-62
- #include "components/esm/loadgmst.hpp"  // lines 63-63
- #include "components/esm/loadmisc.hpp"  // lines 64-64
- #include "components/esm/loadmisc.hpp"  // lines 65-65
- #include "components/esm/loadskil.hpp"  // lines 67-67
- #include "components/misc/stringops.hpp"  // lines 68-68
- #include "components/misc/stringops.hpp"  // lines 69-69

The full include-list for apps/openmw/mwgui/recharge.cpp:
#include "recharge.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stdlib.h>                     // for rand, RAND_MAX
#include <string>                       // for string
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "itemwidget.hpp"               // for ItemWidget
#include "widgets.hpp"                  // for MWDynamicStat, etc
---
In file included from libs/openengine/gui/manager.cpp:5:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/openmw/mwrender/sky.hpp should add these lines:

apps/openmw/mwrender/sky.hpp should remove these lines:
- #include <OgreHighLevelGpuProgram.h>  // lines 5-5
- #include <OgreMaterial.h>  // lines 6-6
- #include <map>  // lines 8-8
- #include <map>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "../mwworld/weather.hpp"  // lines 13-13
- #include "GLX/../OgrePrerequisites.h"  // lines 15-15
- namespace MWWorld { class Light; }  // lines 27-27
- namespace MWWorld { namespace Ogre { class RenderWindow; } }  // lines 33-33
- namespace MWWorld { namespace Ogre { class TextureUnitState; } }  // lines 36-36
- namespace MWWorld { namespace Ogre { class Viewport; } }  // lines 37-37
- namespace MWWorld { struct WeatherResult; }  // lines 25-25
- namespace Ogre { class Light; }  // lines 19-19

The full include-list for apps/openmw/mwrender/sky.hpp:
#include <OgreColourValue.h>            // for ColourValue
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include <string>                       // for string
#include "GLX/../OgrePrerequisites.h"   // for String
#include "extern/shiny/Main/MaterialInstance.hpp"
namespace MWWorld { namespace Ogre { class Camera; } }  // lines 31-31
namespace MWWorld { namespace Ogre { class Entity; } }  // lines 32-32
namespace MWWorld { namespace Ogre { class SceneManager; } }  // lines 34-34
namespace MWWorld { namespace Ogre { class SceneNode; } }  // lines 35-35
namespace MWWorld { struct WeatherResult; }  // lines 23-23
---

apps/openmw/mwrender/sky.cpp should add these lines:
namespace MWWorld { class Fallback; }

apps/openmw/mwrender/sky.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreControllerManager.h>  // lines 2-2
- #include <OgreEntity.h>  // lines 3-3
- #include <OgreMeshManager.h>  // lines 4-4
- #include <OgreParticle.h>  // lines 5-5
- #include <OgreSceneManager.h>  // lines 6-6
- #include <OgreTechnique.h>  // lines 7-7
- #include <assert.h>  // lines 9-9
- #include <stddef.h>  // lines 15-15
- #include <stdlib.h>  // lines 17-17
- #include <boost/lexical_cast.hpp>  // lines 10-10
- #include <cmath>  // lines 18-18
- #include <cmath>  // lines 19-19
- #include <components/misc/resourcehelpers.hpp>  // lines 11-11
- #include <extern/shiny/Platforms/Ogre/OgreMaterial.hpp>  // lines 13-13
- #include <sstream>  // lines 20-20
- #include <sstream>  // lines 21-21
- #include <utility>  // lines 22-22
- #include <utility>  // lines 23-23
- #include "../mwworld/fallback.hpp"  // lines 27-27
- #include "OgreAxisAlignedBox.h"  // lines 28-28
- #include "OgreAxisAlignedBox.h"  // lines 29-29
- #include "OgreColourValue.h"  // lines 30-30
- #include "OgreColourValue.h"  // lines 31-31
- #include "OgreController.h"  // lines 32-32
- #include "OgreController.h"  // lines 33-33
- #include "OgreLight.h"  // lines 34-34
- #include "OgreLight.h"  // lines 35-35
- #include "OgreMaterial.h"  // lines 36-36
- #include "OgreMaterial.h"  // lines 37-37
- #include "OgreMath.h"  // lines 38-38
- #include "OgreMath.h"  // lines 39-39
- #include "OgreNode.h"  // lines 40-40
- #include "OgreNode.h"  // lines 41-41
- #include "OgreParticleIterator.h"  // lines 42-42
- #include "OgrePass.h"  // lines 43-43
- #include "OgrePass.h"  // lines 44-44
- #include "OgrePlane.h"  // lines 45-45
- #include "OgrePlane.h"  // lines 46-46
- #include "OgreQuaternion.h"  // lines 47-47
- #include "OgreQuaternion.h"  // lines 48-48
- #include "OgreResourceGroupManager.h"  // lines 49-49
- #include "OgreResourceGroupManager.h"  // lines 50-50
- #include "OgreSharedPtr.h"  // lines 51-51
- #include "OgreSharedPtr.h"  // lines 52-52
- #include "OgreStringConverter.h"  // lines 53-53
- #include "OgreStringConverter.h"  // lines 54-54
- #include "OgreVector3.h"  // lines 55-55
- #include "OgreVector3.h"  // lines 56-56
- #include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 57-57
- #include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 58-58
- #include "apps/openmw/mwrender/../mwworld/weather.hpp"  // lines 60-60
- #include "extern/shiny/Main/Factory.hpp"  // lines 61-61
- #include "extern/shiny/Main/Factory.hpp"  // lines 62-62
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 64-64
- #include "renderconst.hpp"  // lines 65-65
- namespace MWWorld { namespace Ogre { class MovableObject; } }  // lines 71-71

The full include-list for apps/openmw/mwrender/sky.cpp:
#include "sky.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL, size_t
#include <stdlib.h>                     // for rand, RAND_MAX
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwrender/../mwworld/weather.hpp"
#include "extern/shiny/Main/PropertyBase.hpp"  // for Vector3
namespace MWWorld { class Fallback; }
namespace MWWorld { namespace Ogre { class MovableObject; } }  // lines 69-69
---
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellview.cpp:23:
In file included from ./apps/openmw/mwgui/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
./apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellview.cpp:23:
In file included from ./apps/openmw/mwgui/../mwworld/ptr.hpp:12:
./apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/spellview.cpp:23:
In file included from ./apps/openmw/mwgui/../mwworld/ptr.hpp:12:
./apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellview.cpp:23:
./apps/openmw/mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellview.cpp:23:
./apps/openmw/mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/spellview.cpp:23:
./apps/openmw/mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?

apps/openmw/mwdialogue/journalimp.hpp should add these lines:

apps/openmw/mwdialogue/journalimp.hpp should remove these lines:
- #include "journalentry.hpp"  // lines 8-8
- #include "quest.hpp"  // lines 9-9

The full include-list for apps/openmw/mwdialogue/journalimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "../mwbase/journal.hpp"        // for Journal::TEntryIter, etc
namespace ESM { class ESMReader; }  // lines 12-12
namespace ESM { class ESMWriter; }  // lines 13-13
namespace Loading { class Listener; }  // lines 16-16
namespace MWDialogue { class Quest; }  // lines 19-19
namespace MWDialogue { class Topic; }  // lines 20-20
namespace MWWorld { class Ptr; }  // lines 23-23
---
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellview.cpp:27:
apps/openmw/mwgui/spellview.hpp:14:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/cells.cpp:125:37: error: no viable conversion from 'pair<pair<[2 * ...]>, [...]>' to 'const pair<const pair<[2 * ...]>, [...]>'
        result = mExteriors.insert (std::make_pair (
                                    ^~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:118:2: note: candidate constructor [with _U1 = std::pair<int, int>, _U2 = MWWorld::CellStore]
        pair(const pair<_U1, _U2>& __p)
        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:96:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'pair<std::pair<int, int>, MWWorld::CellStore>' to 'const std::pair<const std::pair<int, int>, MWWorld::CellStore> &' for 1st argument
    struct pair
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:629:32: note: passing argument to parameter '__x' here
      insert(const value_type& __x)
                               ^
apps/openmw/mwworld/cells.cpp:147:37: error: no viable conversion from 'pair<basic_string<[3 * ...]>, [...]>' to 'const pair<const basic_string<[3 * ...]>, [...]>'
        result = mInteriors.insert (std::make_pair (lowerName, CellStore (cell))).first;
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:118:2: note: candidate constructor [with _U1 = std::basic_string<char>, _U2 = MWWorld::CellStore]
        pair(const pair<_U1, _U2>& __p)
        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:96:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'pair<std::basic_string<char>, MWWorld::CellStore>' to 'const std::pair<const std::basic_string<char>, MWWorld::CellStore> &' for 1st argument
    struct pair
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:629:32: note: passing argument to parameter '__x' here
      insert(const value_type& __x)
                               ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:14:
In file included from apps/openmw/mwrender/terrainstorage.hpp:4:
In file included from ./components/esmterrain/storage.hpp:16:
./components/terrain/defs.hpp:60:27: error: no member named 'PixelBox' in namespace 'Ogre'
        std::vector<Ogre::PixelBox> mBlendmaps;
                    ~~~~~~^

apps/openmw/mwdialogue/journalimp.cpp should add these lines:

apps/openmw/mwdialogue/journalimp.cpp should remove these lines:
- #include <deque>  // lines 6-6
- #include <map>  // lines 10-10
- #include <utility>  // lines 12-12
- #include <vector>  // lines 14-14
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp"  // lines 22-22
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 25-25
- #include "apps/openmw/mwdialogue/journalentry.hpp"  // lines 27-27
- #include "apps/openmw/mwdialogue/quest.hpp"  // lines 29-29
- #include "apps/openmw/mwdialogue/topic.hpp"  // lines 31-31
- #include "components/esm/defs.hpp"  // lines 33-33
- #include "components/esm/loaddial.hpp"  // lines 35-35
- #include "components/esm/loadinfo.hpp"  // lines 37-37
- namespace ESM { class ESMReader; }  // lines 47-47
- namespace Loading { class Listener; }  // lines 50-50

The full include-list for apps/openmw/mwdialogue/journalimp.cpp:
#include "journalimp.hpp"
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/journalentry.hpp>  // for JournalEntry, etc
#include <components/esm/queststate.hpp>  // for QuestState
#include <deque>                        // for _Deque_iterator, operator!=, etc
#include <iterator>                     // for distance
#include <list>                         // for _List_const_iterator, etc
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwdialogue/../mwbase/journal.hpp"
#include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwdialogue/journalentry.hpp"
#include "apps/openmw/mwdialogue/quest.hpp"  // for Quest
#include "apps/openmw/mwdialogue/topic.hpp"  // for Topic, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_JOUR, etc
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadinfo.hpp"  // for DialInfo
namespace ESM { class ESMReader; }  // lines 45-45
namespace Loading { class Listener; }  // lines 41-41
---
In file included from apps/openmw/mwrender/terrainstorage.cpp:14:
In file included from apps/openmw/mwrender/terrainstorage.hpp:4:
./components/esmterrain/storage.hpp:51:37: error: expected class name
    class Storage : public Terrain::Storage
                                    ^
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:9:
apps/openmw/mwworld/../mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/widgets.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/widgets.hpp should remove these lines:
- #include <MyGUI_EditBox.h>  // lines 4-4
- #include <vector>  // lines 9-9
- #include "../mwmechanics/stat.hpp"  // lines 11-11
- #include "MyGUI_MouseButton.h"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_Types.h"  // lines 24-24
- #include "MyGUI_Widget.h"  // lines 19-19
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 21-21
- class WindowManager;  // lines 40-40
- namespace MWGui { namespace Widgets { class MWEffectList; } }  // lines 51-51
- namespace MWGui { namespace Widgets { class MWSpellEffect; } }  // lines 193-193
- namespace MyGUI { class TextBox; }  // lines 30-30

The full include-list for apps/openmw/mwgui/widgets.hpp:
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <components/esm/effectlist.hpp>  // for ENAMstruct
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SkillEnum
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace MyGUI { class ControllerItem; }  // lines 35-35
namespace MyGUI { class ImageBox; }  // lines 36-36
namespace MyGUI { class ProgressBar; }  // lines 27-27
namespace MyGUI { class TextBox; }  // lines 28-28
---
apps/openmw/mwrender/terrainstorage.cpp:24:25: error: no member named 'Environment' in namespace 'MWBase'
                MWBase::Environment::get().getWorld()->getStore();
                ~~~~~~~~^
In file included from apps/openmw/mwgui/settingswindow.cpp:29:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/terrainstorage.cpp:40:21: error: no member named 'Environment' in namespace 'MWBase'
            MWBase::Environment::get().getWorld()->getStore();
            ~~~~~~~~^

apps/openmw/mwgui/widgets.cpp should add these lines:
namespace ESM { struct EffectList; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/widgets.cpp should remove these lines:
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <iomanip>  // lines 11-11
- #include <stdexcept>  // lines 13-13
- #include <stdexcept>  // lines 14-14
- #include "../mwbase/windowmanager.hpp"  // lines 17-17
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_Align.h"  // lines 20-20
- #include "MyGUI_Align.h"  // lines 21-21
- #include "MyGUI_Button.h"  // lines 23-23
- #include "MyGUI_ControllerItem.h"  // lines 24-24
- #include "MyGUI_ControllerItem.h"  // lines 25-25
- #include "MyGUI_Diagnostic.h"  // lines 27-27
- #include "MyGUI_LogStream.h"  // lines 28-28
- #include "MyGUI_LogStream.h"  // lines 29-29
- #include "MyGUI_ScrollBar.h"  // lines 31-31
- #include "MyGUI_StringUtility.h"  // lines 32-32
- #include "MyGUI_StringUtility.h"  // lines 33-33
- #include "MyGUI_TextBox.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 39-39
- #include "components/esm/attr.hpp"  // lines 40-40
- #include "components/esm/attr.hpp"  // lines 41-41
- #include "components/esm/defs.hpp"  // lines 42-42
- #include "components/esm/defs.hpp"  // lines 43-43
- #include "components/esm/effectlist.hpp"  // lines 44-44
- #include "components/esm/effectlist.hpp"  // lines 45-45
- #include "components/esm/loadmgef.hpp"  // lines 47-47
- #include "components/esm/loadskil.hpp"  // lines 49-49
- #include "components/esm/loadspel.hpp"  // lines 51-51

The full include-list for apps/openmw/mwgui/widgets.cpp:
#include "widgets.hpp"
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <sstream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Diagnostic.h"           // for MYGUI_ASSERT
#include "MyGUI_ScrollBar.h"
#include "MyGUI_TextBox.h"              // for TextBox
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell
#include "controllers.hpp"              // for ControllerRepeatEvent
namespace ESM { struct EffectList; }
namespace MWWorld { class ESMStore; }
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwrender/terrainstorage.cpp:63:21: error: no member named 'Environment' in namespace 'MWBase'
            MWBase::Environment::get().getWorld()->getStore();
            ~~~~~~~~^
apps/openmw/mwrender/terrainstorage.cpp:77:21: error: no member named 'Environment' in namespace 'MWBase'
            MWBase::Environment::get().getWorld()->getStore();
            ~~~~~~~~^
apps/openmw/mwgui/settingswindow.cpp:38:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/spellcreationdialog.cpp:4:
./components/widgets/list.hpp:9:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwsound/soundmanagerimp.hpp should add these lines:
#include <string>                       // for string
#include "components/settings/settings.hpp"  // for CategorySettingVector

apps/openmw/mwsound/soundmanagerimp.hpp should remove these lines:
- #include <OgreResourceGroupManager.h>  // lines 4-4
- #include <boost/shared_ptr.hpp>  // lines 6-6
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 8-8
- #include <memory>  // lines 11-11
- #include "OgreStringVector.h"  // lines 15-15
- #include "OgreStringVector.h"  // lines 16-16
- #include "apps/openmw/mwsound/../mwworld/ptr.hpp"  // lines 18-18
- namespace MWWorld { class CellStore; }  // lines 26-26
- namespace MWWorld { namespace MWSound { struct Sound_Decoder; } }  // lines 36-36
- namespace Ogre { class ResourceGroupManager; }  // lines 21-21

The full include-list for apps/openmw/mwsound/soundmanagerimp.hpp:
#include <OgreVector3.h>                // for Vector3
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map, map<>::value_compare
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwbase/soundmanager.hpp"   // for SoundPtr, etc
#include "apps/openmw/mwsound/../mwworld/ptr.hpp"  // for Ptr
#include "components/settings/settings.hpp"  // for CategorySettingVector
namespace MWWorld { class CellStore; }  // lines 25-25
namespace MWWorld { namespace MWSound { class Sound; } }  // lines 34-34
namespace MWWorld { namespace MWSound { class Sound_Output; } }  // lines 35-35
namespace MWWorld { namespace Ogre { class ResourceGroupManager; } }  // lines 29-29
---

apps/openmw/mwsound/soundmanagerimp.cpp should add these lines:
#include "apps/openmw/mwsound/soundmanagerimp.hpp"
namespace ESM { struct Position; }
namespace ESM { struct Region; }
namespace MWWorld { namespace Ogre { class Vector3; } }

apps/openmw/mwsound/soundmanagerimp.cpp should remove these lines:
- #include <math.h>  // lines 2-2
- #include <stddef.h>  // lines 4-4
- #include <stdlib.h>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <exception>  // lines 9-9
- #include <map>  // lines 11-11
- #include <vector>  // lines 12-12
- #include <vector>  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "OgreResourceGroupManager.h"  // lines 20-20
- #include "OgreResourceGroupManager.h"  // lines 21-21
- #include "OgreSharedPtr.h"  // lines 22-22
- #include "OgreSharedPtr.h"  // lines 23-23
- #include "OgreVector3.h"  // lines 25-25
- #include "apps/openmw/mwsound/../mwbase/../mwworld/cellref.hpp"  // lines 26-26
- #include "apps/openmw/mwsound/../mwbase/../mwworld/cellref.hpp"  // lines 27-27
- #include "apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwsound/../mwbase/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwsound/../mwbase/../mwworld/store.hpp"  // lines 31-31
- #include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"  // lines 33-33
- #include "components/esm/defs.hpp"  // lines 34-34
- #include "components/esm/defs.hpp"  // lines 35-35
- #include "components/esm/esmcommon.hpp"  // lines 36-36
- #include "components/esm/esmcommon.hpp"  // lines 37-37
- #include "components/esm/loadcell.hpp"  // lines 39-39
- #include "components/esm/loadgmst.hpp"  // lines 40-40
- #include "components/esm/loadgmst.hpp"  // lines 41-41
- #include "components/esm/loadregn.hpp"  // lines 42-42
- #include "components/esm/loadregn.hpp"  // lines 43-43
- #include "components/esm/loadsoun.hpp"  // lines 45-45
- #include "components/settings/settings.hpp"  // lines 47-47
- #include "sound_output.hpp"  // lines 51-51

The full include-list for apps/openmw/mwsound/soundmanagerimp.cpp:
#include "apps/openmw/mwsound/soundmanagerimp.hpp"
#include <math.h>                       // for pow
#include <stddef.h>                     // for size_t
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <exception>                    // for exception
#include <iostream>
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp"
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"  // for SoundPtr, etc
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadsoun.hpp"  // for SOUNstruct, Sound
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "ffmpeg_decoder.hpp"           // for DEFAULT_DECODER
#include "openal_output.hpp"            // for Vector3, DEFAULT_OUTPUT
#include "sound.hpp"                    // for Sound
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType, etc
#include "soundmanagerimp.hpp"          // for SoundManager, etc
namespace ESM { struct Position; }
namespace ESM { struct Region; }
namespace MWWorld { namespace Ogre { class Vector3; } }
---

apps/openmw/mwgui/containeritemmodel.hpp should add these lines:

apps/openmw/mwgui/containeritemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwgui/containeritemmodel.hpp:
#include <stddef.h>                     // for size_t
#include <vector>                       // for vector
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "itemmodel.hpp"                // for ItemModel::ModelIndex, etc
---

apps/openmw/mwgui/containeritemmodel.cpp should add these lines:

apps/openmw/mwgui/containeritemmodel.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include <stdexcept>  // lines 6-6
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 13-13
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 15-15

The full include-list for apps/openmw/mwgui/containeritemmodel.cpp:
#include "containeritemmodel.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for max
#include <stdexcept>                    // for runtime_error
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
---

apps/openmw/mwgui/spellview.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1
namespace MyGUI { class ScrollView; }

apps/openmw/mwgui/spellview.hpp should remove these lines:
- #include <memory>  // lines 6-6
- #include <string>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_Types.h"  // lines 18-18
- class ScrollView;  // lines 24-24
- namespace MWGui { class SpellModel; }  // lines 30-30

The full include-list for apps/openmw/mwgui/spellview.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "spellmodel.hpp"               // for SpellModel, etc
namespace MyGUI { class ScrollView; }
---

apps/openmw/mwgui/spellview.cpp should add these lines:
namespace MyGUI { class Widget; }

apps/openmw/mwgui/spellview.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <stddef.h>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <stdexcept>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include "MyGUI_Align.h"  // lines 14-14
- #include "MyGUI_StringUtility.h"  // lines 15-15
- #include "MyGUI_StringUtility.h"  // lines 16-16
- #include "MyGUI_TextBox.h"  // lines 18-18
- #include "MyGUI_Widget.h"  // lines 19-19
- #include "MyGUI_Widget.h"  // lines 20-20
- #include "MyGUI_WidgetInput.h"  // lines 21-21
- #include "MyGUI_WidgetInput.h"  // lines 22-22
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 23-23
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 24-24
- #include "apps/openmw/mwgui/spellmodel.hpp"  // lines 26-26

The full include-list for apps/openmw/mwgui/spellview.cpp:
#include "spellview.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stddef.h>                     // for NULL
#include <components/widgets/sharedstatebutton.hpp>
#include "MyGUI_Align.h"                // for Align, Align::Enum::Left, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "apps/openmw/mwgui/spellmodel.hpp"  // for Spell, SpellModel, etc
namespace MyGUI { class Widget; }
---
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:518:16: error: static_cast from '_Base_ptr' (aka 'std::_Rb_tree_node_base *') to '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *'), which are not related by inheritance, is not allowed
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:37: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_begin' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                                    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:31:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1262:21: error: no matching function for call to '_S_left'
          __y = __x, __x = _S_left(__x);
                           ^~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:31:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:544:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:548:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Const_Base_ptr' (aka 'const std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:190:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1265:14: note: in instantiation of member function 'std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >::_Rb_tree_iterator' requested here
      return iterator(__y);
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:31:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:741:16: error: no matching conversion for functional-style cast from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1914:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
      return (__j == end()
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:31:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to 'const std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:185:7: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
      ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:61:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:16: error: no viable conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return _M_t.end(); }
               ^~~~~~~~~~
apps/openmw/mwworld/cells.cpp:33:32: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
        if (result==mInteriors.end())
                               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'const std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > &' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:262:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'const std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka 'const _Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:746:9: note: in instantiation of member function 'std::_Rb_tree_const_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >::_Rb_tree_const_iterator' requested here
        return const_iterator(static_cast<_Const_Link_type>
               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
      { return _M_t.end(); }
                    ^
apps/openmw/mwworld/cells.cpp:33:32: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
        if (result==mInteriors.end())
                               ^

apps/openmw/mwgui/spellicons.hpp should add these lines:

apps/openmw/mwgui/spellicons.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <vector>  // lines 6-6
- #include "../mwmechanics/magiceffects.hpp"  // lines 8-8
- namespace ESM { struct ENAMstruct; }  // lines 18-18
- namespace ESM { struct EffectList; }  // lines 19-19
- namespace MyGUI { class ImageBox; }  // lines 13-13

The full include-list for apps/openmw/mwgui/spellicons.hpp:
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/magiceffects.hpp"
namespace MyGUI { class Widget; }  // lines 14-14
---
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:518:16: error: static_cast from '_Base_ptr' (aka 'std::_Rb_tree_node_base *') to '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *'), which are not related by inheritance, is not allowed
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:37: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::_M_begin' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                                    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:43:24: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
            mExteriors.find (std::make_pair (cell->getGridX(), cell->getGridY()));
                       ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwgui/spellicons.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWMechanics { class CreatureStats; }
namespace MWWorld { class InventoryStore; }

apps/openmw/mwgui/spellicons.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <components/misc/resourcehelpers.hpp>  // lines 3-3
- #include <iomanip>  // lines 6-6
- #include <utility>  // lines 8-8
- #include <utility>  // lines 9-9
- #include "../mwbase/windowmanager.hpp"  // lines 12-12
- #include "../mwmechanics/creaturestats.hpp"  // lines 14-14
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "../mwworld/inventorystore.hpp"  // lines 17-17
- #include "MyGUI_Align.h"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_StringUtility.h"  // lines 23-23
- #include "MyGUI_Types.h"  // lines 24-24
- #include "MyGUI_Types.h"  // lines 25-25
- #include "MyGUI_Widget.h"  // lines 27-27
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwmechanics/activespells.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwmechanics/activespells.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwmechanics/spells.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwmechanics/spells.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 35-35
- #include "components/esm/attr.hpp"  // lines 36-36
- #include "components/esm/attr.hpp"  // lines 37-37
- #include "components/esm/loadgmst.hpp"  // lines 38-38
- #include "components/esm/loadgmst.hpp"  // lines 39-39
- #include "components/esm/loadskil.hpp"  // lines 40-40
- #include "components/esm/loadskil.hpp"  // lines 41-41

The full include-list for apps/openmw/mwgui/spellicons.cpp:
#include "spellicons.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include <sstream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "tooltips.hpp"                 // for ToolTipInfo
namespace MWMechanics { class CreatureStats; }
namespace MWWorld { class InventoryStore; }
---

(apps/openmw/mwscript/controlextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/controlextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/controlextensions.cpp should remove these lines:
- #include <components/interpreter/interpreter.hpp>  // lines 3-3
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 11-11
- #include "ref.hpp"  // lines 16-16

The full include-list for apps/openmw/mwscript/controlextensions.cpp:
#include "controlextensions.hpp"
#include <components/compiler/opcodes.hpp>  // for numberOfControls
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwmechanics/creaturestats.hpp"
#include "interpretercontext.hpp"       // for InterpreterContext
---

apps/openmw/mwgui/container.hpp should add these lines:
#include "apps/openmw/mwgui/referenceinterface.hpp"

apps/openmw/mwgui/container.hpp should remove these lines:
- #include "MyGUI_KeyCode.h"  // lines 5-5
- #include "MyGUI_Types.h"  // lines 7-7
- #include "itemmodel.hpp"  // lines 8-8
- class Environment;  // lines 33-33
- namespace MWGui { class ContainerWindow; }  // lines 44-44
- namespace MWGui { class ItemModel; }  // lines 23-23
- namespace MWGui { class WindowManager; }  // lines 47-47
- namespace MWGui { struct ItemStack; }  // lines 24-24
- namespace MyGUI { class Button; }  // lines 30-30
- namespace MyGUI { class Gui; }  // lines 38-38

The full include-list for apps/openmw/mwgui/container.hpp:
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class DragAndDrop; }  // lines 19-19
namespace MWGui { class ItemModel; }  // lines 20-20
namespace MWGui { class ItemView; }  // lines 45-45
namespace MWGui { class SortFilterItemModel; }  // lines 46-46
namespace MWGui { struct ItemStack; }  // lines 21-21
namespace MWWorld { class Ptr; }  // lines 12-12
namespace MyGUI { class Button; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 39-39
---

apps/openmw/mwgui/container.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/container.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <string>  // lines 6-6
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwbase/mechanicsmanager.hpp"  // lines 11-11
- #include "../mwbase/soundmanager.hpp"  // lines 12-12
- #include "../mwmechanics/creaturestats.hpp"  // lines 14-14
- #include "../mwmechanics/pickpocket.hpp"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_WidgetInput.h"  // lines 20-20
- #include "MyGUI_WidgetInput.h"  // lines 21-21
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 23-23
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 24-24
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/mode.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/mode.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/referenceinterface.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 32-32
- #include "components/esm/loadcont.hpp"  // lines 33-33
- #include "components/esm/loadnpc.hpp"  // lines 34-34
- #include "components/esm/loadnpc.hpp"  // lines 35-35
- #include "components/esm/loadskil.hpp"  // lines 36-36
- #include "components/esm/loadskil.hpp"  // lines 37-37
- #include "inventoryitemmodel.hpp"  // lines 41-41
- #include "inventorywindow.hpp"  // lines 42-42

The full include-list for apps/openmw/mwgui/container.cpp:
#include "container.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL, size_t
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemModel, ItemStack, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "countdialog.hpp"              // for CountDialog, etc
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemview.hpp"                 // for ItemView
#include "pickpocketitemmodel.hpp"      // for PickpocketItemModel
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
---

apps/openmw/mwworld/containerstore.hpp should add these lines:

apps/openmw/mwworld/containerstore.hpp should remove these lines:
- #include <components/esm/loadalch.hpp>  // lines 4-4
- #include <components/esm/loadappa.hpp>  // lines 5-5
- #include <components/esm/loadarmo.hpp>  // lines 6-6
- #include <components/esm/loadbook.hpp>  // lines 7-7
- #include <components/esm/loadclot.hpp>  // lines 8-8
- #include <components/esm/loadingr.hpp>  // lines 9-9
- #include <components/esm/loadligh.hpp>  // lines 10-10
- #include <components/esm/loadlock.hpp>  // lines 11-11
- #include <components/esm/loadmisc.hpp>  // lines 12-12
- #include <components/esm/loadprob.hpp>  // lines 13-13
- #include <components/esm/loadrepa.hpp>  // lines 14-14
- #include <components/esm/loadweap.hpp>  // lines 15-15
- #include <cstddef>  // lines 16-16
- #include <iterator>  // lines 17-17
- #include <map>  // lines 18-18
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 21-21

The full include-list for apps/openmw/mwworld/containerstore.hpp:
#include <string>                       // for string
#include "cellreflist.hpp"              // for CellRefList, etc
#include "ptr.hpp"                      // for Ptr
namespace ESM { struct Apparatus; }  // lines 26-26
namespace ESM { struct Armor; }  // lines 27-27
namespace ESM { struct Book; }  // lines 28-28
namespace ESM { struct Clothing; }  // lines 29-29
namespace ESM { struct Ingredient; }  // lines 30-30
namespace ESM { struct InventoryList; }  // lines 48-48
namespace ESM { struct InventoryState; }  // lines 49-49
namespace ESM { struct Light; }  // lines 31-31
namespace ESM { struct Lockpick; }  // lines 32-32
namespace ESM { struct Miscellaneous; }  // lines 33-33
namespace ESM { struct ObjectState; }  // lines 34-34
namespace ESM { struct Potion; }  // lines 35-35
namespace ESM { struct Probe; }  // lines 36-36
namespace ESM { struct Repair; }  // lines 37-37
namespace ESM { struct Weapon; }  // lines 38-38
namespace MWWorld { class ContainerStoreIterator; }  // lines 54-54
namespace MWWorld { class ESMStore; }  // lines 41-41
namespace MWWorld { struct LiveCellRefBase; }  // lines 42-42
namespace MWWorld { template <typename X> struct LiveCellRef; }  // lines 43-43
---

apps/openmw/mwworld/containerstore.cpp should add these lines:
#include <cstddef>                      // for NULL
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/containerstore.cpp should remove these lines:
- #include <stdlib.h>  // lines 3-3
- #include <components/esm/inventorystate.hpp>  // lines 2-2
- #include <iostream>  // lines 5-5
- #include <list>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../mwmechanics/levelledlist.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/esmstore.hpp"  // lines 20-20
- #include "apps/openmw/mwworld/store.hpp"  // lines 21-21
- #include "components/esm/cellref.hpp"  // lines 23-23
- #include "components/esm/esmcommon.hpp"  // lines 25-25
- #include "components/esm/loadalch.hpp"  // lines 26-26
- #include "components/esm/loadappa.hpp"  // lines 27-27
- #include "components/esm/loadarmo.hpp"  // lines 28-28
- #include "components/esm/loadbook.hpp"  // lines 29-29
- #include "components/esm/loadclot.hpp"  // lines 30-30
- #include "components/esm/loadcont.hpp"  // lines 31-31
- #include "components/esm/loadingr.hpp"  // lines 33-33
- #include "components/esm/loadlevlist.hpp"  // lines 34-34
- #include "components/esm/loadligh.hpp"  // lines 35-35
- #include "components/esm/loadlock.hpp"  // lines 36-36
- #include "components/esm/loadmisc.hpp"  // lines 37-37
- #include "components/esm/loadprob.hpp"  // lines 38-38
- #include "components/esm/loadrepa.hpp"  // lines 39-39
- #include "components/esm/loadweap.hpp"  // lines 40-40
- #include "components/esm/objectstate.hpp"  // lines 41-41
- #include "localscripts.hpp"  // lines 44-44

The full include-list for apps/openmw/mwworld/containerstore.cpp:
#include "containerstore.hpp"
#include <cassert>                      // for assert
#include <cstddef>                      // for NULL
#include "apps/openmw/mwworld/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef, ObjectState
#include "apps/openmw/mwworld/cellreflist.hpp"  // for CellRefList, etc
#include "class.hpp"                    // for Class
#include "components/esm/defs.hpp"      // for Position, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "manualref.hpp"                // for ManualRef
---

extern/ogre-ffmpeg-videoplayer/audiodecoder.hpp should add these lines:
#include <new>                          // for bad_alloc

extern/ogre-ffmpeg-videoplayer/audiodecoder.hpp should remove these lines:
- #include <libavutil/channel_layout.h>  // lines 27-27
- #include <libavutil/frame.h>  // lines 8-8
- #include <libavutil/samplefmt.h>  // lines 10-10
- #include <libavutil/version.h>  // lines 12-12
- #include <stddef.h>  // lines 14-14
- #include <sys/types.h>  // lines 17-17

The full include-list for extern/ogre-ffmpeg-videoplayer/audiodecoder.hpp:
#include <libavcodec/avcodec.h>         // for av_free_packet, etc
#include <libavformat/avformat.h>       // for AVStream
#include <libavutil/frame.h>            // for AVFrame
#include <libavutil/samplefmt.h>        // for AVSampleFormat
#include <libavutil/version.h>          // for AV_VERSION_INT, etc
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint64_t, uint8_t
#include <sys/types.h>                  // for ssize_t
#include <memory>                       // for auto_ptr
#include <new>                          // for bad_alloc
namespace Video { struct AudioResampler; }  // lines 41-41
namespace Video { struct VideoState; }  // lines 42-42
---
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp should add these lines:

extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp should remove these lines:
- #include <libavcodec/version.h>  // lines 11-11
- #include <libavutil/avutil.h>  // lines 13-13
- #include <libavutil/channel_layout.h>  // lines 15-15
- #include <libavutil/mem.h>  // lines 17-17
- #include <libavutil/rational.h>  // lines 19-19
- #include <string.h>  // lines 22-22
- #include <algorithm>  // lines 23-23
- #include <algorithm>  // lines 24-24
- #include <stdexcept>  // lines 25-25
- #include <stdexcept>  // lines 26-26
- #include <string>  // lines 27-27
- #include <string>  // lines 28-28
- #include "extern/ogre-ffmpeg-videoplayer/videodefs.hpp"  // lines 3-3

The full include-list for extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:
#include "audiodecoder.hpp"
#include <libavcodec/avcodec.h>         // for AVPacket, AVCodecContext, etc
#include <libavcodec/version.h>         // for LIBAVCODEC_VERSION_INT
#include <libavresample/avresample.h>   // for AVAudioResampleContext
#include <libavutil/avutil.h>           // for AV_NOPTS_VALUE
#include <libavutil/channel_layout.h>
#include <libavutil/mem.h>              // for av_freep
#include <libavutil/rational.h>         // for av_q2d
#include <math.h>                       // for exp, fabs, log
#include <string.h>                     // for memcpy, memmove, memset
#include "extern/ogre-ffmpeg-videoplayer/videodefs.hpp"
#include "videostate.hpp"               // for VideoState, PacketQueue
---
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/extensions.cpp:31:9: error: use of undeclared identifier 'Ai'
        Ai::installOpcodes (interpreter);
        ^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwgui/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwsound/loudness.hpp should add these lines:

apps/openmw/mwsound/loudness.hpp should remove these lines:
- #include <vector>  // lines 2-2

The full include-list for apps/openmw/mwsound/loudness.hpp:
#include <vector>                       // for vector
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType
---

apps/openmw/mwsound/loudness.cpp should add these lines:

apps/openmw/mwsound/loudness.cpp should remove these lines:
- #include <algorithm>  // lines 2-2
- #include <cmath>  // lines 4-4
- #include "OgrePlatform.h"  // lines 8-8
- #include "apps/openmw/mwsound/sound_decoder.hpp"  // lines 10-10

The full include-list for apps/openmw/mwsound/loudness.cpp:
#include "loudness.hpp"
#include <algorithm>                    // for max, min
#include <cmath>                        // for sqrt
#include <limits>                       // for numeric_limits
#include "OgrePlatform.h"               // for int16
#include "apps/openmw/mwsound/sound_decoder.hpp"  // for bytesToFrames, etc
---
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

(apps/openmw/mwscript/extensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/extensions.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/compilercontext.hpp should add these lines:

apps/openmw/mwscript/compilercontext.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <utility>  // lines 8-8

The full include-list for apps/openmw/mwscript/compilercontext.hpp:
#include <components/compiler/context.hpp>  // for Context
#include <string>                       // for string
#include <utility>                      // for pair
---
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwscript/compilercontext.cpp should add these lines:

apps/openmw/mwscript/compilercontext.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 12-12
- #include "components/esm/loadacti.hpp"  // lines 15-15
- #include "components/esm/loadalch.hpp"  // lines 17-17
- #include "components/esm/loadappa.hpp"  // lines 19-19
- #include "components/esm/loadarmo.hpp"  // lines 21-21
- #include "components/esm/loadbook.hpp"  // lines 23-23
- #include "components/esm/loadclot.hpp"  // lines 25-25
- #include "components/esm/loadcont.hpp"  // lines 27-27
- #include "components/esm/loadcrea.hpp"  // lines 29-29
- #include "components/esm/loaddoor.hpp"  // lines 31-31
- #include "components/esm/loadingr.hpp"  // lines 33-33
- #include "components/esm/loadlevlist.hpp"  // lines 35-35
- #include "components/esm/loadligh.hpp"  // lines 37-37
- #include "components/esm/loadlock.hpp"  // lines 39-39
- #include "components/esm/loadmisc.hpp"  // lines 41-41
- #include "components/esm/loadnpc.hpp"  // lines 43-43
- #include "components/esm/loadprob.hpp"  // lines 45-45
- #include "components/esm/loadrepa.hpp"  // lines 47-47
- #include "components/esm/loadscpt.hpp"  // lines 49-49
- #include "components/esm/loadstat.hpp"  // lines 51-51
- #include "components/esm/loadweap.hpp"  // lines 53-53
- #include "components/misc/stringops.hpp"  // lines 55-55

The full include-list for apps/openmw/mwscript/compilercontext.cpp:
#include "compilercontext.hpp"
#include <components/compiler/locals.hpp>  // for Locals
#include <components/esm/loaddial.hpp>  // for Dialogue, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/ptr.hpp"           // for Ptr
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/misc/stringops.hpp"  // for StringUtils
---
In file included from apps/openmw/mwworld/actionalchemy.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:47:23: error: field has incomplete type 'Ogre::Vector3'
        Ogre::Vector3 mLastKnownExteriorPosition;
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwworld/../mwworld/player.hpp:73:23: error: incomplete result type 'Ogre::Vector3' in function definition
        Ogre::Vector3 getLastKnownExteriorPosition() const { return mLastKnownExteriorPosition; }
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:5:
In file included from apps/openmw/mwworld/actionalchemy.hpp:4:
apps/openmw/mwworld/action.hpp:17:17: error: field has incomplete type 'MWBase::Ptr'
            Ptr mTarget;
                ^
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:5:
In file included from apps/openmw/mwworld/actionalchemy.hpp:4:
apps/openmw/mwworld/action.hpp:31:65: error: invalid use of incomplete type 'MWBase::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
                                                                ^~~~~
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
apps/openmw/mwworld/actionalchemy.cpp:19:62: error: member access into incomplete type 'MWWorld::Player'
        if(MWBase::Environment::get().getWorld()->getPlayer().isInCombat()) { //Ensure we're not in combat
                                                             ^
apps/openmw/mwworld/../mwbase/world.hpp:61:11: note: forward declaration of 'MWWorld::Player'
    class Player;
          ^
apps/openmw/mwworld/actionalchemy.cpp:26:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:33:1: note: to match this '{'
{
^
apps/openmw/mwworld/actionalchemy.cpp:26:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:28:1: note: to match this '{'
{
^

apps/openmw/mwgui/tooltips.hpp should add these lines:
namespace MWGui { namespace MyGUI { class Widget; } }

apps/openmw/mwgui/tooltips.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 8-8
- #include "MyGUI_Types.h"  // lines 9-9
- #include "MyGUI_Types.h"  // lines 10-10
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 12-12
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 14-14
- namespace MyGUI { class Widget; }  // lines 20-20
- namespace MyGUI { class Widget; }  // lines 22-22

The full include-list for apps/openmw/mwgui/tooltips.hpp:
#include <openengine/gui/layout.hpp>    // for Layout
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "widgets.hpp"                  // for SpellEffectList
namespace ESM { class Class; }  // lines 27-27
namespace ESM { struct Race; }  // lines 28-28
namespace MWGui { namespace MyGUI { class Widget; } }
---

apps/openmw/mwgui/tooltips.cpp should add these lines:
namespace ESM { struct Enchantment; }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/tooltips.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <MyGUI_InputManager.h>  // lines 3-3
- #include <MyGUI_RenderManager.h>  // lines 4-4
- #include <assert.h>  // lines 6-6
- #include <stddef.h>  // lines 8-8
- #include <stddef.h>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <iomanip>  // lines 12-12
- #include <map>  // lines 13-13
- #include <map>  // lines 14-14
- #include <ostream>  // lines 16-16
- #include <stdexcept>  // lines 17-17
- #include <stdexcept>  // lines 18-18
- #include <utility>  // lines 19-19
- #include <utility>  // lines 20-20
- #include <vector>  // lines 21-21
- #include <vector>  // lines 22-22
- #include "../mwmechanics/spellcasting.hpp"  // lines 27-27
- #include "../mwworld/esmstore.hpp"  // lines 29-29
- #include "MyGUI_Align.h"  // lines 30-30
- #include "MyGUI_Align.h"  // lines 31-31
- #include "MyGUI_EditBox.h"  // lines 32-32
- #include "MyGUI_EditBox.h"  // lines 33-33
- #include "MyGUI_RTTI.h"  // lines 34-34
- #include "MyGUI_RTTI.h"  // lines 35-35
- #include "MyGUI_StringUtility.h"  // lines 36-36
- #include "MyGUI_StringUtility.h"  // lines 37-37
- #include "MyGUI_TPoint.h"  // lines 38-38
- #include "MyGUI_TPoint.h"  // lines 39-39
- #include "MyGUI_TextBox.h"  // lines 40-40
- #include "MyGUI_TextBox.h"  // lines 41-41
- #include "MyGUI_Widget.h"  // lines 43-43
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/mode.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 51-51
- #include "components/esm/attr.hpp"  // lines 53-53
- #include "components/esm/effectlist.hpp"  // lines 54-54
- #include "components/esm/effectlist.hpp"  // lines 55-55
- #include "components/esm/loadbsgn.hpp"  // lines 57-57
- #include "components/esm/loadclas.hpp"  // lines 59-59
- #include "components/esm/loadench.hpp"  // lines 60-60
- #include "components/esm/loadench.hpp"  // lines 61-61
- #include "components/esm/loadmgef.hpp"  // lines 63-63
- #include "components/esm/loadrace.hpp"  // lines 64-64
- #include "components/esm/loadrace.hpp"  // lines 65-65
- #include "components/esm/loadskil.hpp"  // lines 67-67
- #include "components/esm/loadspel.hpp"  // lines 69-69
- #include "components/esm/spelllist.hpp"  // lines 70-70
- #include "components/esm/spelllist.hpp"  // lines 71-71
- #include "components/settings/settings.hpp"  // lines 72-72
- #include "components/settings/settings.hpp"  // lines 73-73
- #include "inventorywindow.hpp"  // lines 74-74
- #include "itemmodel.hpp"  // lines 75-75
- #include "mapwindow.hpp"  // lines 76-76
- #include "openengine/gui/layout.hpp"  // lines 77-77
- #include "openengine/gui/layout.hpp"  // lines 78-78

The full include-list for apps/openmw/mwgui/tooltips.cpp:
#include "tooltips.hpp"
#include <assert.h>                     // for assert
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <ostream>                      // for ostringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwworld/store.hpp"
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_Console, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadskil.hpp"  // for Skill, Skill::sSkillNameIds
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SpellType, etc
namespace ESM { struct Enchantment; }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class ESMStore; }
---

apps/openmw/mwworld/cells.hpp should add these lines:
#include <string>                       // for string

apps/openmw/mwworld/cells.hpp should remove these lines:
- #include <stdint.h>  // lines 5-5
- #include <list>  // lines 7-7
- #include <utility>  // lines 10-10
- #include <vector>  // lines 12-12
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwworld/cellstore.hpp"  // lines 19-19

The full include-list for apps/openmw/mwworld/cells.hpp:
#include <stdint.h>                     // for uint32_t
#include <cstddef>                      // for size_t
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "apps/openmw/mwworld/cellstore.hpp"  // for CellStore
#include "ptr.hpp"                      // for Ptr
namespace ESM { class ESMReader; }  // lines 24-24
namespace ESM { class ESMWriter; }  // lines 25-25
namespace ESM { struct Cell; }  // lines 26-26
namespace ESM { struct CellId; }  // lines 28-28
namespace Loading { class Listener; }  // lines 34-34
namespace MWWorld { class ESMStore; }  // lines 39-39
---

apps/openmw/mwworld/cells.cpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwworld/cells.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <iterator>  // lines 8-8
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 13-13
- #include "components/esm/cellid.hpp"  // lines 17-17
- #include "components/esm/loadcell.hpp"  // lines 19-19
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 20-20
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 21-21
- #include "components/misc/stringops.hpp"  // lines 23-23

The full include-list for apps/openmw/mwworld/cells.cpp:
#include "cells.hpp"
#include <algorithm>                    // for fill
#include <components/esm/cellstate.hpp>  // for CellState
#include <components/esm/defs.hpp>      // for RecNameInts::REC_CSTA
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <iterator>                     // for operator!=, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwworld/store.hpp"  // for Store, Store<>::iterator, etc
#include "components/esm/cellid.hpp"    // for CellId, CellId::CellIndex
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "esmstore.hpp"                 // for ESMStore
---

apps/openmw/mwworld/actionopen.hpp should add these lines:

apps/openmw/mwworld/actionopen.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 10-10

The full include-list for apps/openmw/mwworld/actionopen.hpp:
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 8-8
---

(apps/openmw/mwworld/actionopen.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/physicssystem.cpp:5:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwsound/libavwrapper.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/physicssystem.cpp:14:
In file included from libs/../apps/openmw/mwbase/world.hpp:9:
libs/../apps/openmw/mwbase/../mwworld/globals.hpp:30:48: error: no member named 'Variant' in namespace 'Ogre::ESM'
            typedef std::map<std::string, ESM::Variant> Collection;
                                          ~~~~~^
libs/../apps/openmw/mwbase/../mwworld/globals.hpp:34:13: error: 'Collection' (aka 'int') is not a class, namespace, or enumeration
            Collection::const_iterator find (const std::string& name) const;
            ^
libs/../apps/openmw/mwbase/../mwworld/globals.hpp:36:13: error: 'Collection' (aka 'int') is not a class, namespace, or enumeration
            Collection::iterator find (const std::string& name);
            ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
libs/../apps/openmw/mwbase/../mwworld/globals.hpp:40:19: error: no type named 'Variant' in namespace 'Ogre::ESM'; did you mean '::ESM::Variant'?
            const ESM::Variant& operator[] (const std::string& name) const;
                  ^~~~~~~~~~~~
                  ::ESM::Variant
./components/esm/variant.hpp:25:11: note: '::ESM::Variant' declared here
    class Variant
          ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwgui/../mwmechanics/spells.hpp:8:
apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/physicssystem.cpp:14:
In file included from libs/../apps/openmw/mwbase/world.hpp:9:
libs/../apps/openmw/mwbase/../mwworld/globals.hpp:42:13: error: no type named 'Variant' in namespace 'Ogre::ESM'; did you mean '::ESM::Variant'?
            ESM::Variant& operator[] (const std::string& name);
            ^~~~~~~~~~~~
            ::ESM::Variant
./components/esm/variant.hpp:25:11: note: '::ESM::Variant' declared here
    class Variant
          ^

apps/openmw/mwgui/spellcreationdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/spellcreationdialog.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include <map>  // lines 7-7
- #include <map>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "components/esm/effectlist.hpp"  // lines 15-15
- class Ptr;  // lines 37-37
- namespace ESM { struct MagicEffect; }  // lines 35-35
- namespace MyGUI { class Button; }  // lines 41-41
- namespace MyGUI { class EditBox; }  // lines 42-42
- namespace MyGUI { class ImageBox; }  // lines 43-43
- namespace MyGUI { class ScrollBar; }  // lines 44-44
- namespace MyGUI { class ScrollView; }  // lines 45-45
- namespace MyGUI { class TextBox; }  // lines 46-46
- namespace MyGUI { class Widget; }  // lines 47-47

The full include-list for apps/openmw/mwgui/spellcreationdialog.hpp:
#include <stddef.h>                     // for size_t
#include <components/esm/loadspel.hpp>  // for Spell
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "components/esm/effectlist.hpp"  // for ENAMstruct
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase, WindowModal
namespace ESM { struct MagicEffect; }  // lines 33-33
namespace Gui { class MWList; }  // lines 52-52
namespace MWGui { class SelectAttributeDialog; }  // lines 58-58
namespace MWGui { class SelectSkillDialog; }  // lines 59-59
namespace MWWorld { class Ptr; }  // lines 20-20
namespace MyGUI { class Button; }  // lines 23-23
namespace MyGUI { class EditBox; }  // lines 24-24
namespace MyGUI { class ImageBox; }  // lines 25-25
namespace MyGUI { class ScrollBar; }  // lines 26-26
namespace MyGUI { class ScrollView; }  // lines 27-27
namespace MyGUI { class TextBox; }  // lines 28-28
namespace MyGUI { class Widget; }  // lines 29-29
---
In file included from apps/openmw/mwworld/physicssystem.cpp:14:
In file included from libs/../apps/openmw/mwbase/world.hpp:10:
In file included from libs/../apps/openmw/mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^

apps/openmw/mwgui/spellcreationdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/spellcreationdialog.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <stdlib.h>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <utility>  // lines 10-10
- #include <utility>  // lines 11-11
- #include "../mwbase/soundmanager.hpp"  // lines 15-15
- #include "../mwmechanics/spellcasting.hpp"  // lines 19-19
- #include "../mwworld/esmstore.hpp"  // lines 22-22
- #include "MyGUI_Align.h"  // lines 23-23
- #include "MyGUI_Align.h"  // lines 24-24
- #include "MyGUI_EditBox.h"  // lines 27-27
- #include "MyGUI_RTTI.h"  // lines 28-28
- #include "MyGUI_RTTI.h"  // lines 29-29
- #include "MyGUI_ScrollBar.h"  // lines 31-31
- #include "MyGUI_ScrollView.h"  // lines 33-33
- #include "MyGUI_StringUtility.h"  // lines 35-35
- #include "MyGUI_TextBox.h"  // lines 37-37
- #include "MyGUI_Types.h"  // lines 39-39
- #include "MyGUI_UString.h"  // lines 41-41
- #include "MyGUI_Widget.h"  // lines 43-43
- #include "MyGUI_WidgetDefines.h"  // lines 45-45
- #include "MyGUI_WidgetInput.h"  // lines 46-46
- #include "MyGUI_WidgetInput.h"  // lines 47-47
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 55-55
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 56-56
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 57-57
- #include "components/esm/defs.hpp"  // lines 60-60
- #include "components/esm/loadgmst.hpp"  // lines 61-61
- #include "components/esm/loadgmst.hpp"  // lines 62-62
- #include "components/esm/loadmgef.hpp"  // lines 64-64
- #include "components/esm/loadspel.hpp"  // lines 66-66
- #include "tooltips.hpp"  // lines 68-68

The full include-list for apps/openmw/mwgui/spellcreationdialog.cpp:
#include "spellcreationdialog.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <stdlib.h>                     // for abs
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <components/widgets/list.hpp>  // for MWList
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_ScrollView.h"           // for ScrollView
#include "MyGUI_StringUtility.h"        // for parseInt
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "class.hpp"                    // for SelectAttributeDialog, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Self, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "widgets.hpp"                  // for MWSpellEffect, etc
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---
apps/openmw/mwworld/refdata.hpp:37:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals mLocals; // if we find the overhead of heaving a locals
            ^~~~~~~~
            Ogre::MWScript
apps/openmw/mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwworld/physicssystem.cpp:14:
In file included from libs/../apps/openmw/mwbase/world.hpp:10:
In file included from libs/../apps/openmw/mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:46:13: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            ESM::Position mPosition;
            ^~~~~~~~~~~~~
            Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
In file included from apps/openmw/mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
In file included from apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
In file included from apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
apps/openmw/mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
apps/openmw/mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwworld/actionalchemy.hpp should add these lines:

apps/openmw/mwworld/actionalchemy.hpp should remove these lines:
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 9-9

The full include-list for apps/openmw/mwworld/actionalchemy.hpp:
#include "action.hpp"                   // for Action
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 7-7
---

apps/openmw/mwworld/actionalchemy.cpp should add these lines:

apps/openmw/mwworld/actionalchemy.cpp should remove these lines:
- #include "../mwbase/world.hpp"  // lines 3-3
- #include "../mwworld/player.hpp"  // lines 4-4
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 7-7
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 12-12

The full include-list for apps/openmw/mwworld/actionalchemy.cpp:
#include "actionalchemy.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 10-10
---
apps/openmw/mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
In file included from apps/openmw/mwworld/actiontalk.hpp:4:
apps/openmw/mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontalk.cpp:4:
apps/openmw/mwworld/actiontalk.hpp:14:31: error: expected class name
    class ActionTalk : public Action
                              ^
apps/openmw/mwworld/actiontalk.cpp:16:49: error: type 'MWWorld::Action' is not a direct or virtual base of 'MWWorld::ActionTalk'
    ActionTalk::ActionTalk (const Ptr& actor) : Action (false, actor) {}
                                                ^~~~~~
apps/openmw/mwworld/actiontalk.cpp:20:73: error: use of undeclared identifier 'getTarget'
        MWBase::Environment::get().getDialogueManager()->startDialogue (getTarget());
                                                                        ^
In file included from apps/openmw/mwworld/physicssystem.cpp:14:
In file included from libs/../apps/openmw/mwbase/world.hpp:10:
In file included from libs/../apps/openmw/mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:65:33: error: no type named 'CellRef' in namespace 'ESM'
            RefData (const ESM::CellRef& cellRef);
                           ~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:15:
In file included from apps/openmw/mwgui/../mwgui/inventorywindow.hpp:9:
./apps/openmw/mwgui/../mwrender/characterpreview.hpp:127:9: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
        MWWorld::LiveCellRef<ESM::NPC>  mRef;
        ^~~~~~~~~~~~~~~~~~~~
        LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:15:
In file included from apps/openmw/mwgui/../mwgui/inventorywindow.hpp:11:
In file included from apps/openmw/mwgui/windowpinnablebase.hpp:7:
apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwworld/refdata.hpp:67:33: error: no type named 'ObjectState' in namespace 'ESM'
            RefData (const ESM::ObjectState& objectState);
                           ~~~~~^
components/terrain/defaultworld.cpp:106:39: error: incomplete type 'Ogre::Root' named in nested name specifier
        mCompositeMapSceneMgr = Ogre::Root::getSingleton().createSceneManager(Ogre::ST_GENERIC);
                                ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
components/terrain/defaultworld.cpp:143:37: error: incomplete type 'Ogre::Root' named in nested name specifier
        Ogre::WorkQueue* wq = Ogre::Root::getSingleton().getWorkQueue();
                              ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
components/terrain/defaultworld.cpp:154:37: error: incomplete type 'Ogre::Root' named in nested name specifier
        Ogre::WorkQueue* wq = Ogre::Root::getSingleton().getWorkQueue();
                              ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
components/terrain/defaultworld.cpp:272:19: error: incomplete type 'Ogre::Root' named in nested name specifier
            Ogre::Root::getSingleton().getWorkQueue()->processResponses();
            ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
components/terrain/defaultworld.cpp:341:15: error: incomplete type 'Ogre::Root' named in nested name specifier
        Ogre::Root::getSingleton().getWorkQueue()->addRequest(mWorkQueueChannel, REQ_ID_CHUNK, Ogre::Any(data));
        ~~~~~~^~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:253:8: note: forward declaration of 'Ogre::Root'
        class Root;
              ^
apps/openmw/mwworld/refdata.hpp:75:30: error: no type named 'ObjectState' in namespace 'ESM'
            void write (ESM::ObjectState& objectState, const std::string& scriptId = "") const;
                        ~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwworld/actiondoor.hpp should add these lines:

apps/openmw/mwworld/actiondoor.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 9-9

The full include-list for apps/openmw/mwworld/actiondoor.hpp:
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 7-7
---

apps/openmw/mwworld/actiondoor.cpp should add these lines:

apps/openmw/mwworld/actiondoor.cpp should remove these lines:
- #include "apps/openmw/mwworld/action.hpp"  // lines 5-5
- namespace MWWorld { class Ptr; }  // lines 10-10

The full include-list for apps/openmw/mwworld/actiondoor.cpp:
#include "actiondoor.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/action.hpp"  // for Action
namespace MWWorld { class Ptr; }  // lines 8-8
---

apps/openmw/mwgui/windowmanagerimp.hpp should add these lines:
namespace Compiler { class Extensions; }
namespace MWGui { class BookWindow; }
namespace MWGui { class ConfirmationDialog; }
namespace MWGui { class Console; }
namespace MWGui { class ContainerWindow; }
namespace MWGui { class CountDialog; }
namespace MWGui { class DialogueWindow; }
namespace MWGui { class ScrollWindow; }
namespace MWGui { class SpellBuyingWindow; }
namespace MWGui { class SpellWindow; }
namespace MWGui { class TradeWindow; }
namespace MWGui { class TravelWindow; }
namespace MWGui { namespace MyGUI { class ImageBox; } }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace OEngine { namespace GUI { class Layout; } }
namespace OEngine { namespace GUI { class MyGUIManager; } }
namespace SFO { class CursorManager; }
namespace Translation { class Storage; }

apps/openmw/mwgui/windowmanagerimp.hpp should remove these lines:
- #include <MyGUI_KeyCode.h>  // lines 13-13
- #include <MyGUI_Types.h>  // lines 14-14
- #include <stdint.h>  // lines 16-16
- #include <map>  // lines 17-17
- #include <map>  // lines 18-18
- #include <stack>  // lines 19-19
- #include <stack>  // lines 20-20
- #include <string>  // lines 22-22
- #include <utility>  // lines 24-24
- #include <vector>  // lines 25-25
- #include <vector>  // lines 26-26
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 64-64
- #include "apps/openmw/mwgui/bookwindow.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/bookwindow.hpp"  // lines 65-65
- #include "apps/openmw/mwgui/confirmationdialog.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/confirmationdialog.hpp"  // lines 66-66
- #include "apps/openmw/mwgui/console.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/console.hpp"  // lines 67-67
- #include "apps/openmw/mwgui/container.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/container.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/countdialog.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/countdialog.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/dialogue.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/dialogue.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/inventorywindow.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/inventorywindow.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/mode.hpp"  // lines 68-68
- #include "apps/openmw/mwgui/scrollwindow.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/scrollwindow.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/spellbuyingwindow.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/spellbuyingwindow.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/spellwindow.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/spellwindow.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/tradewindow.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/tradewindow.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/travelwindow.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 51-51
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 53-53
- #include "components/settings/settings.hpp"  // lines 54-54
- #include "components/settings/settings.hpp"  // lines 55-55
- #include "components/to_utf8/to_utf8.hpp"  // lines 57-57
- #include "components/translation/translation.hpp"  // lines 58-58
- #include "components/translation/translation.hpp"  // lines 59-59
- namespace ESM { namespace ESM { class ESMReader; } }  // lines 71-71
- namespace ESM { namespace ESM { class ESMWriter; } }  // lines 72-72
- namespace ESM { namespace ESM { struct Class; } }  // lines 73-73
- namespace ESM { namespace MWWorld { class CellStore; } }  // lines 76-76
- namespace ESM { namespace MWWorld { class Ptr; } }  // lines 77-77
- namespace MWGui { class InfoBoxDialog; }  // lines 119-119
- namespace MWGui { class MapWindow; }  // lines 125-125
- namespace MWGui { class SpellIcons; }  // lines 135-135
- namespace MWGui { class TextInputDialog; }  // lines 137-137
- namespace MWGui { class WindowBase; }  // lines 142-142
- namespace MWGui { class WindowModal; }  // lines 143-143
- namespace MyGUI { class Gui; }  // lines 93-93
- namespace MyGUI { class ImageBox; }  // lines 94-94
- namespace MyGUI { class Layout; }  // lines 97-97
- namespace MyGUI { class MyGUIManager; }  // lines 98-98
- namespace MyGUI { class OgreRenderer; }  // lines 99-99
- namespace MyGUI { class UString; }  // lines 95-95
- namespace MyGUI { class Widget; }  // lines 96-96

The full include-list for apps/openmw/mwgui/windowmanagerimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwbase/windowmanager.hpp"  // for WindowManager::SkillList, etc
#include "apps/openmw/mwgui/mode.hpp"   // for GuiWindow, GuiMode, etc
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener
#include "components/to_utf8/to_utf8.hpp"  // for FromType
#include "mapwindow.hpp"                // for CustomMarkerCollection
namespace Compiler { class Extensions; }
namespace ESM { class ESMReader; }  // lines 80-80
namespace ESM { class ESMWriter; }  // lines 81-81
namespace ESM { struct Class; }  // lines 82-82
namespace MWGui { class AlchemyWindow; }  // lines 112-112
namespace MWGui { class BookWindow; }
namespace MWGui { class CharacterCreation; }  // lines 113-113
namespace MWGui { class CompanionWindow; }  // lines 114-114
namespace MWGui { class ConfirmationDialog; }
namespace MWGui { class Console; }
namespace MWGui { class ContainerWindow; }
namespace MWGui { class CountDialog; }
namespace MWGui { class DebugWindow; }  // lines 115-115
namespace MWGui { class DialogueWindow; }
namespace MWGui { class DragAndDrop; }  // lines 116-116
namespace MWGui { class EnchantingDialog; }  // lines 117-117
namespace MWGui { class HUD; }  // lines 118-118
namespace MWGui { class InventoryWindow; }  // lines 120-120
namespace MWGui { class JournalWindow; }  // lines 121-121
namespace MWGui { class LevelupDialog; }  // lines 122-122
namespace MWGui { class LoadingScreen; }  // lines 123-123
namespace MWGui { class MainMenu; }  // lines 124-124
namespace MWGui { class MerchantRepair; }  // lines 126-126
namespace MWGui { class MessageBoxManager; }  // lines 127-127
namespace MWGui { class QuickKeysMenu; }  // lines 128-128
namespace MWGui { class Recharge; }  // lines 129-129
namespace MWGui { class Repair; }  // lines 130-130
namespace MWGui { class ScreenFader; }  // lines 131-131
namespace MWGui { class ScrollWindow; }
namespace MWGui { class SettingsWindow; }  // lines 132-132
namespace MWGui { class SoulgemDialog; }  // lines 133-133
namespace MWGui { class SpellBuyingWindow; }
namespace MWGui { class SpellCreationDialog; }  // lines 134-134
namespace MWGui { class SpellWindow; }
namespace MWGui { class StatsWindow; }  // lines 136-136
namespace MWGui { class ToolTips; }  // lines 138-138
namespace MWGui { class TradeWindow; }
namespace MWGui { class TrainingWindow; }  // lines 139-139
namespace MWGui { class TravelWindow; }
namespace MWGui { class VideoWidget; }  // lines 140-140
namespace MWGui { class WaitDialog; }  // lines 141-141
namespace MWGui { namespace MyGUI { class ImageBox; } }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class CellStore; }  // lines 86-86
namespace MWWorld { class Ptr; }  // lines 87-87
namespace OEngine { namespace GUI { class Layout; } }
namespace OEngine { namespace GUI { class MyGUIManager; } }
namespace SFO { class CursorManager; }
namespace Translation { class Storage; }
---
In file included from extern/shiny/Main/ShaderInstance.cpp:25:
In file included from extern/shiny/Main/Factory.hpp:11:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from apps/openmw/mwclass/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from extern/shiny/Main/ShaderInstance.cpp:25:
extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/openmw/mwworld/actiontalk.hpp should add these lines:

apps/openmw/mwworld/actiontalk.hpp should remove these lines:
- #include "ptr.hpp"  // lines 4-4
- namespace MWWorld { class Ptr; }  // lines 9-9

The full include-list for apps/openmw/mwworld/actiontalk.hpp:
namespace MWWorld { class Ptr; }  // lines 7-7
---

apps/openmw/mwworld/actiontalk.cpp should add these lines:

apps/openmw/mwworld/actiontalk.cpp should remove these lines:
- #include "../mwbase/dialoguemanager.hpp"  // lines 2-2
- #include "../mwbase/environment.hpp"  // lines 3-3
- #include "apps/openmw/mwworld/action.hpp"  // lines 5-5
- #include "apps/openmw/mwworld/action.hpp"  // lines 6-6
- namespace MWWorld { class Ptr; }  // lines 11-11

The full include-list for apps/openmw/mwworld/actiontalk.cpp:
#include "actiontalk.hpp"
namespace MWWorld { class Ptr; }  // lines 9-9
---
In file included from extern/shiny/Main/ShaderInstance.cpp:25:
extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/openmw/mwgui/windowmanagerimp.cpp should add these lines:
#include "OgreTextureManager.h"         // for TextureManager
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace Compiler { class Extensions; }
namespace ESM { struct Enchantment; }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class Player; }
namespace Translation { class Storage; }

apps/openmw/mwgui/windowmanagerimp.cpp should remove these lines:
- #include <MyGUI_ClipboardManager.h>  // lines 1-1
- #include <MyGUI_FactoryManager.h>  // lines 2-2
- #include <MyGUI_Gui.h>  // lines 3-3
- #include <MyGUI_InputManager.h>  // lines 4-4
- #include <MyGUI_LanguageManager.h>  // lines 5-5
- #include <MyGUI_PointerManager.h>  // lines 6-6
- #include <MyGUI_RenderManager.h>  // lines 7-7
- #include <MyGUI_UString.h>  // lines 8-8
- #include <OgreRenderWindow.h>  // lines 9-9
- #include <OgreSceneManager.h>  // lines 10-10
- #include <stddef.h>  // lines 19-19
- #include <algorithm>  // lines 20-20
- #include <algorithm>  // lines 21-21
- #include <boost/array.hpp>  // lines 11-11
- #include <components/widgets/tags.hpp>  // lines 13-13
- #include <openengine/ogre/renderer.hpp>  // lines 17-17
- #include <stdexcept>  // lines 23-23
- #include <stdexcept>  // lines 24-24
- #include "../mwbase/inputmanager.hpp"  // lines 26-26
- #include "../mwbase/statemanager.hpp"  // lines 27-27
- #include "../mwworld/esmstore.hpp"  // lines 31-31
- #include "../mwworld/player.hpp"  // lines 32-32
- #include "GLX/../OgrePrerequisites.h"  // lines 34-34
- #include "MyGUI_Align.h"  // lines 35-35
- #include "MyGUI_Align.h"  // lines 36-36
- #include "MyGUI_EditBox.h"  // lines 39-39
- #include "MyGUI_EditBox.h"  // lines 40-40
- #include "MyGUI_EventPair.h"  // lines 41-41
- #include "MyGUI_EventPair.h"  // lines 42-42
- #include "MyGUI_ImageBox.h"  // lines 43-43
- #include "MyGUI_ImageBox.h"  // lines 44-44
- #include "MyGUI_ImageInfo.h"  // lines 45-45
- #include "MyGUI_ImageInfo.h"  // lines 46-46
- #include "MyGUI_KeyCode.h"  // lines 47-47
- #include "MyGUI_KeyCode.h"  // lines 48-48
- #include "MyGUI_RTTI.h"  // lines 49-49
- #include "MyGUI_RTTI.h"  // lines 50-50
- #include "MyGUI_ResourceImageSet.h"  // lines 51-51
- #include "MyGUI_ResourceImageSet.h"  // lines 52-52
- #include "MyGUI_ResourceManager.h"  // lines 53-53
- #include "MyGUI_TextIterator.h"  // lines 54-54
- #include "MyGUI_TextIterator.h"  // lines 55-55
- #include "MyGUI_Types.h"  // lines 56-56
- #include "MyGUI_Types.h"  // lines 57-57
- #include "MyGUI_Widget.h"  // lines 58-58
- #include "MyGUI_Widget.h"  // lines 59-59
- #include "MyGUI_WidgetInput.h"  // lines 60-60
- #include "MyGUI_WidgetInput.h"  // lines 61-61
- #include "MyGUI_Window.h"  // lines 62-62
- #include "MyGUI_Window.h"  // lines 63-63
- #include "OgreRenderQueue.h"  // lines 65-65
- #include "OgreResourceGroupManager.h"  // lines 66-66
- #include "OgreResourceGroupManager.h"  // lines 67-67
- #include "OgreSharedPtr.h"  // lines 69-69
- #include "OgreVector3.h"  // lines 71-71
- #include "SDL_clipboard.h"  // lines 72-72
- #include "SDL_clipboard.h"  // lines 73-73
- #include "SDL_keyboard.h"  // lines 74-74
- #include "SDL_keyboard.h"  // lines 75-75
- #include "SDL_stdinc.h"  // lines 77-77
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/environment.hpp"  // lines 80-80
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/world.hpp"  // lines 82-82
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/drawstate.hpp"  // lines 83-83
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/drawstate.hpp"  // lines 84-84
- #include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"  // lines 86-86
- #include "apps/openmw/mwgui/../mwsound/../mwbase/soundmanager.hpp"  // lines 88-88
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 89-89
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 90-90
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 91-91
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 92-92
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 93-93
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 94-94
- #include "apps/openmw/mwgui/mapwindow.hpp"  // lines 96-96
- #include "apps/openmw/mwgui/spellcreationdialog.hpp"  // lines 98-98
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 99-99
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 100-100
- #include "backgroundimage.hpp"  // lines 101-101
- #include "components/esm/attr.hpp"  // lines 107-107
- #include "components/esm/custommarkerstate.hpp"  // lines 108-108
- #include "components/esm/custommarkerstate.hpp"  // lines 109-109
- #include "components/esm/defs.hpp"  // lines 110-110
- #include "components/esm/defs.hpp"  // lines 111-111
- #include "components/esm/esmreader.hpp"  // lines 112-112
- #include "components/esm/esmreader.hpp"  // lines 113-113
- #include "components/esm/esmwriter.hpp"  // lines 114-114
- #include "components/esm/esmwriter.hpp"  // lines 115-115
- #include "components/esm/loadcell.hpp"  // lines 117-117
- #include "components/esm/loadclas.hpp"  // lines 118-118
- #include "components/esm/loadclas.hpp"  // lines 119-119
- #include "components/esm/loadench.hpp"  // lines 120-120
- #include "components/esm/loadench.hpp"  // lines 121-121
- #include "components/esm/loadgmst.hpp"  // lines 123-123
- #include "components/esm/loadskil.hpp"  // lines 124-124
- #include "components/esm/loadskil.hpp"  // lines 125-125
- #include "components/esm/loadspel.hpp"  // lines 127-127
- #include "components/esm/variant.hpp"  // lines 129-129
- #include "controllers.hpp"  // lines 133-133
- #include "exposedwindow.hpp"  // lines 140-140
- #include "extern/sdl4ogre/cursormanager.hpp"  // lines 142-142
- #include "journalviewmodel.hpp"  // lines 147-147
- #include "openengine/gui/layout.hpp"  // lines 155-155

The full include-list for apps/openmw/mwgui/windowmanagerimp.cpp:
#include "windowmanagerimp.hpp"
#include <stddef.h>                     // for NULL, size_t
#include <cassert>                      // for assert
#include <components/fontloader/fontloader.hpp>  // for FontLoader
#include <components/widgets/widgets.hpp>  // for registerAllWidgets
#include <extern/sdl4ogre/sdlcursormanager.hpp>  // for SDLCursorManager
#include <openengine/gui/manager.hpp>   // for MyGUIManager
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreRenderQueue.h"
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTextureManager.h"         // for TextureManager
#include "OgreVector3.h"                // for Vector3
#include "SDL_stdinc.h"                 // for Uint8, SDL_free
#include "alchemywindow.hpp"            // for AlchemyWindow
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwgui/mapwindow.hpp"  // for MapWindow
#include "apps/openmw/mwgui/spellcreationdialog.hpp"
#include "bookpage.hpp"                 // for BookPage
#include "bookwindow.hpp"               // for BookWindow
#include "charactercreation.hpp"        // for CharacterCreation
#include "companionwindow.hpp"          // for CompanionWindow
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/variant.hpp"   // for Variant, VarType::VT_String
#include "confirmationdialog.hpp"       // for ConfirmationDialog
#include "console.hpp"                  // for Console
#include "container.hpp"                // for ContainerWindow
#include "countdialog.hpp"              // for CountDialog
#include "cursor.hpp"                   // for ResourceImageSetPointerFix
#include "debugwindow.hpp"              // for DebugWindow
#include "dialogue.hpp"                 // for DialogueWindow
#include "draganddrop.hpp"              // for DragAndDrop
#include "enchantingdialog.hpp"         // for EnchantingDialog
#include "extern/sdl4ogre/cursormanager.hpp"  // for CursorManager
#include "hud.hpp"                      // for HUD
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "journalwindow.hpp"            // for JournalWindow
#include "levelupdialog.hpp"            // for LevelupDialog
#include "loadingscreen.hpp"            // for LoadingScreen
#include "mainmenu.hpp"                 // for MainMenu
#include "merchantrepair.hpp"           // for MerchantRepair
#include "messagebox.hpp"               // for MessageBoxManager
#include "openengine/gui/layout.hpp"    // for Layout
#include "quickkeysmenu.hpp"            // for QuickKeysMenu
#include "recharge.hpp"                 // for Recharge
#include "repair.hpp"                   // for Repair
#include "screenfader.hpp"              // for ScreenFader
#include "scrollwindow.hpp"             // for ScrollWindow
#include "settingswindow.hpp"           // for SettingsWindow
#include "soulgemdialog.hpp"            // for SoulgemDialog
#include "spellbuyingwindow.hpp"        // for SpellBuyingWindow
#include "spellview.hpp"                // for SpellView
#include "spellwindow.hpp"              // for SpellWindow
#include "statswindow.hpp"              // for StatsWindow
#include "tooltips.hpp"                 // for ToolTips
#include "tradewindow.hpp"              // for TradeWindow
#include "trainingwindow.hpp"           // for TrainingWindow
#include "travelwindow.hpp"             // for TravelWindow
#include "videowidget.hpp"              // for VideoWidget
#include "waitdialog.hpp"               // for WaitDialog
namespace Compiler { class Extensions; }
namespace ESM { struct Enchantment; }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class Player; }
namespace Translation { class Storage; }
---
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwrender/terrainstorage.hpp should add these lines:
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadltex.hpp"  // for LandTexture

apps/openmw/mwrender/terrainstorage.hpp should remove these lines:
- namespace ESM { struct Land; }  // lines 7-7
- namespace ESM { struct Land; }  // lines 10-10
- namespace ESM { struct LandTexture; }  // lines 8-8
- namespace ESM { struct LandTexture; }  // lines 11-11

The full include-list for apps/openmw/mwrender/terrainstorage.hpp:
#include <components/esmterrain/storage.hpp>  // for Storage
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadltex.hpp"  // for LandTexture
---
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwrender/terrainstorage.cpp should add these lines:

apps/openmw/mwrender/terrainstorage.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include "../mwbase/world.hpp"  // lines 4-4
- #include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"  // lines 7-7
- #include "components/esm/loadcell.hpp"  // lines 9-9
- #include "components/esm/loadland.hpp"  // lines 11-11
- #include "components/esm/loadltex.hpp"  // lines 13-13

The full include-list for apps/openmw/mwrender/terrainstorage.cpp:
#include "terrainstorage.hpp"
#include <stddef.h>                     // for NULL
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadland.hpp"  // for Land, Land::::DATA_VCLR, etc
#include "components/esm/loadltex.hpp"  // for LandTexture
---
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/localscripts.cpp:7:
In file included from ./apps/openmw/mwworld/cellreflist.hpp:6:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/localscripts.cpp:7:
In file included from ./apps/openmw/mwworld/cellreflist.hpp:6:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/localscripts.cpp:7:
In file included from ./apps/openmw/mwworld/cellreflist.hpp:6:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/localscripts.cpp:7:
./apps/openmw/mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/race.cpp:15:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/localscripts.cpp:9:
./apps/openmw/mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/localscripts.cpp:9:
./apps/openmw/mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/videowidget.hpp should add these lines:

apps/openmw/mwgui/videowidget.hpp should remove these lines:
- #include <memory>  // lines 6-6
- #include <string>  // lines 8-8
- #include "extern/ogre-ffmpeg-videoplayer/videoplayer.hpp"  // lines 12-12
- namespace Video { class VideoPlayer; }  // lines 16-16

The full include-list for apps/openmw/mwgui/videowidget.hpp:
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "extern/ogre-ffmpeg-videoplayer/videoplayer.hpp"
---

apps/openmw/mwgui/videowidget.cpp should add these lines:

apps/openmw/mwgui/videowidget.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include "MyGUI_Types.h"  // lines 8-8
- #include "MyGUI_Widget.h"  // lines 10-10

The full include-list for apps/openmw/mwgui/videowidget.cpp:
#include "videowidget.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <algorithm>                    // for max
#include <extern/ogre-ffmpeg-videoplayer/videoplayer.hpp>
#include "../mwsound/movieaudiofactory.hpp"  // for MovieAudioFactory
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
---
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/localscripts.cpp:9:
./apps/openmw/mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/actors.cpp:13:
In file included from apps/openmw/mwrender/activatoranimation.hpp:7:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/charactercreation.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/stat.hpp"
namespace MWGui { class WindowBase; }

apps/openmw/mwgui/charactercreation.hpp should remove these lines:
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 10-10
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 11-11
- namespace MWGui { class DialogueWindow; }  // lines 19-19
- namespace MWGui { class MessageBoxManager; }  // lines 21-21

The full include-list for apps/openmw/mwgui/charactercreation.hpp:
#include <components/esm/loadclas.hpp>  // for Class
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SkillEnum
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwmechanics/stat.hpp"
namespace MWGui { class BirthDialog; }  // lines 16-16
namespace MWGui { class ClassChoiceDialog; }  // lines 17-17
namespace MWGui { class CreateClassDialog; }  // lines 18-18
namespace MWGui { class InfoBoxDialog; }  // lines 20-20
namespace MWGui { class PickClassDialog; }  // lines 22-22
namespace MWGui { class RaceDialog; }  // lines 23-23
namespace MWGui { class ReviewDialog; }  // lines 24-24
namespace MWGui { class TextInputDialog; }  // lines 25-25
namespace MWGui { class WindowBase; }
---
In file included from apps/openmw/mwrender/actors.cpp:26:
In file included from apps/openmw/mwrender/creatureanimation.hpp:7:
In file included from apps/openmw/mwrender/../mwworld/inventorystore.hpp:15:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/containerstore.hpp:22:
./apps/openmw/mwrender/../mwmechanics/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
./apps/openmw/mwrender/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
In file included from apps/openmw/mwworld/cellstore.cpp:5:
In file included from ./components/esm/containerstate.hpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/cellstore.cpp:5:
In file included from ./components/esm/containerstate.hpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/openmw/mwworld/cellstore.cpp:5:
./components/esm/containerstate.hpp:19:36: error: expected class name
    struct ContainerState : public ObjectState
                                   ^
In file included from apps/openmw/mwworld/cellstore.cpp:6:
./components/esm/creaturelevliststate.hpp:18:42: error: expected class name
    struct CreatureLevListState : public ObjectState
                                         ^

apps/openmw/mwgui/charactercreation.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWGui { class WindowBase; }
namespace MWWorld { class Fallback; }

apps/openmw/mwgui/charactercreation.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 6-6
- #include <boost/array.hpp>  // lines 4-4
- #include <iostream>  // lines 7-7
- #include <iostream>  // lines 8-8
- #include <map>  // lines 9-9
- #include <map>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <utility>  // lines 12-12
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "../mwworld/fallback.hpp"  // lines 22-22
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_StringUtility.h"  // lines 26-26
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwmechanics/creaturestats.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/mode.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 36-36
- #include "components/esm/attr.hpp"  // lines 40-40
- #include "components/esm/attr.hpp"  // lines 41-41
- #include "components/esm/loadclas.hpp"  // lines 43-43
- #include "components/esm/loadnpc.hpp"  // lines 45-45
- #include "components/esm/loadskil.hpp"  // lines 47-47

The full include-list for apps/openmw/mwgui/charactercreation.cpp:
#include "charactercreation.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <boost/array.hpp>              // for array
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_Class, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "birth.hpp"                    // for BirthDialog
#include "class.hpp"                    // for ClassChoiceDialog, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "inventorywindow.hpp"          // for InventoryWindow
#include "race.hpp"                     // for RaceDialog
#include "review.hpp"                   // for ReviewDialog, etc
#include "textinput.hpp"                // for TextInputDialog
namespace MWGui { class WindowBase; }
namespace MWWorld { class Fallback; }
---
In file included from apps/openmw/mwworld/cellstore.cpp:7:
In file included from ./components/esm/creaturestate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwrender/actors.cpp:26:
In file included from apps/openmw/mwrender/creatureanimation.hpp:7:
apps/openmw/mwrender/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
apps/openmw/mwrender/../mwworld/inventorystore.hpp:149:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/containerstore.hpp:124:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^

apps/openmw/mwgui/bookpage.hpp should add these lines:

apps/openmw/mwgui/bookpage.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 7-7
- #include <functional>  // lines 10-10
- #include <utility>  // lines 13-13
- #include "MyGUI_RTTI.h"  // lines 17-17

The full include-list for apps/openmw/mwgui/bookpage.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for intptr_t, uint8_t
#include <boost/function.hpp>           // for function
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Widget.h"               // for Widget
namespace MWGui { struct BookTypesetter::Style; }  // lines 61-61
---
apps/openmw/mwrender/actors.cpp:43:1: error: use of undeclared identifier 'Actors'; did you mean '::MWRender::Actors'?
Actors::~Actors()
^~~~~~
::MWRender::Actors
apps/openmw/mwrender/actors.hpp:44:11: note: '::MWRender::Actors' declared here
    class Actors
          ^
apps/openmw/mwrender/actors.cpp:43:9: error: cannot define or redeclare '~Actors' here because namespace 'MWRender' does not enclose namespace 'Actors'
Actors::~Actors()
~~~~~~~~^

apps/openmw/mwgui/settingswindow.hpp should add these lines:

apps/openmw/mwgui/settingswindow.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- class Button;  // lines 20-20
- class ComboBox;  // lines 21-21
- class ListBox;  // lines 22-22
- class ScrollBar;  // lines 23-23
- class ScrollView;  // lines 24-24
- class TextBox;  // lines 25-25
- class Widget;  // lines 26-26
- class Window;  // lines 27-27
- namespace MWGui { class WindowManager; }  // lines 32-32

The full include-list for apps/openmw/mwgui/settingswindow.hpp:
#include <stddef.h>                     // for size_t
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class Button; }  // lines 10-10
namespace MyGUI { class ComboBox; }  // lines 11-11
namespace MyGUI { class ListBox; }  // lines 12-12
namespace MyGUI { class ScrollBar; }  // lines 13-13
namespace MyGUI { class ScrollView; }  // lines 14-14
namespace MyGUI { class TextBox; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 16-16
namespace MyGUI { class Window; }  // lines 17-17
---

apps/openmw/mwgui/settingswindow.cpp should add these lines:

apps/openmw/mwgui/settingswindow.cpp should remove these lines:
- #include <MyGUI_Window.h>  // lines 6-6
- #include <OgreRoot.h>  // lines 7-7
- #include <assert.h>  // lines 10-10
- #include <algorithm>  // lines 18-18
- #include <algorithm>  // lines 19-19
- #include <boost/algorithm/string/classification.hpp>  // lines 11-11
- #include <boost/algorithm/string/classification.hpp>  // lines 12-12
- #include <boost/algorithm/string/split.hpp>  // lines 13-13
- #include <boost/algorithm/string/split.hpp>  // lines 14-14
- #include <boost/algorithm/string/trim.hpp>  // lines 15-15
- #include <boost/math/common_factor_rt.hpp>  // lines 16-16
- #include <string>  // lines 21-21
- #include <utility>  // lines 23-23
- #include <vector>  // lines 24-24
- #include <vector>  // lines 25-25
- #include "GLX/../OgrePrerequisites.h"  // lines 32-32
- #include "GLX/../OgrePrerequisites.h"  // lines 33-33
- #include "MyGUI_Align.h"  // lines 35-35
- #include "MyGUI_Button.h"  // lines 37-37
- #include "MyGUI_EventPair.h"  // lines 40-40
- #include "MyGUI_EventPair.h"  // lines 41-41
- #include "MyGUI_Macros.h"  // lines 43-43
- #include "MyGUI_RTTI.h"  // lines 44-44
- #include "MyGUI_RTTI.h"  // lines 45-45
- #include "MyGUI_StringUtility.h"  // lines 46-46
- #include "MyGUI_StringUtility.h"  // lines 47-47
- #include "MyGUI_TextBox.h"  // lines 49-49
- #include "MyGUI_Types.h"  // lines 51-51
- #include "MyGUI_UString.h"  // lines 53-53
- #include "MyGUI_Widget.h"  // lines 54-54
- #include "MyGUI_Widget.h"  // lines 55-55
- #include "MyGUI_WidgetDefines.h"  // lines 57-57
- #include "MyGUI_WidgetInput.h"  // lines 58-58
- #include "MyGUI_WidgetInput.h"  // lines 59-59
- #include "OgreRenderSystem.h"  // lines 60-60
- #include "OgreRenderSystem.h"  // lines 61-61
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 63-63
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 64-64
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 65-65
- #include "components/misc/stringops.hpp"  // lines 66-66
- #include "components/misc/stringops.hpp"  // lines 67-67
- #include "components/settings/settings.hpp"  // lines 69-69

The full include-list for apps/openmw/mwgui/settingswindow.cpp:
#include "settingswindow.hpp"
#include <MyGUI_ComboBox.h>             // for ComboBox
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ListBox.h>              // for ListBox
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <SDL_video.h>                  // for SDL_GetDisplayMode, etc
#include <assert.h>                     // for assert
#include <components/widgets/sharedstatebutton.hpp>
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Align.h"                // for Align, Align::Enum::Right
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
---
apps/openmw/mwrender/actors.cpp:45:5: error: use of undeclared identifier 'PtrAnimationMap'
    PtrAnimationMap::iterator it = mAllActors.begin();
    ^

(apps/openmw/mwgui/bookpage.cpp has correct #includes/fwd-decls)
apps/openmw/mwrender/actors.cpp:45:36: error: use of undeclared identifier 'mAllActors'
    PtrAnimationMap::iterator it = mAllActors.begin();
                                   ^
apps/openmw/mwrender/actors.cpp:46:16: error: use of undeclared identifier 'mAllActors'
    for(;it != mAllActors.end();++it)
               ^
apps/openmw/mwrender/actors.cpp:53:6: error: use of undeclared identifier 'Actors'; did you mean '::MWRender::Actors'?
void Actors::setRootNode(Ogre::SceneNode* root)
     ^~~~~~
     ::MWRender::Actors
apps/openmw/mwrender/actors.hpp:44:11: note: '::MWRender::Actors' declared here
    class Actors
          ^
apps/openmw/mwrender/actors.cpp:53:14: error: cannot define or redeclare 'setRootNode' here because namespace 'MWRender' does not enclose namespace 'Actors'
void Actors::setRootNode(Ogre::SceneNode* root)
     ~~~~~~~~^
apps/openmw/mwrender/actors.cpp:54:3: error: use of undeclared identifier 'mRootNode'
{ mRootNode = root; }
  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

components/settings/settings.hpp should add these lines:

components/settings/settings.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 11-11
- namespace Ogre { class ConfigFile; }  // lines 16-16

The full include-list for components/settings/settings.hpp:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
namespace Ogre { class ConfigFile; }  // lines 14-14
---
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

components/settings/settings.cpp should add these lines:

components/settings/settings.cpp should remove these lines:
- #include <boost/filesystem/path_traits.hpp>  // lines 6-6
- #include "OgreConfigFile.h"  // lines 12-12
- #include "OgreException.h"  // lines 14-14
- #include "OgrePrerequisites.h"  // lines 16-16

The full include-list for components/settings/settings.cpp:
#include "settings.hpp"
#include <OgreDataStream.h>             // for DataStreamPtr
#include <OgreStringConverter.h>        // for StringConverter
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <components/files/constrainedfiledatastream.hpp>
#include <ostream>                      // for operator<<, basic_ostream
#include <stdexcept>                    // for runtime_error
#include "OgreConfigFile.h"             // for ConfigFile, etc
#include "OgreException.h"              // for Exception
#include "OgrePrerequisites.h"          // for String
---
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/armor.cpp:14:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
In file included from apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?

apps/openmw/mwgui/inventoryitemmodel.hpp should add these lines:

apps/openmw/mwgui/inventoryitemmodel.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <vector>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwgui/inventoryitemmodel.hpp:
#include <stddef.h>                     // for size_t
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "itemmodel.hpp"                // for ItemModel::ModelIndex, etc
---
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwgui/inventoryitemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/containerstore.hpp"
namespace MWWorld { class InventoryStore; }

apps/openmw/mwgui/inventoryitemmodel.cpp should remove these lines:
- #include <stdexcept>  // lines 1-1
- #include <stdexcept>  // lines 2-2
- #include <string>  // lines 3-3
- #include <string>  // lines 4-4
- #include "../mwworld/containerstore.hpp"  // lines 8-8
- #include "../mwworld/inventorystore.hpp"  // lines 9-9
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 11-11
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 12-12
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 13-13
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 15-15
- #include "components/misc/stringops.hpp"  // lines 17-17

The full include-list for apps/openmw/mwgui/inventoryitemmodel.cpp:
#include "inventoryitemmodel.hpp"
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class InventoryStore; }
---
In file included from apps/openmw/mwscript/interpretercontext.cpp:19:
In file included from apps/openmw/mwscript/../mwbase/world.hpp:10:
apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
In file included from     class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/hud.cpp:22:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
In file included from                                  ^apps/openmw/mwgui/hud.cpp
:22:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hppapps/openmw/mwgui/../mwmechanics/creaturestats.hpp::2613::
11apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:: 23note:: 26forward declaration of 'MWWorld::LiveCellRefBase':
 error: no type named 'ActiveEffect' in namespace 'ESM'
    class LiveCellRefBase;
          ^
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwscript/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwworld/actionread.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/container.cpp:4:
In file included from ./components/esm/containerstate.hpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/scrollwindow.cpp:6:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/container.cpp:4:
In file included from ./components/esm/containerstate.hpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/openmw/mwworld/actiontake.cpp:4:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwclass/container.cpp:4:
./components/esm/containerstate.hpp:19:36: error: expected class name
    struct ContainerState : public ObjectState
                                   ^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

components/process/processinvoker.hpp should add these lines:

components/process/processinvoker.hpp should remove these lines:
- #include <QProcess>  // lines 4-4
- #include <QString>  // lines 5-5
- #include <QStringList>  // lines 6-6
- #include <QtCore>  // lines 8-8

The full include-list for components/process/processinvoker.hpp:
#include <QtCore>                       // for QString, QStringList, etc
---

components/process/processinvoker.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

components/process/processinvoker.cpp should remove these lines:
- #include <QArgument>  // lines 1-1
- #include <QFileInfo>  // lines 2-2

The full include-list for components/process/processinvoker.cpp:
#include "processinvoker.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <QString>                      // for QString, QLatin1String
#include <QStringList>                  // for QStringList
---
In file included from apps/openmw/mwgui/hud.cpp:22:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/hud.cpp:22:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/hud.cpp:22:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/hud.cpp:22:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/hud.cpp:22:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:12:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
./apps/openmw/mwclass/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/localscripts.cpp:55:
apps/openmw/mwworld/localscripts.hpp:12:5: error: expected '{'
    class CellStore;
    ^
apps/openmw/mwworld/localscripts.hpp:14:1: error: expected unqualified-id
{
^
apps/openmw/mwworld/localscripts.cpp:61:36: error: no type named 'LocalScripts' in namespace 'MWWorld'
    void listCellScripts (MWWorld::LocalScripts& localScripts,
                          ~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:77:40: error: no type named 'LocalScripts' in namespace 'MWWorld'
    void listCellScriptsCont (MWWorld::LocalScripts& localScripts,
                              ~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:102:10: error: no member named 'LocalScripts' in namespace 'MWWorld'
MWWorld::LocalScripts::LocalScripts (const MWWorld::ESMStore& store) : mStore (store) {}
~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:104:15: error: no member named 'LocalScripts' in namespace 'MWWorld'
void MWWorld::LocalScripts::setIgnore (const Ptr& ptr)
     ~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:109:15: error: no member named 'LocalScripts' in namespace 'MWWorld'
void MWWorld::LocalScripts::startIteration()
     ~~~~~~~~~^
In file included from apps/openmw/mwgui/enchantingdialog.cpp:3:
./components/widgets/list.hpp:9:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwworld/localscripts.cpp:114:15: error: no member named 'LocalScripts' in namespace 'MWWorld'
bool MWWorld::LocalScripts::isFinished() const
     ~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:128:47: error: no member named 'LocalScripts' in namespace 'MWWorld'
std::pair<std::string, MWWorld::Ptr> MWWorld::LocalScripts::getNext()
                                     ~~~~~~~~~^
apps/openmw/mwworld/localscripts.cpp:140:15: error: no member named 'LocalScripts' in namespace 'MWWorld'
void MWWorld::LocalScripts::add (const std::string& scriptName, const Ptr& ptr)
     ~~~~~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwgui/scrollwindow.cpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/cellstore.cpp:7:
In file included from ./components/esm/creaturestate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwworld/actionread.cpp:4:
In file included from apps/openmw/mwworld/../mwgui/bookwindow.hpp:11:
apps/openmw/mwworld/../mwbase/../mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/cellstore.cpp:7:
./components/esm/creaturestate.hpp:20:35: error: expected class name
    struct CreatureState : public ObjectState
                                  ^
In file included from apps/openmw/mwworld/cellstore.cpp:8:
./components/esm/doorstate.hpp:18:31: error: expected class name
    struct DoorState : public ObjectState
                              ^
In file included from apps/openmw/mwworld/cellstore.cpp:9:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/quickkeysmenu.hpp should add these lines:

apps/openmw/mwgui/quickkeysmenu.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <vector>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "windowbase.hpp"  // lines 12-12
- namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 28-28
- namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 29-29
- namespace MWBase { namespace Loading { namespace ESM { class Ptr; } } }  // lines 27-27
- namespace MWBase { namespace Loading { namespace MyGUI { class Button; } } }  // lines 34-34
- namespace MWBase { namespace Loading { namespace MyGUI { class EditBox; } } }  // lines 35-35
- namespace MWBase { namespace Loading { namespace MyGUI { class TextBox; } } }  // lines 36-36
- namespace MWBase { namespace Loading { namespace MyGUI { class Widget; } } }  // lines 37-37

The full include-list for apps/openmw/mwgui/quickkeysmenu.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "spellmodel.hpp"               // for SpellModel, etc
namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 25-25
namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 26-26
namespace MWBase { namespace Loading { namespace MWGui { class ItemSelectionDialog; } } }  // lines 43-43
namespace MWBase { namespace Loading { namespace MWGui { class ItemWidget; } } }  // lines 44-44
namespace MWBase { namespace Loading { namespace MWGui { class MagicSelectionDialog; } } }  // lines 45-45
namespace MWBase { namespace Loading { namespace MWGui { class QuickKeysMenuAssign; } } }  // lines 46-46
namespace MWBase { namespace Loading { namespace MWGui { class SpellView; } } }  // lines 47-47
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 15-15
namespace MWBase { namespace Loading { namespace MyGUI { class Button; } } }  // lines 18-18
namespace MWBase { namespace Loading { namespace MyGUI { class EditBox; } } }  // lines 19-19
namespace MWBase { namespace Loading { namespace MyGUI { class TextBox; } } }  // lines 20-20
namespace MWBase { namespace Loading { namespace MyGUI { class Widget; } } }  // lines 21-21
---
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwgui/quickkeysmenu.cpp should add these lines:

apps/openmw/mwgui/quickkeysmenu.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_EditBox.h>  // lines 2-2
- #include <MyGUI_Gui.h>  // lines 3-3
- #include <assert.h>  // lines 5-5
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <components/esm/quickkeys.hpp>  // lines 6-6
- #include <components/misc/resourcehelpers.hpp>  // lines 7-7
- #include <utility>  // lines 10-10
- #include <utility>  // lines 11-11
- #include "../mwbase/environment.hpp"  // lines 13-13
- #include "../mwbase/world.hpp"  // lines 14-14
- #include "../mwgui/inventorywindow.hpp"  // lines 15-15
- #include "../mwmechanics/creaturestats.hpp"  // lines 16-16
- #include "../mwmechanics/spellcasting.hpp"  // lines 17-17
- #include "../mwworld/class.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "../mwworld/inventorystore.hpp"  // lines 20-20
- #include "../mwworld/player.hpp"  // lines 21-21
- #include "MyGUI_Align.h"  // lines 22-22
- #include "MyGUI_Align.h"  // lines 23-23
- #include "MyGUI_RTTI.h"  // lines 26-26
- #include "MyGUI_RTTI.h"  // lines 27-27
- #include "MyGUI_StringUtility.h"  // lines 28-28
- #include "MyGUI_TextBox.h"  // lines 29-29
- #include "MyGUI_Types.h"  // lines 30-30
- #include "MyGUI_Types.h"  // lines 31-31
- #include "MyGUI_Widget.h"  // lines 32-32
- #include "MyGUI_WidgetInput.h"  // lines 33-33
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/drawstate.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/drawstate.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/spells.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/spells.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwworld/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwworld/../mwworld/refdata.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/../mwworld/containerstore.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwworld/containerstore.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/spellmodel.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/spellmodel.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 55-55
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 56-56
- #include "components/esm/defs.hpp"  // lines 57-57
- #include "components/esm/defs.hpp"  // lines 58-58
- #include "components/esm/effectlist.hpp"  // lines 59-59
- #include "components/esm/effectlist.hpp"  // lines 60-60
- #include "components/esm/esmwriter.hpp"  // lines 61-61
- #include "components/esm/esmwriter.hpp"  // lines 62-62
- #include "components/esm/loadmgef.hpp"  // lines 63-63
- #include "components/esm/loadmgef.hpp"  // lines 64-64
- #include "components/esm/loadspel.hpp"  // lines 65-65
- #include "components/esm/loadspel.hpp"  // lines 66-66
- #include "components/misc/stringops.hpp"  // lines 67-67
- #include "components/misc/stringops.hpp"  // lines 68-68
- #include "itemselection.hpp"  // lines 69-69
- #include "itemwidget.hpp"  // lines 70-70
- #include "sortfilteritemmodel.hpp"  // lines 72-72
- #include "spellview.hpp"  // lines 73-73
- namespace MWBase { namespace ESM { class ESMReader; } }  // lines 76-76
- namespace MWBase { namespace ESM { class ESMReader; } }  // lines 78-78

The full include-list for apps/openmw/mwgui/quickkeysmenu.cpp:
#include "quickkeysmenu.hpp"
#include <assert.h>                     // for assert
---
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/cellstore.cpp:19:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwscript/../mwworld/livecellref.hpp:13:
apps/openmw/mwscript/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwscript/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwscript/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwscript/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

components/nifogre/skeleton.hpp should add these lines:
#include "OgreSkeleton.h"               // for Skeleton (ptr only), etc

components/nifogre/skeleton.hpp should remove these lines:
- #include <cassert>  // lines 6-6
- #include "OgrePrerequisites.h"  // lines 11-11
- #include "ogrenifloader.hpp"  // lines 12-12
- namespace Nif { class NiKeyframeController; }  // lines 21-21
- namespace Nif { class NiTextKeyExtraData; }  // lines 22-22
- namespace Ogre { class Skeleton; }  // lines 16-16

The full include-list for components/nifogre/skeleton.hpp:
#include <OgreResource.h>               // for ManualResourceLoader
#include <stdlib.h>                     // for abort, NULL
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<, etc
#include "OgreSkeleton.h"               // for Skeleton (ptr only), etc
namespace Nif { class Node; }  // lines 23-23
namespace Ogre { class Bone; }  // lines 15-15
---
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
extern/shiny/Main/ShaderInstance.cpp:190:23: error: out-of-line definition of 'parse' does not match any declaration in 'sh::ShaderInstance'
        void ShaderInstance::parse (std::string& source, PropertySetGet* properties)
                             ^~~~~
extern/shiny/Main/ShaderInstance.hpp:90:36: note: type of 2nd parameter of member declaration does not match definition ('PropertySetGet *' vs 'sh::PropertySetGet *')
                void parse (std::string& source, PropertySetGet* properties);
                                                 ^
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
extern/shiny/Main/ShaderInstance.cpp:211:41: error: member access into incomplete type 'sh::PropertySetGet'
                                        PropertyValuePtr value = properties->getProperty(propertyName);
                                                                           ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:212:62: error: member access into incomplete type 'sh::PropertySetGet'
                                        bool val = retrieveValue<BooleanValue>(value, properties->getContext()).get();
                                                                                                ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:218:41: error: member access into incomplete type 'sh::PropertySetGet'
                                        PropertyValuePtr value = properties->getProperty(propertyName);
                                                                           ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:219:65: error: member access into incomplete type 'sh::PropertySetGet'
                                        replaceValue = retrieveValue<StringValue>(value, properties->getContext()).get();
                                                                                                   ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:225:63: error: member access into incomplete type 'sh::PropertySetGet'
                                        std::string value = retrieveValue<StringValue>(properties->getProperty(propertyName), properties->getContext()).get();
                                                                                                 ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:225:102: error: member access into incomplete type 'sh::PropertySetGet'
                                        std::string value = retrieveValue<StringValue>(properties->getProperty(propertyName), properties->getContext()).get();
                                                                                                                                        ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:232:41: error: member access into incomplete type 'sh::PropertySetGet'
                                        PropertyValuePtr value = properties->getProperty(propertyName);
                                                                           ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:233:68: error: member access into incomplete type 'sh::PropertySetGet'
                                        std::string val = retrieveValue<StringValue>(value, properties->getContext()).get();
                                                                                                      ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
extern/shiny/Main/ShaderInstance.cpp:249:88: error: member access into incomplete type 'sh::PropertySetGet'
                                        std::string value = retrieveValue<StringValue>(mParent->getCurrentGlobalSettings()->getProperty(settingName), NULL).get();
                                                                                                                          ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:256:88: error: member access into incomplete type 'sh::PropertySetGet'
                                        std::string value = retrieveValue<StringValue>(mParent->getCurrentGlobalSettings()->getProperty(settingName), NULL).get();
                                                                                                                          ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderInstance.cpp:262:83: error: member access into incomplete type 'sh::PropertySetGet'
                                        replaceValue = retrieveValue<StringValue>(mParent->getCurrentGlobalSettings()->getProperty(settingName), NULL).get();
                                                                                                                     ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

components/nifogre/skeleton.cpp should add these lines:

components/nifogre/skeleton.cpp should remove these lines:
- #include <stddef.h>  // lines 10-10
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <exception>  // lines 12-12
- #include <utility>  // lines 15-15
- #include "OgreException.h"  // lines 18-18
- #include "OgreResourceGroupManager.h"  // lines 20-20
- #include "OgreStringConverter.h"  // lines 22-22
- #include "OgreVector3.h"  // lines 24-24
- #include "components/nif/base.hpp"  // lines 26-26
- #include "components/nif/niffile.hpp"  // lines 28-28
- #include "components/nif/niftypes.hpp"  // lines 30-30
- #include "components/nif/record.hpp"  // lines 32-32
- #include "components/nif/recordptr.hpp"  // lines 34-34

The full include-list for components/nifogre/skeleton.cpp:
#include "skeleton.hpp"
#include <OgreBone.h>                   // for Bone
#include <OgreResource.h>               // for Resource
#include <OgreSkeleton.h>               // for Skeleton, SkeletonPtr
#include <OgreSkeletonManager.h>        // for SkeletonManager
#include <stddef.h>                     // for size_t
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/nif/node.hpp>      // for Node, NiNode, etc
#include <components/nifcache/nifcache.hpp>  // for Cache, NIFFilePtr
#include <exception>                    // for exception
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "OgreException.h"              // for OgreAssert
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreVector3.h"                // for Vector3
#include "components/nif/base.hpp"      // for Controller
#include "components/nif/niffile.hpp"   // for NIFFile
#include "components/nif/niftypes.hpp"  // for Transformation
#include "components/nif/record.hpp"
#include "components/nif/recordptr.hpp"  // for ControllerPtr, NodeList, etc
---
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
extern/shiny/Main/ShaderInstance.cpp:346:18: error: out-of-line definition of 'ShaderInstance' does not match any declaration in 'sh::ShaderInstance'
        ShaderInstance::ShaderInstance (ShaderSet* parent, const std::string& name, PropertySetGet* properties)
                        ^~~~~~~~~~~~~~
extern/shiny/Main/ShaderInstance.hpp:57:63: note: type of 3rd parameter of member declaration does not match definition ('PropertySetGet *' vs 'sh::PropertySetGet *')
                ShaderInstance (ShaderSet* parent, const std::string& name, PropertySetGet* properties);
                                                                            ^
In file included from apps/openmw/mwclass/light.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwscript/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/magiceffects.cpp:24:28: error: no member named 'runtime_error' in namespace 'std'
                throw std::runtime_error (
                      ~~~~~^
extern/shiny/Main/ShaderInstance.cpp:693:23: error: out-of-line definition of 'setUniformParameters' does not match any declaration in 'sh::ShaderInstance'
        void ShaderInstance::setUniformParameters (boost::shared_ptr<Pass> pass, PropertySetGet* properties)
                             ^~~~~~~~~~~~~~~~~~~~
extern/shiny/Main/ShaderInstance.hpp:66:60: note: type of 2nd parameter of member declaration does not match definition ('PropertySetGet *' vs 'sh::PropertySetGet *')
                void setUniformParameters (boost::shared_ptr<Pass> pass, PropertySetGet* properties);
                                                                         ^
extern/shiny/Main/ShaderInstance.cpp:697:85: error: member access into incomplete type 'sh::PropertySetGet'
                        pass->setGpuConstant(mParent->getType(), it->first, it->second.second, properties->getProperty(it->second.first), properties->getContext());
                                                                                                         ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwworld/actiontake.hpp should add these lines:

apps/openmw/mwworld/actiontake.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 9-9

The full include-list for apps/openmw/mwworld/actiontake.hpp:
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 7-7
---

apps/openmw/mwworld/actiontake.cpp should add these lines:
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actiontake.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/action.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 10-10

The full include-list for apps/openmw/mwworld/actiontake.cpp:
#include "actiontake.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "class.hpp"                    // for Class
#include "containerstore.hpp"           // for ContainerStore
---

apps/openmw/mwworld/localscripts.hpp should add these lines:

apps/openmw/mwworld/localscripts.hpp should remove these lines:
- #include <list>  // lines 4-4
- #include <string>  // lines 5-5
- #include <utility>  // lines 6-6
- #include <utility>  // lines 7-7
- #include "ptr.hpp"  // lines 9-9
- class CellStore;  // lines 12-12
- class RefData;  // lines 13-13

The full include-list for apps/openmw/mwworld/localscripts.hpp:
---

apps/openmw/mwworld/localscripts.cpp should add these lines:
#include <string>                       // for operator!=, basic_string, etc
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace MWWorld { class CellStore; }

apps/openmw/mwworld/localscripts.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <exception>  // lines 3-3
- #include <exception>  // lines 4-4
- #include <iostream>  // lines 5-5
- #include "apps/openmw/mwworld/cellreflist.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 9-9
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/store.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/store.hpp"  // lines 14-14
- #include "cellstore.hpp"  // lines 15-15
- #include "components/esm/loadacti.hpp"  // lines 17-17
- #include "components/esm/loadacti.hpp"  // lines 18-18
- #include "components/esm/loadalch.hpp"  // lines 19-19
- #include "components/esm/loadalch.hpp"  // lines 20-20
- #include "components/esm/loadappa.hpp"  // lines 21-21
- #include "components/esm/loadappa.hpp"  // lines 22-22
- #include "components/esm/loadarmo.hpp"  // lines 23-23
- #include "components/esm/loadarmo.hpp"  // lines 24-24
- #include "components/esm/loadbook.hpp"  // lines 25-25
- #include "components/esm/loadbook.hpp"  // lines 26-26
- #include "components/esm/loadclot.hpp"  // lines 27-27
- #include "components/esm/loadclot.hpp"  // lines 28-28
- #include "components/esm/loadcont.hpp"  // lines 29-29
- #include "components/esm/loadcont.hpp"  // lines 30-30
- #include "components/esm/loadcrea.hpp"  // lines 31-31
- #include "components/esm/loadcrea.hpp"  // lines 32-32
- #include "components/esm/loaddoor.hpp"  // lines 33-33
- #include "components/esm/loaddoor.hpp"  // lines 34-34
- #include "components/esm/loadingr.hpp"  // lines 35-35
- #include "components/esm/loadingr.hpp"  // lines 36-36
- #include "components/esm/loadligh.hpp"  // lines 37-37
- #include "components/esm/loadligh.hpp"  // lines 38-38
- #include "components/esm/loadlock.hpp"  // lines 39-39
- #include "components/esm/loadlock.hpp"  // lines 40-40
- #include "components/esm/loadmisc.hpp"  // lines 41-41
- #include "components/esm/loadmisc.hpp"  // lines 42-42
- #include "components/esm/loadnpc.hpp"  // lines 43-43
- #include "components/esm/loadnpc.hpp"  // lines 44-44
- #include "components/esm/loadprob.hpp"  // lines 45-45
- #include "components/esm/loadprob.hpp"  // lines 46-46
- #include "components/esm/loadrepa.hpp"  // lines 47-47
- #include "components/esm/loadrepa.hpp"  // lines 48-48
- #include "components/esm/loadscpt.hpp"  // lines 49-49
- #include "components/esm/loadscpt.hpp"  // lines 50-50
- #include "components/esm/loadweap.hpp"  // lines 51-51
- #include "components/esm/loadweap.hpp"  // lines 52-52
- #include "esmstore.hpp"  // lines 54-54

The full include-list for apps/openmw/mwworld/localscripts.cpp:
#include "localscripts.hpp"
#include <assert.h>                     // for assert
#include <string>                       // for operator!=, basic_string, etc
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/cellreflist.hpp"  // for CellRefList
#include "class.hpp"                    // for Class
#include "containerstore.hpp"           // for ContainerStoreIterator, etc
namespace MWWorld { class CellStore; }
---

apps/openmw/mwscript/interpretercontext.hpp should add these lines:

apps/openmw/mwscript/interpretercontext.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <vector>  // lines 7-7
- #include "../mwworld/action.hpp"  // lines 9-9
- #include "../mwworld/ptr.hpp"  // lines 10-10
- namespace MWInput { struct MWInputManager; }  // lines 20-20
- namespace MWSound { class SoundManager; }  // lines 15-15

The full include-list for apps/openmw/mwscript/interpretercontext.hpp:
#include <components/interpreter/context.hpp>  // for Context
#include <string>                       // for string
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
namespace MWScript { struct Locals; }  // lines 25-25
---

apps/openmw/mwscript/interpretercontext.cpp should add these lines:
#include <iosfwd>                       // for ostringstream
#include <vector>                       // for vector
namespace ESM { struct Global; }
namespace MWWorld { class Action; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwscript/interpretercontext.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include <components/esm/cellid.hpp>  // lines 5-5
- #include <limits>  // lines 7-7
- #include <limits>  // lines 8-8
- #include <map>  // lines 9-9
- #include <map>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include <utility>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../mwbase/inputmanager.hpp"  // lines 16-16
- #include "../mwworld/cellstore.hpp"  // lines 21-21
- #include "../mwworld/esmstore.hpp"  // lines 23-23
- #include "apps/openmw/mwscript/../mwworld/action.hpp"  // lines 24-24
- #include "apps/openmw/mwscript/../mwworld/action.hpp"  // lines 25-25
- #include "apps/openmw/mwscript/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwscript/../mwworld/livecellref.hpp"  // lines 27-27
- #include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwscript/../mwworld/store.hpp"  // lines 30-30
- #include "components/esm/defs.hpp"  // lines 32-32
- #include "components/esm/loadcell.hpp"  // lines 33-33
- #include "components/esm/loadcell.hpp"  // lines 34-34
- #include "components/esm/loadclas.hpp"  // lines 36-36
- #include "components/esm/loadfact.hpp"  // lines 38-38
- #include "components/esm/loadglob.hpp"  // lines 39-39
- #include "components/esm/loadglob.hpp"  // lines 40-40
- #include "components/esm/loadnpc.hpp"  // lines 42-42
- #include "components/esm/loadrace.hpp"  // lines 44-44
- #include "components/esm/loadscpt.hpp"  // lines 45-45
- #include "components/esm/loadscpt.hpp"  // lines 46-46
- #include "components/misc/stringops.hpp"  // lines 47-47
- #include "components/misc/stringops.hpp"  // lines 48-48

The full include-list for apps/openmw/mwscript/interpretercontext.cpp:
#include "interpretercontext.hpp"
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <cmath>                        // for sqrt
#include <components/compiler/locals.hpp>  // for Locals
#include <iosfwd>                       // for ostringstream
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadfact.hpp"  // for Faction
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadrace.hpp"  // for Race
#include "globalscripts.hpp"            // for GlobalScripts
#include "locals.hpp"                   // for Locals
namespace ESM { struct Global; }
namespace MWWorld { class Action; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---

apps/openmw/mwworld/store.hpp should add these lines:
#include <map>                          // for map<>::iterator, map, etc
#include <stdexcept>                    // for runtime_error

apps/openmw/mwworld/store.hpp should remove these lines:
- #include <assert.h>  // lines 5-5
- #include <stddef.h>  // lines 9-9
- #include <stdlib.h>  // lines 11-11
- #include <algorithm>  // lines 13-13
- #include <components/esm/esmwriter.hpp>  // lines 6-6
- #include <components/loadinglistener/loadinglistener.hpp>  // lines 7-7
- #include "components/esm/attr.hpp"  // lines 20-20
- #include "components/esm/loadcell.hpp"  // lines 22-22
- #include "components/esm/loaddial.hpp"  // lines 24-24
- #include "components/esm/loadland.hpp"  // lines 26-26
- #include "components/esm/loadltex.hpp"  // lines 28-28
- #include "components/esm/loadmgef.hpp"  // lines 30-30
- #include "components/esm/loadpgrd.hpp"  // lines 32-32
- #include "components/esm/loadscpt.hpp"  // lines 34-34
- #include "components/esm/loadskil.hpp"  // lines 36-36
- #include "components/esm/loadsscr.hpp"  // lines 38-38
- #include "components/misc/stringops.hpp"  // lines 40-40
- #include "recordcmp.hpp"  // lines 41-41
- namespace ESM { class ESMReader; }  // lines 51-51
- namespace ESM { class ESMWriter; }  // lines 52-52
- namespace Loading { class Listener; }  // lines 55-55
- namespace MWWorld { class ESMStore; }  // lines 138-138

The full include-list for apps/openmw/mwworld/store.hpp:
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <stdlib.h>                     // for NULL, rand, RAND_MAX
#include <algorithm>                    // for lower_bound, sort, for_each
#include <map>                          // for map<>::iterator, map, etc
#include <sstream>                      // for operator<<, ostringstream, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, basic_string, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/esm/loaddial.hpp"  // for Dialogue
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadltex.hpp"  // for LandTexture
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadpgrd.hpp"  // for Pathgrid, etc
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadskil.hpp"  // for Skill
#include "components/esm/loadsscr.hpp"  // for StartScript
#include "components/misc/stringops.hpp"  // for StringUtils
namespace ESM { class ESMReader; }  // lines 48-48
namespace ESM { class ESMWriter; }  // lines 49-49
namespace Loading { class Listener; }  // lines 44-44
---

apps/openmw/mwworld/store.cpp should add these lines:

apps/openmw/mwworld/store.cpp should remove these lines:
- #include "components/esm/cellref.hpp"  // lines 5-5

The full include-list for apps/openmw/mwworld/store.cpp:
#include "store.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <list>                         // for _List_iterator, etc
#include "components/esm/cellref.hpp"   // for CellRef, RefNum
---
In file included from libs/openengine/bullet/BulletShapeLoader.cpp:1:
libs/openengine/bullet/BulletShapeLoader.h:69:19: error: field has incomplete type 'Ogre::Vector3'
    Ogre::Vector3 mBoxTranslation;
                  ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
libs/openengine/bullet/BulletShapeLoader.cpp:42:5: error: cannot initialize object parameter of type 'Ogre::StringInterface' with an expression of type 'OEngine::Physic::BulletShape'
    createParamDictionary("BulletShape");
    ^~~~~~~~~~~~~~~~~~~~~
libs/openengine/bullet/BulletShapeLoader.cpp:54:27: error: cannot initialize a parameter of type 'Ogre::Resource *' with an rvalue of type 'OEngine::Physic::BulletShape *'
    mLoader->loadResource(this);
                          ^~~~
/usr/include/OGRE/OgreResource.h:532:39: note: passing argument to parameter 'resource' here
                virtual void loadResource(Resource* resource) = 0;
                                                    ^
libs/openengine/bullet/BulletShapeLoader.cpp:145:5: error: cannot initialize object parameter of type 'Ogre::Resource' with an expression of type 'OEngine::Physic::BulletShape'
    textf->load();
    ^~~~~
libs/openengine/bullet/BulletShapeLoader.cpp:158:12: error: cannot initialize return object of type 'Ogre::Resource *' with an lvalue of type 'OEngine::Physic::BulletShape *'
    return res;
           ^~~

(apps/openmw/mwmechanics/magiceffects.hpp has correct #includes/fwd-decls)

(components/esm/journalentry.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/journalentry.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/magiceffects.cpp should add these lines:

apps/openmw/mwmechanics/magiceffects.cpp should remove these lines:
- #include <utility>  // lines 5-5

The full include-list for apps/openmw/mwmechanics/magiceffects.cpp:
#include "magiceffects.hpp"
#include <components/esm/effectlist.hpp>  // for ENAMstruct
#include <components/esm/magiceffects.hpp>  // for MagicEffects
#include <utility>                      // for pair, make_pair
---

apps/openmw/mwdialogue/journalentry.cpp should add these lines:

apps/openmw/mwdialogue/journalentry.cpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <list>  // lines 7-7
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp"  // lines 17-17
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"  // lines 19-19
- #include "components/esm/loaddial.hpp"  // lines 21-21
- #include "components/esm/loadinfo.hpp"  // lines 23-23

The full include-list for apps/openmw/mwdialogue/journalentry.cpp:
#include "journalentry.hpp"
#include <components/esm/journalentry.hpp>
#include <stddef.h>                     // for NULL
#include <components/interpreter/defines.hpp>  // for fixDefinesDialog
#include <list>                         // for _List_const_iterator, etc
#include <stdexcept>                    // for runtime_error
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/../mwscript/../mwworld/ptr.hpp"
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp"
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp"
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadinfo.hpp"  // for DialInfo, etc
---
In file included from apps/openmw/mwclass/armor.cpp:20:
apps/openmw/mwclass/../mwworld/physicssystem.hpp:36:5: error: expected unqualified-id
    {
    ^

(apps/openmw/mwclass/classes.hpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/classes.cpp has correct #includes/fwd-decls)

components/terrain/defaultworld.hpp should add these lines:

components/terrain/defaultworld.hpp should remove these lines:
- #include <iosfwd>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "GLX/../OgrePrerequisites.h"  // lines 12-12
- #include "OgrePlatform.h"  // lines 14-14
- #include "components/terrain/defs.hpp"  // lines 17-17
- namespace Ogre { class Camera; }  // lines 37-37
- namespace Ogre { class RenderTarget; }  // lines 27-27
- namespace Ogre { class SceneManager; }  // lines 28-28
- namespace Ogre { class SceneNode; }  // lines 29-29
- namespace Ogre { class Vector2; }  // lines 31-31
- namespace Ogre { class Vector3; }  // lines 32-32

The full include-list for components/terrain/defaultworld.hpp:
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox
#include <OgreWorkQueue.h>              // for WorkQueue, etc
#include <iosfwd>                       // for ostream
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgrePlatform.h"               // for uint8, uint16
#include "OgreSharedPtr.h"              // for SharedPtr
#include "components/terrain/defs.hpp"  // for LayerCollection, Alignment
#include "world.hpp"                    // for World
namespace Ogre { class RenderTarget; }  // lines 21-21
namespace Ogre { class SceneManager; }  // lines 22-22
namespace Ogre { class SceneNode; }  // lines 23-23
namespace Ogre { class Vector2; }  // lines 24-24
namespace Ogre { class Vector3; }  // lines 25-25
namespace Terrain { class QuadTreeNode; }  // lines 43-43
namespace Terrain { class Storage; }  // lines 44-44
---

components/terrain/defaultworld.cpp should add these lines:

components/terrain/defaultworld.cpp should remove these lines:
- #include <assert.h>  // lines 7-7
- #include <stddef.h>  // lines 11-11
- #include <algorithm>  // lines 13-13
- #include <boost/date_time/time_duration.hpp>  // lines 9-9
- #include "OgreAny.h"  // lines 16-16
- #include "OgreMemoryAllocatorConfig.h"  // lines 18-18
- #include "OgrePixelFormat.h"  // lines 20-20
- #include "OgreRenderTarget.h"  // lines 22-22
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "OgreSceneManager.h"  // lines 26-26
- #include "OgreTexture.h"  // lines 28-28
- #include "OgreVector2.h"  // lines 30-30
- #include "OgreVector3.h"  // lines 32-32
- #include "OgreWorkQueue.h"  // lines 34-34
- #include "Threading/OgreThreadDefinesBoost.h"  // lines 36-36
- #include "components/terrain/world.hpp"  // lines 38-38

The full include-list for components/terrain/defaultworld.cpp:
#include "defaultworld.hpp"
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox, etc
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for max
#include <boost/date_time/time_duration.hpp>  // for subsecond_duration
#include "OgreAny.h"                    // for any_cast, Any
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_NEW
#include "OgrePixelFormat.h"            // for PixelFormat::PF_A8B8G8R8
#include "OgreRenderTarget.h"           // for RenderTarget
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneManager.h"           // for SceneManager
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector2.h"                // for Vector2, operator+, etc
#include "OgreVector3.h"                // for Vector3
#include "OgreWorkQueue.h"              // for WorkQueue, etc
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_THREAD_SLEEP
#include "components/terrain/world.hpp"  // for World
#include "quadtreenode.hpp"             // for QuadTreeNode, etc
#include "storage.hpp"                  // for Storage
---
In file included from apps/openmw/mwgui/confirmationdialog.cpp:12:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwworld/physicssystem.hpp should add these lines:
#include <memory>                       // for auto_ptr
namespace MWWorld { class Ptr; }
namespace OEngine { namespace Physic { class PhysicEngine; } }

apps/openmw/mwworld/physicssystem.hpp should remove these lines:
- #include <btBulletCollisionCommon.h>  // lines 5-5
- #include <stddef.h>  // lines 7-7
- #include <map>  // lines 8-8
- #include <map>  // lines 9-9
- #include <string>  // lines 11-11
- #include <vector>  // lines 13-13
- #include <vector>  // lines 14-14
- #include "../apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 16-16
- #include "../apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 17-17
- #include "OgreQuaternion.h"  // lines 19-19
- #include "ptr.hpp"  // lines 20-20
- class btCollisionObject;  // lines 23-23
- class btCollisionShape;  // lines 26-26
- namespace MWWorld { class World; }  // lines 43-43

The full include-list for apps/openmw/mwworld/physicssystem.hpp:
#include <OgreVector3.h>                // for Vector3
#include <stddef.h>                     // for NULL
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "OgreQuaternion.h"             // for Quaternion
class btCollisionObject;  // lines 22-22
class btCollisionShape;  // lines 24-24
namespace MWWorld { class Ptr; }
namespace OEngine { namespace Physic { class PhysicEngine; } }
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 34-34
---

apps/openmw/mwworld/physicssystem.cpp should add these lines:
class btCompoundShape;
class btDynamicsWorld;
namespace MWMechanics { class MagicEffects; }

apps/openmw/mwworld/physicssystem.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreSceneNode.h>  // lines 2-2
- #include <algorithm>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <components/esm/loadgmst.hpp>  // lines 3-3
- #include <limits>  // lines 10-10
- #include <openengine/ogre/renderer.hpp>  // lines 6-6
- #include <stdexcept>  // lines 11-11
- #include "../apps/openmw/mwbase/environment.hpp"  // lines 13-13
- #include "../apps/openmw/mwbase/world.hpp"  // lines 14-14
- #include "../mwmechanics/creaturestats.hpp"  // lines 16-16
- #include "../mwmechanics/movement.hpp"  // lines 17-17
- #include "../mwworld/cellstore.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.h"  // lines 20-20
- #include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.h"  // lines 21-21
- #include "BulletCollision/CollisionDispatch/btCollisionObject.h"  // lines 23-23
- #include "BulletCollision/CollisionDispatch/btCollisionWorld.h"  // lines 24-24
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 25-25
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 26-26
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 27-27
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 28-28
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 29-29
- #include "BulletCollision/CollisionShapes/btConeShape.h"  // lines 31-31
- #include "BulletCollision/CollisionShapes/btStaticPlaneShape.h"  // lines 32-32
- #include "BulletCollision/CollisionShapes/btStaticPlaneShape.h"  // lines 33-33
- #include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"  // lines 34-34
- #include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"  // lines 35-35
- #include "BulletDynamics/Dynamics/btDynamicsWorld.h"  // lines 36-36
- #include "BulletDynamics/Dynamics/btDynamicsWorld.h"  // lines 37-37
- #include "GLX/../OgrePrerequisites.h"  // lines 38-38
- #include "GLX/../OgrePrerequisites.h"  // lines 39-39
- #include "LinearMath/btQuaternion.h"  // lines 40-40
- #include "LinearMath/btQuaternion.h"  // lines 41-41
- #include "LinearMath/btScalar.h"  // lines 42-42
- #include "LinearMath/btScalar.h"  // lines 43-43
- #include "LinearMath/btTransform.h"  // lines 45-45
- #include "LinearMath/btVector3.h"  // lines 47-47
- #include "OgreMath.h"  // lines 48-48
- #include "OgreMath.h"  // lines 49-49
- #include "OgreNode.h"  // lines 50-50
- #include "OgreNode.h"  // lines 51-51
- #include "OgreRay.h"  // lines 53-53
- #include "OgreVector3.h"  // lines 55-55
- #include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"  // lines 56-56
- #include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"  // lines 57-57
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 58-58
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 59-59
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 61-61
- #include "apps/openmw/mwworld/store.hpp"  // lines 62-62
- #include "apps/openmw/mwworld/store.hpp"  // lines 63-63
- #include "class.hpp"  // lines 64-64
- #include "components/esm/defs.hpp"  // lines 65-65
- #include "components/esm/defs.hpp"  // lines 66-66
- #include "components/esm/loadcell.hpp"  // lines 67-67
- #include "components/esm/loadcell.hpp"  // lines 68-68
- #include "components/esm/loadmgef.hpp"  // lines 69-69
- #include "components/esm/loadmgef.hpp"  // lines 70-70

The full include-list for apps/openmw/mwworld/physicssystem.cpp:
#include "physicssystem.hpp"
#include <components/misc/resourcehelpers.hpp>
#include <limits>                       // for numeric_limits
#include <openengine/bullet/physic.hpp>  // for PhysicEngine
#include "../apps/openmw/mwrender/animation.hpp"  // for Animation
#include "BulletCollision/CollisionDispatch/btCollisionObject.h"
#include "BulletCollision/CollisionShapes/btConeShape.h"
#include "LinearMath/btTransform.h"     // for btTransform
#include "LinearMath/btVector3.h"       // for btVector3, operator*, etc
#include "OgreRay.h"                    // for Ray
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "ptr.hpp"                      // for Ptr
class btCompoundShape;
class btDynamicsWorld;
namespace MWMechanics { class MagicEffects; }
---

apps/openmw/mwgui/scrollwindow.hpp should add these lines:
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase

apps/openmw/mwgui/scrollwindow.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 4-4
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 6-6
- namespace MyGUI { class ScrollView; }  // lines 12-12
- namespace MyGUI { class Widget; }  // lines 13-13

The full include-list for apps/openmw/mwgui/scrollwindow.hpp:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
namespace Gui { class ImageButton; }  // lines 18-18
namespace MyGUI { class ScrollView; }  // lines 9-9
namespace MyGUI { class Widget; }  // lines 10-10
---

apps/openmw/mwgui/scrollwindow.cpp should add these lines:

apps/openmw/mwgui/scrollwindow.cpp should remove these lines:
- #include <components/esm/loadbook.hpp>  // lines 2-2
- #include "../mwbase/soundmanager.hpp"  // lines 6-6
- #include "MyGUI_Align.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 15-15
- #include "MyGUI_TPoint.h"  // lines 17-17
- #include "MyGUI_TSize.h"  // lines 19-19
- #include "MyGUI_Types.h"  // lines 21-21
- #include "MyGUI_Widget.h"  // lines 23-23
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "MyGUI_WidgetInput.h"  // lines 25-25
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/scrollwindow.cpp:
#include "scrollwindow.hpp"
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/actiontake.hpp"    // for ActionTake
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "formatting.hpp"               // for BookFormatter
---
In file included from components/nifbullet/bulletnifloader.cpp:59:
components/nifbullet/bulletnifloader.hpp:76:35: error: expected class name
struct TriangleMeshShape : public btBvhTriangleMeshShape
                                  ^
components/nifbullet/bulletnifloader.hpp:79:11: error: member initializer 'btBvhTriangleMeshShape' does not name a non-static data member or base class
        : btBvhTriangleMeshShape(meshInterface, useQuantizedAabbCompression)
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
components/nifbullet/bulletnifloader.hpp:85:16: error: use of undeclared identifier 'getTriangleInfoMap'
        delete getTriangleInfoMap();
               ^
components/nifbullet/bulletnifloader.hpp:86:16: error: use of undeclared identifier 'm_meshInterface'
        delete m_meshInterface;
               ^
In file included from apps/openmw/mwgui/race.cpp:16:
apps/openmw/mwgui/../mwrender/characterpreview.hpp:127:9: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
        MWWorld::LiveCellRef<ESM::NPC>  mRef;
        ^~~~~~~~~~~~~~~~~~~~
        LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
components/nifbullet/bulletnifloader.hpp:94:40: error: use of undeclared identifier 'OEngine'
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                       ^
components/nifbullet/bulletnifloader.hpp:94:57: error: expected class name
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                                        ^
components/nifbullet/bulletnifloader.hpp:152:5: error: use of undeclared identifier 'OEngine'
    OEngine::Physic::BulletShape* mShape;//current shape
    ^
In file included from apps/openmw/mwworld/player.cpp:3:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
In file included from apps/openmw/mwworld/player.cpp:5:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwscript/transformationextensions.cpp:16:
apps/openmw/mwscript/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwscript/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^

apps/openmw/mwworld/actionread.cpp should add these lines:

apps/openmw/mwworld/actionread.cpp should remove these lines:
- #include "../mwbase/environment.hpp"  // lines 1-1
- #include "../mwbase/windowmanager.hpp"  // lines 2-2
- #include "../mwbase/world.hpp"  // lines 3-3
- #include "../mwgui/bookwindow.hpp"  // lines 4-4
- #include "../mwgui/scrollwindow.hpp"  // lines 5-5
- #include "../mwmechanics/npcstats.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 9-9
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/action.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/action.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/store.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/store.hpp"  // lines 16-16
- #include "class.hpp"  // lines 17-17
- #include "components/esm/loadbook.hpp"  // lines 18-18
- #include "components/esm/loadbook.hpp"  // lines 19-19
- #include "components/esm/loadclas.hpp"  // lines 20-20
- #include "components/esm/loadclas.hpp"  // lines 21-21
- #include "components/esm/loadnpc.hpp"  // lines 22-22
- #include "components/esm/loadnpc.hpp"  // lines 23-23
- #include "components/esm/loadskil.hpp"  // lines 24-24
- #include "components/esm/loadskil.hpp"  // lines 25-25
- #include "esmstore.hpp"  // lines 26-26
- #include "player.hpp"  // lines 27-27

The full include-list for apps/openmw/mwworld/actionread.cpp:
---
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwscript/transformationextensions.cpp:24:
In file included from ./apps/openmw/mwscript/../mwbase/world.hpp:9:
apps/openmw/mwscript/../mwbase/../mwworld/globals.hpp:30:48: error: no member named 'Variant' in namespace 'MWBase::Loading::ESM'
            typedef std::map<std::string, ESM::Variant> Collection;
                                          ~~~~~^
apps/openmw/mwscript/../mwbase/../mwworld/globals.hpp:34:13: error: 'Collection' (aka 'int') is not a class, namespace, or enumeration
            Collection::const_iterator find (const std::string& name) const;
            ^
apps/openmw/mwscript/../mwbase/../mwworld/globals.hpp:36:13: error: 'Collection' (aka 'int') is not a class, namespace, or enumeration
            Collection::iterator find (const std::string& name);
            ^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwrender/actors.hpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwrender/actors.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9
- #include "apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 13-13
- namespace MWWorld { class InventoryStore; }  // lines 35-35
- namespace MWWorld { class Ptr; }  // lines 36-36
- namespace OEngine { class Camera; }  // lines 28-28
- namespace OEngine { class SceneNode; }  // lines 29-29
- namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 23-23

The full include-list for apps/openmw/mwrender/actors.hpp:
#include <stddef.h>                     // for NULL
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class Animation; }  // lines 41-41
namespace MWRender { class RenderingManager; }  // lines 42-42
namespace MWWorld { class CellStore; }  // lines 34-34
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 21-21
namespace Ogre { class Camera; }  // lines 15-15
namespace Ogre { class SceneNode; }  // lines 16-16
---

apps/openmw/mwrender/actors.cpp should add these lines:

apps/openmw/mwrender/actors.cpp should remove these lines:
- #include <OgreSceneManager.h>  // lines 1-1
- #include <OgreSceneNode.h>  // lines 2-2
- #include <typeinfo>  // lines 3-3
- #include <typeinfo>  // lines 4-4
- #include <utility>  // lines 5-5
- #include <utility>  // lines 6-6
- #include "OgreMath.h"  // lines 8-8
- #include "OgreQuaternion.h"  // lines 9-9
- #include "OgreQuaternion.h"  // lines 10-10
- #include "OgreVector3.h"  // lines 11-11
- #include "OgreVector3.h"  // lines 12-12
- #include "activatoranimation.hpp"  // lines 13-13
- #include "animation.hpp"  // lines 15-15
- #include "apps/openmw/mwrender/../mwworld/cellref.hpp"  // lines 16-16
- #include "apps/openmw/mwrender/../mwworld/cellref.hpp"  // lines 17-17
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 20-20
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 21-21
- #include "components/esm/defs.hpp"  // lines 22-22
- #include "components/esm/defs.hpp"  // lines 23-23
- #include "components/esm/loadligh.hpp"  // lines 24-24
- #include "components/esm/loadligh.hpp"  // lines 25-25
- #include "creatureanimation.hpp"  // lines 26-26
- #include "npcanimation.hpp"  // lines 27-27
- #include "openengine/ogre/renderer.hpp"  // lines 28-28
- #include "openengine/ogre/renderer.hpp"  // lines 29-29
- #include "renderconst.hpp"  // lines 30-30
- namespace Ogre { namespace Ogre { class Camera; } }  // lines 33-33
- namespace Ogre { namespace Ogre { class Camera; } }  // lines 35-35

The full include-list for apps/openmw/mwrender/actors.cpp:
#include "actors.hpp"
---
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwscript/../mwbase/../mwworld/globals.hpp:40:19: error: no type named 'Variant' in namespace 'MWBase::Loading::ESM'; did you mean '::ESM::Variant'?
            const ESM::Variant& operator[] (const std::string& name) const;
                  ^~~~~~~~~~~~
                  ::ESM::Variant
./components/esm/variant.hpp:25:11: note: '::ESM::Variant' declared here
    class Variant
          ^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from components/nifoverrides/nifoverrides.cpp:4:
In file included from libs/../extern/shiny/Main/MaterialInstance.hpp:9:
In file included from libs/../extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from libs/../extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
libs/../extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:24:
In file included from ./apps/openmw/mwscript/../mwbase/world.hpp:9:
apps/openmw/mwscript/../mwbase/../mwworld/globals.hpp:42:13: error: no type named 'Variant' in namespace 'MWBase::Loading::ESM'; did you mean '::ESM::Variant'?
            ESM::Variant& operator[] (const std::string& name);
            ^~~~~~~~~~~~
            ::ESM::Variant
./components/esm/variant.hpp:25:11: note: '::ESM::Variant' declared here
    class Variant
          ^
libs/../extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
libs/../extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
libs/../extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
libs/../extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/armor.cpp:35:
In file included from apps/openmw/mwclass/armor.hpp:16:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:24:
./apps/openmw/mwscript/../mwbase/world.hpp:67:44: error: no member named 'Ptr' in namespace 'MWBase::Loading::MWWorld'
    typedef std::vector<std::pair<MWWorld::Ptr,MWMechanics::Movement> > PtrMovementList;
                                  ~~~~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:67:71: error: expected a type
    typedef std::vector<std::pair<MWWorld::Ptr,MWMechanics::Movement> > PtrMovementList;
                                                                      ^

apps/openmw/mwgui/backgroundimage.hpp should add these lines:

apps/openmw/mwgui/backgroundimage.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include <string>  // lines 8-8
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_Types.h"  // lines 13-13

The full include-list for apps/openmw/mwgui/backgroundimage.hpp:
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
---

apps/openmw/mwgui/backgroundimage.cpp should add these lines:

apps/openmw/mwgui/backgroundimage.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include "MyGUI_Align.h"  // lines 6-6
- #include "MyGUI_ImageBox.h"  // lines 8-8
- #include "MyGUI_Widget.h"  // lines 10-10

The full include-list for apps/openmw/mwgui/backgroundimage.cpp:
#include "backgroundimage.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <algorithm>                    // for max
#include "MyGUI_Align.h"                // for Align, Align::Enum::Default
#include "MyGUI_ImageBox.h"             // for ImageBox
#include "MyGUI_Widget.h"               // for Widget
---
./apps/openmw/mwscript/../mwbase/world.hpp:134:21: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
            virtual MWWorld::Ptr getPlayerPtr() = 0;
                    ^~~~~~~~~~~~
                    Ptr
apps/openmw/mwscript/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
In file included from apps/openmw/mwclass/container.cpp:16:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:24:
./apps/openmw/mwscript/../mwbase/world.hpp:188:21: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
            virtual MWWorld::Ptr getPtr (const std::string& name, bool activeOnly) = 0;
                    ^~~~~~~~~~~~
                    Ptr
apps/openmw/mwscript/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^

apps/openmw/mwworld/cellstore.hpp should add these lines:
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/cellstore.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <components/esm/records.hpp>  // lines 6-6
- #include <list>  // lines 7-7
- #include <list>  // lines 8-8
- #include <map>  // lines 9-9
- #include <map>  // lines 10-10
- #include <vector>  // lines 12-12
- #include <vector>  // lines 13-13
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/timestamp.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 17-17
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 18-18
- #include "components/esm/loadpgrd.hpp"  // lines 20-20
- #include "components/esm/loadpgrd.hpp"  // lines 21-21
- #include "livecellref.hpp"  // lines 23-23
- namespace ESM { class CellRef; }  // lines 52-52
- namespace ESM { class ESMReader; }  // lines 53-53
- namespace ESM { struct Activator; }  // lines 54-54
- namespace ESM { struct Apparatus; }  // lines 56-56
- namespace ESM { struct Armor; }  // lines 57-57
- namespace ESM { struct Book; }  // lines 58-58
- namespace ESM { struct Cell; }  // lines 59-59
- namespace ESM { struct Clothing; }  // lines 60-60
- namespace ESM { struct Container; }  // lines 61-61
- namespace ESM { struct Creature; }  // lines 62-62
- namespace ESM { struct CreatureLevList; }  // lines 63-63
- namespace ESM { struct Door; }  // lines 64-64
- namespace ESM { struct Ingredient; }  // lines 65-65
- namespace ESM { struct ItemLevList; }  // lines 66-66
- namespace ESM { struct Light; }  // lines 67-67
- namespace ESM { struct Lockpick; }  // lines 68-68
- namespace ESM { struct Miscellaneous; }  // lines 69-69
- namespace ESM { struct NPC; }  // lines 70-70
- namespace ESM { struct Potion; }  // lines 71-71
- namespace ESM { struct Probe; }  // lines 72-72
- namespace ESM { struct Repair; }  // lines 73-73
- namespace ESM { struct Static; }  // lines 74-74
- namespace ESM { struct Weapon; }  // lines 75-75
- namespace MWWorld { class Ptr; }  // lines 87-87

The full include-list for apps/openmw/mwworld/cellstore.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwmechanics/pathgrid.hpp"  // for PathgridGraph
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "cellreflist.hpp"              // for CellRefList
#include "timestamp.hpp"                // for TimeStamp
namespace ESM { class CellRef; }  // lines 27-27
namespace ESM { class ESMReader; }  // lines 28-28
namespace ESM { class ESMWriter; }  // lines 29-29
namespace ESM { struct Activator; }  // lines 30-30
namespace ESM { struct Apparatus; }  // lines 31-31
namespace ESM { struct Armor; }  // lines 32-32
namespace ESM { struct Book; }  // lines 33-33
namespace ESM { struct Cell; }  // lines 34-34
namespace ESM { struct CellState; }  // lines 80-80
namespace ESM { struct Clothing; }  // lines 35-35
namespace ESM { struct Container; }  // lines 36-36
namespace ESM { struct Creature; }  // lines 37-37
namespace ESM { struct CreatureLevList; }  // lines 38-38
namespace ESM { struct Door; }  // lines 39-39
namespace ESM { struct FogState; }  // lines 81-81
namespace ESM { struct Ingredient; }  // lines 40-40
namespace ESM { struct ItemLevList; }  // lines 41-41
namespace ESM { struct Light; }  // lines 42-42
namespace ESM { struct Lockpick; }  // lines 43-43
namespace ESM { struct Miscellaneous; }  // lines 44-44
namespace ESM { struct NPC; }  // lines 45-45
namespace ESM { struct Potion; }  // lines 46-46
namespace ESM { struct Probe; }  // lines 47-47
namespace ESM { struct Repair; }  // lines 48-48
namespace ESM { struct Static; }  // lines 49-49
namespace ESM { struct Weapon; }  // lines 50-50
namespace MWWorld { class ESMStore; }  // lines 86-86
---
In file included from apps/openmw/mwscript/transformationextensions.cpp:24:
./apps/openmw/mwscript/../mwbase/world.hpp:192:21: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
            virtual MWWorld::Ptr searchPtr (const std::string& name, bool activeOnly) = 0;
                    ^~~~~~~~~~~~
                    Ptr
apps/openmw/mwscript/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^

apps/openmw/mwworld/cellstore.cpp should add these lines:
#include "apps/openmw/mwworld/timestamp.hpp"  // for TimeStamp, operator-
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwworld/cellstore.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <components/esm/containerstate.hpp>  // lines 5-5
- #include <components/esm/creaturelevliststate.hpp>  // lines 6-6
- #include <components/esm/creaturestate.hpp>  // lines 7-7
- #include <components/esm/doorstate.hpp>  // lines 8-8
- #include <components/esm/npcstate.hpp>  // lines 9-9
- #include <components/esm/objectstate.hpp>  // lines 10-10
- #include <iostream>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <utility>  // lines 16-16
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 21-21
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 22-22
- #include "apps/openmw/mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwworld/livecellref.hpp"  // lines 25-25
- #include "apps/openmw/mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 28-28
- #include "apps/openmw/mwworld/store.hpp"  // lines 29-29
- #include "apps/openmw/mwworld/store.hpp"  // lines 30-30
- #include "components/esm/cellref.hpp"  // lines 34-34
- #include "components/esm/defs.hpp"  // lines 36-36
- #include "components/esm/esmcommon.hpp"  // lines 37-37
- #include "components/esm/esmcommon.hpp"  // lines 38-38
- #include "components/esm/esmreader.hpp"  // lines 40-40
- #include "components/esm/loadacti.hpp"  // lines 41-41
- #include "components/esm/loadacti.hpp"  // lines 42-42
- #include "components/esm/loadalch.hpp"  // lines 43-43
- #include "components/esm/loadalch.hpp"  // lines 44-44
- #include "components/esm/loadappa.hpp"  // lines 45-45
- #include "components/esm/loadappa.hpp"  // lines 46-46
- #include "components/esm/loadarmo.hpp"  // lines 47-47
- #include "components/esm/loadarmo.hpp"  // lines 48-48
- #include "components/esm/loadbook.hpp"  // lines 49-49
- #include "components/esm/loadbook.hpp"  // lines 50-50
- #include "components/esm/loadcell.hpp"  // lines 52-52
- #include "components/esm/loadclot.hpp"  // lines 53-53
- #include "components/esm/loadclot.hpp"  // lines 54-54
- #include "components/esm/loadcont.hpp"  // lines 55-55
- #include "components/esm/loadcont.hpp"  // lines 56-56
- #include "components/esm/loadcrea.hpp"  // lines 57-57
- #include "components/esm/loadcrea.hpp"  // lines 58-58
- #include "components/esm/loaddoor.hpp"  // lines 59-59
- #include "components/esm/loaddoor.hpp"  // lines 60-60
- #include "components/esm/loadgmst.hpp"  // lines 61-61
- #include "components/esm/loadgmst.hpp"  // lines 62-62
- #include "components/esm/loadingr.hpp"  // lines 63-63
- #include "components/esm/loadingr.hpp"  // lines 64-64
- #include "components/esm/loadlevlist.hpp"  // lines 65-65
- #include "components/esm/loadlevlist.hpp"  // lines 66-66
- #include "components/esm/loadligh.hpp"  // lines 67-67
- #include "components/esm/loadligh.hpp"  // lines 68-68
- #include "components/esm/loadlock.hpp"  // lines 69-69
- #include "components/esm/loadlock.hpp"  // lines 70-70
- #include "components/esm/loadmisc.hpp"  // lines 71-71
- #include "components/esm/loadmisc.hpp"  // lines 72-72
- #include "components/esm/loadnpc.hpp"  // lines 73-73
- #include "components/esm/loadnpc.hpp"  // lines 74-74
- #include "components/esm/loadprob.hpp"  // lines 75-75
- #include "components/esm/loadprob.hpp"  // lines 76-76
- #include "components/esm/loadrepa.hpp"  // lines 77-77
- #include "components/esm/loadrepa.hpp"  // lines 78-78
- #include "components/esm/loadstat.hpp"  // lines 79-79
- #include "components/esm/loadstat.hpp"  // lines 80-80
- #include "components/esm/loadweap.hpp"  // lines 81-81
- #include "components/esm/loadweap.hpp"  // lines 82-82
- #include "components/misc/stringops.hpp"  // lines 84-84
- namespace ESM { class ESMWriter; }  // lines 92-92

The full include-list for apps/openmw/mwworld/cellstore.cpp:
#include "cellstore.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <components/esm/cellid.hpp>    // for CellId, operator==
#include <components/esm/cellstate.hpp>  // for CellState
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "apps/openmw/mwworld/cellreflist.hpp"  // for CellRefList, etc
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwworld/timestamp.hpp"  // for TimeStamp, operator-
#include "class.hpp"                    // for Class
#include "components/esm/cellref.hpp"   // for CellRef, RefNum, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_ACTI, etc
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "containerstore.hpp"           // for LiveCellRef, ContainerStore
#include "esmstore.hpp"                 // for ESMStore
#include "ptr.hpp"                      // for Ptr
namespace ESM { class ESMWriter; }  // lines 90-90
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]
components/nifbullet/bulletnifloader.cpp:207:54: error: cannot initialize a parameter of type 'btCollisionShape *' with an rvalue of type 'NifBullet::TriangleMeshShape *'
                mCompoundShape->addChildShape(trans, new TriangleMeshShape(mStaticMesh,true));
                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/bullet/BulletCollision/CollisionShapes/btCompoundShape.h:77:73: note: passing argument to parameter 'shape' here
        void    addChildShape(const btTransform& localTransform,btCollisionShape* shape);
                                                                                  ^
components/nifbullet/bulletnifloader.cpp:230:50: error: cannot initialize a parameter of type 'btCollisionShape *' with an rvalue of type 'NifBullet::TriangleMeshShape *'
            mCompoundShape->addChildShape(trans, new TriangleMeshShape(mStaticMesh,true));
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/bullet/BulletCollision/CollisionShapes/btCompoundShape.h:77:73: note: passing argument to parameter 'shape' here
        void    addChildShape(const btTransform& localTransform,btCollisionShape* shape);
                                                                                  ^

apps/openmw/mwgui/enchantingdialog.hpp should add these lines:

apps/openmw/mwgui/enchantingdialog.hpp should remove these lines:
- #include "../mwbase/windowmanager.hpp"  // lines 4-4
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 8-8
- #include "components/esm/effectlist.hpp"  // lines 10-10
- namespace MWWorld { class Button; }  // lines 26-26
- namespace MWWorld { class Ptr; }  // lines 22-22
- namespace MWWorld { class TextBox; }  // lines 27-27
- namespace MWWorld { class Widget; }  // lines 28-28

The full include-list for apps/openmw/mwgui/enchantingdialog.hpp:
#include "../mwmechanics/enchanting.hpp"  // for Enchanting
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
#include "components/esm/effectlist.hpp"  // for EffectList
#include "spellcreationdialog.hpp"      // for EffectEditorBase
namespace MWGui { class ItemSelectionDialog; }  // lines 34-34
namespace MWGui { class ItemWidget; }  // lines 35-35
namespace MWWorld { class Ptr; }  // lines 20-20
namespace MyGUI { class Button; }  // lines 14-14
namespace MyGUI { class TextBox; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 16-16
---
components/nifbullet/bulletnifloader.cpp:399:21: error: no member named 'setLocalScaling' in 'NifBullet::TriangleMeshShape'
        childShape->setLocalScaling(btVector3(scale, scale, scale));
        ~~~~~~~~~~  ^
components/nifbullet/bulletnifloader.cpp:408:46: error: cannot initialize a parameter of type 'btCollisionShape *' with an lvalue of type 'NifBullet::TriangleMeshShape *'
        mCompoundShape->addChildShape(trans, childShape);
                                             ^~~~~~~~~~
/usr/include/bullet/BulletCollision/CollisionShapes/btCompoundShape.h:77:73: note: passing argument to parameter 'shape' here
        void    addChildShape(const btTransform& localTransform,btCollisionShape* shape);
                                                                                  ^
components/nifbullet/bulletnifloader.cpp:436:80: error: cannot initialize a parameter of type 'Ogre::ManualResourceLoader *' with an rvalue of type 'NifBullet::ManualBulletShapeLoader *'
    OEngine::Physic::BulletShapeManager::getSingleton().create(name,group,true,this);
                                                                               ^~~~
libs/openengine/bullet/BulletShapeLoader.h:131:76: note: passing argument to parameter 'loader' here
                        bool isManual = false, Ogre::ManualResourceLoader* loader = 0,
                                                                           ^

apps/openmw/mwgui/enchantingdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator!=

apps/openmw/mwgui/enchantingdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ScrollView.h>  // lines 2-2
- #include <stddef.h>  // lines 5-5
- #include <components/widgets/list.hpp>  // lines 3-3
- #include <ostream>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "../mwbase/soundmanager.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_TextBox.h"  // lines 27-27
- #include "MyGUI_UString.h"  // lines 29-29
- #include "MyGUI_WidgetInput.h"  // lines 30-30
- #include "MyGUI_WidgetInput.h"  // lines 31-31
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwmechanics/enchanting.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwmechanics/enchanting.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/spellcreationdialog.hpp"  // lines 45-45
- #include "components/esm/loadench.hpp"  // lines 46-46
- #include "components/esm/loadench.hpp"  // lines 47-47
- #include "components/esm/loadgmst.hpp"  // lines 48-48
- #include "components/esm/loadgmst.hpp"  // lines 49-49
- #include "components/misc/stringops.hpp"  // lines 51-51
- #include "sortfilteritemmodel.hpp"  // lines 55-55
- namespace MyGUI { class Widget; }  // lines 60-60

The full include-list for apps/openmw/mwgui/enchantingdialog.cpp:
#include "enchantingdialog.hpp"
#include <stddef.h>                     // for NULL
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator!=
#include "apps/openmw/mwgui/spellcreationdialog.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "itemselection.hpp"            // for ItemSelectionDialog
#include "itemwidget.hpp"               // for ItemWidget
namespace MyGUI { class Widget; }  // lines 58-58
---

apps/openmw/mwgui/confirmationdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/confirmationdialog.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace MyGUI { class Button; }  // lines 16-16
- namespace MyGUI { class EditBox; }  // lines 17-17
- namespace MyGUI { class Widget; }  // lines 18-18

The full include-list for apps/openmw/mwgui/confirmationdialog.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"               // for WindowModal
namespace MyGUI { class Button; }  // lines 12-12
namespace MyGUI { class EditBox; }  // lines 13-13
namespace MyGUI { class Widget; }  // lines 14-14
---

apps/openmw/mwgui/confirmationdialog.cpp should add these lines:

apps/openmw/mwgui/confirmationdialog.cpp should remove these lines:
- #include "MyGUI_RTTI.h"  // lines 4-4
- #include "MyGUI_RTTI.h"  // lines 5-5
- #include "MyGUI_Types.h"  // lines 7-7
- #include "MyGUI_Widget.h"  // lines 9-9
- #include "MyGUI_WidgetInput.h"  // lines 10-10
- #include "MyGUI_WidgetInput.h"  // lines 11-11
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 12-12
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 13-13

The full include-list for apps/openmw/mwgui/confirmationdialog.cpp:
#include "confirmationdialog.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
---
In file included from apps/openmw/mwclass/light.cpp:12:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/race.cpp:40:
./apps/openmw/mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwdialogue/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
In file included from apps/openmw/mwdialogue/../mwbase/world.hpp:10:
apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwdialogue/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwdialogue/quest.cpp:11:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/console.cpp:25:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/shadows.cpp:8:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/shadows.cpp:8:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwrender/shadows.cpp:8:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwrender/shadows.cpp:36:23: error: cannot initialize a member subobject of type 'Ogre::SceneManager *' (aka 'Ogre::Ogre::SceneManager *') with an rvalue of type 'Ogre::SceneManager *'
    mRendering(rend), mSceneMgr(rend->getScene()), mPSSMSetup(NULL),
                      ^         ~~~~~~~~~~~~~~~~
apps/openmw/mwrender/shadows.cpp:53:18: error: member access into incomplete type 'Ogre::SceneManager'
        mSceneMgr->setShadowTechnique(SHADOWTYPE_NONE);
                 ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:58:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureSize(texsize);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:60:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTechnique(SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:63:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureCountPerLightType(Light::LT_POINT, 0);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:65:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureCountPerLightType(Light::LT_DIRECTIONAL, split ? 3 : 1);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:66:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureCount(split ? 3 : 1);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:68:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureSelfShadow(true);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:69:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowCasterRenderBackFaces(true);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:70:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTextureCasterMaterial("openmw_shadowcaster_default");
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:71:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowTexturePixelFormat(PF_FLOAT32_R);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:72:14: error: member access into incomplete type 'Ogre::SceneManager'
    mSceneMgr->setShadowDirectionalLightExtrusionDistance(1000000);
             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefDataapps/openmw/mwrender/shadows.cpp
:75:apps/openmw/mwgui/../mwworld/refdata.hpp14::32 :error11: :member access into incomplete type 'Ogre::SceneManager' 
note: 'MWWorld::RefData' declared here
    class RefData
    mSceneMgr->setShadowFarDistance(mShadowFar);          ^

             ^
apps/openmw/mwrender/shadows.hpp:7:11: note: forward declaration of 'Ogre::Ogre::SceneManager'
    class SceneManager;
          ^
apps/openmw/mwrender/shadows.cpp:82:26: error: reference to 'PSSMShadowCameraSetup' is ambiguous
        mPSSMSetup = new PSSMShadowCameraSetup();
                         ^
/usr/include/OGRE/OgreShadowCameraSetupPSSM.h:56:20: note: candidate found by name lookup is 'Ogre::PSSMShadowCameraSetup'
        class _OgreExport PSSMShadowCameraSetup : public Ogre::LiSPSMShadowCameraSetup
                          ^
apps/openmw/mwrender/shadows.hpp:8:11: note: candidate found by name lookup is 'Ogre::Ogre::PSSMShadowCameraSetup'
    class PSSMShadowCameraSetup;
          ^
apps/openmw/mwrender/shadows.cpp:82:20: error: assigning to 'Ogre::PSSMShadowCameraSetup *' (aka 'Ogre::Ogre::PSSMShadowCameraSetup *') from incompatible type 'Ogre::PSSMShadowCameraSetup *'
        mPSSMSetup = new PSSMShadowCameraSetup();
                   ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
In file included from apps/openmw/mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/itemselection.cpp:10:
In file included from ./apps/openmw/mwgui/itemmodel.hpp:6:
apps/openmw/mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/itemselection.cpp:12:
./apps/openmw/mwgui/windowbase.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
In file included from apps/openmw/mwsound/soundmanagerimp.hpp:14:
In file included from apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

extern/shiny/Platforms/Ogre/OgreMaterialSerializer.hpp should add these lines:

extern/shiny/Platforms/Ogre/OgreMaterialSerializer.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "OgrePrerequisites.h"  // lines 9-9
- namespace Ogre { class TextureUnitState; }  // lines 16-16

The full include-list for extern/shiny/Platforms/Ogre/OgreMaterialSerializer.hpp:
#include <OgreMaterialSerializer.h>     // for MaterialSerializer
#include <string>                       // for string
#include "OgrePrerequisites.h"          // for MaterialPtr
namespace Ogre { class Pass; }  // lines 21-21
namespace Ogre { class TextureUnitState; }  // lines 14-14
---

extern/shiny/Platforms/Ogre/OgreMaterialSerializer.cpp should add these lines:

extern/shiny/Platforms/Ogre/OgreMaterialSerializer.cpp should remove these lines:
- #include <map>  // lines 4-4
- #include <utility>  // lines 6-6
- #include "OgreMaterialSerializer.h"  // lines 9-9
- #include "OgreSharedPtr.h"  // lines 12-12
- #include "OgreTextureUnitState.h"  // lines 14-14

The full include-list for extern/shiny/Platforms/Ogre/OgreMaterialSerializer.cpp:
#include "OgreMaterialSerializer.hpp"
#include <OgrePass.h>                   // for Pass
#include <OgreStringConverter.h>        // for StringConverter
#include <map>                          // for _Rb_tree_iterator
#include <utility>                      // for pair
#include "OgreMaterialSerializer.h"     // for MaterialScriptContext, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTextureUnitState.h"       // for TextureUnitState
---
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:50:37: error: no member named 'StringVector' in namespace 'MWWorld::Ogre'
        std::map<std::string, Ogre::StringVector> mMusicFiles;
                              ~~~~~~^
apps/openmw/mwsound/soundmanagerimp.hpp:69:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerPos;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:70:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerDir;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:71:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
        Ogre::Vector3 mListenerUp;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:88:9: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        DecoderPtr getDecoder();
        ^~~~~~~~~~
        ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
In file included from apps/openmw/mwworld/actionequip.cpp:11:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:133:50: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        virtual MWBase::SoundPtr playTrack(const DecoderPtr& decoder, PlayType type);
                                                 ^~~~~~~~~~
                                                 ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:146:58: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual MWBase::SoundPtr playManualSound3D(const Ogre::Vector3& initialPos, const std::string& soundId,
                                                         ^~~~~~~~~~~~~
                                                         ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/player.cpp:5:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:185:46: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                             ^~~~~~~~~~~~~
                                             ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/player.cpp:5:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/player.cpp:5:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:185:72: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                       ^~~~~~~~~~~~~
                                                                       ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
In file included from ./apps/openmw/mwsound/sound_output.hpp:9:
apps/openmw/mwsound/soundmanagerimp.hpp:185:98: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                                                 ^~~~~~~~~~~~~
                                                                                                 ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwworld/player.cpp:5:
In file included from ./components/esm/player.hpp:6:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from apps/openmw/mwsound/openal_output.cpp:30:
./apps/openmw/mwsound/sound_output.hpp:30:78: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual MWBase::SoundPtr playSound3D(const std::string &fname, const Ogre::Vector3 &pos,
                                                                             ^~~~~~~~~~~~~
                                                                             ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwworld/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:apps/openmw/mwgui/console.cpp5::28 :error10: :expected '{' 
fatal error: 'MyGUI_Delegate' file not found
    class CellRef;
#include "MyGUI_Delegate"    ^

         ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionapply.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwworld/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/pathgrid.cpp:13:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwworld/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwworld/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwworld/../mwmechanics/spells.hpp:8:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/player.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwworld/../mwmechanics/spells.hpp:8:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
In file included from apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwclass/armor.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/armor.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/armor.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---
In file included from apps/openmw/mwworld/actionequip.cpp:19:
apps/openmw/mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^

libs/openengine/ogre/lights.hpp should add these lines:

libs/openengine/ogre/lights.hpp should remove these lines:
- #include "OgrePrerequisites.h"  // lines 9-9
- namespace Ogre { class Light; }  // lines 14-14

The full include-list for libs/openengine/ogre/lights.hpp:
#include <OgreColourValue.h>            // for ColourValue
#include <OgreController.h>             // for ControllerFunction, etc
#include <OgreMath.h>                   // for Math
#include "OgrePrerequisites.h"          // for Real
namespace Ogre { class Light; }  // lines 12-12
---
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
In file included from apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

libs/openengine/ogre/lights.cpp should add these lines:

libs/openengine/ogre/lights.cpp should remove these lines:
- #include <cmath>  // lines 3-3
- #include "OgreColourValue.h"  // lines 6-6
- #include "OgreMath.h"  // lines 8-8

The full include-list for libs/openengine/ogre/lights.cpp:
#include "lights.hpp"
#include <OgreLight.h>                  // for Light
#include <cmath>                        // for sin, fmod
#include "OgreColourValue.h"            // for ColourValue
#include "OgreMath.h"                   // for Math, Math::PI
---

apps/openmw/mwclass/armor.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/armor.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 8-8
- #include <typeinfo>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include "../mwrender/renderinginterface.hpp"  // lines 15-15
- #include "../mwworld/actionequip.hpp"  // lines 16-16
- #include "../mwworld/cellstore.hpp"  // lines 17-17
- #include "../mwworld/containerstore.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 34-34
- #include "components/esm/loadnpc.hpp"  // lines 37-37
- #include "components/esm/loadrace.hpp"  // lines 39-39
- #include "components/esm/loadweap.hpp"  // lines 40-40
- #include "components/esm/loadweap.hpp"  // lines 41-41

The full include-list for apps/openmw/mwclass/armor.cpp:
#include "armor.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadarmo.hpp>  // for Armor, Armor::AODTstruct
#include <components/esm/loadgmst.hpp>  // for GameSetting
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Armor, etc
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
apps/openmw/mwworld/actionequip.cpp:36:58: error: member access into incomplete type 'MWBase::WindowManager'
            MWBase::Environment::get().getWindowManager()->messageBox(result.second);
                                                         ^
apps/openmw/mwworld/../mwbase/environment.hpp:13:11: note: forward declaration of 'MWBase::WindowManager'
    class WindowManager;
          ^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/activator.cpp:13:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/steering.cpp:2:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

extern/shiny/Main/ShaderInstance.hpp should add these lines:

extern/shiny/Main/ShaderInstance.hpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 10-10
- #include <utility>  // lines 12-12
- #include "Platform.hpp"  // lines 15-15
- #include "extern/shiny/Main/Language.hpp"  // lines 17-17
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 19-19
- namespace sh { class GpuProgram; }  // lines 27-27
- namespace sh { class Pass; }  // lines 28-28

The full include-list for extern/shiny/Main/ShaderInstance.hpp:
#include <stddef.h>                     // for size_t
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "extern/shiny/Main/Language.hpp"  // for Language
#include "extern/shiny/Main/PropertyBase.hpp"
namespace sh { class GpuProgram; }  // lines 24-24
namespace sh { class Pass; }  // lines 25-25
namespace sh { class ShaderSet; }  // lines 33-33
---

apps/openmw/mwgui/itemselection.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
namespace MWWorld { class Ptr; }

apps/openmw/mwgui/itemselection.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 9-9
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 10-10
- class Ptr;  // lines 19-19
- namespace MyGUI { class Widget; }  // lines 16-16

The full include-list for apps/openmw/mwgui/itemselection.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "windowbase.hpp"               // for WindowModal
namespace MWGui { class InventoryItemModel; }  // lines 26-26
namespace MWGui { class ItemView; }  // lines 27-27
namespace MWGui { class SortFilterItemModel; }  // lines 28-28
namespace MWWorld { class Ptr; }
namespace MyGUI { class Widget; }  // lines 14-14
---

apps/openmw/mwgui/itemselection.cpp should add these lines:
namespace MWWorld { class Ptr; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/itemselection.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <stddef.h>  // lines 4-4
- #include "MyGUI_RTTI.h"  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 7-7
- #include "MyGUI_WidgetInput.h"  // lines 8-8
- #include "MyGUI_WidgetInput.h"  // lines 9-9
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 11-11
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 12-12
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 13-13
- namespace MyGUI { class Widget; }  // lines 22-22

The full include-list for apps/openmw/mwgui/itemselection.cpp:
#include "itemselection.hpp"
#include <MyGUI_TextBox.h>              // for TextBox
#include <stddef.h>                     // for NULL
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack
#include "inventoryitemmodel.hpp"       // for InventoryItemModel
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
namespace MWWorld { class Ptr; }
namespace MyGUI { class Button; }
namespace MyGUI { class Widget; }  // lines 20-20
---
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
In file included from apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

extern/shiny/Main/ShaderInstance.cpp should add these lines:
namespace sh { class PropertySetGet; }

extern/shiny/Main/ShaderInstance.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <boost/algorithm/string/classification.hpp>  // lines 3-3
- #include <boost/algorithm/string/classification.hpp>  // lines 4-4
- #include <boost/algorithm/string/replace.hpp>  // lines 6-6
- #include <boost/algorithm/string/split.hpp>  // lines 7-7
- #include <boost/algorithm/string/split.hpp>  // lines 8-8
- #include <boost/algorithm/string/trim.hpp>  // lines 9-9
- #include <boost/algorithm/string/trim.hpp>  // lines 10-10
- #include <boost/bind.hpp>  // lines 11-11
- #include <boost/filesystem/operations.hpp>  // lines 13-13
- #include <boost/iterator/iterator_traits.hpp>  // lines 15-15
- #include <boost/iterator/iterator_traits.hpp>  // lines 16-16
- #include <sstream>  // lines 21-21
- #include <sstream>  // lines 22-22
- #include "extern/shiny/Main/Platform.hpp"  // lines 30-30

The full include-list for extern/shiny/Main/ShaderInstance.cpp:
#include "ShaderInstance.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for min
#include <boost/algorithm/string/replace.hpp>  // for replace_all
#include <boost/filesystem/operations.hpp>  // for current_path, exists
#include <boost/filesystem/path.hpp>    // for path, operator/
#include <boost/lexical_cast.hpp>       // for lexical_cast
#include <fstream>                      // for ofstream, basic_ostream, etc
#include <iostream>                     // for ios_base, ios_base::out, etc
#include <stdexcept>                    // for runtime_error
#include "Factory.hpp"                  // for Factory
#include "Preprocessor.hpp"             // for Preprocessor
#include "ShaderSet.hpp"                // for ShaderSet
#include "extern/shiny/Main/Platform.hpp"
namespace sh { class PropertySetGet; }
---
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

libs/openengine/bullet/BulletShapeLoader.h should add these lines:

libs/openengine/bullet/BulletShapeLoader.h should remove these lines:
- #include <btBulletCollisionCommon.h>  // lines 6-6
- #include <stddef.h>  // lines 8-8
- #include <algorithm>  // lines 10-10
- #include <map>  // lines 12-12
- #include <string>  // lines 14-14
- #include "OgreCommon.h"  // lines 17-17
- #include "OgrePrerequisites.h"  // lines 19-19
- #include "OgreQuaternion.h"  // lines 21-21
- #include "OgreResourceGroupManager.h"  // lines 23-23
- #include "OgreSharedPtr.h"  // lines 25-25
- class btCollisionShape;  // lines 29-29

The full include-list for libs/openengine/bullet/BulletShapeLoader.h:
#include <OgreResource.h>               // for Resource, ResourceHandle, etc
#include <OgreResourceManager.h>        // for ResourceManager
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for swap
#include <map>                          // for map
#include <string>                       // for string
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgrePrerequisites.h"          // for String, Vector3
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
class btCollisionShape;  // lines 27-27
---
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

libs/openengine/bullet/BulletShapeLoader.cpp should add these lines:

libs/openengine/bullet/BulletShapeLoader.cpp should remove these lines:
- #include <assert.h>  // lines 4-4
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 7-7
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 9-9
- #include "LinearMath/btScalar.h"  // lines 11-11
- #include "OgreResource.h"  // lines 13-13
- namespace Ogre { class ResourceManager; }  // lines 18-18

The full include-list for libs/openengine/bullet/BulletShapeLoader.cpp:
#include "BulletShapeLoader.h"
#include <assert.h>                     // for assert
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "LinearMath/btScalar.h"
#include "OgreResource.h"
namespace Ogre { class ResourceManager; }  // lines 16-16
---
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/bookwindow.cpp:5:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwmechanics/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aiactivate.cpp:9:
apps/openmw/mwmechanics/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwrender/camera.cpp:10:
In file included from apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/camera.cpp:10:
In file included from apps/openmw/mwrender/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/camera.cpp:10:
In file included from apps/openmw/mwrender/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/camera.cpp:10:
apps/openmw/mwrender/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/camera.cpp:10:
apps/openmw/mwrender/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwworld/actionequip.hpp should add these lines:

apps/openmw/mwworld/actionequip.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 9-9

The full include-list for apps/openmw/mwworld/actionequip.hpp:
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 7-7
---
In file included from apps/openmw/mwmechanics/npcstats.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/actionequip.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actionequip.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <string>  // lines 4-4
- #include <utility>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "../mwbase/environment.hpp"  // lines 10-10
- #include "../mwbase/world.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/action.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/containerstore.hpp"  // lines 17-17

The full include-list for apps/openmw/mwworld/actionequip.cpp:
#include "actionequip.hpp"
#include <assert.h>                     // for assert
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/containerstore.hpp"
#include "class.hpp"                    // for Class
#include "inventorystore.hpp"           // for InventoryStore
---
apps/openmw/mwrender/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/activator.cpp:14:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwrender/camera.cpp:10:
apps/openmw/mwrender/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/camera.cpp:21:
In file included from apps/openmw/mwrender/npcanimation.hpp:13:
In file included from apps/openmw/mwrender/../mwworld/inventorystore.hpp:15:
In file included from apps/openmw/mwrender/../mwworld/containerstore.hpp:22:
apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwrender/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^

apps/openmw/mwworld/actionapply.hpp should add these lines:

apps/openmw/mwworld/actionapply.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 11-11

The full include-list for apps/openmw/mwworld/actionapply.hpp:
#include <string>                       // for string
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 9-9
---

apps/openmw/mwworld/actionapply.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actionapply.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/action.hpp"  // lines 9-9

The full include-list for apps/openmw/mwworld/actionapply.cpp:
#include "actionapply.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "class.hpp"                    // for Class
---
apps/openmw/mwgui/bookwindow.cpp:11:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:37:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals mLocals; // if we find the overhead of heaving a locals
            ^~~~~~~~
            Ogre::MWScript
./apps/openmw/mwrender/../mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwrender/camera.cpp:21:
In file included from apps/openmw/mwrender/npcanimation.hpp:13:
apps/openmw/mwrender/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:46:13: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            ESM::Position mPosition;
            ^~~~~~~~~~~~~
            Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^
apps/openmw/mwrender/../mwworld/inventorystore.hpp:149:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwrender/../mwworld/containerstore.hpp:124:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:65:33: error: no type named 'CellRef' in namespace 'ESM'
            RefData (const ESM::CellRef& cellRef);
                           ~~~~~^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwclass/container.hpp should add these lines:

apps/openmw/mwclass/container.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwworld/containerstore.hpp"  // lines 15-15
- namespace ESM { struct ObjectState; }  // lines 29-29
- namespace MWRender { class RenderingInterface; }  // lines 32-32
- namespace MWWorld { class Action; }  // lines 35-35
- namespace MWWorld { class CellStore; }  // lines 36-36
- namespace MWWorld { class PhysicsSystem; }  // lines 37-37

The full include-list for apps/openmw/mwclass/container.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
namespace ESM { struct ObjectState; }  // lines 27-27
namespace MWRender { class RenderingInterface; }  // lines 18-18
namespace MWWorld { class Action; }  // lines 21-21
namespace MWWorld { class CellStore; }  // lines 22-22
namespace MWWorld { class PhysicsSystem; }  // lines 23-23
---
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:67:33: error: no type named 'ObjectState' in namespace 'ESM'
            RefData (const ESM::ObjectState& objectState);
                           ~~~~~^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwclass/container.cpp should add these lines:
namespace ESM { struct Container; }
namespace ESM { struct ContainerState; }
namespace ESM { struct InventoryList; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/container.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stdlib.h>  // lines 7-7
- #include <components/esm/containerstate.hpp>  // lines 4-4
- #include <components/esm/loadcont.hpp>  // lines 5-5
- #include <memory>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include <typeinfo>  // lines 11-11
- #include "../mwworld/actionopen.hpp"  // lines 20-20
- #include "../mwworld/actiontrap.hpp"  // lines 21-21
- #include "../mwworld/cellstore.hpp"  // lines 22-22
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "../mwworld/failedaction.hpp"  // lines 26-26
- #include "../mwworld/inventorystore.hpp"  // lines 27-27
- #include "../mwworld/nullaction.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 33-33
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 35-35
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 36-36
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 37-37
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 39-39
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 40-40
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 41-41
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 43-43
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 44-44
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 45-45
- #include "components/esm/loadsoun.hpp"  // lines 46-46
- #include "components/esm/loadsoun.hpp"  // lines 47-47
- #include "components/esm/objectstate.hpp"  // lines 48-48
- #include "components/esm/objectstate.hpp"  // lines 49-49
- #include "components/misc/stringops.hpp"  // lines 51-51

The full include-list for apps/openmw/mwclass/container.cpp:
#include "container.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for abs, NULL
#include <memory>                       // for auto_ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/misc/stringops.hpp"  // for StringUtils
namespace ESM { struct Container; }
namespace ESM { struct ContainerState; }
namespace ESM { struct InventoryList; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
components/nifoverrides/nifoverrides.cpp:76:50: error: no member named 'makeProperty' in namespace 'sh'
            material->setProperty(it->first, sh::makeProperty(it->second));
                                             ~~~~^

apps/openmw/mwworld/player.hpp should add these lines:
#include "OgreVector3.h"                // for Vector3

apps/openmw/mwworld/player.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "../mwworld/livecellref.hpp"  // lines 9-9
- #include "../mwworld/refdata.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/livecellref.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 14-14
- #include "components/esm/defs.hpp"  // lines 18-18
- namespace MWBase { class Ptr; }  // lines 29-29

The full include-list for apps/openmw/mwworld/player.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "../mwmechanics/drawstate.hpp"  // for DrawState_
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/livecellref.hpp"  // for LiveCellRef
#include "components/esm/defs.hpp"      // for Position
namespace ESM { class ESMReader; }  // lines 22-22
namespace ESM { class ESMWriter; }  // lines 23-23
namespace ESM { struct NPC; }  // lines 24-24
namespace MWBase { class World; }  // lines 30-30
namespace MWBase { namespace Loading { class Listener; } }  // lines 34-34
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }  // lines 38-38
---
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:14:
In file included from apps/openmw/mwworld/../mwrender/actors.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/player.cpp should add these lines:

apps/openmw/mwworld/player.cpp should remove these lines:
- #include <components/esm/loadbsgn.hpp>  // lines 4-4
- #include <list>  // lines 7-7
- #include <list>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include "../mwmechanics/movement.hpp"  // lines 12-12
- #include "../mwmechanics/npcstats.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "OgreVector3.h"  // lines 16-16
- #include "apps/openmw/mwworld/../mwmechanics/../mwbase/mechanicsmanager.hpp"  // lines 17-17
- #include "apps/openmw/mwworld/../mwmechanics/aisequence.hpp"  // lines 19-19
- #include "apps/openmw/mwworld/../mwmechanics/creaturestats.hpp"  // lines 20-20
- #include "apps/openmw/mwworld/../mwmechanics/drawstate.hpp"  // lines 22-22
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 23-23
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 24-24
- #include "apps/openmw/mwworld/store.hpp"  // lines 25-25
- #include "apps/openmw/mwworld/store.hpp"  // lines 26-26
- #include "components/esm/cellid.hpp"  // lines 28-28
- #include "components/esm/cellref.hpp"  // lines 30-30
- #include "components/esm/loadcell.hpp"  // lines 31-31
- #include "components/esm/loadcell.hpp"  // lines 32-32
- #include "components/esm/loadnpc.hpp"  // lines 33-33
- #include "components/esm/npcstate.hpp"  // lines 34-34
- #include "components/esm/npcstate.hpp"  // lines 35-35
- #include "ptr.hpp"  // lines 37-37

The full include-list for apps/openmw/mwworld/player.cpp:
#include "player.hpp"
#include <stddef.h>                     // for NULL
#include <components/esm/defs.hpp>      // for Position, etc
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/player.hpp>    // for Player
#include "../mwbase/environment.hpp"    // for Environment
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwmechanics/drawstate.hpp"
#include "components/esm/cellid.hpp"    // for CellId
#include "components/esm/cellref.hpp"   // for CellRef
---
./apps/openmw/mwrender/../mwworld/refdata.hpp:75:30: error: no type named 'ObjectState' in namespace 'ESM'
            void write (ESM::ObjectState& objectState, const std::string& scriptId = "") const;
                        ~~~~~^

apps/openmw/mwscript/transformationextensions.cpp should add these lines:
#include "components/interpreter/runtime.hpp"  // for Runtime
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }

apps/openmw/mwscript/transformationextensions.cpp should remove these lines:
- #include <OgreSceneNode.h>  // lines 1-1
- #include <stddef.h>  // lines 5-5
- #include <components/compiler/opcodes.hpp>  // lines 2-2
- #include <components/interpreter/opcodes.hpp>  // lines 3-3
- #include <exception>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include <stdexcept>  // lines 9-9
- #include <string>  // lines 11-11
- #include "../mwbase/environment.hpp"  // lines 13-13
- #include "../mwworld/class.hpp"  // lines 14-14
- #include "../mwworld/manualref.hpp"  // lines 15-15
- #include "../mwworld/player.hpp"  // lines 16-16
- #include "OgreMath.h"  // lines 17-17
- #include "OgreMath.h"  // lines 18-18
- #include "OgreQuaternion.h"  // lines 19-19
- #include "OgreQuaternion.h"  // lines 20-20
- #include "OgreVector3.h"  // lines 21-21
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 22-22
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 23-23
- #include "apps/openmw/mwscript/../mwbase/world.hpp"  // lines 25-25
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 26-26
- #include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"  // lines 27-27
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 28-28
- #include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // lines 29-29
- #include "apps/openmw/mwscript/../mwworld/cellstore.hpp"  // lines 30-30
- #include "apps/openmw/mwscript/../mwworld/cellstore.hpp"  // lines 31-31
- #include "components/esm/defs.hpp"  // lines 32-32
- #include "components/esm/defs.hpp"  // lines 33-33
- #include "components/interpreter/context.hpp"  // lines 34-34
- #include "components/interpreter/context.hpp"  // lines 35-35
- #include "components/interpreter/types.hpp"  // lines 36-36
- #include "components/interpreter/types.hpp"  // lines 37-37
- #include "interpretercontext.hpp"  // lines 38-38
- #include "ref.hpp"  // lines 39-39
- namespace MWBase { namespace Loading { namespace ESM { struct Cell; } } }  // lines 44-44

The full include-list for apps/openmw/mwscript/transformationextensions.cpp:
#include <stddef.h>                     // for NULL
#include <exception>                    // for exception
#include <string>                       // for string
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for Position, etc
#include "components/interpreter/runtime.hpp"  // for Runtime
namespace MWBase { namespace Loading { namespace ESM { struct Cell; } } }  // lines 42-42
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }
---

apps/openmw/mwgui/race.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/race.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <memory>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwgui/../mwrender/characterpreview.hpp"  // lines 14-14
- #include "apps/openmw/mwgui/../mwrender/characterpreview.hpp"  // lines 15-15
- namespace MWGui { class WindowManager; }  // lines 32-32
- namespace MyGUI { class ListBox; }  // lines 24-24
- namespace MyGUI { class ScrollBar; }  // lines 25-25
- namespace MyGUI { class Widget; }  // lines 26-26

The full include-list for apps/openmw/mwgui/race.hpp:
#include <stddef.h>                     // for size_t
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"
namespace ESM { struct NPC; }  // lines 42-42
namespace MWRender { class RaceSelectionPreview; }  // lines 37-37
namespace MyGUI { class ImageBox; }  // lines 19-19
namespace MyGUI { class ListBox; }  // lines 20-20
namespace MyGUI { class ScrollBar; }  // lines 21-21
namespace MyGUI { class Widget; }  // lines 22-22
---
./apps/openmw/mwrender/../mwworld/refdata.hpp:92:40: error: no type named 'Script' in namespace 'ESM'
            void setLocals (const ESM::Script& script);
                                  ~~~~~^

apps/openmw/mwgui/race.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/race.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <MyGUI_RenderManager.h>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <exception>  // lines 8-8
- #include <iostream>  // lines 9-9
- #include <iostream>  // lines 10-10
- #include "../mwbase/windowmanager.hpp"  // lines 14-14
- #include "../mwrender/characterpreview.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 17-17
- #include "MyGUI_Align.h"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_Button.h"  // lines 20-20
- #include "MyGUI_Button.h"  // lines 21-21
- #include "MyGUI_EventPair.h"  // lines 22-22
- #include "MyGUI_EventPair.h"  // lines 23-23
- #include "MyGUI_Macros.h"  // lines 25-25
- #include "MyGUI_RTTI.h"  // lines 26-26
- #include "MyGUI_RTTI.h"  // lines 27-27
- #include "MyGUI_ScrollBar.h"  // lines 29-29
- #include "MyGUI_StringUtility.h"  // lines 30-30
- #include "MyGUI_StringUtility.h"  // lines 31-31
- #include "MyGUI_Types.h"  // lines 33-33
- #include "MyGUI_Widget.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 43-43
- #include "components/esm/loadbody.hpp"  // lines 45-45
- #include "components/esm/loadnpc.hpp"  // lines 47-47
- #include "components/esm/loadrace.hpp"  // lines 49-49
- #include "components/esm/loadskil.hpp"  // lines 51-51
- #include "components/esm/spelllist.hpp"  // lines 52-52
- #include "components/esm/spelllist.hpp"  // lines 53-53
- #include "components/misc/stringops.hpp"  // lines 55-55
- #include "tooltips.hpp"  // lines 57-57

The full include-list for apps/openmw/mwgui/race.cpp:
#include "race.hpp"
#include <MyGUI_ListBox.h>              // for ListBox
#include <exception>                    // for exception
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwgui/widgets.hpp"  // for MWSkill, MWSkillPtr, etc
#include "components/esm/loadbody.hpp"  // for BodyPart, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadrace.hpp"  // for Race, Race::SkillBonus, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }
---
./apps/openmw/mwrender/../mwworld/refdata.hpp:110:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals& getLocals();
            ^~~~~~~~
            Ogre::MWScript
./apps/openmw/mwrender/../mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:118:37: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            void setPosition (const ESM::Position& pos);
                                    ^~~~~~~~~~~~~
                                    Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^

apps/openmw/mwgui/hud.hpp should add these lines:
namespace MWGui { namespace MyGUI { class Button; } }
namespace MWGui { namespace MyGUI { class ImageBox; } }
namespace MWGui { namespace MyGUI { class ScrollView; } }
namespace MWGui { namespace MyGUI { class TextBox; } }
namespace MWGui { namespace MyGUI { class Widget; } }

apps/openmw/mwgui/hud.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 8-8
- #include "openengine/gui/layout.hpp"  // lines 11-11
- namespace MyGUI { class Button; }  // lines 16-16
- namespace MyGUI { class Button; }  // lines 23-23
- namespace MyGUI { class ImageBox; }  // lines 17-17
- namespace MyGUI { class ImageBox; }  // lines 24-24
- namespace MyGUI { class ProgressBar; }  // lines 18-18
- namespace MyGUI { class ProgressBar; }  // lines 25-25
- namespace MyGUI { class ScrollView; }  // lines 19-19
- namespace MyGUI { class ScrollView; }  // lines 26-26
- namespace MyGUI { class TextBox; }  // lines 20-20
- namespace MyGUI { class TextBox; }  // lines 27-27
- namespace MyGUI { class Widget; }  // lines 21-21
- namespace MyGUI { class Widget; }  // lines 28-28

The full include-list for apps/openmw/mwgui/hud.hpp:
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "mapwindow.hpp"                // for LocalMapBase
#include "openengine/gui/layout.hpp"    // for Layout
namespace MWGui { class DragAndDrop; }  // lines 38-38
namespace MWGui { class ItemWidget; }  // lines 39-39
namespace MWGui { class SpellIcons; }  // lines 40-40
namespace MWGui { namespace MyGUI { class Button; } }
namespace MWGui { namespace MyGUI { class ImageBox; } }
namespace MWGui { namespace MyGUI { class ScrollView; } }
namespace MWGui { namespace MyGUI { class TextBox; } }
namespace MWGui { namespace MyGUI { class Widget; } }
namespace MWWorld { class Ptr; }  // lines 33-33
---
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:119:19: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            const ESM::Position& getPosition();
                  ^~~~~~~~~~~~~
                  Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^

apps/openmw/mwclass/light.hpp should add these lines:

apps/openmw/mwclass/light.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/light.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---

apps/openmw/mwgui/hud.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWGui { namespace MyGUI { class Widget; } }

apps/openmw/mwgui/hud.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <MyGUI_InputManager.h>  // lines 3-3
- #include <MyGUI_ProgressBar.h>  // lines 4-4
- #include <MyGUI_RenderManager.h>  // lines 5-5
- #include <MyGUI_ScrollView.h>  // lines 6-6
- #include <math.h>  // lines 10-10
- #include <stddef.h>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <algorithm>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <stdexcept>  // lines 16-16
- #include <vector>  // lines 17-17
- #include <vector>  // lines 18-18
- #include "../mwbase/windowmanager.hpp"  // lines 20-20
- #include "../mwmechanics/creaturestats.hpp"  // lines 22-22
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "MyGUI_Colour.h"  // lines 26-26
- #include "MyGUI_Colour.h"  // lines 27-27
- #include "MyGUI_RTTI.h"  // lines 30-30
- #include "MyGUI_RTTI.h"  // lines 31-31
- #include "MyGUI_StringUtility.h"  // lines 32-32
- #include "MyGUI_StringUtility.h"  // lines 33-33
- #include "MyGUI_TPoint.h"  // lines 34-34
- #include "MyGUI_TPoint.h"  // lines 35-35
- #include "MyGUI_TextBox.h"  // lines 36-36
- #include "MyGUI_TextBox.h"  // lines 37-37
- #include "MyGUI_Types.h"  // lines 38-38
- #include "MyGUI_Types.h"  // lines 39-39
- #include "MyGUI_Widget.h"  // lines 40-40
- #include "MyGUI_Widget.h"  // lines 41-41
- #include "MyGUI_WidgetInput.h"  // lines 42-42
- #include "MyGUI_WidgetInput.h"  // lines 43-43
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/mapwindow.hpp"  // lines 50-50
- #include "apps/openmw/mwgui/mode.hpp"  // lines 52-52
- #include "components/esm/effectlist.hpp"  // lines 53-53
- #include "components/esm/effectlist.hpp"  // lines 54-54
- #include "components/esm/loadgmst.hpp"  // lines 55-55
- #include "components/esm/loadgmst.hpp"  // lines 56-56
- #include "components/esm/loadmgef.hpp"  // lines 58-58
- #include "components/esm/loadspel.hpp"  // lines 60-60
- #include "components/settings/settings.hpp"  // lines 61-61
- #include "components/settings/settings.hpp"  // lines 62-62
- #include "console.hpp"  // lines 63-63
- #include "inventorywindow.hpp"  // lines 66-66

The full include-list for apps/openmw/mwgui/hud.cpp:
#include "hud.hpp"
#include <OgreMath.h>                   // for Math, Math::TWO_PI
#include <math.h>                       // for cos
#include <stddef.h>                     // for NULL, size_t
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/mapwindow.hpp"
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_Console, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadspel.hpp"  // for Spell
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemmodel.hpp"                // for ItemStack, etc
#include "itemwidget.hpp"               // for ItemWidget
#include "spellicons.hpp"               // for SpellIcons
namespace MWGui { namespace MyGUI { class Widget; } }
---

apps/openmw/mwclass/light.cpp should add these lines:
namespace ESM { struct Light; }
namespace MWRender { class Actors; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/light.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadligh.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include "../mwbase/soundmanager.hpp"  // lines 10-10
- #include "../mwrender/actors.hpp"  // lines 13-13
- #include "../mwworld/cellstore.hpp"  // lines 14-14
- #include "../mwworld/failedaction.hpp"  // lines 15-15
- #include "../mwworld/nullaction.hpp"  // lines 17-17
- #include "../mwworld/physicssystem.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 32-32
- #include "components/esm/loadnpc.hpp"  // lines 34-34
- #include "components/esm/loadweap.hpp"  // lines 35-35
- #include "components/esm/loadweap.hpp"  // lines 36-36

The full include-list for apps/openmw/mwclass/light.cpp:
#include "light.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Lights
namespace ESM { struct Light; }
namespace MWRender { class Actors; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:34:18: error: no type named 'CellRef' in namespace 'MWWorld'
        MWWorld::CellRef mRef;
        ~~~~~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:39:54: error: no type named 'CellRef' in namespace 'ESM'
        LiveCellRefBase(std::string type, const ESM::CellRef &cref=ESM::CellRef());
                                                ~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:39:73: error: no member named 'CellRef' in namespace 'ESM'
        LiveCellRefBase(std::string type, const ESM::CellRef &cref=ESM::CellRef());
                                                                   ~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:70:67: error: no type named 'RefNum' in namespace 'ESM'; did you mean 'Ogre::ESM::RefNum'?
    inline bool operator== (const LiveCellRefBase& cellRef, const ESM::RefNum refNum)
                                                                  ^~~~~~~~~~~
                                                                  Ogre::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: 'Ogre::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:84:32: error: no type named 'CellRef' in namespace 'ESM'
        LiveCellRef(const ESM::CellRef& cref, const X* b = NULL)
                          ~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:89:15: error: no matching constructor for initialization of 'LiveCellRefBase'
            : LiveCellRefBase(typeid(X).name()), mBase(b)
              ^               ~~~~~~~~~~~~~~~~
./apps/openmw/mwrender/../mwworld/livecellref.hpp:27:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const char *' to 'const LiveCellRefBase' for 1st argument
    struct LiveCellRefBase
           ^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:27:12: note: candidate constructor (the implicit default constructor) not viable: requires 0 arguments, but 1 was provided
./apps/openmw/mwrender/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

(components/ogreinit/ogreinit.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/static.cpp:12:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
./apps/openmw/mwrender/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

components/ogreinit/ogreinit.cpp should add these lines:
#include <time.h>                       // for time

components/ogreinit/ogreinit.cpp should remove these lines:
- #include <stdlib.h>  // lines 8-8
- #include <boost/filesystem/path_traits.hpp>  // lines 6-6
- #include <ostream>  // lines 12-12
- #include <stdexcept>  // lines 14-14
- #include "OgreMemoryAllocatorConfig.h"  // lines 18-18
- #include "OgrePlatform.h"  // lines 20-20

The full include-list for components/ogreinit/ogreinit.cpp:
#include "ogreinit.hpp"
#include <OgreLog.h>                    // for Log, LogListener, etc
#include <OgreLogManager.h>             // for LogManager
#include <OgreParticleSystemManager.h>  // for ParticleSystemManager
#include <OgreRoot.h>                   // for Root
#include <stdlib.h>                     // for getenv
#include <time.h>                       // for time
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <components/nifogre/particles.hpp>  // for GravityAffectorFactory, etc
#include <cstdio>                       // for sprintf, NULL
#include <cstring>                      // for memset
#include <ostream>                      // for basic_ostream, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, allocator, etc
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_NEW, OGRE_DELETE
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "ogreplugin.hpp"               // for loadOgrePlugin
---

apps/openmw/mwgui/console.hpp should add these lines:

apps/openmw/mwgui/console.hpp should remove these lines:
- #include <components/compiler/lineparser.hpp>  // lines 6-6
- #include <components/compiler/locals.hpp>  // lines 7-7
- #include <components/compiler/output.hpp>  // lines 8-8
- #include <components/compiler/scanner.hpp>  // lines 9-9
- #include <components/interpreter/interpreter.hpp>  // lines 10-10
- #include <list>  // lines 11-11
- #include <vector>  // lines 13-13
- #include "../mwscript/interpretercontext.hpp"  // lines 16-16

The full include-list for apps/openmw/mwgui/console.hpp:
#include <components/compiler/errorhandler.hpp>  // for ErrorHandler::Type, etc
#include <components/compiler/extensions.hpp>  // for Extensions
#include <string>                       // for string
#include "../mwscript/compilercontext.hpp"  // for CompilerContext
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace Compiler { class Output; }  // lines 23-23
namespace Compiler { struct TokenLoc; }  // lines 24-24
namespace MWWorld { class Ptr; }  // lines 27-27
namespace MyGUI { class EditBox; }  // lines 30-30
namespace MyGUI { class Widget; }  // lines 31-31
---

apps/openmw/mwgui/console.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator==

apps/openmw/mwgui/console.cpp should remove these lines:
- #include <ctype.h>  // lines 9-9
- #include <stddef.h>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <boost/filesystem/path.hpp>  // lines 4-4
- #include <boost/filesystem/path_traits.hpp>  // lines 6-6
- #include <components/compiler/extensions0.hpp>  // lines 7-7
- #include <exception>  // lines 15-15
- #include <istream>  // lines 17-17
- #include <map>  // lines 18-18
- #include <map>  // lines 19-19
- #include <utility>  // lines 20-20
- #include <utility>  // lines 21-21
- #include "../mwbase/world.hpp"  // lines 25-25
- #include "../mwscript/extensions.hpp"  // lines 26-26
- #include "../mwworld/esmstore.hpp"  // lines 27-27
- #include "MyGUI_EventPair.h"  // lines 30-30
- #include "MyGUI_EventPair.h"  // lines 31-31
- #include "MyGUI_RTTI.h"  // lines 32-32
- #include "MyGUI_RTTI.h"  // lines 33-33
- #include "MyGUI_UString.h"  // lines 35-35
- #include "MyGUI_WidgetInput.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwscript/../mwworld/cellref.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/../mwscript/../mwworld/cellref.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp"  // lines 44-44
- #include "apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/../mwscript/../mwworld/store.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/../mwscript/../mwworld/store.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwscript/compilercontext.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwscript/interpretercontext.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/referenceinterface.hpp"  // lines 52-52
- #include "apps/openmw/mwgui/referenceinterface.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 55-55
- #include "components/compiler/errorhandler.hpp"  // lines 57-57
- #include "components/compiler/lineparser.hpp"  // lines 59-59
- #include "components/compiler/locals.hpp"  // lines 61-61
- #include "components/compiler/output.hpp"  // lines 63-63
- #include "components/compiler/scanner.hpp"  // lines 65-65
- #include "components/compiler/tokenloc.hpp"  // lines 66-66
- #include "components/compiler/tokenloc.hpp"  // lines 67-67
- #include "components/esm/loadcell.hpp"  // lines 68-68
- #include "components/esm/loadcell.hpp"  // lines 69-69
- #include "components/interpreter/interpreter.hpp"  // lines 70-70
- #include "components/interpreter/interpreter.hpp"  // lines 71-71
- #include "components/interpreter/types.hpp"  // lines 72-72
- #include "components/interpreter/types.hpp"  // lines 73-73
- namespace MyGUI { class Widget; }  // lines 79-79

The full include-list for apps/openmw/mwgui/console.cpp:
#include "console.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include <ctype.h>                      // for tolower
#include <stddef.h>                     // for NULL
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <exception>                    // for exception
#include <istream>                      // for istringstream, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwscript/compilercontext.hpp"
#include "apps/openmw/mwgui/../mwscript/interpretercontext.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator==
#include "components/compiler/errorhandler.hpp"  // for ErrorHandler::Type
#include "components/compiler/lineparser.hpp"  // for LineParser
#include "components/compiler/locals.hpp"  // for Locals
#include "components/compiler/output.hpp"  // for Output
#include "components/compiler/scanner.hpp"  // for Scanner
namespace MyGUI { class Widget; }  // lines 77-77
---
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:50:37: error: no member named 'StringVector' in namespace 'MWWorld::Ogre'
        std::map<std::string, Ogre::StringVector> mMusicFiles;
                              ~~~~~~^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwsound/soundmanagerimp.hpp:69:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerPos;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:70:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerDir;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
apps/openmw/mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
apps/openmw/mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
In file included from apps/openmw/mwmechanics/actor.hpp:7:
In file included from ./apps/openmw/mwmechanics/character.hpp:12:
apps/openmw/mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:71:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerUp;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
apps/openmw/mwmechanics/actor.hpp:16:5: error: expected '{'
    class Ptr;
    ^
apps/openmw/mwmechanics/actor.hpp:17:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/actor.hpp:20:5: error: expected '{'
    class CharacterController;
    ^

(apps/openmw/mwmechanics/steering.hpp has correct #includes/fwd-decls)
apps/openmw/mwmechanics/actor.hpp:33:9: error: unknown type name 'AiState'; did you mean 'MWMechanics::AiState'?
        AiState& getAiState();
        ^~~~~~~
        MWMechanics::AiState
apps/openmw/mwmechanics/aistate.hpp:115:50: note: 'MWMechanics::AiState' declared here
    typedef DerivedClassStorage<AiTemporaryBase> AiState;
                                                 ^
In file included from apps/openmw/mwmechanics/actor.cpp:1:
apps/openmw/mwmechanics/actor.hpp:38:9: error: unknown type name 'AiState'; did you mean 'MWMechanics::AiState'?
        AiState mAiState;
        ^~~~~~~
        MWMechanics::AiState
apps/openmw/mwmechanics/aistate.hpp:115:50: note: 'MWMechanics::AiState' declared here
    typedef DerivedClassStorage<AiTemporaryBase> AiState;
                                                 ^

apps/openmw/mwmechanics/steering.cpp should add these lines:

apps/openmw/mwmechanics/steering.cpp should remove these lines:
- #include "OgreMath.h"  // lines 5-5
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 7-7
- #include "components/esm/defs.hpp"  // lines 9-9

The full include-list for apps/openmw/mwmechanics/steering.cpp:
#include "steering.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/ptr.hpp"           // for Ptr
#include "OgreMath.h"                   // for Radian, Degree, Math
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/defs.hpp"      // for Position
#include "movement.hpp"                 // for Movement
---
In file included from apps/openmw/mwmechanics/actor.cpp:1:
apps/openmw/mwmechanics/actor.hpp:41:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/actor.cpp:9:12: error: cannot define or redeclare 'Actor' here because namespace 'MWMechanics' does not enclose namespace 'Actor'
    Actor::Actor(const MWWorld::Ptr &ptr, MWRender::Animation *animation)
    ~~~~~~~^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:88:9: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        DecoderPtr getDecoder();
        ^~~~~~~~~~
        ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^

apps/openmw/mwmechanics/aiactivate.hpp should add these lines:

apps/openmw/mwmechanics/aiactivate.hpp should remove these lines:
- #include "pathfinding.hpp"  // lines 8-8
- namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 18-18
- namespace MWWorld { class Ptr; }  // lines 22-22

The full include-list for apps/openmw/mwmechanics/aiactivate.hpp:
#include <string>                       // for string
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiActivate; } }  // lines 29-29
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 16-16
namespace MWWorld { class Ptr; }  // lines 11-11
---
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwmechanics/aiactivate.cpp should add these lines:

apps/openmw/mwmechanics/aiactivate.cpp should remove these lines:
- #include <memory>  // lines 3-3
- #include <vector>  // lines 5-5
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 21-21
- #include "components/esm/defs.hpp"  // lines 23-23
- #include "components/esm/loadpgrd.hpp"  // lines 25-25

The full include-list for apps/openmw/mwmechanics/aiactivate.cpp:
#include "aiactivate.hpp"
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for distance
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "movement.hpp"                 // for Movement
---
apps/openmw/mwmechanics/actor.cpp:11:9: error: use of undeclared identifier 'mCharacterController'; did you mean 'Actor::getCharacterController'?
        mCharacterController.reset(new CharacterController(ptr, animation));
        ^~~~~~~~~~~~~~~~~~~~
        Actor::getCharacterController
apps/openmw/mwmechanics/actor.hpp:31:30: note: 'Actor::getCharacterController' declared here
        CharacterController* getCharacterController();
                             ^
apps/openmw/mwmechanics/actor.cpp:11:9: error: call to non-static member function without an object argument
        mCharacterController.reset(new CharacterController(ptr, animation));
        ^~~~~~~~~~~~~~~~~~~~
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:133:50: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        virtual MWBase::SoundPtr playTrack(const DecoderPtr& decoder, PlayType type);
                                                 ^~~~~~~~~~
                                                 ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
apps/openmw/mwmechanics/actor.cpp:14:17: error: cannot define or redeclare 'updatePtr' here because namespace 'MWMechanics' does not enclose namespace 'Actor'
    void Actor::updatePtr(const MWWorld::Ptr &newPtr)
         ~~~~~~~^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

(apps/openmw/mwscript/consoleextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/consoleextensions.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwmechanics/actor.cpp:16:9: error: use of undeclared identifier 'mCharacterController'; did you mean 'Actor::getCharacterController'?
        mCharacterController->updatePtr(newPtr);
        ^~~~~~~~~~~~~~~~~~~~
        Actor::getCharacterController
apps/openmw/mwmechanics/actor.hpp:31:30: note: 'Actor::getCharacterController' declared here
        CharacterController* getCharacterController();
                             ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:146:58: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual MWBase::SoundPtr playManualSound3D(const Ogre::Vector3& initialPos, const std::string& soundId,
                                                         ^~~~~~~~~~~~~
                                                         ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:46: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                             ^~~~~~~~~~~~~
                                             ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:72: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                       ^~~~~~~~~~~~~
                                                                       ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:98: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                                                 ^~~~~~~~~~~~~
                                                                                                 ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/npcstats.cpp:32:
apps/openmw/mwmechanics/npcstats.hpp:16:5: error: expected '{'
    struct Class;
    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwsound/movieaudiofactory.cpp:30:
apps/openmw/mwsound/sound.hpp:20:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mPos;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/openmw/mwrender/shadows.hpp has correct #includes/fwd-decls)

apps/openmw/mwrender/shadows.cpp should add these lines:
#include "OgreViewport.h"               // for Viewport

apps/openmw/mwrender/shadows.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreSceneManager.h>  // lines 4-4
- #include <OgreShadowCameraSetupPSSM.h>  // lines 6-6
- #include <stddef.h>  // lines 11-11
- #include <openengine/ogre/renderer.hpp>  // lines 9-9
- #include "GLX/../OgrePrerequisites.h"  // lines 14-14
- #include "OgreCommon.h"  // lines 15-15
- #include "OgreCommon.h"  // lines 16-16
- #include "OgreLight.h"  // lines 17-17
- #include "OgreLight.h"  // lines 18-18
- #include "OgrePixelFormat.h"  // lines 19-19
- #include "OgrePixelFormat.h"  // lines 20-20
- #include "OgreShadowCameraSetup.h"  // lines 22-22
- #include "OgreSharedPtr.h"  // lines 24-24
- #include "OgreTexture.h"  // lines 26-26
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 27-27
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 28-28
- #include "renderconst.hpp"  // lines 29-29

The full include-list for apps/openmw/mwrender/shadows.cpp:
#include "shadows.hpp"
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreShadowCameraSetupLiSPSM.h>  // for LiSPSMShadowCameraSetup
#include <stddef.h>                     // for NULL
#include <components/settings/settings.hpp>  // for Manager
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include "GLX/../OgrePrerequisites.h"   // for Real, TexturePtr
#include "OgreShadowCameraSetup.h"      // for ShadowCameraSetupPtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "OgreViewport.h"               // for Viewport
---

(apps/openmw/mwworld/timestamp.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/timestamp.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/door.cpp:4:
In file included from ./components/esm/doorstate.hpp:4:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/door.cpp:4:
./components/esm/doorstate.hpp:18:31: error: expected class name
    struct DoorState : public ObjectState
                              ^

apps/openmw/mwsound/openal_output.hpp should add these lines:

apps/openmw/mwsound/openal_output.hpp should remove these lines:
- #include <stdint.h>  // lines 5-5
- #include <deque>  // lines 6-6
- #include <map>  // lines 7-7
- #include <memory>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"  // lines 16-16
- #include "apps/openmw/mwsound/soundmanagerimp.hpp"  // lines 18-18
- namespace MWWorld { namespace MWSound { class Sound; } }  // lines 31-31
- namespace MWWorld { namespace MWSound { class SoundManager; } }  // lines 32-32
- namespace MWWorld { namespace Ogre { namespace Ogre { class Vector3; } } }  // lines 23-23

The full include-list for apps/openmw/mwsound/openal_output.hpp:
#include <stdint.h>                     // for uint64_t
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "al.h"                         // for ALuint
#include "alc.h"                        // for ALCcontext, ALCdevice
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"  // for SoundPtr
#include "apps/openmw/mwsound/soundmanagerimp.hpp"  // for Environment, etc
#include "sound_output.hpp"             // for Sound_Output
namespace MWWorld { namespace MWSound { class OpenAL_Output::StreamThread; } }  // lines 88-88
namespace MWWorld { namespace Ogre { class Vector3; } }  // lines 26-26
---

components/nifbullet/bulletnifloader.hpp should add these lines:
class btStridingMeshInterface;

components/nifbullet/bulletnifloader.hpp should remove these lines:
- #include <BulletCollision/CollisionShapes/btCompoundShape.h>  // lines 27-27
- #include <BulletCollision/CollisionShapes/btConvexTriangleMeshShape.h>  // lines 28-28
- #include <cassert>  // lines 30-30
- #include <set>  // lines 34-34
- #include "BulletCollision/CollisionShapes/btStridingMeshInterface.h"  // lines 37-37
- #include "BulletCollision/CollisionShapes/btStridingMeshInterface.h"  // lines 38-38
- #include "BulletCollision/CollisionShapes/btTriangleInfoMap.h"  // lines 39-39
- #include "BulletCollision/CollisionShapes/btTriangleInfoMap.h"  // lines 45-45
- #include "LinearMath/btScalar.h"  // lines 40-40
- #include "LinearMath/btVector3.h"  // lines 46-46
- #include "OgreMatrix4.h"  // lines 43-43
- class btBoxShape;  // lines 56-56
- class btCompoundShape;  // lines 57-57
- class btTriangleMesh;  // lines 58-58
- namespace Nif { class Transformation; }  // lines 69-69
- namespace Ogre { class Quaternion; }  // lines 60-60
- namespace Ogre { class Resource; }  // lines 61-61
- namespace Ogre { class Vector3; }  // lines 62-62

The full include-list for components/nifbullet/bulletnifloader.hpp:
#include <stdlib.h>                     // for NULL, abort
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <set>                          // for set
#include <string>                       // for string, operator<<, etc
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreMatrix4.h"                // for Matrix4
class btBoxShape;  // lines 47-47
class btCompoundShape;  // lines 48-48
class btStridingMeshInterface;
class btTriangleMesh;  // lines 49-49
namespace Nif { class NiTriShape; }  // lines 67-67
namespace Nif { class Node; }  // lines 68-68
namespace Ogre { class Quaternion; }  // lines 51-51
namespace Ogre { class Resource; }  // lines 52-52
namespace Ogre { class Vector3; }  // lines 53-53
---

components/nifbullet/bulletnifloader.cpp should add these lines:
#include "LinearMath/btScalar.h"
#include "components/nifbullet/../nif/extra.hpp"  // for NiStringExtraData

components/nifbullet/bulletnifloader.cpp should remove these lines:
- #include <stddef.h>  // lines 29-29
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 25-25
- #include <cassert>  // lines 31-31
- #include <cstdio>  // lines 32-32
- #include <map>  // lines 33-33
- #include <map>  // lines 34-34
- #include <utility>  // lines 35-35
- #include <utility>  // lines 36-36
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 43-43
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 45-45
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 47-47
- #include "LinearMath/btQuaternion.h"  // lines 50-50
- #include "OgreQuaternion.h"  // lines 53-53
- #include "OgreResource.h"  // lines 55-55
- #include "OgreVector3.h"  // lines 58-58
- #include "components/nif/base.hpp"  // lines 61-61
- #include "components/nif/niftypes.hpp"  // lines 63-63
- #include "components/nif/record.hpp"  // lines 65-65
- #include "components/nif/recordptr.hpp"  // lines 67-67
- #include "openengine/bullet/BulletShapeLoader.h"  // lines 69-69

The full include-list for components/nifbullet/bulletnifloader.cpp:
#include "bulletnifloader.hpp"
#include <stddef.h>                     // for size_t
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <cassert>                      // for assert
#include <components/misc/stringops.hpp>  // for StringUtils
#include <components/nifcache/nifcache.hpp>  // for Cache, NIFFilePtr
#include <vector>                       // for vector
#include "../nif/controller.hpp"        // for NiKeyframeController
#include "../nif/data.hpp"              // for NiTriShapeData
#include "../nif/niffile.hpp"           // for NIFFile
#include "../nif/node.hpp"              // for Node, NiNode, NiTriShape, etc
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "LinearMath/btQuaternion.h"    // for btQuaternion
#include "LinearMath/btScalar.h"
#include "LinearMath/btTransform.h"     // for btTransform
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreResource.h"               // for ResourcePtr, etc
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreVector3.h"                // for Vector3
#include "components/nif/base.hpp"      // for Extra, Controller, etc
#include "components/nif/niftypes.hpp"  // for Transformation
#include "components/nif/record.hpp"    // for Record, etc
#include "components/nif/recordptr.hpp"  // for ExtraPtr, NodeList, etc
#include "components/nifbullet/../nif/extra.hpp"  // for NiStringExtraData
#include "openengine/bullet/BulletShapeLoader.h"  // for BulletShape, etc
---

apps/openmw/mwgui/bookwindow.hpp should add these lines:

apps/openmw/mwgui/bookwindow.hpp should remove these lines:
- #include <components/widgets/imagebutton.hpp>  // lines 4-4
- #include <utility>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 10-10
- namespace Gui { class ImageButton; }  // lines 21-21
- namespace MyGUI { class TextBox; }  // lines 24-24
- namespace MyGUI { class Widget; }  // lines 25-25

The full include-list for apps/openmw/mwgui/bookwindow.hpp:
#include <utility>                      // for pair
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "windowbase.hpp"               // for WindowBase
namespace Gui { class ImageButton; }  // lines 19-19
namespace MyGUI { class TextBox; }  // lines 14-14
namespace MyGUI { class Widget; }  // lines 15-15
---

apps/openmw/mwgui/bookwindow.cpp should add these lines:

apps/openmw/mwgui/bookwindow.cpp should remove these lines:
- #include <MyGUI_TextBox.h>  // lines 1-1
- #include <components/esm/loadbook.hpp>  // lines 2-2
- #include "../mwbase/soundmanager.hpp"  // lines 5-5
- #include "MyGUI_Align.h"  // lines 10-10
- #include "MyGUI_RTTI.h"  // lines 13-13
- #include "MyGUI_RTTI.h"  // lines 14-14
- #include "MyGUI_StringUtility.h"  // lines 15-15
- #include "MyGUI_StringUtility.h"  // lines 16-16
- #include "MyGUI_TPoint.h"  // lines 18-18
- #include "MyGUI_TSize.h"  // lines 20-20
- #include "MyGUI_Types.h"  // lines 22-22
- #include "MyGUI_Widget.h"  // lines 24-24
- #include "MyGUI_WidgetInput.h"  // lines 25-25
- #include "MyGUI_WidgetInput.h"  // lines 26-26
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 32-32
- #include "components/widgets/imagebutton.hpp"  // lines 35-35

The full include-list for apps/openmw/mwgui/bookwindow.cpp:
#include "bookwindow.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/actiontake.hpp"    // for ActionTake
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "components/widgets/imagebutton.hpp"  // for ImageButton
#include "formatting.hpp"               // for BookFormatter
---

apps/openmw/mwmechanics/actor.hpp should add these lines:
namespace MWWorld { class Ptr; }

apps/openmw/mwmechanics/actor.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/character.hpp"  // lines 7-7
- #include "apps/openmw/mwmechanics/character.hpp"  // lines 8-8
- class Ptr;  // lines 16-16

The full include-list for apps/openmw/mwmechanics/actor.hpp:
#include <memory>                       // for auto_ptr
#include "aistate.hpp"                  // for AiState
class CharacterController;  // lines 20-20
namespace MWRender { class Animation; }  // lines 13-13
namespace MWWorld { class Ptr; }
---

apps/openmw/mwmechanics/actor.cpp should add these lines:

apps/openmw/mwmechanics/actor.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/aistate.hpp"  // lines 2-2
- #include "apps/openmw/mwmechanics/aistate.hpp"  // lines 3-3
- #include "character.hpp"  // lines 4-4

The full include-list for apps/openmw/mwmechanics/actor.cpp:
#include "actor.hpp"
---
error: no such file or directory: 'build-include/apps/launcher/moc_datafilespage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/moc_graphicspage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/moc_maindialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/openmw/mwworld/esmloader.hpp should add these lines:

apps/openmw/mwworld/esmloader.hpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 5-5
- namespace Loading { class Listener; }  // lines 12-12

The full include-list for apps/openmw/mwworld/esmloader.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <vector>                       // for vector
#include "contentloader.hpp"            // for ContentLoader
namespace ESM { class ESMReader; }  // lines 22-22
namespace Loading { class Listener; }  // lines 11-11
namespace MWWorld { class ESMStore; }  // lines 28-28
namespace ToUTF8 { class Utf8Encoder; }  // lines 17-17
---

apps/openmw/mwworld/esmloader.cpp should add these lines:

apps/openmw/mwworld/esmloader.cpp should remove these lines:
- #include "apps/openmw/mwworld/contentloader.hpp"  // lines 4-4
- namespace Loading { class Listener; }  // lines 11-11

The full include-list for apps/openmw/mwworld/esmloader.cpp:
#include "esmloader.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/openmw/mwworld/contentloader.hpp"  // for ContentLoader
#include "esmstore.hpp"                 // for ESMStore
namespace Loading { class Listener; }  // lines 9-9
---
error: no such file or directory: 'build-include/apps/launcher/moc_playpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/moc_textslotmsgbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
In file included from apps/openmw/mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
In file included from apps/openmw/mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
In file included from apps/openmw/mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
apps/openmw/mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
apps/openmw/mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
error: no such file or directory: 'build-include/apps/launcher/moc_settingspage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwbase/environment.cpp:6:
In file included from apps/openmw/mwbase/world.hpp:10:
apps/openmw/mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwbase/environment.cpp:6:
apps/openmw/mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
error: no such file or directory: 'build-include/apps/launcher/utils/moc_textinputdialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwclass/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
In file included from ./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
In file included from ./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
In file included from ./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
error: no such file or directory: 'build-include/apps/launcher/utils/moc_profilescombobox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:21:
./apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
error: no such file or directory: 'build-include/apps/launcher/utils/moc_lineedit.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:22:
apps/openmw/mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:8:
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwclass/potion.cpp:14:
In file included from apps/openmw/mwclass/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwclass/../mwbase/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwclass/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

components/nifoverrides/nifoverrides.hpp should add these lines:

components/nifoverrides/nifoverrides.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9

The full include-list for components/nifoverrides/nifoverrides.hpp:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <utility>                      // for pair
namespace sh { class MaterialInstance; }  // lines 15-15
---

components/nifoverrides/nifoverrides.cpp should add these lines:

components/nifoverrides/nifoverrides.cpp should remove these lines:
- #include "../extern/shiny/Main/MaterialInstance.hpp"  // lines 4-4
- #include "../extern/shiny/Main/PropertyBase.hpp"  // lines 5-5

The full include-list for components/nifoverrides/nifoverrides.cpp:
#include "nifoverrides.hpp"
#include <OgreStringConverter.h>        // for StringConverter
#include <../components/misc/stringops.hpp>  // for StringUtils
#include "OgreConfigFile.h"             // for ConfigFile::SectionIterator, etc
#include "OgrePrerequisites.h"          // for String
---
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwsound/openal_output.cpp should add these lines:

apps/openmw/mwsound/openal_output.cpp should remove these lines:
- #include <string.h>  // lines 16-16
- #include <algorithm>  // lines 17-17
- #include <boost/date_time/posix_time/posix_time_duration.hpp>  // lines 1-1
- #include <boost/date_time/posix_time/posix_time_duration.hpp>  // lines 2-2
- #include <boost/date_time/time_duration.hpp>  // lines 3-3
- #include <boost/date_time/time_duration.hpp>  // lines 4-4
- #include <boost/ref.hpp>  // lines 5-5
- #include <boost/ref.hpp>  // lines 6-6
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 8-8
- #include <boost/thread/pthread/recursive_mutex.hpp>  // lines 10-10
- #include <boost/thread/pthread/thread_data.hpp>  // lines 11-11
- #include <boost/thread/thread_only.hpp>  // lines 13-13
- #include <exception>  // lines 19-19
- #include <iostream>  // lines 20-20
- #include <stdexcept>  // lines 21-21
- #include <utility>  // lines 22-22
- #include <utility>  // lines 23-23
- #include <vector>  // lines 24-24
- #include "OgreException.h"  // lines 26-26
- #include "OgreException.h"  // lines 27-27
- #include "OgreVector3.h"  // lines 28-28
- #include "OgreVector3.h"  // lines 29-29
- #include "apps/openmw/mwsound/sound_output.hpp"  // lines 31-31
- #include "loudness.hpp"  // lines 32-32

The full include-list for apps/openmw/mwsound/openal_output.cpp:
#include "openal_output.hpp"
#include <stddef.h>                     // for size_t, NULL
#include <string.h>                     // for strlen
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <boost/thread/pthread/recursive_mutex.hpp>
#include <boost/thread/thread_only.hpp>  // for thread
#include <exception>                    // for exception
#include "apps/openmw/mwsound/sound_output.hpp"  // for Sound_Output
#include "sound.hpp"                    // for Sound
#include "sound_decoder.hpp"
#include "soundmanagerimp.hpp"          // for Environment::Env_Underwater, etc
---
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/door.cpp:17:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

(libs/openengine/gui/manager.hpp has correct #includes/fwd-decls)

libs/openengine/gui/manager.cpp should add these lines:
#include "GLX/OgreTimerImp.h"           // for Timer
namespace sh { class MaterialInstance; }

libs/openengine/gui/manager.cpp should remove these lines:
- #include <stddef.h>  // lines 8-8
- #include <extern/shiny/Main/Factory.hpp>  // lines 5-5
- #include <extern/shiny/Platforms/Ogre/OgreMaterial.hpp>  // lines 6-6
- #include <map>  // lines 11-11
- #include <ostream>  // lines 13-13
- #include <utility>  // lines 14-14
- #include <utility>  // lines 15-15
- #include "GLX/../OgrePrerequisites.h"  // lines 18-18
- #include "MyGUI_IRenderTarget.h"  // lines 20-20
- #include "MyGUI_ITexture.h"  // lines 22-22
- #include "MyGUI_IVertexBuffer.h"  // lines 24-24
- #include "MyGUI_LogLevel.h"  // lines 26-26
- #include "MyGUI_LogManager.h"  // lines 28-28
- #include "MyGUI_LogStream.h"  // lines 30-30
- #include "MyGUI_OgreDataManager.h"  // lines 32-32
- #include "MyGUI_OgreDiagnostic.h"  // lines 34-34
- #include "MyGUI_OgreRenderManager.h"  // lines 36-36
- #include "MyGUI_OgreTexture.h"  // lines 38-38
- #include "MyGUI_OgreVertexBuffer.h"  // lines 40-40
- #include "MyGUI_Platform.h"  // lines 42-42
- #include "MyGUI_Prerequest.h"  // lines 44-44
- #include "MyGUI_RenderFormat.h"  // lines 46-46
- #include "MyGUI_RenderManager.h"  // lines 48-48
- #include "MyGUI_RenderTargetInfo.h"  // lines 50-50
- #include "MyGUI_Types.h"  // lines 52-52
- #include "OgreBlendMode.h"  // lines 54-54
- #include "OgreBuildSettings.h"  // lines 56-56
- #include "OgreCommon.h"  // lines 58-58
- #include "OgreGpuProgram.h"  // lines 60-60
- #include "OgreHardwareVertexBuffer.h"  // lines 62-62
- #include "OgreMatrix4.h"  // lines 64-64
- #include "OgrePass.h"  // lines 65-65
- #include "OgrePass.h"  // lines 66-66
- #include "OgrePlatform.h"  // lines 68-68
- #include "OgreRenderOperation.h"  // lines 70-70
- #include "OgreRenderQueue.h"  // lines 72-72
- #include "OgreRenderQueueListener.h"  // lines 74-74
- #include "OgreRenderSystem.h"  // lines 76-76
- #include "OgreRenderSystemCapabilities.h"  // lines 78-78
- #include "OgreRenderWindow.h"  // lines 80-80
- #include "OgreResourceGroupManager.h"  // lines 82-82
- #include "OgreRoot.h"  // lines 84-84
- #include "OgreSceneManager.h"  // lines 86-86
- #include "OgreSharedPtr.h"  // lines 88-88
- #include "OgreTechnique.h"  // lines 89-89
- #include "OgreTechnique.h"  // lines 90-90
- #include "OgreTexture.h"  // lines 92-92
- #include "OgreTextureManager.h"  // lines 94-94
- #include "OgreTextureUnitState.h"  // lines 96-96
- #include "OgreVertexIndexData.h"  // lines 98-98
- #include "OgreViewport.h"  // lines 100-100
- #include "OgreWindowEventUtilities.h"  // lines 102-102
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 103-103
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 104-104

The full include-list for libs/openengine/gui/manager.cpp:
#include "manager.hpp"
#include <MyGUI_ConsoleLogListener.h>   // for ConsoleLogListener
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_LevelLogFilter.h>       // for LevelLogFilter
#include <MyGUI_LogSource.h>            // for LogSource
#include <stddef.h>                     // for NULL, size_t
#include <cassert>                      // for assert
#include <map>                          // for map, map<>::value_compare
#include <ostream>                      // for basic_ostream, operator<<
#include "GLX/../OgrePrerequisites.h"   // for OGRE_VERSION, String, etc
#include "GLX/OgreTimerImp.h"           // for Timer
#include "MyGUI_IRenderTarget.h"        // for IRenderTarget
#include "MyGUI_ITexture.h"             // for ITexture
#include "MyGUI_IVertexBuffer.h"        // for IVertexBuffer
#include "MyGUI_LogLevel.h"             // for LogLevel, etc
#include "MyGUI_LogManager.h"           // for LogManager
#include "MyGUI_LogStream.h"            // for LogStream
#include "MyGUI_OgreDataManager.h"      // for OgreDataManager
#include "MyGUI_OgreDiagnostic.h"       // for MYGUI_PLATFORM_ASSERT, etc
#include "MyGUI_OgreRenderManager.h"    // for OgreRenderManager
#include "MyGUI_OgreTexture.h"          // for OgreTexture
#include "MyGUI_OgreVertexBuffer.h"     // for OgreVertexBuffer
#include "MyGUI_Platform.h"             // for MYGUI_DEBUG_MODE
#include "MyGUI_Prerequest.h"           // for nullptr, etc
#include "MyGUI_RenderFormat.h"         // for VertexColourType, etc
#include "MyGUI_RenderManager.h"        // for RenderManager
#include "MyGUI_RenderTargetInfo.h"     // for RenderTargetInfo
#include "MyGUI_Types.h"                // for IntSize
#include "OgreBlendMode.h"              // for LayerBlendModeEx, etc
#include "OgreBuildSettings.h"
#include "OgreCommon.h"                 // for FilterOptions::FO_LINEAR, etc
#include "OgreGpuProgram.h"             // for GpuProgram (ptr only), etc
#include "OgreHardwareVertexBuffer.h"   // for VertexElementType, etc
#include "OgreMatrix4.h"                // for Matrix4, Matrix4::IDENTITY
#include "OgrePlatform.h"               // for uint8
#include "OgreRenderOperation.h"        // for RenderOperation
#include "OgreRenderQueue.h"
#include "OgreRenderQueueListener.h"    // for RenderQueueListener
#include "OgreRenderSystem.h"           // for RenderSystem, etc
#include "OgreRenderSystemCapabilities.h"
#include "OgreRenderWindow.h"           // for RenderWindow
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreRoot.h"                   // for Root
#include "OgreSceneManager.h"           // for SceneManager
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for TextureType::TEX_TYPE_2D
#include "OgreTextureManager.h"         // for TextureManager
#include "OgreTextureUnitState.h"       // for TextureUnitState, etc
#include "OgreVertexIndexData.h"        // for VertexData
#include "OgreViewport.h"               // for Viewport
#include "OgreWindowEventUtilities.h"   // for WindowEventUtilities, etc
#include "loglistener.hpp"              // for CustomLogListener
namespace sh { class MaterialInstance; }
---

apps/openmw/mwdialogue/quest.hpp should add these lines:

apps/openmw/mwdialogue/quest.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "apps/openmw/mwdialogue/journalentry.hpp"  // lines 8-8

The full include-list for apps/openmw/mwdialogue/quest.hpp:
#include <string>                       // for string
#include "apps/openmw/mwdialogue/journalentry.hpp"  // for JournalEntry
#include "topic.hpp"                    // for Topic
namespace ESM { struct QuestState; }  // lines 15-15
---

apps/openmw/mwdialogue/quest.cpp should add these lines:

apps/openmw/mwdialogue/quest.cpp should remove these lines:
- #include <list>  // lines 4-4
- #include <stdexcept>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 14-14
- #include "apps/openmw/mwdialogue/topic.hpp"  // lines 16-16
- #include "components/esm/loaddial.hpp"  // lines 18-18
- #include "components/esm/loadinfo.hpp"  // lines 20-20

The full include-list for apps/openmw/mwdialogue/quest.cpp:
#include "quest.hpp"
#include <components/esm/queststate.hpp>  // for QuestState
#include <list>                         // for _List_const_iterator, etc
#include <stdexcept>                    // for runtime_error
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwdialogue/topic.hpp"  // for Topic, etc
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadinfo.hpp"  // for DialInfo, etc
---

apps/openmw/mwmechanics/npcstats.hpp should add these lines:
namespace ESM { struct Class; }
namespace ESM { struct NpcStats; }

apps/openmw/mwmechanics/npcstats.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <set>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 9-9
- #include "components/esm/loadskil.hpp"  // lines 11-11
- struct Class;  // lines 16-16

The full include-list for apps/openmw/mwmechanics/npcstats.hpp:
#include <string>                       // for string
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "creaturestats.hpp"            // for CreatureStats
#include "stat.hpp"                     // for SkillValue
namespace ESM { struct Class; }
namespace ESM { struct NpcStats; }
---

apps/openmw/mwmechanics/npcstats.cpp should add these lines:
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue, etc
#include "components/esm/loadfact.hpp"  // for Faction, etc
namespace MWWorld { class ESMStore; }

apps/openmw/mwmechanics/npcstats.cpp should remove these lines:
- #include <stddef.h>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <boost/format.hpp>  // lines 2-2
- #include <iomanip>  // lines 10-10
- #include <iterator>  // lines 11-11
- #include <iterator>  // lines 12-12
- #include <ostream>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <utility>  // lines 17-17
- #include <vector>  // lines 18-18
- #include "../mwbase/soundmanager.hpp"  // lines 21-21
- #include "../mwworld/esmstore.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/attr.hpp"  // lines 27-27
- #include "components/esm/statstate.hpp"  // lines 29-29
- #include "components/misc/stringops.hpp"  // lines 31-31

The full include-list for apps/openmw/mwmechanics/npcstats.cpp:
#include "npcstats.hpp"
#include <stddef.h>                     // for size_t
#include <components/esm/loadclas.hpp>  // for Class, Class::CLDTstruct
#include <components/esm/loadgmst.hpp>  // for GameSetting
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <components/esm/npcstats.hpp>  // for NpcStats, NpcStats::Skill
#include <ostream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadfact.hpp"  // for Faction, etc
#include "components/esm/statstate.hpp"  // for StatState
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class ESMStore; }
---
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:16:
apps/openmw/mwworld/../mwrender/debugging.hpp:78:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridLines(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
components/to_utf8/to_utf8.cpp:44:1: error: use of undeclared identifier 'Utf8Encoder'
Utf8Encoder::Utf8Encoder(const FromType sourceEncoding):
^
components/to_utf8/to_utf8.cpp:44:32: error: unknown type name 'FromType'
Utf8Encoder::Utf8Encoder(const FromType sourceEncoding):
                               ^
components/to_utf8/to_utf8.cpp:77:13: error: use of undeclared identifier 'Utf8Encoder'
std::string Utf8Encoder::getUtf8(const char* input, size_t size)
            ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
components/to_utf8/to_utf8.cpp:118:13: error: use of undeclared identifier 'Utf8Encoder'
std::string Utf8Encoder::getLegacyEnc(const char *input, size_t size)
            ^
components/to_utf8/to_utf8.cpp:161:6: error: use of undeclared identifier 'Utf8Encoder'
void Utf8Encoder::resize(size_t size)
     ^

apps/openmw/mwworld/actioneat.hpp should add these lines:

apps/openmw/mwworld/actioneat.hpp should remove these lines:
- namespace MWWorld { class Ptr; }  // lines 9-9

The full include-list for apps/openmw/mwworld/actioneat.hpp:
#include "action.hpp"                   // for Action
namespace MWWorld { class Ptr; }  // lines 7-7
---
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:16:
apps/openmw/mwworld/../mwrender/debugging.hpp:79:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridPoints(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
components/to_utf8/to_utf8.cpp:182:8: error: use of undeclared identifier 'Utf8Encoder'
size_t Utf8Encoder::getLength(const char* input, bool &ascii)
       ^
components/to_utf8/to_utf8.cpp:214:6: error: use of undeclared identifier 'Utf8Encoder'
void Utf8Encoder::copyFromArray(unsigned char ch, char* &out)
     ^

apps/openmw/mwworld/actioneat.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actioneat.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwworld/actioneat.cpp:
#include "actioneat.hpp"
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <string>                       // for string
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "class.hpp"                    // for Class
---
components/to_utf8/to_utf8.cpp:229:8: error: use of undeclared identifier 'Utf8Encoder'
size_t Utf8Encoder::getLength2(const char* input, bool &ascii)
       ^
components/to_utf8/to_utf8.cpp:273:6: error: use of undeclared identifier 'Utf8Encoder'
void Utf8Encoder::copyFromArray2(const char*& chp, char* &out)
     ^
components/to_utf8/to_utf8.cpp:326:9: error: no type named 'FromType' in namespace 'ToUTF8'
ToUTF8::FromType ToUTF8::calculateEncoding(const std::string& encodingName)
~~~~~~~~^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
components/to_utf8/to_utf8.cpp:329:24: error: no member named 'WINDOWS_1250' in namespace 'ToUTF8'
        return ToUTF8::WINDOWS_1250;
               ~~~~~~~~^
components/to_utf8/to_utf8.cpp:331:24: error: no member named 'WINDOWS_1251' in namespace 'ToUTF8'
        return ToUTF8::WINDOWS_1251;
               ~~~~~~~~^
components/to_utf8/to_utf8.cpp:333:24: error: no member named 'WINDOWS_1252' in namespace 'ToUTF8'
        return ToUTF8::WINDOWS_1252;
               ~~~~~~~~^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:17:
apps/openmw/mwworld/../mwrender/objects.hpp:53:40: error: no member named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'
    std::map<MWWorld::CellStore*,Ogre::AxisAlignedBox> mBounds;
                                 ~~~~~~^
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
components/to_utf8/to_utf8.cpp:338:21: error: out-of-line definition of 'encodingUsingMessage' does not match any declaration in namespace 'ToUTF8'
std::string ToUTF8::encodingUsingMessage(const std::string& encodingName)
                    ^~~~~~~~~~~~~~~~~~~~
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwgui/../mwbase/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwclass/activator.hpp should add these lines:

apps/openmw/mwclass/activator.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace MWRender { class RenderingInterface; }  // lines 24-24
- namespace MWWorld { class Action; }  // lines 27-27
- namespace MWWorld { class CellStore; }  // lines 28-28
- namespace MWWorld { class PhysicsSystem; }  // lines 29-29

The full include-list for apps/openmw/mwclass/activator.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 22-22
namespace MWWorld { class Action; }  // lines 16-16
namespace MWWorld { class CellStore; }  // lines 17-17
namespace MWWorld { class PhysicsSystem; }  // lines 18-18
---

apps/openmw/mwclass/activator.cpp should add these lines:
namespace ESM { struct Sound; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwclass/activator.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadacti.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwworld/action.hpp"  // lines 17-17
- #include "../mwworld/cellstore.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "../mwworld/failedaction.hpp"  // lines 20-20
- #include "../mwworld/nullaction.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 33-33
- #include "components/esm/loadsoun.hpp"  // lines 34-34
- #include "components/esm/loadsoun.hpp"  // lines 35-35

The full include-list for apps/openmw/mwclass/activator.cpp:
#include "activator.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
namespace ESM { struct Sound; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }
---
apps/openmw/mwworld/../mwrender/objects.hpp:77:5: error: no type named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    Ogre::AxisAlignedBox getDimensions(MWWorld::CellStore*);
    ^~~~~~~~~~~~~~~~~~~~
    AxisAlignedBox
/usr/include/OGRE/OgreAxisAlignedBox.h:54:20: note: 'AxisAlignedBox' declared here
        class _OgreExport AxisAlignedBox
                          ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwgui/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:18:
In file included from /usr/include/boost/range/begin.hpp:24:
/usr/include/boost/range/iterator.hpp:61:13: error: use of undeclared identifier 'mpl'; did you mean 'mpl_'?
            mpl::eval_if_c< is_const<C>::value,
            ^
/usr/include/boost/mpl/aux_/integral_wrapper.hpp:40:1: note: 'mpl_' declared here
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN
^
/usr/include/boost/mpl/aux_/adl_barrier.hpp:24:63: note: expanded from macro 'BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN'
#   define BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN namespace mpl_ {
                                                              ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:14:
apps/openmw/mwgui/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:18:
In file included from /usr/include/boost/range/begin.hpp:24:
/usr/include/boost/range/iterator.hpp:61:13: error: no template named 'eval_if_c' in namespace 'mpl_'; did you mean '::boost::mpl::eval_if_c'?
            mpl::eval_if_c< is_const<C>::value,
            ^~~~~
/usr/include/boost/mpl/eval_if.hpp:53:8: note: '::boost::mpl::eval_if_c' declared here
struct eval_if_c
       ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:18:
In file included from /usr/include/boost/range/begin.hpp:24:
/usr/include/boost/range/iterator.hpp:61:29: error: no template named 'is_const'; did you mean '::boost::is_const'?
            mpl::eval_if_c< is_const<C>::value,
                            ^
/usr/include/boost/type_traits/is_const.hpp:77:30: note: '::boost::is_const' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_const,T,::boost::detail::is_const_rvalue_filter<T>::value)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:18:
In file included from /usr/include/boost/range/begin.hpp:24:
/usr/include/boost/range/iterator.hpp:62:60: error: no template named 'remove_const'; did you mean '::boost::remove_const'?
                            range_const_iterator< typename remove_const<C>::type >,
                                                           ^
/usr/include/boost/type_traits/remove_const.hpp:73:30: note: '::boost::remove_const' declared here
BOOST_TT_AUX_TYPE_TRAIT_DEF1(remove_const,T,typename boost::detail::remove_const_impl<T>::type)
                             ^
/usr/include/boost/type_traits/detail/type_trait_def.hpp:18:31: note: expanded from macro 'BOOST_TT_AUX_TYPE_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
apps/openmw/mwgui/spellbuyingwindow.cpp:19:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/countdialog.cpp:4:
./components/widgets/numericeditbox.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:19:
In file included from /usr/include/boost/range/end.hpp:24:
In file included from /usr/include/boost/range/detail/implementation_help.hpp:15:
In file included from /usr/include/boost/range/detail/common.hpp:19:
/usr/include/boost/range/detail/sfinae.hpp:24:15: error: use of undeclared identifier 'type_traits'; did you mean '::boost::type_traits'?
        using type_traits::yes_type;
              ^
/usr/include/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:26:11: note: '::boost::type_traits' declared here
namespace type_traits {
          ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:19:
In file included from /usr/include/boost/range/end.hpp:24:
In file included from /usr/include/boost/range/detail/implementation_help.hpp:15:
In file included from /usr/include/boost/range/detail/common.hpp:19:
/usr/include/boost/range/detail/sfinae.hpp:25:15: error: use of undeclared identifier 'type_traits'; did you mean '::boost::type_traits'?
        using type_traits::no_type;
              ^
/usr/include/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:26:11: note: '::boost::type_traits' declared here
namespace type_traits {
          ^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:32:
In file included from /usr/include/OGRE/OgreRenderable.h:36:
In file included from /usr/include/OGRE/OgreMaterial.h:34:
In file included from /usr/include/OGRE/OgreIteratorWrappers.h:33:
In file included from /usr/include/OGRE/OgreIteratorRange.h:48:
In file included from /usr/include/boost/range.hpp:26:
In file included from /usr/include/boost/range/functions.hpp:19:
In file included from /usr/include/boost/range/end.hpp:24:
In file included from /usr/include/boost/range/detail/implementation_help.hpp:15:
/usr/include/boost/range/detail/common.hpp:47:17: error: use of undeclared identifier 'mpl'; did you mean 'mpl_'?
        typedef mpl::int_<1>::type    std_container_;
                ^
/usr/include/boost/mpl/aux_/integral_wrapper.hpp:40:1: note: 'mpl_' declared here
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN
^
/usr/include/boost/mpl/aux_/adl_barrier.hpp:24:63: note: expanded from macro 'BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN'
#   define BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN namespace mpl_ {
                                                              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
In file included from apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:10:
apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actiontrap.cpp:1:
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:18:5: error: expected '{'
    struct EffectList;
    ^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:43:45: error: no type named 'Spell' in namespace 'ESM'
    float getSpellSuccessChance (const ESM::Spell* spell, const MWWorld::Ptr& actor, int* effectiveSchool = NULL, bool cap=true);
                                       ~~~~~^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:47:35    struct LiveCellRef : public LiveCellRefBase:
            ^error
: no type named 'Spell' in namespace 'ESM'
    int getSpellSchool(const ESM::Spell* spell, const MWWorld::Ptr& actor);
                             ~~~~~^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:50:41: error: no type named 'Spell' in namespace 'ESM'
    bool spellIncreasesSkill(const ESM::Spell* spell);
                                   ~~~~~^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:62:43: error: no type named 'Spell' in namespace 'ESM'
                               const ESM::Spell* spell = NULL, const MagicEffects* effects = NULL);
                                     ~~~~~^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:69:42: error: no type named 'Spell' in namespace 'ESM'
                              const ESM::Spell* spell = NULL, const MagicEffects* effects = NULL);
                                    ~~~~~^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:8:
./apps/openmw/mwmechanics/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:82:15: error: no type named 'Vector3' in namespace 'Ogre'
        Ogre::Vector3 mHitPosition; // Used for spawning area orb
        ~~~~~~^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:88:31: error: no type named 'Spell' in namespace 'ESM'
        bool cast (const ESM::Spell* spell);
                         ~~~~~^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:94:31: error: no type named 'Ingredient' in namespace 'ESM'
        bool cast (const ESM::Ingredient* ingredient);
                         ~~~~~^
apps/openmw/mwworld/../mwmechanics/spellcasting.hpp:96:31: error: no type named 'Potion' in namespace 'ESM'; did you mean 'Position'?
        bool cast (const ESM::Potion* potion);
                         ~~~~~^~~~~~
                              Position
./components/esm/defs.hpp:36:8: note: 'Position' declared here
struct Position
       ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwmechanics/obstacle.cpp:52:16: error: member access into incomplete type 'MWWorld::CellStore'
        if(cell->getCell()->isExterior())
               ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:24:11: note: forward declaration of 'MWWorld::CellStore'
    class CellStore;
          ^
apps/openmw/mwmechanics/obstacle.cpp:56:54: error: member access into incomplete type 'MWWorld::CellStore'
        MWWorld::CellRefList<ESM::Door>& doors = cell->get<ESM::Door>();
                                                     ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:24:11: note: forward declaration of 'MWWorld::CellStore'
    class CellStore;
          ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
In file included from apps/openmw/mwgui/../mwbase/soundmanager.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

components/to_utf8/to_utf8.cpp should add these lines:
#include <string>                       // for string, operator==, etc

components/to_utf8/to_utf8.cpp should remove these lines:
- #include <iostream>  // lines 2-2
- #include <vector>  // lines 4-4
- #include "tables_gen.hpp"  // lines 40-40

The full include-list for components/to_utf8/to_utf8.cpp:
#include <cassert>                      // for assert
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator==, etc
---
apps/openmw/mwmechanics/obstacle.cpp:71:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<ESM::Door>& ref = *it;
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/obstacle.cpp:76:28: error: no matching constructor for initialization of 'MWWorld::Ptr'
                    return MWWorld::Ptr(&ref, actor.getCell()); // found, stop searching
                           ^            ~~~~~~~~~~~~~~~~~~~~~
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:39:13: note: candidate constructor not viable: no known conversion from 'MWWorld::LiveCellRef<ESM::Door> *' to 'MWWorld::LiveCellRefBase *' for 1st argument
            Ptr(MWWorld::LiveCellRefBase *liveCellRef=0, CellStore *cell=0)
            ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:30:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
    class Ptr
          ^

apps/openmw/mwsound/movieaudiofactory.hpp should add these lines:

apps/openmw/mwsound/movieaudiofactory.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- namespace Video { class MovieAudioDecoder; }  // lines 12-12
- namespace Video { struct VideoState; }  // lines 13-13

The full include-list for apps/openmw/mwsound/movieaudiofactory.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <extern/ogre-ffmpeg-videoplayer/audiofactory.hpp>
namespace Video { class MovieAudioDecoder; }  // lines 9-9
namespace Video { struct VideoState; }  // lines 10-10
---

apps/openmw/mwsound/movieaudiofactory.cpp should add these lines:

apps/openmw/mwsound/movieaudiofactory.cpp should remove these lines:
- #include <libavcodec/avcodec.h>  // lines 4-4
- #include <libavformat/avformat.h>  // lines 6-6
- #include <libavutil/channel_layout.h>  // lines 8-8
- #include <libavutil/samplefmt.h>  // lines 10-10
- #include <stddef.h>  // lines 12-12
- #include <stdint.h>  // lines 14-14
- #include <sys/types.h>  // lines 16-16
- #include <ostream>  // lines 18-18
- #include <stdexcept>  // lines 19-19
- #include <stdexcept>  // lines 20-20
- #include <string>  // lines 22-22
- #include "../mwbase/environment.hpp"  // lines 24-24
- #include "OgreDataStream.h"  // lines 26-26
- #include "OgreSharedPtr.h"  // lines 28-28
- #include "sound.hpp"  // lines 30-30

The full include-list for apps/openmw/mwsound/movieaudiofactory.cpp:
#include "movieaudiofactory.hpp"
#include <libavcodec/avcodec.h>         // for AVCodecContext
#include <libavformat/avformat.h>       // for AVStream
#include <libavutil/channel_layout.h>   // for AV_CH_LAYOUT_STEREO, etc
#include <libavutil/samplefmt.h>
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint64_t
#include <sys/types.h>                  // for ssize_t
#include <extern/ogre-ffmpeg-videoplayer/audiodecoder.hpp>
#include <extern/ogre-ffmpeg-videoplayer/videostate.hpp>
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/soundmanager.hpp"   // for SoundPtr
#include "OgreDataStream.h"             // for DataStream
#include "OgreSharedPtr.h"              // for SharedPtr
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType, etc
namespace MWWorld { namespace MWSound { class MovieAudioDecoder; } }  // lines 38-38
---
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
In file included from apps/openmw/mwgui/dialogue.cpp:7:
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);./components/widgets/list.hpp
:                ^~~~~~~~~~~~~~~~~~~~9
:                LiveCellRef10
: fatal error: ./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp'MyGUI_Delegate' file not found:
82:12: note: 'LiveCellRef' declared here
#include "MyGUI_Delegate"
         ^
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/effectmanager.cpp:17:
In file included from apps/openmw/mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/door.cpp:18:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17In file included from :apps/openmw/mwclass/lockpick.cpp :error11: :
no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?In file included from 
apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef            MWWorld::LiveCellRef<T> *get() const

            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp::1282:: 12note::  'LiveCellRef' declared herenote
: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^    struct LiveCellRef : public LiveCellRefBase

           ^
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/class.cpp:11:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creature.cpp:4:
In file included from ./components/esm/creaturestate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"
In file included from apps/openmw/mwgui/alchemywindow.cpp:12:
apps/openmw/mwgui/../mwmechanics/alchemy.hpp:20:5: error: expected '{'
    struct EffectKey;
    ^
apps/openmw/mwgui/../mwmechanics/alchemy.hpp:122:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/summoning.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwrender/camera.hpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwrender/camera.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwrender/camera.hpp:
#include <string>                       // for string
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class NpcAnimation; }  // lines 17-17
namespace Ogre { class Camera; }  // lines 11-11
namespace Ogre { class SceneNode; }  // lines 12-12
namespace Ogre { class Vector3; }  // lines 10-10
---
In file included from apps/openmw/mwclass/lockpick.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwrender/camera.cpp should add these lines:

apps/openmw/mwrender/camera.cpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "OgreMath.h"  // lines 13-13
- #include "OgreNode.h"  // lines 15-15
- #include "OgreQuaternion.h"  // lines 17-17
- #include "OgreVector3.h"  // lines 19-19

The full include-list for apps/openmw/mwrender/camera.cpp:
#include "camera.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTagPoint.h>               // for TagPoint
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/refdata.hpp"       // for RefData
#include "OgreMath.h"                   // for Math, Degree, Radian, etc
#include "OgreNode.h"                   // for Node
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_X, etc
#include "npcanimation.hpp"             // for NpcAnimation, etc
---
In file included from apps/openmw/mwmechanics/summoning.cpp:9:
apps/openmw/mwmechanics/../mwmechanics/spellcasting.hpp:18:5: error: expected '{'
    struct EffectList;
    ^
apps/openmw/mwmechanics/../mwmechanics/spellcasting.hpp:19:1: error: expected unqualified-id
{
^
apps/openmw/mwmechanics/../mwmechanics/spellcasting.hpp:94:31: error: no type named 'Ingredient' in namespace 'ESM'
        bool cast (const ESM::Ingredient* ingredient);
                         ~~~~~^
Aborted (core dumped)

(apps/openmw/mwbase/environment.hpp has correct #includes/fwd-decls)

(apps/openmw/mwbase/environment.cpp has correct #includes/fwd-decls)

apps/openmw/mwclass/static.hpp should add these lines:

apps/openmw/mwclass/static.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include "apps/openmw/mwclass/../mwworld/ptr.hpp"  // lines 9-9
- namespace MWRender { class RenderingInterface; }  // lines 19-19
- namespace MWWorld { class CellStore; }  // lines 22-22
- namespace MWWorld { class PhysicsSystem; }  // lines 23-23

The full include-list for apps/openmw/mwclass/static.hpp:
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 17-17
namespace MWWorld { class CellStore; }  // lines 12-12
namespace MWWorld { class PhysicsSystem; }  // lines 13-13
---

apps/openmw/mwclass/static.cpp should add these lines:

apps/openmw/mwclass/static.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 8-8
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <components/esm/loadstat.hpp>  // lines 6-6
- #include <typeinfo>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include "../mwrender/objects.hpp"  // lines 12-12
- #include "../mwrender/renderinginterface.hpp"  // lines 13-13
- #include "../mwworld/cellstore.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 20-20
- namespace MWWorld { class Class; }  // lines 26-26

The full include-list for apps/openmw/mwclass/static.cpp:
#include "static.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "../mwworld/ptr.hpp"           // for Ptr
namespace MWWorld { class Class; }  // lines 24-24
---

(apps/openmw/mwmechanics/obstacle.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/obstacle.cpp should add these lines:
namespace MWWorld { class CellStore; }

apps/openmw/mwmechanics/obstacle.cpp should remove these lines:
- #include <cmath>  // lines 3-3
- #include <list>  // lines 5-5
- #include "apps/openmw/mwmechanics/../mwworld/cellreflist.hpp"  // lines 9-9
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 15-15
- #include "components/esm/defs.hpp"  // lines 17-17
- #include "components/esm/loadcell.hpp"  // lines 18-18
- #include "components/esm/loadcell.hpp"  // lines 19-19
- namespace ESM { struct Door; }  // lines 25-25

The full include-list for apps/openmw/mwmechanics/obstacle.cpp:
#include "obstacle.hpp"
#include <OgreVector3.h>                // for Vector3
#include <cmath>                        // for abs
#include <list>                         // for _List_iterator, etc
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/cellreflist.hpp"
#include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData, etc
#include "components/esm/defs.hpp"      // for Position
namespace ESM { struct Door; }  // lines 23-23
namespace MWWorld { class CellStore; }
---

apps/openmw/mwgui/spellbuyingwindow.hpp should add these lines:
namespace MyGUI { class ScrollView; }

apps/openmw/mwgui/spellbuyingwindow.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- namespace MWGui { class WindowManager; }  // lines 37-37
- namespace MWWorld { namespace MWWorld { class Ptr; } }  // lines 14-14
- namespace MWWorld { namespace MyGUI { class Button; } }  // lines 17-17
- namespace MWWorld { namespace MyGUI { class ScrollView; } }  // lines 18-18
- namespace MWWorld { namespace MyGUI { class TextBox; } }  // lines 19-19
- namespace MyGUI { class Gui; }  // lines 31-31

The full include-list for apps/openmw/mwgui/spellbuyingwindow.hpp:
#include <string>                       // for string
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace MWWorld { class Ptr; }  // lines 22-22
namespace MyGUI { class Button; }  // lines 25-25
namespace MyGUI { class ScrollView; }
namespace MyGUI { class TextBox; }  // lines 26-26
namespace MyGUI { class Widget; }  // lines 32-32
---

apps/openmw/mwgui/spellbuyingwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/spellbuyingwindow.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <utility>  // lines 6-6
- #include <utility>  // lines 7-7
- #include "../mwbase/soundmanager.hpp"  // lines 11-11
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_Align.h"  // lines 18-18
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_StringUtility.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_TextBox.h"  // lines 26-26
- #include "MyGUI_Types.h"  // lines 28-28
- #include "MyGUI_Widget.h"  // lines 29-29
- #include "MyGUI_Widget.h"  // lines 30-30
- #include "MyGUI_WidgetInput.h"  // lines 31-31
- #include "MyGUI_WidgetInput.h"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 44-44
- #include "components/esm/loadgmst.hpp"  // lines 45-45
- #include "components/esm/loadgmst.hpp"  // lines 46-46
- #include "components/esm/loadnpc.hpp"  // lines 47-47
- #include "components/esm/loadnpc.hpp"  // lines 48-48
- #include "components/esm/loadrace.hpp"  // lines 50-50
- #include "components/esm/loadspel.hpp"  // lines 52-52
- #include "components/esm/spelllist.hpp"  // lines 54-54
- #include "components/misc/stringops.hpp"  // lines 55-55
- #include "components/misc/stringops.hpp"  // lines 56-56

The full include-list for apps/openmw/mwgui/spellbuyingwindow.cpp:
#include "spellbuyingwindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
namespace MWWorld { class ESMStore; }
---
apps/openmw/mwgui/alchemywindow.cpp:20:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/class.cpp:35:
./apps/openmw/mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/countdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate2

apps/openmw/mwgui/countdialog.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <string>  // lines 7-7
- namespace MyGUI { class Button; }  // lines 21-21
- namespace MyGUI { class EditBox; }  // lines 22-22
- namespace MyGUI { class ScrollBar; }  // lines 23-23
- namespace MyGUI { class TextBox; }  // lines 24-24
- namespace MyGUI { class Widget; }  // lines 25-25

The full include-list for apps/openmw/mwgui/countdialog.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate2
#include "windowbase.hpp"               // for WindowModal
namespace Gui { class NumericEditBox; }  // lines 30-30
namespace MyGUI { class Button; }  // lines 15-15
namespace MyGUI { class EditBox; }  // lines 16-16
namespace MyGUI { class ScrollBar; }  // lines 17-17
namespace MyGUI { class TextBox; }  // lines 18-18
namespace MyGUI { class Widget; }  // lines 19-19
---

apps/openmw/mwgui/countdialog.cpp should add these lines:

apps/openmw/mwgui/countdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <algorithm>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include "../mwbase/environment.hpp"  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 9-9
- #include "MyGUI_EditBox.h"  // lines 10-10
- #include "MyGUI_EditBox.h"  // lines 11-11
- #include "MyGUI_EventPair.h"  // lines 12-12
- #include "MyGUI_EventPair.h"  // lines 13-13
- #include "MyGUI_RTTI.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 15-15
- #include "MyGUI_TextBox.h"  // lines 17-17
- #include "MyGUI_Types.h"  // lines 19-19
- #include "MyGUI_Widget.h"  // lines 21-21
- #include "MyGUI_WidgetInput.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 23-23
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 24-24
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 25-25

The full include-list for apps/openmw/mwgui/countdialog.cpp:
#include "countdialog.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <components/widgets/numericeditbox.hpp>  // for NumericEditBox
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
---
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/actiontrap.hpp should add these lines:

apps/openmw/mwworld/actiontrap.hpp should remove these lines:
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwworld/actiontrap.hpp:
#include <string>                       // for string
#include "action.hpp"                   // for Action
#include "ptr.hpp"                      // for Ptr
---

apps/openmw/mwworld/actiontrap.cpp should add these lines:
namespace MWWorld { class Ptr; }

apps/openmw/mwworld/actiontrap.cpp should remove these lines:
- #include "OgreVector3.h"  // lines 2-2
- #include "OgreVector3.h"  // lines 3-3
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 5-5
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 8-8
- #include "components/esm/defs.hpp"  // lines 9-9
- #include "components/esm/defs.hpp"  // lines 10-10

The full include-list for apps/openmw/mwworld/actiontrap.cpp:
#include "actiontrap.hpp"
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
namespace MWWorld { class Ptr; }
---
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

(apps/openmw/mwworld/fallback.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwworld/fallback.cpp should add these lines:

apps/openmw/mwworld/fallback.cpp should remove these lines:
- #include <sstream>  // lines 2-2
- #include <utility>  // lines 4-4
- #include "OgreColourValue.h"  // lines 7-7

The full include-list for apps/openmw/mwworld/fallback.cpp:
#include "fallback.hpp"
#include <sstream>                      // for basic_stringbuf<>::int_type, etc
#include <utility>                      // for pair
#include "OgreColourValue.h"            // for ColourValue
#include "boost/lexical_cast.hpp"       // for lexical_cast
---
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/mwiniimporter/importer.cpp:661:23: error: implicit instantiation of undefined template 'std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::stringstream str;
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:105:11: note: template is declared here
    class basic_stringstream;
          ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creature.cpp:4:
In file included from ./components/esm/creaturestate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwclass/creature.cpp:4:
In file included from ./components/esm/creaturestate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/creature.cpp:4:
In file included from ./components/esm/creaturestate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/creature.cpp:4:
./components/esm/creaturestate.hpp:20:35: error: expected class name
    struct CreatureState : public ObjectState
                                  ^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/actors.cpp:21:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/scene.cpp:23:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/aipackage.cpp:48:46: error: member access into incomplete type 'const MWWorld::Class'
        Movement &movement = actor.getClass().getMovementSettings(actor);
                                             ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:107:100: error: member access into incomplete type 'const MWWorld::Class'
        if(distance(start, mStuckPos.pos[0], mStuckPos.pos[1], mStuckPos.pos[2]) < actor.getClass().getSpeed(actor)*0.05 && distance(dest, start) > 20) { //Actually stuck, and far enough away from destination to care
                                                                                                   ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:112:110: error: member access into incomplete type 'const MWWorld::Class'
                if(!door.getCellRef().getTeleport() && door.getCellRef().getTrap().empty() && door.getClass().getDoorState(door) == 0) { //Open the door if untrapped
                                                                                                             ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:118:33: error: member access into incomplete type 'const MWWorld::Class'
                actor.getClass().getMovementSettings(actor).mPosition[0] = 1;
                                ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:119:33: error: member access into incomplete type 'const MWWorld::Class'
                actor.getClass().getMovementSettings(actor).mPosition[1] = 1;
                                ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:127:29: error: member access into incomplete type 'const MWWorld::Class'
            actor.getClass().getMovementSettings(actor).mPosition[1] = 1; //Just run forward
                            ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
apps/openmw/mwmechanics/aipackage.cpp:131:25: error: member access into incomplete type 'const MWWorld::Class'
        actor.getClass().getMovementSettings(actor).mPosition[1] = 1; //Just run forward the rest of the time
                        ^
./apps/openmw/mwmechanics/../mwworld/ptr.hpp:16:7: note: forward declaration of 'MWWorld::Class'
class Class;
      ^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/creature.cpp:23:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:6:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/actors.cpp:24:
apps/openmw/mwmechanics/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/openmw/mwmechanics/actors.cpp:25:
apps/openmw/mwmechanics/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwmechanics/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
In file included from apps/openmw/mwmechanics/actors.cpp:31:
In file included from apps/openmw/mwmechanics/aifollow.hpp:7:
In file included from apps/openmw/mwmechanics/aipackage.hpp:10:
apps/openmw/mwmechanics/pathfinding.hpp:23:30: error: no type named 'Radian' in namespace 'MWBase::Loading::Ogre'; did you mean '::Ogre::Radian'?
            static float sgn(Ogre::Radian a)
                             ^~~~~~~~~~~~
                             ::Ogre::Radian
/usr/include/OGRE/OgreMath.h:47:8: note: '::Ogre::Radian' declared here
        class Radian
              ^
In file included from apps/essimporter/convertacdt.cpp:3:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/actors.cpp:31:
In file included from apps/openmw/mwmechanics/aifollow.hpp:7:
apps/openmw/mwmechanics/aipackage.hpp:85:13: error: no type named 'Position' in namespace 'MWBase::Loading::ESM'; did you mean '::ESM::Position'?
            ESM::Position mStuckPos;
            ^~~~~~~~~~~~~
            ::ESM::Position
apps/openmw/mwmechanics/../mwworld/class.hpp:43:12: note: '::ESM::Position' declared here
    struct Position;
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:11:
./components/esm/loadbsgn.hpp:21:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mPowers;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:30:5: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
    RefNum mRefNum;
    ^~~~~~
    ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:41:48: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
bool operator==(const MovedCellRef& ref, const RefNum& refNum);
                                               ^~~~~~
                                               ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:42:43: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
bool operator==(const CellRef& ref, const RefNum& refNum);
                                          ^~~~~~
                                          ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:76:5: error: unknown type name 'Color'; did you mean '::ESM::Color'?
    Color mAmbient, mSunlight, mFog;
    ^~~~~
    ::ESM::Color
./components/esm/defs.hpp:16:17: note: '::ESM::Color' declared here
typedef int32_t Color;
                ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:95:15: error: unknown type name 'ESM_Context'; did you mean '::ESM::ESM_Context'?
  std::vector<ESM_Context> mContextList; // File position; multiple positions for multiple plugin support
              ^~~~~~~~~~~
              ::ESM::ESM_Context
./components/esm/esmcommon.hpp:61:8: note: '::ESM::ESM_Context' declared here
struct ESM_Context
       ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:14:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/essimporter/importcrec.hpp has correct #includes/fwd-decls)

apps/essimporter/importcrec.cpp should add these lines:

apps/essimporter/importcrec.cpp should remove these lines:
- #include "apps/essimporter/importinventory.hpp"  // lines 4-4

The full include-list for apps/essimporter/importcrec.cpp:
#include "importcrec.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importinventory.hpp"  // for Inventory
---
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:16:
./apps/openmw/mwworld/../mwrender/debugging.hpp:78:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridLines(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
In file included from apps/openmw/mwmechanics/actors.cpp:39:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:4:
In file included from ./components/esm/records.hpp:16:
./components/esm/loadcrea.hpp:88:5: error: unknown type name 'InventoryList'; did you mean '::ESM::InventoryList'?
    InventoryList mInventory;
    ^~~~~~~~~~~~~
    ::ESM::InventoryList
./apps/openmw/mwmechanics/../mwbase/../mwworld/containerstore.hpp:48:12: note: '::ESM::InventoryList' declared here
    struct InventoryList;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:16:
./apps/openmw/mwworld/../mwrender/debugging.hpp:79:9: error: no type named 'ManualObject' in namespace 'Ogre::OEngine::Ogre'; did you mean simply 'ManualObject'?
        Ogre::ManualObject *createPathgridPoints(const ESM::Pathgrid *pathgrid);
        ^~~~~~~~~~~~~~~~~~
        ManualObject
/usr/include/OGRE/OgrePrerequisites.h:185:8: note: 'ManualObject' declared here
        class ManualObject;
              ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:17:
./apps/openmw/mwworld/../mwrender/objects.hpp:53:40: error: no member named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'
    std::map<MWWorld::CellStore*,Ogre::AxisAlignedBox> mBounds;
                                 ~~~~~~^

libs/openengine/gui/layout.hpp should add these lines:

libs/openengine/gui/layout.hpp should remove these lines:
- #include "MyGUI_Diagnostic.h"  // lines 9-9
- #include "MyGUI_Prerequest.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 13-13

The full include-list for libs/openengine/gui/layout.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include <MyGUI_WidgetDefines.h>        // for VectorWidgetPtr
#include <string>                       // for string
#include "MyGUI_Diagnostic.h"           // for MYGUI_EXCEPT
#include "MyGUI_Prerequest.h"           // for nullptr
#include "MyGUI_RTTI.h"                 // for IObject::castType, etc
---

libs/openengine/gui/layout.cpp should add these lines:

libs/openengine/gui/layout.cpp should remove these lines:
- #include <ostream>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "MyGUI_LogStream.h"  // lines 12-12
- #include "MyGUI_StringUtility.h"  // lines 14-14
- #include "MyGUI_WidgetDefines.h"  // lines 16-16

The full include-list for libs/openengine/gui/layout.cpp:
#include "layout.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_LayoutManager.h>        // for LayoutManager
#include <MyGUI_TextBox.h>              // for TextBox
#include <MyGUI_Widget.h>               // for Widget
#include <MyGUI_Window.h>               // for Window
#include <ostream>                      // for basic_ostream, operator<<
#include <vector>                       // for vector, vector<>::iterator
#include "MyGUI_LogStream.h"            // for LogStream
#include "MyGUI_StringUtility.h"        // for toString
#include "MyGUI_WidgetDefines.h"        // for VectorWidgetPtr
---
./apps/openmw/mwworld/../mwrender/objects.hpp:77:5: error: no type named 'AxisAlignedBox' in namespace 'Ogre::OEngine::Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    Ogre::AxisAlignedBox getDimensions(MWWorld::CellStore*);
    ^~~~~~~~~~~~~~~~~~~~
    AxisAlignedBox
/usr/include/OGRE/OgreAxisAlignedBox.h:54:20: note: 'AxisAlignedBox' declared here
        class _OgreExport AxisAlignedBox
                          ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:37:
In file included from /usr/include/OGRE/OgreMovableObject.h:36:
/usr/include/OGRE/OgreSphere.h:55:17: error: field has incomplete type 'Ogre::OEngine::Ogre::Vector3'
        Vector3 mCenter;
                ^
./apps/openmw/mwworld/../mwrender/debugging.hpp:32:11: note: forward declaration of 'Ogre::OEngine::Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:37:
In file included from /usr/include/OGRE/OgreMovableObject.h:36:
/usr/include/OGRE/OgreSphere.h:58:42: error: incomplete type 'Ogre::OEngine::Ogre::Vector3' named in nested name specifier
        Sphere() : mRadius(1.0), mCenter(Vector3::ZERO) {}
                                         ^~~~~~~~~
./apps/openmw/mwworld/../mwrender/debugging.hpp:32:11: note: forward declaration of 'Ogre::OEngine::Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:37:
In file included from /usr/include/OGRE/OgreMovableObject.h:36:
/usr/include/OGRE/OgreSphere.h:87:11: error: no matching function for call to 'intersects'
                        return Math::intersects(*this, box);
                               ^~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreMath.h:555:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const AxisAlignedBox& box);
                                     ^
/usr/include/OGRE/OgreMath.h:635:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Sphere' for 1st argument
        static bool intersects(const Sphere& sphere, const AxisAlignedBox& box);
                    ^
/usr/include/OGRE/OgreMath.h:638:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Plane' for 1st argument
        static bool intersects(const Plane& plane, const AxisAlignedBox& box);
                    ^
/usr/include/OGRE/OgreMath.h:548:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const Plane& plane);
                                     ^
/usr/include/OGRE/OgreMath.h:551:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const Sphere& sphere, 
                                     ^
/usr/include/OGRE/OgreMath.h:660:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Sphere' for 1st argument
        static bool intersects(const Sphere& sphere, const Plane& plane);
                    ^
/usr/include/OGRE/OgreMath.h:645:38: note: candidate function not viable: requires 3 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(
                                     ^
/usr/include/OGRE/OgreMath.h:653:38: note: candidate function not viable: requires 3 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(
                                     ^
/usr/include/OGRE/OgreMath.h:579:21: note: candidate function not viable: requires 4 arguments, but 2 were provided
        static bool intersects(const Ray& ray, const AxisAlignedBox& box,
                    ^
/usr/include/OGRE/OgreMath.h:630:38: note: candidate function not viable: requires at least 4 arguments, but 2 were provided

apps/openmw/mwgui/class.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc

apps/openmw/mwgui/class.hpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "MyGUI_EditBox.h"  // lines 16-16
- #include "MyGUI_UString.h"  // lines 18-18
- #include "components/esm/loadskil.hpp"  // lines 20-20
- namespace MyGUI { class Button; }  // lines 25-25
- namespace MyGUI { class Button; }  // lines 31-31
- namespace MyGUI { class ImageBox; }  // lines 32-32
- namespace MyGUI { class ListBox; }  // lines 33-33
- namespace MyGUI { class TextBox; }  // lines 34-34
- namespace MyGUI { class Widget; }  // lines 35-35

The full include-list for apps/openmw/mwgui/class.hpp:
#include <stddef.h>                     // for size_t
#include <components/esm/attr.hpp>      // for Attribute, etc
#include <components/esm/loadclas.hpp>  // for Class, etc
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_UString.h"              // for UString
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "widgets.hpp"                  // for MWSkillPtr, MWAttributePtr
#include "windowbase.hpp"               // for WindowModal, etc
namespace MyGUI { class ImageBox; }  // lines 26-26
namespace MyGUI { class ListBox; }  // lines 27-27
namespace MyGUI { class TextBox; }  // lines 28-28
namespace MyGUI { class Widget; }  // lines 29-29
---
        static std::pair<bool, Real> intersects(const Ray& ray, const Vector3& a,
                                     ^
/usr/include/OGRE/OgreMath.h:606:38: note: candidate function not viable: requires at least 5 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(const Ray& ray, const Vector3& a,
                                     ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:37:
In file included from /usr/include/OGRE/OgreMovableObject.h:36:
/usr/include/OGRE/OgreSphere.h:92:11: error: no matching function for call to 'intersects'
                        return Math::intersects(*this, plane);
                               ^~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreMath.h:548:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const Plane& plane);
                                     ^
/usr/include/OGRE/OgreMath.h:660:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Sphere' for 1st argument
        static bool intersects(const Sphere& sphere, const Plane& plane);
                    ^
/usr/include/OGRE/OgreMath.h:551:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const Sphere& sphere, 
                                     ^
/usr/include/OGRE/OgreMath.h:555:38: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Ray' for 1st argument
        static std::pair<bool, Real> intersects(const Ray& ray, const AxisAlignedBox& box);
                                     ^
/usr/include/OGRE/OgreMath.h:635:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Sphere' for 1st argument
        static bool intersects(const Sphere& sphere, const AxisAlignedBox& box);
                    ^
/usr/include/OGRE/OgreMath.h:638:21: note: candidate function not viable: no known conversion from 'const Ogre::OEngine::Ogre::Ogre::Sphere' to 'const Ogre::Plane' for 1st argument
        static bool intersects(const Plane& plane, const AxisAlignedBox& box);
                    ^
/usr/include/OGRE/OgreMath.h:645:38: note: candidate function not viable: requires 3 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(
                                     ^
/usr/include/OGRE/OgreMath.h:653:38: note: candidate function not viable: requires 3 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(
                                     ^
/usr/include/OGRE/OgreMath.h:579:21: note: candidate function not viable: requires 4 arguments, but 2 were provided
        static bool intersects(const Ray& ray, const AxisAlignedBox& box,
                    ^
/usr/include/OGRE/OgreMath.h:630:38: note: candidate function not viable: requires at least 4 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(const Ray& ray, const Vector3& a,
                                     ^
/usr/include/OGRE/OgreMath.h:606:38: note: candidate function not viable: requires at least 5 arguments, but 2 were provided
        static std::pair<bool, Real> intersects(const Ray& ray, const Vector3& a,
                                     ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:37:
In file included from /usr/include/OGRE/OgreMovableObject.h:36:
/usr/include/OGRE/OgreSphere.h:102:12: error: variable has incomplete type 'Ogre::OEngine::Ogre::Vector3'
                        Vector3 diff = oth.getCenter() - mCenter;
                                ^
./apps/openmw/mwworld/../mwrender/debugging.hpp:32:11: note: forward declaration of 'Ogre::OEngine::Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:38:
/usr/include/OGRE/OgrePlaneBoundedVolume.h:71:21: error: variable has incomplete type 'Ogre::OEngine::Ogre::Vector3'
            Vector3 centre = box.getCenter();
                    ^
./apps/openmw/mwworld/../mwrender/debugging.hpp:32:11: note: forward declaration of 'Ogre::OEngine::Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/scene.cpp:32:
In file included from ./apps/openmw/mwworld/../mwrender/renderingmanager.hpp:18:
In file included from ./apps/openmw/mwworld/../mwrender/occlusionquery.hpp:4:
In file included from /usr/include/OGRE/OgreRenderObjectListener.h:33:
In file included from /usr/include/OGRE/OgrePass.h:36:
In file included from /usr/include/OGRE/OgreLight.h:38:
/usr/include/OGRE/OgrePlaneBoundedVolume.h:73:21: error: variable has incomplete type 'Ogre::OEngine::Ogre::Vector3'
            Vector3 halfSize = box.getHalfSize();
                    ^
./apps/openmw/mwworld/../mwrender/debugging.hpp:32:11: note: forward declaration of 'Ogre::OEngine::Ogre::Vector3'
    class Vector3;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/launcher/settings/graphicssettings.hpp should add these lines:

apps/launcher/settings/graphicssettings.hpp should remove these lines:
- #include <QMapData>  // lines 6-6
- class QString;  // lines 11-11
- class QTextStream;  // lines 12-12

The full include-list for apps/launcher/settings/graphicssettings.hpp:
#include <QMapData>                     // for QMap
#include <components/config/settingsbase.hpp>  // for SettingsBase
class QString;  // lines 8-8
class QTextStream;  // lines 9-9
---

(apps/launcher/settings/graphicssettings.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/creature.cpp:26:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/class.cpp should add these lines:
namespace MWGui { class WindowBase; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/class.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "../mwworld/esmstore.hpp"  // lines 12-12
- #include "MyGUI_Align.h"  // lines 13-13
- #include "MyGUI_Align.h"  // lines 14-14
- #include "MyGUI_Button.h"  // lines 16-16
- #include "MyGUI_EventPair.h"  // lines 17-17
- #include "MyGUI_EventPair.h"  // lines 18-18
- #include "MyGUI_ISubWidgetText.h"  // lines 20-20
- #include "MyGUI_Macros.h"  // lines 22-22
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_TextBox.h"  // lines 26-26
- #include "MyGUI_Types.h"  // lines 28-28
- #include "MyGUI_Widget.h"  // lines 30-30
- #include "MyGUI_WidgetInput.h"  // lines 31-31
- #include "MyGUI_WidgetInput.h"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 38-38
- #include "components/esm/attr.hpp"  // lines 41-41
- #include "components/esm/loadclas.hpp"  // lines 43-43
- #include "components/misc/stringops.hpp"  // lines 45-45

The full include-list for apps/openmw/mwgui/class.cpp:
#include "class.hpp"
#include <MyGUI_ListBox.h>              // for ListBox
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_ISubWidgetText.h"       // for ISubWidgetText
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwgui/widgets.hpp"  // for MWSkillPtr, MWSkill, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "tooltips.hpp"                 // for ToolTips
namespace MWGui { class WindowBase; }
namespace MWWorld { class ESMStore; }
---
In file included from extern/shiny/Main/ShaderSet.cpp:14:
In file included from extern/shiny/Main/Factory.hpp:11:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/mwiniimporter/importer.hpp should add these lines:
#include <map>                          // for map, map<>::value_compare

apps/mwiniimporter/importer.hpp should remove these lines:
- #include <exception>  // lines 5-5

The full include-list for apps/mwiniimporter/importer.hpp:
#include <components/to_utf8/to_utf8.hpp>  // for FromType
#include <iosfwd>                       // for ostream
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <vector>                       // for vector
---
In file included from extern/shiny/Main/ShaderSet.cpp:14:
extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from extern/shiny/Main/ShaderSet.cpp:14:
extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/openmw/mwmechanics/aipackage.hpp should add these lines:

apps/openmw/mwmechanics/aipackage.hpp should remove these lines:
- #include "components/esm/loadpgrd.hpp"  // lines 8-8

The full include-list for apps/openmw/mwmechanics/aipackage.hpp:
#include <components/esm/defs.hpp>      // for Position
#include "aistate.hpp"                  // for AiState
#include "components/esm/loadpgrd.hpp"  // for Pathgrid, Pathgrid::Point
#include "obstacle.hpp"                 // for ObstacleCheck
#include "pathfinding.hpp"              // for PathFinder
namespace ESM { namespace AiSequence { class AiSequence; } }  // lines 23-23
namespace MWWorld { class Ptr; }  // lines 15-15
---

apps/mwiniimporter/importer.cpp should add these lines:

apps/mwiniimporter/importer.cpp should remove these lines:
- #include <boost/filesystem/path_traits.hpp>  // lines 4-4
- #include <utility>  // lines 10-10
- #include "components/to_utf8/to_utf8.hpp"  // lines 14-14

The full include-list for apps/mwiniimporter/importer.cpp:
#include "importer.hpp"
#include <algorithm>                    // for replace
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <components/misc/stringops.hpp>  // for StringUtils
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, etc
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder, FromType, etc
---

apps/openmw/mwclass/door.hpp should add these lines:
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/door.hpp should remove these lines:
- #include <components/esm/loaddoor.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 15-15
- namespace ESM { struct Door; }  // lines 30-30
- namespace ESM { struct ObjectState; }  // lines 31-31
- namespace MWRender { class RenderingInterface; }  // lines 34-34
- namespace MWWorld { class Action; }  // lines 37-37
- namespace MWWorld { class CellStore; }  // lines 38-38
- namespace MWWorld { class PhysicsSystem; }  // lines 39-39

The full include-list for apps/openmw/mwclass/door.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace ESM { struct Door; }  // lines 27-27
namespace ESM { struct ObjectState; }  // lines 28-28
namespace MWRender { class RenderingInterface; }  // lines 18-18
namespace MWWorld { class Action; }  // lines 21-21
namespace MWWorld { class CellStore; }  // lines 22-22
namespace MWWorld { class PhysicsSystem; }  // lines 23-23
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwmechanics/aipackage.cpp should add these lines:

apps/openmw/mwmechanics/aipackage.cpp should remove these lines:
- #include <list>  // lines 4-4
- #include <string>  // lines 5-5
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/obstacle.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/obstacle.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 19-19
- #include "components/esm/defs.hpp"  // lines 21-21
- #include "components/esm/loadcell.hpp"  // lines 23-23
- #include "components/esm/loadland.hpp"  // lines 25-25

The full include-list for apps/openmw/mwmechanics/aipackage.cpp:
#include "aipackage.hpp"
#include <OgreMath.h>                   // for Degree
#include <list>                         // for list
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for PathFinder, etc
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadland.hpp"  // for Land, Land::REAL_SIZE
#include "movement.hpp"                 // for Movement
#include "steering.hpp"                 // for zTurn
---
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
extern/shiny/Main/ShaderSet.cpp:140:19: error: no matching constructor for initialization of 'sh::ShaderInstance'
                        ShaderInstance newInstance(this, mName + "_" + boost::lexical_cast<std::string>(h), properties);
                                       ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./extern/shiny/Main/ShaderInstance.hpp:57:3: note: candidate constructor not viable: cannot convert argument of incomplete type 'sh::PropertySetGet *' to 'PropertySetGet *'
                ShaderInstance (ShaderSet* parent, const std::string& name, PropertySetGet* properties);
                ^
./extern/shiny/Main/ShaderInstance.hpp:54:8: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
        class ShaderInstance
              ^
extern/shiny/Main/ShaderSet.cpp:158:57: error: member access into incomplete type 'sh::PropertySetGet'
                        std::string v = retrieveValue<StringValue>(properties->getProperty(*it), properties->getContext()).get();
                                                                             ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderSet.cpp:158:87: error: member access into incomplete type 'sh::PropertySetGet'
                        std::string v = retrieveValue<StringValue>(properties->getProperty(*it), properties->getContext()).get();
                                                                                                           ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderSet.cpp:163:78: error: member access into incomplete type 'sh::PropertySetGet'
                        boost::hash_combine(seed, retrieveValue<StringValue>(currentGlobalSettings->getProperty(*it), NULL).get());
                                                                                                  ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderSet.cpp:167:57: error: member access into incomplete type 'sh::PropertySetGet'
                        std::string v = retrieveValue<StringValue>(properties->getProperty(*it), properties->getContext()).get();
                                                                             ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
extern/shiny/Main/ShaderSet.cpp:167:87: error: member access into incomplete type 'sh::PropertySetGet'
                        std::string v = retrieveValue<StringValue>(properties->getProperty(*it), properties->getContext()).get();
                                                                                                           ^
extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

apps/openmw/mwclass/door.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/door.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stdlib.h>  // lines 7-7
- #include <components/esm/loaddoor.hpp>  // lines 5-5
- #include <memory>  // lines 9-9
- #include <stdexcept>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <typeinfo>  // lines 13-13
- #include "../mwworld/actiondoor.hpp"  // lines 21-21
- #include "../mwworld/actionteleport.hpp"  // lines 22-22
- #include "../mwworld/actiontrap.hpp"  // lines 23-23
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "../mwworld/failedaction.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 33-33
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 35-35
- #include "apps/openmw/mwclass/../mwworld/containerstore.hpp"  // lines 37-37
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 39-39
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 40-40
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 41-41
- #include "components/esm/defs.hpp"  // lines 42-42
- #include "components/esm/defs.hpp"  // lines 43-43
- #include "components/esm/loadcell.hpp"  // lines 44-44
- #include "components/esm/loadcell.hpp"  // lines 45-45
- #include "components/esm/loadregn.hpp"  // lines 46-46
- #include "components/esm/loadregn.hpp"  // lines 47-47
- #include "components/esm/objectstate.hpp"  // lines 48-48
- #include "components/esm/objectstate.hpp"  // lines 49-49
- #include "components/misc/stringops.hpp"  // lines 51-51

The full include-list for apps/openmw/mwclass/door.cpp:
#include "door.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for abs, NULL
#include <components/esm/doorstate.hpp>  // for DoorState
#include <memory>                       // for auto_ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData, etc
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/openmw/mwgui/alchemywindow.hpp should add these lines:

apps/openmw/mwgui/alchemywindow.hpp should remove these lines:
- #include <memory>  // lines 4-4
- #include <memory>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwgui/../mwmechanics/alchemy.hpp"  // lines 9-9
- #include "apps/openmw/mwgui/../mwmechanics/alchemy.hpp"  // lines 10-10
- #include "widgets.hpp"  // lines 11-11
- namespace MWGui { class ItemWidget; }  // lines 33-33
- namespace MyGUI { class Button; }  // lines 19-19
- namespace MyGUI { class EditBox; }  // lines 20-20
- namespace MyGUI { class Widget; }  // lines 21-21

The full include-list for apps/openmw/mwgui/alchemywindow.hpp:
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ItemView; }  // lines 32-32
namespace MWGui { class SortFilterItemModel; }  // lines 34-34
namespace MyGUI { class Button; }  // lines 15-15
namespace MyGUI { class EditBox; }  // lines 16-16
namespace MyGUI { class Widget; }  // lines 17-17
---
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwgui/alchemywindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { struct MagicEffect; }

apps/openmw/mwgui/alchemywindow.cpp should remove these lines:
- #include <boost/algorithm/string/trim.hpp>  // lines 2-2
- #include <boost/algorithm/string/trim.hpp>  // lines 3-3
- #include <set>  // lines 5-5
- #include <set>  // lines 6-6
- #include "../mwbase/soundmanager.hpp"  // lines 9-9
- #include "../mwmechanics/alchemy.hpp"  // lines 12-12
- #include "../mwmechanics/magiceffects.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_Button.h"  // lines 18-18
- #include "MyGUI_Button.h"  // lines 19-19
- #include "MyGUI_EditBox.h"  // lines 23-23
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_Types.h"  // lines 26-26
- #include "MyGUI_UString.h"  // lines 28-28
- #include "MyGUI_Widget.h"  // lines 30-30
- #include "MyGUI_WidgetInput.h"  // lines 31-31
- #include "MyGUI_WidgetInput.h"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 40-40
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 41-41
- #include "apps/openmw/mwgui/itemmodel.hpp"  // lines 43-43
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 45-45
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 46-46
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 47-47
- #include "components/esm/loadmgef.hpp"  // lines 48-48
- #include "components/esm/loadmgef.hpp"  // lines 49-49

The full include-list for apps/openmw/mwgui/alchemywindow.cpp:
#include "alchemywindow.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack
#include "apps/openmw/mwgui/widgets.hpp"  // for MWEffectList, etc
#include "inventoryitemmodel.hpp"       // for InventoryItemModel
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
namespace ESM { struct MagicEffect; }
---
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
In file included from ./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiwander.cpp:58:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

(apps/essimporter/importcntc.hpp has correct #includes/fwd-decls)

apps/essimporter/importcntc.cpp should add these lines:

apps/essimporter/importcntc.cpp should remove these lines:
- #include "apps/essimporter/importinventory.hpp"  // lines 4-4

The full include-list for apps/essimporter/importcntc.cpp:
#include "importcntc.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importinventory.hpp"  // for Inventory
---
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwrender/animation.hpp:28:
./apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwrender/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwclass/lockpick.hpp should add these lines:

apps/openmw/mwclass/lockpick.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/lockpick.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---

apps/openmw/mwclass/lockpick.cpp should add these lines:
namespace ESM { struct Lockpick; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/lockpick.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadlock.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwworld/actionequip.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "../mwworld/inventorystore.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 22-22
- #include "components/esm/loadnpc.hpp"  // lines 24-24
- namespace MWWorld { class Class; }  // lines 30-30

The full include-list for apps/openmw/mwclass/lockpick.cpp:
#include "lockpick.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Picks
namespace ESM { struct Lockpick; }
namespace MWWorld { class Class; }  // lines 28-28
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwrender/effectmanager.hpp should add these lines:

apps/openmw/mwrender/effectmanager.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <utility>  // lines 8-8
- #include <vector>  // lines 10-10
- #include "GLX/../OgrePrerequisites.h"  // lines 13-13
- #include "OgreController.h"  // lines 15-15
- namespace Ogre { class Camera; }  // lines 23-23
- namespace Ogre { class SceneManager; }  // lines 24-24
- namespace Ogre { class SceneNode; }  // lines 25-25
- namespace Ogre { class Vector3; }  // lines 26-26

The full include-list for apps/openmw/mwrender/effectmanager.hpp:
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreController.h"             // for ControllerValue
namespace Ogre { class Camera; }  // lines 18-18
namespace Ogre { class SceneManager; }  // lines 19-19
namespace Ogre { class SceneNode; }  // lines 20-20
namespace Ogre { class Vector3; }  // lines 21-21
---

apps/openmw/mwrender/effectmanager.cpp should add these lines:

apps/openmw/mwrender/effectmanager.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include "OgreMaterial.h"  // lines 10-10
- #include "OgrePass.h"  // lines 12-12
- #include "OgreSharedPtr.h"  // lines 14-14
- #include "OgreTextureUnitState.h"  // lines 16-16
- #include "components/nifogre/ogrenifloader.hpp"  // lines 19-19
- namespace Ogre { class Camera; }  // lines 27-27
- namespace Ogre { class Vector3; }  // lines 28-28

The full include-list for apps/openmw/mwrender/effectmanager.cpp:
#include "effectmanager.hpp"
#include <OgreParticleSystem.h>         // for ParticleSystem
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTechnique.h>              // for Technique
#include <stddef.h>                     // for size_t, NULL
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include "OgreMaterial.h"               // for Material
#include "OgrePass.h"                   // for Pass
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTextureUnitState.h"       // for TextureUnitState
#include "animation.hpp"                // for Animation
#include "components/nifogre/ogrenifloader.hpp"  // for ObjectScenePtr, etc
#include "renderconst.hpp"
namespace Ogre { class Camera; }  // lines 24-24
namespace Ogre { class Vector3; }  // lines 25-25
---
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
In file included from ./apps/openmw/mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
In file included from ./apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
In file included from ./apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/essimporter/convertacdt.cpp:3:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
./apps/openmw/mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
./apps/openmw/mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from extern/shiny/Platforms/Ogre/OgreMaterial.cpp:11:
In file included from extern/shiny/Platforms/Ogre/OgreMaterial.hpp:8:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:9:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./apps/openmw/mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

apps/essimporter/convertscri.hpp should add these lines:

apps/essimporter/convertscri.hpp should remove these lines:
- namespace ESM { struct Locals; }  // lines 13-13
- namespace ESSImport { struct SCRI; }  // lines 16-16

The full include-list for apps/essimporter/convertscri.hpp:
namespace ESM { struct Locals; }  // lines 11-11
namespace ESSImport { struct SCRI; }  // lines 7-7
---

apps/essimporter/convertscri.cpp should add these lines:

apps/essimporter/convertscri.cpp should remove these lines:
- #include <string>  // lines 2-2
- #include <utility>  // lines 4-4
- #include "apps/essimporter/importscri.hpp"  // lines 8-8
- #include "components/esm/locals.hpp"  // lines 10-10
- #include "components/esm/variant.hpp"  // lines 12-12

The full include-list for apps/essimporter/convertscri.cpp:
#include "convertscri.hpp"
#include <string>                       // for basic_string, string, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector
#include "apps/essimporter/importscri.hpp"  // for SCRI
#include "components/esm/locals.hpp"    // for Locals
#include "components/esm/variant.hpp"   // for Variant, VarType, etc
---
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:17:
./apps/openmw/mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:19:
apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwrender/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/security.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionrepair.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:47:23: error: field has incomplete type 'Ogre::Vector3'
        Ogre::Vector3 mLastKnownExteriorPosition;
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwmechanics/security.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwworld/actionrepair.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwworld/../mwworld/player.hpp:73:23: error: incomplete result type 'Ogre::Vector3' in function definition
        Ogre::Vector3 getLastKnownExteriorPosition() const { return mLastKnownExteriorPosition; }
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionrepair.cpp:5:
In file included from apps/openmw/mwworld/actionrepair.hpp:4:
apps/openmw/mwworld/action.hpp:17:17: error: field has incomplete type 'MWBase::Ptr'
            Ptr mTarget;
                ^
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
In file included from apps/openmw/mwworld/actionrepair.cpp:5:
In file included from apps/openmw/mwworld/actionrepair.hpp:4:
apps/openmw/mwworld/action.hpp:31:65: error: invalid use of incomplete type 'MWBase::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
                                                                ^~~~~
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
apps/openmw/mwworld/actionrepair.cpp:20:11: error: no matching constructor for initialization of 'MWBase::Loading::MWWorld::Action'
        : Action(false, item)
          ^      ~~~~~~~~~~~
./apps/openmw/mwworld/action.hpp:31:13: note: candidate constructor not viable: cannot convert argument of incomplete type 'const MWBase::Loading::MWWorld::Ptr' to 'const MWBase::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
            ^
./apps/openmw/mwworld/action.hpp:20:13: note: candidate constructor not viable: requires single argument 'action', but 2 arguments were provided
            Action (const Action& action);
            ^
apps/openmw/mwworld/actionrepair.cpp:26:62: error: member access into incomplete type 'MWWorld::Player'
        if(MWBase::Environment::get().getWorld()->getPlayer().isInCombat()) {
                                                             ^
apps/openmw/mwworld/../mwbase/world.hpp:61:11: note: forward declaration of 'MWWorld::Player'
    class Player;
          ^
apps/openmw/mwworld/actionrepair.cpp:32:72: error: cannot initialize object parameter of type 'const MWBase::Loading::MWWorld::Action' with an expression of type 'MWBase::Loading::MWWorld::ActionRepair'
        MWBase::Environment::get().getWindowManager()->startRepairItem(getTarget());
                                                                       ^~~~~~~~~
apps/openmw/mwworld/actionrepair.cpp:34:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:33:1: note: to match this '{'
{
^
apps/openmw/mwworld/actionrepair.cpp:34:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:28:1: note: to match this '{'
{
^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/security.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/security.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/security.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwrender/objects.cpp:20:
apps/openmw/mwrender/objects.hpp:53:40: error: no member named 'AxisAlignedBox' in namespace 'Ogre::Ogre'
    std::map<MWWorld::CellStore*,Ogre::AxisAlignedBox> mBounds;
                                 ~~~~~~^

(apps/essimporter/importjour.hpp has correct #includes/fwd-decls)

(apps/essimporter/importjour.cpp has correct #includes/fwd-decls)
apps/openmw/mwrender/objects.hpp:77:5: error: no type named 'AxisAlignedBox' in namespace 'Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    Ogre::AxisAlignedBox getDimensions(MWWorld::CellStore*);
    ^~~~~~~~~~~~~~~~~~~~
    AxisAlignedBox
/usr/include/OGRE/OgreAxisAlignedBox.h:54:20: note: 'AxisAlignedBox' declared here
        class _OgreExport AxisAlignedBox
                          ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:24:
apps/openmw/mwmechanics/aicombataction.hpp:49:44: error: no type named 'ContainerStoreIterator' in namespace 'MWWorld'
        ActionEnchantedItem(const MWWorld::ContainerStoreIterator& item) : mItem(item) {}
                                  ~~~~~~~~~^
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:13:22: error: no member named 'RENDER_QUEUE_SKIES_EARLY' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_SKIES_EARLY'?
    RQG_SkiesEarly = Ogre::RENDER_QUEUE_SKIES_EARLY,
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     RENDER_QUEUE_SKIES_EARLY
/usr/include/OGRE/OgreRenderQueue.h:58:9: note: 'RENDER_QUEUE_SKIES_EARLY' declared here
        RENDER_QUEUE_SKIES_EARLY = 5,
        ^
apps/openmw/mwmechanics/aicombataction.hpp:50:18: error: no type named 'ContainerStoreIterator' in namespace 'MWWorld'
        MWWorld::ContainerStoreIterator mItem;
        ~~~~~~~~~^
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:15:16: error: no member named 'RENDER_QUEUE_MAIN' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_MAIN'?
    RQG_Main = Ogre::RENDER_QUEUE_MAIN,
               ^~~~~~~~~~~~~~~~~~~~~~~
               RENDER_QUEUE_MAIN
/usr/include/OGRE/OgreRenderQueue.h:65:9: note: 'RENDER_QUEUE_MAIN' declared here
        RENDER_QUEUE_MAIN = 50,
        ^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
In file included from apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
In file included from apps/openmw/mwgui/../mwbase/world.hpp:10:
apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:17:17: error: no member named 'RENDER_QUEUE_MAIN' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_MAIN'?
    RQG_Alpha = Ogre::RENDER_QUEUE_MAIN+1,
                ^~~~~~~~~~~~~~~~~~~~~~~
                RENDER_QUEUE_MAIN
/usr/include/OGRE/OgreRenderQueue.h:65:9: note: 'RENDER_QUEUE_MAIN' declared here
        RENDER_QUEUE_MAIN = 50,
        ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:61:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/aicombat.cpp:61:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:19:26: error: no member named 'RENDER_QUEUE_6' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_6'?
    RQG_OcclusionQuery = Ogre::RENDER_QUEUE_6,
                         ^~~~~~~~~~~~~~~~~~~~
                         RENDER_QUEUE_6
/usr/include/OGRE/OgreRenderQueue.h:66:9: note: 'RENDER_QUEUE_6' declared here
        RENDER_QUEUE_6 = 60,
        ^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:21:22: error: no member named 'RENDER_QUEUE_4' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_4'?
    RQG_UnderWater = Ogre::RENDER_QUEUE_4,
                     ^~~~~~~~~~~~~~~~~~~~
                     RENDER_QUEUE_4
/usr/include/OGRE/OgreRenderQueue.h:63:9: note: 'RENDER_QUEUE_4' declared here
        RENDER_QUEUE_4 = 40,
        ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"
In file included from apps/openmw/mwmechanics/aicombat.cpp:61:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
Aborted (core dumped)
In file included from apps/openmw/mwrender/objects.cpp:22:
apps/openmw/mwrender/renderconst.hpp:26:21: error: no member named 'RENDER_QUEUE_SKIES_LATE' in namespace 'Ogre::Ogre'; did you mean simply 'RENDER_QUEUE_SKIES_LATE'?
    RQG_SkiesLate = Ogre::RENDER_QUEUE_SKIES_LATE
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    RENDER_QUEUE_SKIES_LATE
/usr/include/OGRE/OgreRenderQueue.h:72:9: note: 'RENDER_QUEUE_SKIES_LATE' declared here
        RENDER_QUEUE_SKIES_LATE = 95,
        ^
apps/openmw/mwrender/objects.cpp:41:32: error: member access into incomplete type 'const MWWorld::Ptr'
    if(mCellSceneNodes.find(ptr.getCell()) == mCellSceneNodes.end())
                               ^
apps/openmw/mwrender/objects.hpp:38:11: note: forward declaration of 'Ogre::MWWorld::Ptr'
    class Ptr;
          ^
apps/openmw/mwrender/objects.cpp:44:24: error: member access into incomplete type 'Ogre::SceneNode'
        cellnode = root->createChildSceneNode();
                       ^
apps/openmw/mwrender/objects.hpp:17:7: note: forward declaration of 'Ogre::Ogre::SceneNode'
class SceneNode;
      ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/aicombat.cpp:61:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from libs/openengine/bullet/trace.cpp:19:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^

apps/essimporter/convertacdt.hpp should add these lines:

apps/essimporter/convertacdt.hpp should remove these lines:
- namespace ESM { struct CreatureStats; }  // lines 15-15
- namespace ESM { struct NpcStats; }  // lines 16-16
- namespace ESSImport { struct ACDT; }  // lines 19-19
- namespace ESSImport { struct ActorData; }  // lines 20-20

The full include-list for apps/essimporter/convertacdt.hpp:
namespace ESM { struct CreatureStats; }  // lines 12-12
namespace ESM { struct NpcStats; }  // lines 13-13
namespace ESSImport { struct ACDT; }  // lines 7-7
namespace ESSImport { struct ActorData; }  // lines 8-8
---

apps/essimporter/convertacdt.cpp should add these lines:

apps/essimporter/convertacdt.cpp should remove these lines:
- #include "apps/essimporter/importacdt.hpp"  // lines 2-2
- #include "components/esm/creaturestats.hpp"  // lines 4-4
- #include "components/esm/loadskil.hpp"  // lines 6-6
- #include "components/esm/npcstats.hpp"  // lines 8-8
- #include "components/esm/statstate.hpp"  // lines 10-10

The full include-list for apps/essimporter/convertacdt.cpp:
#include "convertacdt.hpp"
#include "apps/essimporter/importacdt.hpp"  // for ACDT, ActorData, etc
#include "components/esm/creaturestats.hpp"  // for CreatureStats
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/npcstats.hpp"  // for NpcStats::Skill, NpcStats
#include "components/esm/statstate.hpp"  // for StatState
---
In file included from apps/openmw/mwmechanics/aicombat.cpp:61:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/openmw/mwmechanics/summoning.cpp:13:
apps/openmw/mwmechanics/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^

apps/openmw/mwgui/dialogue.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/dialogue.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <stdint.h>  // lines 7-7
- #include <list>  // lines 8-8
- #include <list>  // lines 9-9
- #include <map>  // lines 10-10
- #include <map>  // lines 11-11
- #include <string>  // lines 13-13
- #include <utility>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <vector>  // lines 16-16
- #include <vector>  // lines 17-17
- class Ptr;  // lines 39-39
- namespace MWGui { class BookPage; }  // lines 61-61
- namespace MWGui { class DialogueHistoryViewModel; }  // lines 62-62
- namespace MWGui { class WindowManager; }  // lines 56-56
- namespace MyGUI { class Button; }  // lines 42-42
- namespace MyGUI { class ScrollBar; }  // lines 43-43
- namespace MyGUI { class TextBox; }  // lines 44-44
- namespace MyGUI { class Widget; }  // lines 45-45
- namespace MyGUI { class Window; }  // lines 46-46

The full include-list for apps/openmw/mwgui/dialogue.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for intptr_t
#include <string>                       // for string
#include "../mwdialogue/keywordsearch.hpp"  // for KeywordSearch
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "bookpage.hpp"                 // for BookTypesetter, etc
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase, WindowModal
namespace Gui { class MWList; }  // lines 51-51
namespace MWWorld { class Ptr; }  // lines 27-27
namespace MyGUI { class Button; }  // lines 30-30
namespace MyGUI { class EditBox; }  // lines 31-31
namespace MyGUI { class ProgressBar; }  // lines 32-32
namespace MyGUI { class ScrollBar; }  // lines 33-33
namespace MyGUI { class TextBox; }  // lines 34-34
namespace MyGUI { class Widget; }  // lines 35-35
namespace MyGUI { class Window; }  // lines 36-36
---

apps/openmw/mwworld/actionrepair.hpp should add these lines:

apps/openmw/mwworld/actionrepair.hpp should remove these lines:
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 9-9

The full include-list for apps/openmw/mwworld/actionrepair.hpp:
#include "action.hpp"                   // for Action
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 7-7
---

apps/openmw/mwworld/actionrepair.cpp should add these lines:

apps/openmw/mwworld/actionrepair.cpp should remove these lines:
- #include "../mwbase/world.hpp"  // lines 3-3
- #include "../mwworld/player.hpp"  // lines 4-4
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/action.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/action.hpp"  // lines 9-9
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 14-14

The full include-list for apps/openmw/mwworld/actionrepair.cpp:
#include "actionrepair.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 12-12
---
In file included from apps/openmw/mwmechanics/summoning.cpp:26:
In file included from ./apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwgui/dialogue.cpp should add these lines:
#include <utility>                      // for pair
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/dialogue.cpp should remove these lines:
- #include <MyGUI_LanguageManager.h>  // lines 1-1
- #include <MyGUI_Window.h>  // lines 3-3
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <boost/bind.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <limits>  // lines 10-10
- #include <limits>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <typeinfo>  // lines 13-13
- #include "../mwbase/soundmanager.hpp"  // lines 17-17
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "MyGUI_Button.h"  // lines 23-23
- #include "MyGUI_Colour.h"  // lines 25-25
- #include "MyGUI_EditBox.h"  // lines 26-26
- #include "MyGUI_EditBox.h"  // lines 27-27
- #include "MyGUI_EventPair.h"  // lines 28-28
- #include "MyGUI_EventPair.h"  // lines 29-29
- #include "MyGUI_RTTI.h"  // lines 30-30
- #include "MyGUI_ScrollBar.h"  // lines 32-32
- #include "MyGUI_StringUtility.h"  // lines 33-33
- #include "MyGUI_TSize.h"  // lines 34-34
- #include "MyGUI_TSize.h"  // lines 35-35
- #include "MyGUI_TextBox.h"  // lines 36-36
- #include "MyGUI_TextBox.h"  // lines 37-37
- #include "MyGUI_Types.h"  // lines 38-38
- #include "MyGUI_Types.h"  // lines 39-39
- #include "MyGUI_UString.h"  // lines 40-40
- #include "MyGUI_UString.h"  // lines 41-41
- #include "MyGUI_Widget.h"  // lines 43-43
- #include "MyGUI_WidgetInput.h"  // lines 44-44
- #include "MyGUI_WidgetInput.h"  // lines 45-45
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 47-47
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 48-48
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 49-49
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 51-51
- #include "apps/openmw/mwgui/../mwdialogue/../mwbase/dialoguemanager.hpp"  // lines 53-53
- #include "apps/openmw/mwgui/../mwdialogue/../mwworld/ptr.hpp"  // lines 54-54
- #include "apps/openmw/mwgui/../mwdialogue/../mwworld/ptr.hpp"  // lines 55-55
- #include "apps/openmw/mwgui/../mwdialogue/keywordsearch.hpp"  // lines 56-56
- #include "apps/openmw/mwgui/../mwdialogue/keywordsearch.hpp"  // lines 57-57
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 58-58
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 59-59
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 60-60
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 61-61
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 62-62
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 63-63
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 65-65
- #include "components/esm/loadgmst.hpp"  // lines 67-67
- #include "components/esm/loadgmst.hpp"  // lines 68-68
- #include "components/esm/loadnpc.hpp"  // lines 69-69
- #include "components/esm/loadnpc.hpp"  // lines 70-70
- #include "components/misc/stringops.hpp"  // lines 72-72
- #include "components/translation/translation.hpp"  // lines 74-74
- #include "journalbooks.hpp"  // lines 76-76
- #include "spellbuyingwindow.hpp"  // lines 77-77
- #include "tradewindow.hpp"  // lines 78-78
- #include "travelwindow.hpp"  // lines 79-79

The full include-list for apps/openmw/mwgui/dialogue.cpp:
#include "dialogue.hpp"
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <components/widgets/list.hpp>  // for MWList
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwgui/../mwdialogue/../mwbase/dialoguemanager.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "bookpage.hpp"                 // for BookTypesetter, BookPage, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "components/translation/translation.hpp"  // for Storage
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---

extern/shiny/Main/ShaderSet.hpp should add these lines:

extern/shiny/Main/ShaderSet.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include "extern/shiny/Main/Platform.hpp"  // lines 12-12

The full include-list for extern/shiny/Main/ShaderSet.hpp:
#include <stddef.h>                     // for size_t
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <vector>                       // for vector
#include "ShaderInstance.hpp"           // for ShaderInstance
#include "extern/shiny/Main/Platform.hpp"  // for GpuProgramType
namespace sh { class PropertySetGet; }  // lines 17-17
---

extern/shiny/Main/ShaderSet.cpp should add these lines:
#include <fstream>                      // for ifstream, stringstream, etc

extern/shiny/Main/ShaderSet.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <algorithm>  // lines 10-10
- #include <boost/filesystem/path.hpp>  // lines 5-5
- #include <boost/functional/hash/hash.hpp>  // lines 7-7
- #include <boost/lexical_cast.hpp>  // lines 8-8
- #include <sstream>  // lines 11-11
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 16-16
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 17-17
- #include "extern/shiny/Main/ShaderInstance.hpp"  // lines 19-19

The full include-list for extern/shiny/Main/ShaderSet.cpp:
#include "ShaderSet.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for find
#include <boost/algorithm/string/predicate.hpp>  // for starts_with
#include <boost/filesystem/path.hpp>    // for path
#include <boost/functional/hash/hash.hpp>  // for hash_combine
#include <fstream>                      // for ifstream, stringstream, etc
#include <utility>                      // for pair
#include "Factory.hpp"                  // for Factory
#include "extern/shiny/Main/ShaderInstance.hpp"  // for ShaderInstance
---
In file included from apps/openmw/mwmechanics/summoning.cpp:26:
./apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
./apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwgui/referenceinterface.hpp should add these lines:

apps/openmw/mwgui/referenceinterface.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 8-8
- namespace MWWorld { class CellStore; }  // lines 13-13

The full include-list for apps/openmw/mwgui/referenceinterface.hpp:
#include <stddef.h>                     // for NULL
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class CellStore; }  // lines 11-11
---

apps/openmw/mwgui/referenceinterface.cpp should add these lines:

apps/openmw/mwgui/referenceinterface.cpp should remove these lines:
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 4-4
- namespace MWWorld { class CellStore; }  // lines 10-10

The full include-list for apps/openmw/mwgui/referenceinterface.cpp:
#include "referenceinterface.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
namespace MWWorld { class CellStore; }  // lines 8-8
---
./apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/summoning.cpp:38:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwmechanics/security.hpp should add these lines:

apps/openmw/mwmechanics/security.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 8-8

The full include-list for apps/openmw/mwmechanics/security.hpp:
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
---
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwmechanics/security.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwmechanics/security.cpp should remove these lines:
- #include <stdlib.h>  // lines 2-2
- #include "../mwbase/world.hpp"  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 9-9
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 14-14
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 16-16
- #include "components/esm/attr.hpp"  // lines 18-18
- #include "components/esm/loadgmst.hpp"  // lines 19-19
- #include "components/esm/loadgmst.hpp"  // lines 20-20
- #include "components/esm/loadlock.hpp"  // lines 21-21
- #include "components/esm/loadlock.hpp"  // lines 22-22
- #include "components/esm/loadprob.hpp"  // lines 23-23
- #include "components/esm/loadprob.hpp"  // lines 24-24
- #include "components/esm/loadskil.hpp"  // lines 26-26
- #include "components/esm/loadspel.hpp"  // lines 28-28

The full include-list for apps/openmw/mwmechanics/security.cpp:
#include "security.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct
#include "creaturestats.hpp"            // for CreatureStats
#include "npcstats.hpp"                 // for NpcStats
---
In file included from apps/openmw/mwmechanics/aisequence.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/esmtool/esmtool.cpp:15:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^

apps/openmw/mwmechanics/actors.hpp should add these lines:

apps/openmw/mwmechanics/actors.hpp should remove these lines:
- #include <set>  // lines 7-7
- #include "../mwbase/world.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 12-12
- #include "movement.hpp"  // lines 13-13

The full include-list for apps/openmw/mwmechanics/actors.hpp:
#include <stdint.h>                     // for uint32_t
#include <list>                         // for list
#include <map>                          // for map, map<>::const_iterator, etc
#include <string>                       // for string
#include <vector>                       // for vector
namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 16-16
namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 17-17
namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 20-20
namespace MWBase { namespace Loading { namespace MWMechanics { class Actor; } } }  // lines 36-36
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }  // lines 30-30
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 31-31
namespace MWBase { namespace Loading { namespace Ogre { class Vector3; } } }  // lines 25-25
---
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwmechanics/actors.cpp should add these lines:
namespace MWBase { namespace Loading { namespace ESM { struct GameSetting; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Position; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Static; } } }
namespace MWBase { namespace Loading { namespace MWMechanics { class NpcStats; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class InventoryStore; } } }
namespace MWBase { namespace Loading { namespace MWWorld { template <class T> class Store; } } }

apps/openmw/mwmechanics/actors.cpp should remove these lines:
- #include <OgreSceneNode.h>  // lines 2-2
- #include <OgreVector3.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <cmath>  // lines 9-9
- #include <cmath>  // lines 10-10
- #include <components/esm/loadnpc.hpp>  // lines 4-4
- #include <limits>  // lines 12-12
- #include <set>  // lines 13-13
- #include <set>  // lines 14-14
- #include <typeinfo>  // lines 15-15
- #include <utility>  // lines 16-16
- #include "../mwbase/windowmanager.hpp"  // lines 20-20
- #include "../mwworld/actionequip.hpp"  // lines 22-22
- #include "../mwworld/class.hpp"  // lines 23-23
- #include "../mwworld/inventorystore.hpp"  // lines 24-24
- #include "../mwworld/player.hpp"  // lines 25-25
- #include "OgreMath.h"  // lines 26-26
- #include "OgreMath.h"  // lines 27-27
- #include "OgreQuaternion.h"  // lines 28-28
- #include "OgreQuaternion.h"  // lines 29-29
- #include "aifollow.hpp"  // lines 31-31
- #include "aipursue.hpp"  // lines 32-32
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 33-33
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/../mwworld/refdata.hpp"  // lines 34-34
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/../mwworld/refdata.hpp"  // lines 35-35
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/cellref.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/cellref.hpp"  // lines 37-37
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/containerstore.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp"  // lines 40-40
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"  // lines 41-41
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/../mwworld/cellstore.hpp"  // lines 43-43
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 44-44
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 45-45
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 47-47
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 48-48
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 49-49
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 51-51
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 52-52
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 53-53
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 54-54
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 55-55
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 56-56
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 57-57
- #include "components/esm/activespells.hpp"  // lines 60-60
- #include "components/esm/activespells.hpp"  // lines 61-61
- #include "components/esm/attr.hpp"  // lines 63-63
- #include "components/esm/defs.hpp"  // lines 64-64
- #include "components/esm/defs.hpp"  // lines 65-65
- #include "components/esm/esmreader.hpp"  // lines 66-66
- #include "components/esm/esmreader.hpp"  // lines 67-67
- #include "components/esm/esmwriter.hpp"  // lines 68-68
- #include "components/esm/esmwriter.hpp"  // lines 69-69
- #include "components/esm/loadcell.hpp"  // lines 71-71
- #include "components/esm/loadcrea.hpp"  // lines 72-72
- #include "components/esm/loadcrea.hpp"  // lines 73-73
- #include "components/esm/loadgmst.hpp"  // lines 74-74
- #include "components/esm/loadgmst.hpp"  // lines 75-75
- #include "components/esm/loadligh.hpp"  // lines 76-76
- #include "components/esm/loadligh.hpp"  // lines 77-77
- #include "components/esm/loadmgef.hpp"  // lines 79-79
- #include "components/esm/loadmisc.hpp"  // lines 80-80
- #include "components/esm/loadmisc.hpp"  // lines 81-81
- #include "components/esm/loadskil.hpp"  // lines 82-82
- #include "components/esm/loadskil.hpp"  // lines 83-83
- #include "components/esm/loadstat.hpp"  // lines 84-84
- #include "components/esm/loadstat.hpp"  // lines 85-85
- #include "components/misc/stringops.hpp"  // lines 86-86
- #include "components/misc/stringops.hpp"  // lines 87-87
- #include "npcstats.hpp"  // lines 89-89
- namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 99-99
- namespace MWBase { namespace Loading { namespace MWRender { class Animation; } } }  // lines 102-102

The full include-list for apps/openmw/mwmechanics/actors.cpp:
#include "actors.hpp"
#include <stddef.h>                     // for NULL
#include <limits>                       // for numeric_limits
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwmechanics/activespells.hpp"  // for ActiveSpells, etc
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "character.hpp"                // for ContainerStoreIterator, etc
#include "combat.hpp"                   // for isEnvironmentCompatible
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "creaturestats.hpp"            // for CreatureStats
#include "summoning.hpp"                // for UpdateSummonedCreatures
namespace MWBase { namespace Loading { namespace ESM { struct GameSetting; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Position; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Static; } } }
namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 97-97
namespace MWBase { namespace Loading { namespace MWMechanics { class NpcStats; } } }
namespace MWBase { namespace Loading { namespace MWRender { class Animation; } } }  // lines 93-93
namespace MWBase { namespace Loading { namespace MWWorld { class InventoryStore; } } }
namespace MWBase { namespace Loading { namespace MWWorld { template <class T> class Store; } } }
---
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwclass/potion.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/potion.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace MWRender { class RenderingInterface; }  // lines 24-24
- namespace MWWorld { class Action; }  // lines 27-27
- namespace MWWorld { class CellStore; }  // lines 28-28
- namespace MWWorld { class PhysicsSystem; }  // lines 29-29

The full include-list for apps/openmw/mwclass/potion.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 22-22
namespace MWWorld { class Action; }  // lines 16-16
namespace MWWorld { class CellStore; }  // lines 17-17
namespace MWWorld { class PhysicsSystem; }  // lines 18-18
---
In file included from apps/openmw/mwclass/ingredient.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwclass/potion.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwclass/potion.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadalch.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../mwrender/objects.hpp"  // lines 15-15
- #include "../mwrender/renderinginterface.hpp"  // lines 16-16
- #include "../mwworld/cellstore.hpp"  // lines 17-17
- #include "../mwworld/physicssystem.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 33-33
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 35-35
- #include "components/esm/loadgmst.hpp"  // lines 36-36
- #include "components/esm/loadnpc.hpp"  // lines 38-38
- #include "components/esm/loadskil.hpp"  // lines 40-40

The full include-list for apps/openmw/mwclass/potion.cpp:
#include "potion.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Potions
#include "components/esm/loadskil.hpp"  // for Skill, etc
---

apps/openmw/mwclass/creature.hpp should add these lines:
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"

apps/openmw/mwclass/creature.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "../mwworld/class.hpp"  // lines 8-8
- #include "OgreVector3.h"  // lines 21-21
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/class.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwworld/containerstore.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"  // lines 19-19
- namespace ESM { struct ObjectState; }  // lines 38-38
- namespace MWMechanics { class CreatureStats; }  // lines 23-23
- namespace MWMechanics { class CreatureStats; }  // lines 41-41
- namespace MWMechanics { struct Movement; }  // lines 24-24
- namespace MWMechanics { struct Movement; }  // lines 42-42
- namespace MWRender { class RenderingInterface; }  // lines 45-45
- namespace MWWorld { class Action; }  // lines 48-48
- namespace MWWorld { class CellStore; }  // lines 49-49
- namespace MWWorld { class PhysicsSystem; }  // lines 50-50

The full include-list for apps/openmw/mwclass/creature.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"
namespace ESM { struct GameSetting; }  // lines 55-55
namespace ESM { struct ObjectState; }  // lines 36-36
namespace MWRender { class RenderingInterface; }  // lines 27-27
namespace MWWorld { class Action; }  // lines 30-30
namespace MWWorld { class CellStore; }  // lines 31-31
namespace MWWorld { class PhysicsSystem; }  // lines 32-32
---
In file included from apps/openmw/mwworld/inventorystore.cpp:2:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/inventorystore.cpp:2:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^

apps/openmw/mwclass/creature.cpp should add these lines:
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
namespace ESM { struct Creature; }
namespace ESM { struct CreatureState; }
namespace ESM { struct Sound; }
namespace ESM { struct SoundGenerator; }
namespace MWBase { class SoundManager; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/creature.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stdlib.h>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <components/esm/creaturestate.hpp>  // lines 4-4
- #include <components/esm/loadcrea.hpp>  // lines 5-5
- #include <iostream>  // lines 10-10
- #include <stdexcept>  // lines 12-12
- #include <stdexcept>  // lines 13-13
- #include <typeinfo>  // lines 14-14
- #include <typeinfo>  // lines 15-15
- #include <utility>  // lines 17-17
- #include <vector>  // lines 18-18
- #include <vector>  // lines 19-19
- #include "../mwbase/environment.hpp"  // lines 21-21
- #include "../mwbase/soundmanager.hpp"  // lines 23-23
- #include "../mwbase/windowmanager.hpp"  // lines 24-24
- #include "../mwbase/world.hpp"  // lines 25-25
- #include "../mwrender/actors.hpp"  // lines 32-32
- #include "../mwworld/actionopen.hpp"  // lines 34-34
- #include "../mwworld/actiontalk.hpp"  // lines 35-35
- #include "../mwworld/cellstore.hpp"  // lines 36-36
- #include "../mwworld/failedaction.hpp"  // lines 39-39
- #include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwmechanics/stat.hpp"  // lines 43-43
- #include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"  // lines 45-45
- #include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/spells.hpp"  // lines 46-46
- #include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/spells.hpp"  // lines 47-47
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp"  // lines 48-48
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp"  // lines 49-49
- #include "apps/openmw/mwclass/../mwmechanics/aisequence.hpp"  // lines 51-51
- #include "apps/openmw/mwclass/../mwmechanics/drawstate.hpp"  // lines 53-53
- #include "apps/openmw/mwclass/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 55-55
- #include "apps/openmw/mwclass/../mwworld/../mwscript/locals.hpp"  // lines 56-56
- #include "apps/openmw/mwclass/../mwworld/../mwscript/locals.hpp"  // lines 57-57
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 58-58
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 59-59
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 60-60
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 61-61
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 62-62
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 63-63
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 64-64
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 65-65
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 67-67
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 68-68
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 69-69
- #include "components/esm/aipackage.hpp"  // lines 70-70
- #include "components/esm/aipackage.hpp"  // lines 71-71
- #include "components/esm/attr.hpp"  // lines 73-73
- #include "components/esm/defs.hpp"  // lines 74-74
- #include "components/esm/defs.hpp"  // lines 75-75
- #include "components/esm/loadclas.hpp"  // lines 77-77
- #include "components/esm/loadench.hpp"  // lines 79-79
- #include "components/esm/loadgmst.hpp"  // lines 81-81
- #include "components/esm/loadmgef.hpp"  // lines 83-83
- #include "components/esm/loadskil.hpp"  // lines 85-85
- #include "components/esm/loadsndg.hpp"  // lines 86-86
- #include "components/esm/loadsndg.hpp"  // lines 87-87
- #include "components/esm/loadsoun.hpp"  // lines 88-88
- #include "components/esm/loadsoun.hpp"  // lines 89-89
- #include "components/esm/loadspel.hpp"  // lines 90-90
- #include "components/esm/loadspel.hpp"  // lines 91-91
- #include "components/esm/loadweap.hpp"  // lines 92-92
- #include "components/esm/loadweap.hpp"  // lines 93-93
- #include "components/esm/objectstate.hpp"  // lines 94-94
- #include "components/esm/objectstate.hpp"  // lines 95-95
- #include "components/esm/spelllist.hpp"  // lines 96-96
- #include "components/esm/spelllist.hpp"  // lines 97-97
- #include "components/misc/stringops.hpp"  // lines 98-98
- #include "components/misc/stringops.hpp"  // lines 99-99
- namespace ESM { struct InventoryList; }  // lines 105-105

The full include-list for apps/openmw/mwclass/creature.cpp:
#include "creature.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, NULL, RAND_MAX
#include <memory>                       // for auto_ptr
#include <utility>                      // for pair
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/difficultyscaling.hpp"  // for scaleDamage
#include "../mwmechanics/disease.hpp"   // for diseaseContact
#include "../mwmechanics/movement.hpp"  // for Movement
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwclass/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwclass/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SKDTstruct, etc
namespace ESM { struct Creature; }
namespace ESM { struct CreatureState; }
namespace ESM { struct InventoryList; }  // lines 103-103
namespace ESM { struct Sound; }
namespace ESM { struct SoundGenerator; }
namespace MWBase { class SoundManager; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
apps/esmtool/esmtool.cpp:101:20: error: field has incomplete type 'ESM::ESMReader'
    ESM::ESMReader reader;
                   ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
In file included from apps/essimporter/convertnpcc.cpp:3:
In file included from ./components/esm/npcstate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/esmtool/esmtool.cpp:316:14: error: member access into incomplete type 'ESM::ESMReader'
    while(esm.hasMoreRecs())
             ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:318:26: error: member access into incomplete type 'ESM::ESMReader'
        ESM::NAME n = esm.getRecName();
                         ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:320:12: error: member access into incomplete type 'ESM::ESMReader'
        esm.getRecHeader();
           ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:321:18: error: member access into incomplete type 'ESM::ESMReader'
        while(esm.hasMoreSubs())
                 ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:323:32: error: member access into incomplete type 'ESM::ESMReader'
            uint64_t offs = esm.getOffset();
                               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:324:16: error: member access into incomplete type 'ESM::ESMReader'
            esm.getSubName();
               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:325:16: error: member access into incomplete type 'ESM::ESMReader'
            esm.skipHSub();
               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:326:20: error: member access into incomplete type 'ESM::ESMReader'
            n = esm.retSubName();
                   ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:328:64: error: member access into incomplete type 'ESM::ESMReader'
            std::cout << "    " << n.toString() << " - " << esm.getSubSize()
                                                               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:339:8: error: member access into incomplete type 'ESM::ESMReader'
    esm.setEncoder(&encoder);
       ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:352:16: error: member access into incomplete type 'ESM::ESMReader'
            esm.openRaw(filename);
               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:363:12: error: member access into incomplete type 'ESM::ESMReader'
        esm.open(filename);
           ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:365:31: error: member access into incomplete type 'ESM::ESMReader'
        info.data.author = esm.getAuthor();
                              ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:366:36: 
apps/essimporter/importcellref.hpp should add these lines:

apps/essimporter/importcellref.hpp should remove these lines:
- #include <components/esm/cellref.hpp>  // lines 4-4

The full include-list for apps/essimporter/importcellref.hpp:
#include <string>                       // for string
#include "importacdt.hpp"               // for ActorData
namespace ESM { class ESMReader; }  // lines 11-11
---

apps/essimporter/importcellref.cpp should add these lines:

apps/essimporter/importcellref.cpp should remove these lines:
- #include "apps/essimporter/importacdt.hpp"  // lines 4-4
- #include "components/esm/cellref.hpp"  // lines 6-6
- #include "components/esm/defs.hpp"  // lines 8-8

The full include-list for apps/essimporter/importcellref.cpp:
#include "importcellref.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importacdt.hpp"  // for ActorData
#include "components/esm/cellref.hpp"   // for RefNum
#include "components/esm/defs.hpp"      // for Position
---
error: member access into incomplete type 'ESM::ESMReader'
        info.data.description = esm.getDesc();
                                   ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:367:32: error: member access into incomplete type 'ESM::ESMReader'
        info.data.masters = esm.getGameFiles();
                               ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
apps/esmtool/esmtool.cpp:371:43: error: member access into incomplete type 'ESM::ESMReader'
            std::cout << "Author: " << esm.getAuthor() << std::endl
                                          ^
./components/esm/loadtes3.hpp:15:11: note: forward declaration of 'ESM::ESMReader'
    class ESMReader;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/essimporter/convertscpt.hpp should add these lines:

apps/essimporter/convertscpt.hpp should remove these lines:
- namespace ESM { struct GlobalScript; }  // lines 13-13
- namespace ESSImport { struct SCPT; }  // lines 16-16

The full include-list for apps/essimporter/convertscpt.hpp:
namespace ESM { struct GlobalScript; }  // lines 11-11
namespace ESSImport { struct SCPT; }  // lines 7-7
---

apps/essimporter/convertscpt.cpp should add these lines:

apps/essimporter/convertscpt.cpp should remove these lines:
- #include <string>  // lines 3-3
- #include "apps/essimporter/importscpt.hpp"  // lines 6-6
- #include "components/esm/esmcommon.hpp"  // lines 8-8
- #include "components/esm/globalscript.hpp"  // lines 10-10
- #include "components/esm/loadscpt.hpp"  // lines 12-12

The full include-list for apps/essimporter/convertscpt.cpp:
#include "convertscpt.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
#include <string>                       // for string
#include "apps/essimporter/importscpt.hpp"  // for SCPT
#include "components/esm/esmcommon.hpp"  // for NAME32
#include "components/esm/globalscript.hpp"  // for GlobalScript
#include "components/esm/loadscpt.hpp"  // for Script::SCHD
#include "convertscri.hpp"              // for convertSCRI
---
apps/openmw/mwmechanics/aisequence.cpp:39:6: error: use of undeclared identifier 'AiSequence'; did you mean 'ESM::AiSequence'?
void AiSequence::copy (const AiSequence& sequence)
     ^~~~~~~~~~
     ESM::AiSequence
apps/openmw/mwmechanics/aiwander.hpp:41:15: note: 'ESM::AiSequence' declared here
    namespace AiSequence
              ^
apps/openmw/mwmechanics/aisequence.cpp:39:18: error: cannot define or redeclare 'copy' here because namespace 'MWMechanics' does not enclose namespace 'AiSequence'
void AiSequence::copy (const AiSequence& sequence)
     ~~~~~~~~~~~~^
apps/openmw/mwmechanics/aisequence.cpp:41:49: error: no matching constructor for initialization of 'std::list<AiPackage *>::const_iterator' (aka '_List_const_iterator<ESM::AiSequence::AiPackage *>')
    for (std::list<AiPackage *>::const_iterator iter (sequence.mPackages.begin());
                                                ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_list.h:204:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator' (aka '__normal_iterator<const_pointer, std::vector<ESM::AiSequence::AiPackageContainer, std::allocator<ESM::AiSequence::AiPackageContainer> > >') to 'const std::_List_const_iterator<ESM::AiSequence::AiPackage *>' for 1st argument
    struct _List_const_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_list.h:220:7: note: candidate constructor not viable: no known conversion from 'const_iterator' (aka '__normal_iterator<const_pointer, std::vector<ESM::AiSequence::AiPackageContainer, std::allocator<ESM::AiSequence::AiPackageContainer> > >') to 'const __detail::_List_node_base *' for 1st argument
      _List_const_iterator(const __detail::_List_node_base* __x)
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_list.h:224:7: note: candidate constructor not viable: no known conversion from 'const_iterator' (aka '__normal_iterator<const_pointer, std::vector<ESM::AiSequence::AiPackageContainer, std::allocator<ESM::AiSequence::AiPackageContainer> > >') to 'const iterator' (aka 'const _List_iterator<ESM::AiSequence::AiPackage *>') for 1st argument
      _List_const_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_list.h:216:7: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
      _List_const_iterator() _GLIBCXX_NOEXCEPT
      ^
apps/openmw/mwmechanics/aisequence.cpp:43:9: error: use of undeclared identifier 'mPackages'
        mPackages.push_back ((*iter)->clone());
        ^
apps/openmw/mwmechanics/aisequence.cpp:46:1: error: use of undeclared identifier 'AiSequence'; did you mean 'ESM::AiSequence'?
AiSequence::AiSequence() : mDone (false), mLastAiPackage(-1) {}
^~~~~~~~~~
ESM::AiSequence
apps/openmw/mwmechanics/aiwander.hpp:41:15: note: 'ESM::AiSequence' declared here
    namespace AiSequence
              ^
apps/openmw/mwmechanics/aisequence.cpp:46:24: error: expected unqualified-id
AiSequence::AiSequence() : mDone (false), mLastAiPackage(-1) {}
                       ^
apps/openmw/mwmechanics/aisequence.cpp:48:1: error: use of undeclared identifier 'AiSequence'; did you mean 'ESM::AiSequence'?
AiSequence::AiSequence (const AiSequence& sequence)
^~~~~~~~~~
ESM::AiSequence
apps/openmw/mwmechanics/aiwander.hpp:41:15: note: 'ESM::AiSequence' declared here
    namespace AiSequence
              ^
apps/openmw/mwmechanics/aisequence.cpp:48:25: error: expected unqualified-id
AiSequence::AiSequence (const AiSequence& sequence)
                        ^
apps/openmw/mwmechanics/aisequence.cpp:48:25: error: expected ')'
apps/openmw/mwmechanics/aisequence.cpp:48:24: note: to match this '('
AiSequence::AiSequence (const AiSequence& sequence)
                       ^
apps/openmw/mwmechanics/aisequence.cpp:55:1: error: unknown type name 'AiSequence'; did you mean 'ESM::AiSequence::AiSequence'?
AiSequence& AiSequence::operator= (const AiSequence& sequence)
^~~~~~~~~~
ESM::AiSequence::AiSequence
apps/openmw/mwmechanics/aiwander.hpp:27:8: note: 'ESM::AiSequence::AiSequence' declared here
struct AiSequence;
       ^
apps/openmw/mwmechanics/aisequence.cpp:55:13: error: use of undeclared identifier 'AiSequence'; did you mean 'ESM::AiSequence'?
AiSequence& AiSequence::operator= (const AiSequence& sequence)
            ^~~~~~~~~~
            ESM::AiSequence
apps/openmw/mwmechanics/aiwander.hpp:41:15: note: 'ESM::AiSequence' declared here
    namespace AiSequence
              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/inventorystore.cpp:17:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/opencs/model/doc/savingstate.cpp:5:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^

(apps/essimporter/importgame.hpp has correct #includes/fwd-decls)

(apps/essimporter/importgame.cpp has correct #includes/fwd-decls)

extern/shiny/Platforms/Ogre/OgreMaterial.hpp should add these lines:
#include <string>                       // for string
#include "GLX/../OgrePrerequisites.h"   // for MaterialPtr

extern/shiny/Platforms/Ogre/OgreMaterial.hpp should remove these lines:
- #include <OgreMaterial.h>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include "OgrePrerequisites.h"  // lines 9-9
- #include "OgrePrerequisites.h"  // lines 10-10
- #include "OgreSharedPtr.h"  // lines 12-12
- namespace Ogre { class Technique; }  // lines 17-17

The full include-list for extern/shiny/Platforms/Ogre/OgreMaterial.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../../Main/Platform.hpp"      // for Material
#include "GLX/../OgrePrerequisites.h"   // for MaterialPtr
#include "OgreSharedPtr.h"              // for SharedPtr
namespace Ogre { class Technique; }  // lines 15-15
---

extern/shiny/Platforms/Ogre/OgreMaterial.cpp should add these lines:

extern/shiny/Platforms/Ogre/OgreMaterial.cpp should remove these lines:
- #include <assert.h>  // lines 4-4
- #include <ostream>  // lines 6-6
- #include "OgreMaterial.h"  // lines 10-10
- #include "OgreResourceGroupManager.h"  // lines 16-16
- #include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"  // lines 18-18

The full include-list for extern/shiny/Platforms/Ogre/OgreMaterial.cpp:
#include "OgreMaterial.hpp"
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgreTechnique.h>              // for Technique
#include <assert.h>                     // for assert
#include <ostream>                      // for basic_ostream, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include "OgreMaterial.h"               // for Material
#include "OgreMaterialSerializer.hpp"   // for OgreMaterialSerializer
#include "OgrePass.hpp"                 // for OgrePass
#include "OgrePlatform.hpp"             // for OgrePlatform
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "extern/shiny/Platforms/Ogre/../../Main/Platform.hpp"
---

(components/esm/aisequence.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/aisequence.cpp should add these lines:

apps/openmw/mwmechanics/aisequence.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <limits>  // lines 5-5
- #include <limits>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include <string>  // lines 9-9
- #include <string>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "../mwbase/environment.hpp"  // lines 14-14
- #include "../mwbase/world.hpp"  // lines 15-15
- #include "OgreVector3.h"  // lines 16-16
- #include "OgreVector3.h"  // lines 17-17
- #include "aiactivate.hpp"  // lines 18-18
- #include "aicombat.hpp"  // lines 19-19
- #include "aiescort.hpp"  // lines 20-20
- #include "aifollow.hpp"  // lines 21-21
- #include "aipackage.hpp"  // lines 22-22
- #include "aitravel.hpp"  // lines 23-23
- #include "aiwander.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 28-28
- #include "components/esm/aipackage.hpp"  // lines 29-29
- #include "components/esm/aipackage.hpp"  // lines 30-30
- #include "components/esm/defs.hpp"  // lines 31-31
- #include "components/esm/defs.hpp"  // lines 32-32
- #include "components/esm/esmcommon.hpp"  // lines 33-33
- #include "components/esm/esmcommon.hpp"  // lines 34-34

The full include-list for apps/openmw/mwmechanics/aisequence.cpp:
#include <components/esm/aisequence.hpp>
---

apps/openmw/mwworld/scene.hpp should add these lines:
#include "apps/openmw/mwworld/livecellref.hpp"  // for Ptr
class Ptr;
namespace Loading { class Listener; }

apps/openmw/mwworld/scene.hpp should remove these lines:
- #include <set>  // lines 4-4
- #include <string>  // lines 6-6
- #include "globals.hpp"  // lines 8-8
- #include "ptr.hpp"  // lines 9-9
- namespace Ogre { namespace MWRender { class CellRender; } }  // lines 42-42
- namespace Ogre { namespace MWWorld { class Player; } }  // lines 49-49
- namespace Ogre { namespace OEngine { namespace MWWorld { class Listener; } } }  // lines 34-34
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { class Collections; } } } }  // lines 30-30
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWRender { class RenderingManager; } } } } } }  // lines 16-16
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWRender { namespace MWRender { class RenderingManager; } } } } } } }  // lines 13-13
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace Ogre { class Vector3; } } } } } }  // lines 22-22
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { struct Position; } } } } }  // lines 26-26

The full include-list for apps/openmw/mwworld/scene.hpp:
#include <string>                       // for string
#include "apps/openmw/mwworld/livecellref.hpp"  // for Ptr
class Ptr;
namespace Loading { class Listener; }
namespace Ogre { namespace MWWorld { class CellStore; } }  // lines 47-47
namespace Ogre { namespace MWWorld { class PhysicsSystem; } }  // lines 48-48
---

apps/openmw/mwworld/scene.cpp should add these lines:
class Ptr;
namespace MWBase { class MechanicsManager; }

apps/openmw/mwworld/scene.cpp should remove these lines:
- #include <OgreSceneNode.h>  // lines 1-1
- #include <assert.h>  // lines 3-3
- #include <stdlib.h>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <cmath>  // lines 8-8
- #include <cmath>  // lines 9-9
- #include <components/misc/resourcehelpers.hpp>  // lines 4-4
- #include <exception>  // lines 10-10
- #include <exception>  // lines 11-11
- #include <iostream>  // lines 13-13
- #include <limits>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <utility>  // lines 17-17
- #include <vector>  // lines 18-18
- #include <vector>  // lines 19-19
- #include "../mwbase/mechanicsmanager.hpp"  // lines 22-22
- #include "../mwbase/soundmanager.hpp"  // lines 23-23
- #include "OgreMath.h"  // lines 26-26
- #include "OgreMath.h"  // lines 27-27
- #include "OgreQuaternion.h"  // lines 28-28
- #include "OgreQuaternion.h"  // lines 29-29
- #include "OgreVector3.h"  // lines 30-30
- #include "OgreVector3.h"  // lines 31-31
- #include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"  // lines 32-32
- #include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"  // lines 33-33
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 34-34
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 35-35
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 36-36
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 37-37
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 38-38
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 39-39
- #include "apps/openmw/mwworld/store.hpp"  // lines 40-40
- #include "apps/openmw/mwworld/store.hpp"  // lines 41-41
- #include "cellfunctors.hpp"  // lines 42-42
- #include "cellstore.hpp"  // lines 43-43
- #include "class.hpp"  // lines 44-44
- #include "components/esm/defs.hpp"  // lines 45-45
- #include "components/esm/defs.hpp"  // lines 46-46
- #include "components/esm/loadcell.hpp"  // lines 47-47
- #include "components/esm/loadcell.hpp"  // lines 48-48
- #include "components/esm/loadland.hpp"  // lines 49-49
- #include "components/esm/loadland.hpp"  // lines 50-50
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 52-52
- #include "components/settings/settings.hpp"  // lines 53-53
- #include "components/settings/settings.hpp"  // lines 54-54
- #include "esmstore.hpp"  // lines 55-55
- #include "localscripts.hpp"  // lines 56-56
- #include "physicssystem.hpp"  // lines 57-57
- #include "player.hpp"  // lines 58-58

The full include-list for apps/openmw/mwworld/scene.cpp:
#include "scene.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for NULL
#include <iostream>                     // for cout, ostream
#include <limits>                       // for numeric_limits
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener, etc
class Ptr;
namespace MWBase { class MechanicsManager; }
---

apps/openmw/mwmechanics/autocalcspell.hpp should add these lines:
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum

apps/openmw/mwmechanics/autocalcspell.hpp should remove these lines:
- #include <components/esm/loadspel.hpp>  // lines 4-4
- #include <set>  // lines 5-5
- #include <vector>  // lines 8-8
- namespace ESM { struct Race; }  // lines 14-14
- namespace ESM { struct Spell; }  // lines 15-15

The full include-list for apps/openmw/mwmechanics/autocalcspell.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
namespace ESM { struct Race; }  // lines 11-11
namespace ESM { struct Spell; }  // lines 12-12
---

apps/openmw/mwmechanics/autocalcspell.cpp should add these lines:

apps/openmw/mwmechanics/autocalcspell.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include <cfloat>  // lines 6-6
- #include <map>  // lines 9-9
- #include <set>  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 17-17
- #include "components/esm/attr.hpp"  // lines 20-20
- #include "components/esm/defs.hpp"  // lines 22-22
- #include "components/esm/effectlist.hpp"  // lines 24-24
- #include "components/esm/loadgmst.hpp"  // lines 26-26
- #include "components/esm/loadmgef.hpp"  // lines 28-28
- #include "components/esm/loadrace.hpp"  // lines 30-30
- #include "components/esm/loadskil.hpp"  // lines 32-32
- #include "components/esm/loadspel.hpp"  // lines 34-34
- #include "components/esm/spelllist.hpp"  // lines 36-36

The full include-list for apps/openmw/mwmechanics/autocalcspell.cpp:
#include "autocalcspell.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for find, max
#include <cfloat>                       // for FLT_MAX
#include <climits>                      // for INT_MAX
#include <map>                          // for map, map<>::mapped_type
#include <set>                          // for _Rb_tree_iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Target
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
---

apps/openmw/mwmechanics/aicombat.hpp should add these lines:
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/aicombat.hpp should remove these lines:
- #include <OgreVector3.h>  // lines 4-4
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include "../mwbase/world.hpp"  // lines 7-7
- #include "../mwworld/cellstore.hpp"  // lines 8-8
- #include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"  // lines 10-10
- #include "movement.hpp"  // lines 12-12
- #include "obstacle.hpp"  // lines 13-13
- #include "pathfinding.hpp"  // lines 14-14
- namespace MWMechanics { class Action; }  // lines 32-32

The full include-list for apps/openmw/mwmechanics/aicombat.hpp:
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { namespace AiSequence { struct AiCombat; } }  // lines 26-26
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 18-18
---
In file included from apps/openmw/mwclass/npc.cpp:5:
In file included from ./components/esm/npcstate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwmechanics/aicombat.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwworld/cellstore.hpp"
namespace MWWorld { class ESMStore; }

apps/openmw/mwmechanics/aicombat.cpp should remove these lines:
- #include <stdlib.h>  // lines 6-6
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include <cmath>  // lines 8-8
- #include <list>  // lines 10-10
- #include <memory>  // lines 12-12
- #include "../mwbase/dialoguemanager.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 20-20
- #include "OgreVector3.h"  // lines 22-22
- #include "aicombataction.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 28-28
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 32-32
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 33-33
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 34-34
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 40-40
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/obstacle.hpp"  // lines 44-44
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 46-46
- #include "components/esm/defs.hpp"  // lines 50-50
- #include "components/esm/loadcell.hpp"  // lines 52-52
- #include "components/esm/loadgmst.hpp"  // lines 53-53
- #include "components/esm/loadgmst.hpp"  // lines 54-54
- #include "components/esm/loadmgef.hpp"  // lines 56-56
- #include "components/esm/loadpgrd.hpp"  // lines 58-58
- #include "components/esm/loadweap.hpp"  // lines 60-60

The full include-list for apps/openmw/mwmechanics/aicombat.cpp:
#include "aicombat.hpp"
#include <OgreMath.h>                   // for Degree, Radian, Math
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <cmath>                        // for abs, sqrt
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <list>                         // for list
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwrender/animation.hpp"    // for Animation
#include "../mwworld/class.hpp"         // for Class
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_Z
#include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwmechanics/../mwworld/cellstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/obstacle.hpp"  // for ObstacleCheck
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for PathFinder
#include "character.hpp"                // for WeaponType::WeapType_None, etc
#include "combat.hpp"                   // for isEnvironmentCompatible
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct, etc
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "steering.hpp"                 // for zTurn, smoothTurn, etc
namespace MWWorld { class ESMStore; }
---
In file included from apps/openmw/mwworld/inventorystore.cpp:18:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/convertnpcc.cpp:3:
In file included from ./components/esm/npcstate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwworld/inventorystore.cpp:18:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwworld/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/essimporter/convertnpcc.cpp:3:
In file included from ./components/esm/npcstate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/convertnpcc.cpp:3:
In file included from ./components/esm/npcstate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwworld/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwworld/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/essimporter/convertnpcc.cpp:3:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from apps/openmw/mwworld/inventorystore.cpp:18:
In file included from apps/openmw/mwworld/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwworld/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwrender/objects.hpp should add these lines:

apps/openmw/mwrender/objects.hpp should remove these lines:
- #include <OgreColourValue.h>  // lines 4-4
- #include <map>  // lines 8-8
- #include <openengine/ogre/renderer.hpp>  // lines 5-5
- #include <string>  // lines 10-10
- #include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 12-12
- namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } }  // lines 25-25
- namespace Ogre { namespace Ogre { class Camera; } }  // lines 30-30
- namespace Ogre { namespace Ogre { class SceneNode; } }  // lines 31-31
- namespace Ogre { namespace Ogre { class StaticGeometry; } }  // lines 32-32

The full include-list for apps/openmw/mwrender/objects.hpp:
#include <stddef.h>                     // for NULL
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
namespace Ogre { namespace MWRender { class ObjectAnimation; } }  // lines 43-43
namespace Ogre { namespace MWWorld { class CellStore; } }  // lines 37-37
namespace Ogre { namespace MWWorld { class Ptr; } }  // lines 38-38
namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } }  // lines 23-23
namespace Ogre { namespace Ogre { class Camera; } }  // lines 16-16
namespace Ogre { namespace Ogre { class SceneNode; } }  // lines 17-17
namespace Ogre { namespace Ogre { class StaticGeometry; } }  // lines 18-18
---

apps/openmw/mwrender/objects.cpp should add these lines:

apps/openmw/mwrender/objects.cpp should remove these lines:
- #include <OgreSceneManager.h>  // lines 1-1
- #include <OgreSceneNode.h>  // lines 2-2
- #include <OgreStaticGeometry.h>  // lines 3-3
- #include <algorithm>  // lines 5-5
- #include <components/settings/settings.hpp>  // lines 4-4
- #include <utility>  // lines 7-7
- #include "../mwworld/cellstore.hpp"  // lines 9-9
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "OgreAxisAlignedBox.h"  // lines 11-11
- #include "OgreMath.h"  // lines 12-12
- #include "OgreQuaternion.h"  // lines 13-13
- #include "OgreStringConverter.h"  // lines 14-14
- #include "OgreVector3.h"  // lines 15-15
- #include "animation.hpp"  // lines 16-16
- #include "apps/openmw/mwrender/../mwworld/cellref.hpp"  // lines 17-17
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 18-18
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "openengine/ogre/renderer.hpp"  // lines 21-21
- #include "renderconst.hpp"  // lines 22-22

The full include-list for apps/openmw/mwrender/objects.cpp:
#include "objects.hpp"
#include <memory>                       // for auto_ptr
namespace Ogre { namespace Ogre { class Camera; } }  // lines 25-25
---
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwmechanics/summoning.hpp should add these lines:

apps/openmw/mwmechanics/summoning.hpp should remove these lines:
- #include <set>  // lines 4-4
- #include <utility>  // lines 6-6
- #include "../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 10-10

The full include-list for apps/openmw/mwmechanics/summoning.hpp:
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"
#include "magiceffects.hpp"             // for EffectKey, etc
namespace MWMechanics { class CreatureStats; }  // lines 16-16
---

apps/openmw/mwmechanics/summoning.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Static; }
namespace MWRender { class Animation; }

apps/openmw/mwmechanics/summoning.cpp should remove these lines:
- #include <map>  // lines 2-2
- #include <map>  // lines 3-3
- #include <vector>  // lines 4-4
- #include <vector>  // lines 5-5
- #include "../mwrender/animation.hpp"  // lines 10-10
- #include "../mwworld/esmstore.hpp"  // lines 12-12
- #include "../mwworld/inventorystore.hpp"  // lines 13-13
- #include "OgreMath.h"  // lines 16-16
- #include "OgreQuaternion.h"  // lines 18-18
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 25-25
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 29-29
- #include "components/esm/defs.hpp"  // lines 31-31
- #include "components/esm/loadgmst.hpp"  // lines 32-32
- #include "components/esm/loadgmst.hpp"  // lines 33-33
- #include "components/esm/loadmgef.hpp"  // lines 34-34
- #include "components/esm/loadmgef.hpp"  // lines 35-35
- #include "components/esm/loadstat.hpp"  // lines 36-36
- #include "components/esm/loadstat.hpp"  // lines 37-37
- namespace MWWorld { class CellStore; }  // lines 44-44

The full include-list for apps/openmw/mwmechanics/summoning.cpp:
#include "summoning.hpp"
#include <OgreVector3.h>                // for Vector3, operator*, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/spellcasting.hpp"  // for isSummoningEffect
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "OgreMath.h"                   // for Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "aifollow.hpp"                 // for AiFollow
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "components/esm/defs.hpp"      // for Position
#include "creaturestats.hpp"            // for CreatureStats
namespace ESM { struct Static; }
namespace MWRender { class Animation; }
namespace MWWorld { class CellStore; }  // lines 42-42
---
In file included from apps/openmw/mwworld/actionsoulgem.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:47:23: error: field has incomplete type 'Ogre::Vector3'
        Ogre::Vector3 mLastKnownExteriorPosition;
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:4:
apps/openmw/mwworld/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwworld/../mwworld/player.hpp:73:23: error: incomplete result type 'Ogre::Vector3' in function definition
        Ogre::Vector3 getLastKnownExteriorPosition() const { return mLastKnownExteriorPosition; }
                      ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:5:
In file included from apps/openmw/mwworld/actionsoulgem.hpp:4:
apps/openmw/mwworld/action.hpp:17:17: error: field has incomplete type 'MWBase::Ptr'
            Ptr mTarget;
                ^
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:5:
In file included from apps/openmw/mwworld/actionsoulgem.hpp:4:
apps/openmw/mwworld/action.hpp:31:65: error: invalid use of incomplete type 'MWBase::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
                                                                ^~~~~
apps/openmw/mwworld/../mwworld/player.hpp:29:11: note: forward declaration of 'MWBase::Ptr'
    class Ptr;
          ^
apps/openmw/mwworld/actionsoulgem.cpp:19:11: error: no matching constructor for initialization of 'MWBase::Loading::MWWorld::Action'
        : Action(false, object)
          ^      ~~~~~~~~~~~~~
./apps/openmw/mwworld/action.hpp:31:13: note: candidate constructor not viable: cannot convert argument of incomplete type 'const MWBase::Loading::MWWorld::Ptr' to 'const MWBase::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
            ^
./apps/openmw/mwworld/action.hpp:20:13: note: candidate constructor not viable: requires single argument 'action', but 2 arguments were provided
            Action (const Action& action);
            ^
apps/openmw/mwworld/actionsoulgem.cpp:26:62: error: member access into incomplete type 'MWWorld::Player'
        if(MWBase::Environment::get().getWorld()->getPlayer().isInCombat()) { //Ensure we're not in combat
                                                             ^
apps/openmw/mwworld/../mwbase/world.hpp:61:11: note: forward declaration of 'MWWorld::Player'
    class Player;
          ^
apps/openmw/mwworld/actionsoulgem.cpp:30:74: error: cannot initialize object parameter of type 'const MWBase::Loading::MWWorld::Action' with an expression of type 'MWBase::Loading::MWWorld::ActionSoulgem'
        MWBase::Environment::get().getWindowManager()->showSoulgemDialog(getTarget());
                                                                         ^~~~~~~~~
apps/openmw/mwworld/actionsoulgem.cpp:34:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:33:1: note: to match this '{'
{
^
apps/openmw/mwworld/actionsoulgem.cpp:34:2: error: expected '}'
}
 ^
apps/openmw/mwworld/../mwworld/player.hpp:28:1: note: to match this '{'
{
^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/essimporter/importscri.hpp should add these lines:

apps/essimporter/importscri.hpp should remove these lines:
- #include <string>  // lines 5-5

The full include-list for apps/essimporter/importscri.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
namespace ESM { class ESMReader; }  // lines 10-10
---

(apps/essimporter/importscri.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/objects.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/characterpreview.cpp:22:
apps/openmw/mwrender/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
apps/openmw/mwmechanics/objects.cpp:43:41: error: no member named 'Environment' in namespace 'MWBase'
    MWRender::Animation *anim = MWBase::Environment::get().getWorld()->getAnimation(ptr);
                                ~~~~~~~~^

apps/esmtool/esmtool.cpp should add these lines:
namespace ESM { class ESMReader; }

apps/esmtool/esmtool.cpp should remove these lines:
- #include <stddef.h>  // lines 17-17
- #include <stdint.h>  // lines 18-18
- #include <stdint.h>  // lines 19-19
- #include <algorithm>  // lines 20-20
- #include <boost/lexical_cast.hpp>  // lines 1-1
- #include <boost/lexical_cast.hpp>  // lines 2-2
- #include <boost/program_options/errors.hpp>  // lines 4-4
- #include <boost/program_options/options_description.hpp>  // lines 6-6
- #include <boost/program_options/parsers.hpp>  // lines 8-8
- #include <boost/program_options/positional_options.hpp>  // lines 10-10
- #include <boost/program_options/value_semantic.hpp>  // lines 12-12
- #include <boost/program_options/variables_map.hpp>  // lines 14-14
- #include <exception>  // lines 23-23
- #include <iomanip>  // lines 463-463
- #include <string>  // lines 29-29
- #include <utility>  // lines 30-30
- #include <utility>  // lines 31-31
- #include "components/esm/cellref.hpp"  // lines 35-35
- #include "components/esm/defs.hpp"  // lines 37-37
- #include "components/esm/esmcommon.hpp"  // lines 39-39
- #include "components/esm/loadcell.hpp"  // lines 41-41
- #include "components/esm/loadgmst.hpp"  // lines 42-42
- #include "components/esm/loadgmst.hpp"  // lines 43-43
- #include "components/esm/loadtes3.hpp"  // lines 45-45
- #include "components/misc/stringops.hpp"  // lines 46-46
- #include "components/misc/stringops.hpp"  // lines 47-47
- #include "components/to_utf8/to_utf8.hpp"  // lines 49-49

The full include-list for apps/esmtool/esmtool.cpp:
#include <stddef.h>                     // for size_t
#include <boost/program_options/errors.hpp>
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>
#include <boost/program_options/positional_options.hpp>
#include <boost/program_options/value_semantic.hpp>  // for value, etc
#include <boost/program_options/variables_map.hpp>  // for variables_map, etc
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <deque>                        // for deque
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <list>                         // for list
#include <map>                          // for map, map<>::mapped_type
#include <set>                          // for set
#include <string>                       // for string, operator==, etc
#include <vector>                       // for vector
#include "components/esm/cellref.hpp"   // for CellRef, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_CELL, etc
#include "components/esm/esmcommon.hpp"  // for NAME
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadtes3.hpp"  // for Header::MasterData, Header, etc
#include "components/to_utf8/to_utf8.hpp"  // for calculateEncoding, etc
#include "record.hpp"                   // for RecordBase
namespace ESM { class ESMReader; }
---

(libs/openengine/bullet/trace.h has correct #includes/fwd-decls)

(libs/openengine/bullet/trace.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/characterpreview.cpp:44:
apps/openmw/mwrender/characterpreview.hpp:127:41: error: implicit instantiation of undefined template 'MWWorld::LiveCellRef<ESM::NPC>'
        MWWorld::LiveCellRef<ESM::NPC>  mRef;
                                        ^
./apps/openmw/mwrender/../mwworld/containerstore.hpp:43:30: note: template is declared here
template <typename X> struct LiveCellRef;
                             ^
apps/openmw/mwrender/characterpreview.cpp:243:52: error: cannot initialize a variable of type 'MWWorld::LiveCellRef<ESM::Weapon> *' with an rvalue of type 'MWWorld::LiveCellRef<Weapon> *'
                MWWorld::LiveCellRef<ESM::Weapon> *ref = iter->get<ESM::Weapon>();
                                                   ^     ~~~~~~~~~~~~~~~~~~~~~~~~
apps/openmw/mwrender/characterpreview.cpp:349:13: error: cannot initialize object parameter of type 'MWRender::CharacterPreview' with an expression of type 'MWRender::RaceSelectionPreview'
            setupRenderTarget();
            ^~~~~~~~~~~~~~~~~
apps/openmw/mwrender/characterpreview.cpp:357:9: error: cannot initialize object parameter of type 'MWRender::CharacterPreview' with an expression of type 'MWRender::RaceSelectionPreview'
        rebuild();
        ^~~~~~~
In file included from apps/openmw/mwclass/npc.cpp:5:
In file included from ./components/esm/npcstate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/openmw/mwclass/npc.cpp:5:
In file included from ./components/esm/npcstate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/npc.cpp:5:
In file included from ./components/esm/npcstate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/openmw/mwclass/npc.cpp:5:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^

apps/essimporter/convertnpcc.hpp should add these lines:

apps/essimporter/convertnpcc.hpp should remove these lines:
- namespace ESM { struct NpcState; }  // lines 13-13
- namespace ESSImport { struct NPCC; }  // lines 16-16

The full include-list for apps/essimporter/convertnpcc.hpp:
namespace ESM { struct NpcState; }  // lines 11-11
namespace ESSImport { struct NPCC; }  // lines 7-7
---

apps/essimporter/convertnpcc.cpp should add these lines:

apps/essimporter/convertnpcc.cpp should remove these lines:
- #include "apps/essimporter/importnpcc.hpp"  // lines 2-2
- #include "components/esm/npcstate.hpp"  // lines 4-4
- #include "components/esm/npcstats.hpp"  // lines 6-6
- #include "convertinventory.hpp"  // lines 7-7

The full include-list for apps/essimporter/convertnpcc.cpp:
#include "convertnpcc.hpp"
#include "apps/essimporter/importnpcc.hpp"  // for NPCC, NPCC::NPDT
#include "components/esm/npcstate.hpp"  // for NpcState
#include "components/esm/npcstats.hpp"  // for NpcStats
---
In file included from apps/openmw/mwworld/refdata.cpp:3:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:16:
apps/opencs/model/doc/../tools/tools.hpp:30:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:16:
apps/opencs/model/doc/../tools/tools.hpp:30:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/model/doc/../tools/tools.hpp:30:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/model/doc/../tools/tools.hpp:30:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/opencs/model/doc/../tools/tools.hpp:32:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:16:
apps/opencs/model/doc/../tools/tools.hpp:32:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/model/doc/../tools/tools.hpp:32:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/model/doc/../tools/tools.hpp:32:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/npc.cpp:18:
In file included from apps/openmw/mwclass/../mwbase/soundmanager.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/actionsoulgem.hpp should add these lines:

apps/openmw/mwworld/actionsoulgem.hpp should remove these lines:
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 9-9

The full include-list for apps/openmw/mwworld/actionsoulgem.hpp:
#include "action.hpp"                   // for Action
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 7-7
---

apps/openmw/mwworld/actionsoulgem.cpp should add these lines:

apps/openmw/mwworld/actionsoulgem.cpp should remove these lines:
- #include "../mwbase/environment.hpp"  // lines 1-1
- #include "../mwbase/windowmanager.hpp"  // lines 2-2
- #include "../mwbase/world.hpp"  // lines 3-3
- #include "../mwworld/player.hpp"  // lines 4-4
- #include "apps/openmw/mwworld/action.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/action.hpp"  // lines 7-7
- namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 12-12

The full include-list for apps/openmw/mwworld/actionsoulgem.cpp:
#include "actionsoulgem.hpp"
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }  // lines 10-10
---
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/refdata.cpp:6:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwworld/refdata.cpp:63:63: error: member access into incomplete type 'const ESM::ObjectState'
    : mBaseNode (0), mHasLocals (false), mEnabled (objectState.mEnabled),
                                                              ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:64:26: error: member access into incomplete type 'const ESM::ObjectState'
      mCount (objectState.mCount), mPosition (objectState.mPosition), mCustomData (0),
                         ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:64:58: error: member access into incomplete type 'const ESM::ObjectState'
      mCount (objectState.mCount), mPosition (objectState.mPosition), mCustomData (0),
                                                         ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:69:48: error: member access into incomplete type 'const ESM::ObjectState'
            mLocalRotation.rot[i] = objectState.mLocalRotation[i];
                                               ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:88:20: error: member access into incomplete type 'ESM::ObjectState'
        objectState.mHasLocals = mHasLocals;
                   ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:91:39: error: member access into incomplete type 'ESM::ObjectState'
            mLocals.write (objectState.mLocals, scriptId);
                                      ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:93:20: error: member access into incomplete type 'ESM::ObjectState'
        objectState.mEnabled = mEnabled;
                   ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:94:20: error: member access into incomplete type 'ESM::ObjectState'
        objectState.mCount = mCount;
                   ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
apps/openmw/mwworld/refdata.cpp:95:20: error: member access into incomplete type 'ESM::ObjectState'
        objectState.mPosition = mPosition;
                   ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/ingredient.cpp:13:
apps/openmw/mwclass/../mwrender/objects.hpp:53:40: error: no member named 'AxisAlignedBox' in namespace 'Ogre::Ogre'
    std::map<MWWorld::CellStore*,Ogre::AxisAlignedBox> mBounds;
                                 ~~~~~~^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwrender/objects.hpp:77:5: error: no type named 'AxisAlignedBox' in namespace 'Ogre::Ogre'; did you mean simply 'AxisAlignedBox'?
    Ogre::AxisAlignedBox getDimensions(MWWorld::CellStore*);
    ^~~~~~~~~~~~~~~~~~~~
    AxisAlignedBox
/usr/include/OGRE/OgrePrerequisites.h:129:11: note: 'AxisAlignedBox' declared here
    class AxisAlignedBox;
          ^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/ingredient.cpp:15:
In file included from apps/openmw/mwclass/../mwworld/actioneat.hpp:4:
apps/openmw/mwclass/../mwbase/../mwworld/action.hpp:17:17: error: field has incomplete type 'Ogre::MWWorld::Ptr'
            Ptr mTarget;
                ^
apps/openmw/mwclass/../mwrender/objects.hpp:38:11: note: forward declaration of 'Ogre::MWWorld::Ptr'
    class Ptr;
          ^
In file included from apps/openmw/mwclass/ingredient.cpp:15:
In file included from apps/openmw/mwclass/../mwworld/actioneat.hpp:4:
apps/openmw/mwclass/../mwbase/../mwworld/action.hpp:31:65: error: invalid use of incomplete type 'Ogre::MWWorld::Ptr'
            Action (bool keepSound = false, const Ptr& target = Ptr());
                                                                ^~~~~
apps/openmw/mwclass/../mwrender/objects.hpp:38:11: note: forward declaration of 'Ogre::MWWorld::Ptr'
    class Ptr;
          ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:30:5: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
    RefNum mRefNum;
    ^~~~~~
    ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:41:48: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
bool operator==(const MovedCellRef& ref, const RefNum& refNum);
                                               ^~~~~~
                                               ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:42:43: error: unknown type name 'RefNum'; did you mean '::ESM::RefNum'?
bool operator==(const CellRef& ref, const RefNum& refNum);
                                          ^~~~~~
                                          ::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: '::ESM::RefNum' declared here
    struct RefNum
           ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:76:5: error: unknown type name 'Color'; did you mean '::ESM::Color'?
    Color mAmbient, mSunlight, mFog;
    ^~~~~
    ::ESM::Color
./components/esm/defs.hpp:16:17: note: '::ESM::Color' declared here
typedef int32_t Color;
                ^
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:12:
./components/esm/loadcell.hpp:95:15: error: unknown type name 'ESM_Context'; did you mean '::ESM::ESM_Context'?
  std::vector<ESM_Context> mContextList; // File position; multiple positions for multiple plugin support
              ^~~~~~~~~~~
              ::ESM::ESM_Context
./components/esm/esmcommon.hpp:61:8: note: '::ESM::ESM_Context' declared here
struct ESM_Context
       ^
In file included from apps/openmw/mwrender/characterpreview.cpp:20:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:48: error: 'MWWorld::LiveCellRefBase' is an incomplete type
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                               ^                                      ~~~~
apps/openmw/mwrender/characterpreview.cpp:243:64: note: in instantiation of function template specialization 'MWWorld::Ptr::get<ESM::Weapon>' requested here
                MWWorld::LiveCellRef<ESM::Weapon> *ref = iter->get<ESM::Weapon>();
                                                               ^
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwworld/inventorystore.hpp should add these lines:

apps/openmw/mwworld/inventorystore.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- class Ptr;  // lines 26-26
- namespace ESM { struct InventoryState; }  // lines 24-24
- namespace MWMechanics { class NpcStats; }  // lines 37-37
- struct LiveCellRefBase;  // lines 27-27

The full include-list for apps/openmw/mwworld/inventorystore.hpp:
#include <string>                       // for string
#include "../mwmechanics/magiceffects.hpp"  // for MagicEffects
#include "containerstore.hpp"           // for ContainerStoreIterator, etc
namespace ESM { struct InventoryState; }  // lines 22-22
namespace ESM { struct MagicEffect; }  // lines 32-32
namespace MWWorld { class Ptr; }  // lines 17-17
namespace MWWorld { struct LiveCellRefBase; }  // lines 18-18
---
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:48: error: 'MWWorld::LiveCellRefBase' is an incomplete type
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                               ^                                      ~~~~
apps/openmw/mwrender/characterpreview.cpp:327:30: note: in instantiation of function template specialization 'MWWorld::Ptr::get<ESM::NPC>' requested here
        , mBase (*mCharacter.get<ESM::NPC>()->mBase)
                             ^
./apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:15:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^

apps/openmw/mwworld/inventorystore.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/inventorystore.cpp should remove these lines:
- #include <stdlib.h>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <cstddef>  // lines 8-8
- #include <iterator>  // lines 9-9
- #include <stdexcept>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <typeinfo>  // lines 13-13
- #include "../mwbase/world.hpp"  // lines 17-17
- #include "../mwmechanics/npcstats.hpp"  // lines 18-18
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 20-20
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 21-21
- #include "apps/openmw/mwworld/../mwmechanics/creaturestats.hpp"  // lines 22-22
- #include "apps/openmw/mwworld/../mwmechanics/creaturestats.hpp"  // lines 23-23
- #include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"  // lines 25-25
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 26-26
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 27-27
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 28-28
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 29-29
- #include "apps/openmw/mwworld/containerstore.hpp"  // lines 31-31
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 33-33
- #include "apps/openmw/mwworld/store.hpp"  // lines 34-34
- #include "apps/openmw/mwworld/store.hpp"  // lines 35-35
- #include "components/esm/effectlist.hpp"  // lines 37-37
- #include "components/esm/effectlist.hpp"  // lines 38-38
- #include "components/esm/loadarmo.hpp"  // lines 39-39
- #include "components/esm/loadarmo.hpp"  // lines 40-40
- #include "components/esm/loadclot.hpp"  // lines 41-41
- #include "components/esm/loadclot.hpp"  // lines 42-42
- #include "components/esm/loadgmst.hpp"  // lines 43-43
- #include "components/esm/loadgmst.hpp"  // lines 44-44
- #include "components/esm/loadligh.hpp"  // lines 45-45
- #include "components/esm/loadligh.hpp"  // lines 46-46
- #include "components/esm/loadweap.hpp"  // lines 47-47
- #include "components/esm/loadweap.hpp"  // lines 48-48
- #include "components/misc/stringops.hpp"  // lines 49-49
- #include "components/misc/stringops.hpp"  // lines 50-50
- #include "esmstore.hpp"  // lines 51-51
- namespace MWWorld { struct LiveCellRefBase; }  // lines 57-57

The full include-list for apps/openmw/mwworld/inventorystore.cpp:
#include "inventorystore.hpp"
#include <stdlib.h>                     // for RAND_MAX
#include <components/esm/inventorystate.hpp>  // for InventoryState, etc
#include <components/esm/loadench.hpp>  // for Enchantment, etc
#include <cstddef>                      // for size_t, NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwworld/containerstore.hpp"
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "class.hpp"                    // for Class
namespace MWWorld { struct LiveCellRefBase; }  // lines 55-55
---

apps/openmw/mwmechanics/objects.hpp should add these lines:

apps/openmw/mwmechanics/objects.hpp should remove these lines:
- #include "character.hpp"  // lines 9-9
- namespace MWWorld { class Ptr; }  // lines 21-21

The full include-list for apps/openmw/mwmechanics/objects.hpp:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
namespace MWMechanics { class CharacterController; }  // lines 12-12
namespace MWWorld { class CellStore; }  // lines 20-20
namespace Ogre { class Vector3; }  // lines 15-15
---

apps/openmw/mwmechanics/objects.cpp should add these lines:

apps/openmw/mwmechanics/objects.cpp should remove these lines:
- #include <stddef.h>  // lines 3-3
- #include <utility>  // lines 5-5
- #include "../mwbase/world.hpp"  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 9-9
- #include "apps/openmw/mwmechanics/character.hpp"  // lines 11-11
- #include "components/esm/defs.hpp"  // lines 13-13
- namespace MWRender { class Animation; }  // lines 19-19

The full include-list for apps/openmw/mwmechanics/objects.cpp:
#include "objects.hpp"
#include <OgreVector3.h>                // for Vector3
#include <stddef.h>                     // for NULL
#include <utility>                      // for pair, make_pair
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/character.hpp"
#include "components/esm/defs.hpp"      // for Position
namespace MWRender { class Animation; }  // lines 17-17
---
In file included from apps/openmw/mwclass/ingredient.cpp:16:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:6:
In file included from ./components/esm/records.hpp:16:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/openmw/mwclass/apparatus.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/launcher/main.cpp:1:
In file included from /usr/include/qt4/QtGui/QApplication:1:
In file included from /usr/include/qt4/QtGui/qapplication.h:45:
In file included from /usr/include/qt4/QtCore/qcoreapplication.h:45:
In file included from /usr/include/qt4/QtCore/qobject.h:47:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/main.cpp:1:
In file included from /usr/include/qt4/QtGui/QApplication:1:
In file included from /usr/include/qt4/QtGui/qapplication.h:45:
In file included from /usr/include/qt4/QtCore/qcoreapplication.h:45:
In file included from /usr/include/qt4/QtCore/qobject.h:47:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/main.cpp:17:
In file included from apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/main.cpp:17:
apps/launcher/maindialog.hpp:17:10: fatal error: 'ui_mainwindow.h' file not found
#include "ui_mainwindow.h"
         ^

(apps/essimporter/importacdt.hpp has correct #includes/fwd-decls)

apps/essimporter/importacdt.cpp should add these lines:

apps/essimporter/importacdt.cpp should remove these lines:
- #include "apps/essimporter/importscri.hpp"  // lines 5-5

The full include-list for apps/essimporter/importacdt.cpp:
#include "importacdt.hpp"
#include <components/esm/cellref.hpp>   // for CellRef
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importscri.hpp"  // for SCRI
---

apps/openmw/mwmechanics/aiwander.hpp should add these lines:

apps/openmw/mwmechanics/aiwander.hpp should remove these lines:
- #include "pathfinding.hpp"  // lines 11-11
- namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 27-27
- namespace ESM { struct Cell; }  // lines 29-29
- namespace MWMechanics { class PathFinder; }  // lines 32-32
- namespace MWWorld { class Ptr; }  // lines 36-36

The full include-list for apps/openmw/mwmechanics/aiwander.hpp:
#include <OgreVector3.h>                // for Vector3
#include <vector>                       // for vector
#include "../mwworld/timestamp.hpp"     // for TimeStamp
#include "aipackage.hpp"                // for AiPackage
#include "aistate.hpp"                  // for AiState
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 25-25
namespace ESM { namespace AiSequence { struct AiWander; } }  // lines 44-44
namespace ESM { struct Cell; }  // lines 14-14
namespace MWMechanics { class PathFinder; }  // lines 17-17
namespace MWMechanics { struct AiWanderStorage; }  // lines 52-52
namespace MWWorld { class Ptr; }  // lines 20-20
---
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/npc.cpp:19:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwmechanics/aiwander.cpp should add these lines:

apps/openmw/mwmechanics/aiwander.cpp should remove these lines:
- #include <assert.h>  // lines 4-4
- #include <stdlib.h>  // lines 7-7
- #include <list>  // lines 9-9
- #include <memory>  // lines 11-11
- #include "OgreMath.h"  // lines 22-22
- #include "OgreQuaternion.h"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 31-31
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 33-33
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 35-35
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 37-37
- #include "apps/openmw/mwmechanics/aistate.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 41-41
- #include "apps/openmw/mwmechanics/obstacle.hpp"  // lines 43-43
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 45-45
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 47-47
- #include "components/esm/defs.hpp"  // lines 49-49
- #include "components/esm/loadcell.hpp"  // lines 51-51
- #include "components/esm/loadgmst.hpp"  // lines 53-53
- #include "components/esm/loadland.hpp"  // lines 55-55
- #include "components/esm/util.hpp"  // lines 57-57

The full include-list for apps/openmw/mwmechanics/aiwander.cpp:
#include "aiwander.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreVector3.h>                // for Vector3
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <list>                         // for list
#include <memory>                       // for auto_ptr, etc
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "OgreMath.h"                   // for Radian, Degree, Math
#include "OgreQuaternion.h"             // for Quaternion
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "apps/openmw/mwmechanics/aistate.hpp"  // for DerivedClassStorage, etc
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/obstacle.hpp"  // for ObstacleCheck, etc
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for PathFinder
#include "apps/openmw/mwmechanics/stat.hpp"  // for Stat, DynamicStat
#include "components/esm/defs.hpp"      // for Position, TimeStamp
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadland.hpp"  // for Land, Land::REAL_SIZE
#include "components/esm/util.hpp"      // for Vector3
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "steering.hpp"                 // for zTurn
---
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:22:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwsound/ffmpeg_decoder.hpp should add these lines:
#include <boost/cstdint.hpp>            // for __STDC_CONSTANT_MACROS

apps/openmw/mwsound/ffmpeg_decoder.hpp should remove these lines:
- #include <libavutil/channel_layout.h>  // lines 27-27
- #include <libavutil/opt.h>  // lines 41-41

The full include-list for apps/openmw/mwsound/ffmpeg_decoder.hpp:
#include <libavcodec/avcodec.h>         // for AVPacket
#include <libavcodec/version.h>         // for LIBAVCODEC_VERSION_INT
#include <libavformat/avformat.h>       // for AVFormatContext, AVStream
#include <libavresample/avresample.h>   // for AVAudioResampleContext
#include <libavutil/frame.h>            // for AVFrame
#include <libavutil/samplefmt.h>        // for AVSampleFormat
#include <libavutil/version.h>          // for AV_VERSION_INT, etc
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint8_t, int64_t
#include <boost/cstdint.hpp>            // for __STDC_CONSTANT_MACROS
#include <string>                       // for string
#include <vector>                       // for vector
#include "OgreDataStream.h"             // for DataStreamPtr
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType, etc
---
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/livecellref.cpp:2:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwworld/esmstore.hpp should add these lines:

apps/openmw/mwworld/esmstore.hpp should remove these lines:
- #include <stdint.h>  // lines 6-6
- #include <components/esm/records.hpp>  // lines 4-4
- #include <ostream>  // lines 9-9
- #include <string>  // lines 12-12
- #include <utility>  // lines 14-14
- #include "components/esm/attr.hpp"  // lines 17-17
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "components/esm/loadacti.hpp"  // lines 21-21
- #include "components/esm/loadalch.hpp"  // lines 23-23
- #include "components/esm/loadappa.hpp"  // lines 25-25
- #include "components/esm/loadarmo.hpp"  // lines 27-27
- #include "components/esm/loadbody.hpp"  // lines 29-29
- #include "components/esm/loadbook.hpp"  // lines 31-31
- #include "components/esm/loadbsgn.hpp"  // lines 33-33
- #include "components/esm/loadclas.hpp"  // lines 35-35
- #include "components/esm/loadclot.hpp"  // lines 37-37
- #include "components/esm/loadcont.hpp"  // lines 39-39
- #include "components/esm/loadcrea.hpp"  // lines 41-41
- #include "components/esm/loaddial.hpp"  // lines 43-43
- #include "components/esm/loaddoor.hpp"  // lines 45-45
- #include "components/esm/loadench.hpp"  // lines 47-47
- #include "components/esm/loadfact.hpp"  // lines 49-49
- #include "components/esm/loadglob.hpp"  // lines 51-51
- #include "components/esm/loadgmst.hpp"  // lines 53-53
- #include "components/esm/loadingr.hpp"  // lines 55-55
- #include "components/esm/loadlevlist.hpp"  // lines 57-57
- #include "components/esm/loadligh.hpp"  // lines 59-59
- #include "components/esm/loadlock.hpp"  // lines 61-61
- #include "components/esm/loadmisc.hpp"  // lines 63-63
- #include "components/esm/loadnpc.hpp"  // lines 65-65
- #include "components/esm/loadprob.hpp"  // lines 67-67
- #include "components/esm/loadrace.hpp"  // lines 69-69
- #include "components/esm/loadregn.hpp"  // lines 71-71
- #include "components/esm/loadrepa.hpp"  // lines 73-73
- #include "components/esm/loadscpt.hpp"  // lines 75-75
- #include "components/esm/loadsndg.hpp"  // lines 77-77
- #include "components/esm/loadsoun.hpp"  // lines 79-79
- #include "components/esm/loadspel.hpp"  // lines 81-81
- #include "components/esm/loadsscr.hpp"  // lines 83-83
- #include "components/esm/loadstat.hpp"  // lines 85-85
- #include "components/esm/loadweap.hpp"  // lines 87-87
- #include "components/misc/stringops.hpp"  // lines 89-89
- namespace ESM { class ESMReader; }  // lines 104-104
- namespace ESM { class ESMWriter; }  // lines 105-105
- namespace ESM { struct Cell; }  // lines 106-106
- namespace ESM { struct Land; }  // lines 107-107
- namespace ESM { struct LandTexture; }  // lines 108-108
- namespace ESM { struct MagicEffect; }  // lines 109-109
- namespace ESM { struct Pathgrid; }  // lines 110-110
- namespace ESM { struct Skill; }  // lines 111-111

The full include-list for apps/openmw/mwworld/esmstore.hpp:
#include <stdint.h>                     // for uint32_t
#include <map>                          // for map, etc
#include <ostream>                      // for ostringstream, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, char_traits, etc
#include <utility>                      // for pair
#include "components/esm/attr.hpp"      // for Attribute
#include "components/esm/defs.hpp"      // for RecNameInts::REC_NPC_, etc
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbody.hpp"  // for BodyPart
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddial.hpp"  // for Dialogue
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadench.hpp"  // for Enchantment
#include "components/esm/loadfact.hpp"  // for Faction
#include "components/esm/loadglob.hpp"  // for Global
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadregn.hpp"  // for Region
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadsndg.hpp"  // for SoundGenerator
#include "components/esm/loadsoun.hpp"  // for Sound
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/loadsscr.hpp"  // for StartScript
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/misc/stringops.hpp"  // for StringUtils
#include "store.hpp"                    // for Store, StoreBase
namespace ESM { class ESMReader; }  // lines 95-95
namespace ESM { class ESMWriter; }  // lines 96-96
namespace ESM { struct Cell; }  // lines 97-97
namespace ESM { struct Land; }  // lines 98-98
namespace ESM { struct LandTexture; }  // lines 99-99
namespace ESM { struct MagicEffect; }  // lines 100-100
namespace ESM { struct Pathgrid; }  // lines 101-101
namespace ESM { struct Skill; }  // lines 102-102
namespace Loading { class Listener; }  // lines 116-116
---

apps/openmw/mwsound/ffmpeg_decoder.cpp should add these lines:

apps/openmw/mwsound/ffmpeg_decoder.cpp should remove these lines:
- #include <libavformat/avio.h>  // lines 2-2
- #include <libavutil/avutil.h>  // lines 4-4
- #include <libavutil/channel_layout.h>  // lines 6-6
- #include <libavutil/mem.h>  // lines 9-9
- #include <libavutil/rational.h>  // lines 11-11
- #include <stdio.h>  // lines 13-13
- #include <string.h>  // lines 15-15
- #include <algorithm>  // lines 17-17
- #include <exception>  // lines 19-19
- #include <ostream>  // lines 21-21
- #include "OgreResourceGroupManager.h"  // lines 25-25
- #include "OgreSharedPtr.h"  // lines 27-27
- #include "apps/openmw/mwsound/sound_decoder.hpp"  // lines 29-29

The full include-list for apps/openmw/mwsound/ffmpeg_decoder.cpp:
#include "ffmpeg_decoder.hpp"
#include <libavformat/avio.h>           // for AVIOContext, etc
#include <libavutil/avutil.h>
#include <libavutil/channel_layout.h>
#include <libavutil/log.h>              // for av_log_set_level, etc
#include <libavutil/mem.h>              // for av_free, av_freep
#include <libavutil/rational.h>         // for av_q2d
#include <stdio.h>                      // for SEEK_CUR, SEEK_END, etc
#include <string.h>                     // for memcpy, memmove, memset
#include <algorithm>                    // for min
#include <exception>                    // for exception
#include <ostream>                      // for stringstream, etc
#include <stdexcept>                    // for runtime_error
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreSharedPtr.h"              // for SharedPtr
#include "apps/openmw/mwsound/sound_decoder.hpp"  // for ChannelConfig, etc
---
In file included from apps/launcher/utils/profilescombobox.cpp:9:
apps/launcher/utils/profilescombobox.hpp:15:33: error: use of undeclared identifier 'ContentSelectorView'
class ProfilesComboBox : public ContentSelectorView::ComboBox
                                ^
apps/launcher/utils/profilescombobox.hpp:15:54: error: expected class name
class ProfilesComboBox : public ContentSelectorView::ComboBox
                                                     ^
apps/launcher/utils/profilescombobox.hpp:32:9: error: use of undeclared identifier 'ComboBox'; did you mean 'QComboBox'?
        ComboBox::setCurrentIndex(index);
        ^~~~~~~~
        QComboBox
/usr/include/qt4/QtGui/qcombobox.h:62:20: note: 'QComboBox' declared here
class Q_GUI_EXPORT QComboBox : public QWidget
                   ^
In file included from apps/launcher/utils/profilescombobox.cpp:9:
apps/launcher/utils/profilescombobox.hpp:32:19: error: call to non-static member function without an object argument
        ComboBox::setCurrentIndex(index);
        ~~~~~~~~~~^~~~~~~~~~~~~~~

apps/openmw/mwworld/esmstore.cpp should add these lines:
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener

apps/openmw/mwworld/esmstore.cpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include "apps/openmw/mwworld/store.hpp"  // lines 10-10
- #include "components/esm/esmcommon.hpp"  // lines 12-12
- #include "components/esm/esmwriter.hpp"  // lines 14-14
- #include "components/esm/loadtes3.hpp"  // lines 16-16

The full include-list for apps/openmw/mwworld/esmstore.cpp:
#include "esmstore.hpp"
#include <stddef.h>                     // for size_t
#include <boost/filesystem/path.hpp>    // for path
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <iostream>                     // for cerr
#include <vector>                       // for vector
#include "apps/openmw/mwworld/store.hpp"  // for Store, StoreBase
#include "components/esm/esmcommon.hpp"  // for NAME, ESM_Context
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadtes3.hpp"  // for Header, Header::MasterData
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener
---
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/model/doc/../world/refcollection.hpp:12:
apps/opencs/model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
apps/launcher/utils/profilescombobox.hpp:33:23: error: use of undeclared identifier 'currentText'
        mOldProfile = currentText();
                      ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

apps/mwiniimporter/main.cpp should add these lines:

apps/mwiniimporter/main.cpp should remove these lines:
- #include <boost/filesystem/operations.hpp>  // lines 3-3
- #include <boost/filesystem/path_traits.hpp>  // lines 6-6
- #include <boost/program_options/errors.hpp>  // lines 8-8
- #include <boost/program_options/positional_options.hpp>  // lines 12-12
- #include <boost/program_options/value_semantic.hpp>  // lines 14-14
- #include <boost/program_options/variables_map.hpp>  // lines 16-16
- #include <exception>  // lines 18-18
- #include "components/to_utf8/to_utf8.hpp"  // lines 23-23

The full include-list for apps/mwiniimporter/main.cpp:
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/operations.hpp>  // for exists
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <boost/program_options/errors.hpp>  // for program_options
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>
#include <boost/program_options/positional_options.hpp>
#include <boost/program_options/value_semantic.hpp>  // for value, etc
#include <boost/program_options/variables_map.hpp>  // for variables_map, etc
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <string>                       // for string, basic_string, etc
#include "components/to_utf8/to_utf8.hpp"  // for calculateEncoding
#include "importer.hpp"                 // for MwIniImporter, etc
---
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
apps/launcher/utils/profilescombobox.cpp:12:5: error: use of undeclared identifier 'ContentSelectorView'
    ContentSelectorView::ComboBox(parent)
    ^
apps/launcher/utils/profilescombobox.cpp:12:26: error: member initializer 'ComboBox' does not name a non-static data member or base class
    ContentSelectorView::ComboBox(parent)
                         ^~~~~~~~~~~~~~~~
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/model/doc/saving.cpp:5:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/launcher/utils/profilescombobox.cpp:14:5: error: use of undeclared identifier 'connect'
    connect(this, SIGNAL(activated(int)), this,
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/model/doc/../world/refcollection.hpp:12:
apps/opencs/model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
apps/launcher/utils/profilescombobox.cpp:17:5: error: use of undeclared identifier 'setInsertPolicy'
    setInsertPolicy(QComboBox::NoInsert);
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
apps/launcher/utils/profilescombobox.cpp:22:9: error: use of undeclared identifier 'isEditable'
    if (isEditable() == editable)
        ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/doc/savingstate.cpp:9:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
apps/launcher/utils/profilescombobox.cpp:26:20: error: use of undeclared identifier 'lineEdit'
        disconnect(lineEdit(), SIGNAL(editingFinished()), this, SLOT(slotEditingFinished()));
                   ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/essimporter/importinfo.hpp has correct #includes/fwd-decls)

(apps/essimporter/importinfo.cpp has correct #includes/fwd-decls)
apps/launcher/utils/profilescombobox.cpp:27:20: error: use of undeclared identifier 'lineEdit'
        disconnect(lineEdit(), SIGNAL(textChanged(QString)), this, SLOT(slotTextChanged(QString)));
                   ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/launcher/utils/profilescombobox.cpp:28:16: error: use of undeclared identifier 'setEditable'; did you mean 'setEditEnabled'?
        return setEditable(false);
               ^~~~~~~~~~~
               setEditEnabled
apps/launcher/utils/profilescombobox.cpp:20:24: note: 'setEditEnabled' declared here
void ProfilesComboBox::setEditEnabled(bool editable)
                       ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/launcher/utils/profilescombobox.cpp:32:5: error: use of undeclared identifier 'setEditable'; did you mean 'setEditEnabled'?
    setEditable(true);
    ^~~~~~~~~~~
    setEditEnabled
apps/launcher/utils/profilescombobox.cpp:20:24: note: 'setEditEnabled' declared here
void ProfilesComboBox::setEditEnabled(bool editable)
                       ^
apps/launcher/utils/profilescombobox.cpp:33:18: error: use of undeclared identifier 'mValidator'
    setValidator(mValidator);
                 ^
apps/launcher/utils/profilescombobox.cpp:35:34: error: no matching constructor for initialization of 'ProfilesComboBox::ComboBoxLineEdit'
    ComboBoxLineEdit *edit = new ComboBoxLineEdit(this);
                                 ^                ~~~~
apps/launcher/utils/profilescombobox.hpp:20:11: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ProfilesComboBox *' to 'const ProfilesComboBox::ComboBoxLineEdit' for 1st argument
    class ComboBoxLineEdit : public LineEdit
          ^
apps/launcher/utils/profilescombobox.hpp:23:18: note: candidate constructor not viable: no known conversion from 'ProfilesComboBox *' to 'QWidget *' for 1st argument
        explicit ComboBoxLineEdit (QWidget *parent = 0);
                 ^
apps/launcher/utils/profilescombobox.cpp:37:5: error: use of undeclared identifier 'setLineEdit'
    setLineEdit(edit);
    ^
In file included from apps/essimporter/convertinventory.cpp:15:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/convertinventory.cpp:15:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
apps/launcher/utils/profilescombobox.cpp:38:5: error: use of undeclared identifier 'setCompleter'
    setCompleter(0);
    ^
apps/essimporter/convertinventory.cpp:30:18: error: no type named 'ObjectState' in namespace 'ESM'
            ESM::ObjectState objstate;
            ~~~~~^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
apps/launcher/utils/profilescombobox.cpp:40:13: error: use of undeclared identifier 'lineEdit'
    connect(lineEdit(), SIGNAL(editingFinished()), this,
            ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/livecellref.cpp:9:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/livecellref.cpp:16:
In file included from ./apps/openmw/mwworld/store.hpp:6:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
./apps/openmw/mwmechanics/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aipursue.cpp:29:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwclass/misc.cpp:15:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/animation.cpp:16:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/animation.cpp:16:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwrender/animation.cpp:16:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/opencs/model/world/refidadapterimp.cpp:7:
In file included from ./apps/opencs/model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:136:14: error: no type named 'list' in namespace 'std'
        std::list<RecordData> mRecords;
        ~~~~~^
./components/esm/esmwriter.hpp:136:18: error: expected member name or ';' after declaration specifiers
        std::list<RecordData> mRecords;
        ~~~~~~~~~^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/spells.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:27:
apps/openmw/mwmechanics/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^

apps/essimporter/convertinventory.hpp should add these lines:

apps/essimporter/convertinventory.hpp should remove these lines:
- namespace ESM { struct InventoryState; }  // lines 13-13
- namespace ESSImport { struct Inventory; }  // lines 16-16

The full include-list for apps/essimporter/convertinventory.hpp:
namespace ESM { struct InventoryState; }  // lines 11-11
namespace ESSImport { struct Inventory; }  // lines 7-7
---
In file included from apps/openmw/mwmechanics/spells.cpp:13:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/essimporter/convertinventory.cpp should add these lines:

apps/essimporter/convertinventory.cpp should remove these lines:
- #include <stdlib.h>  // lines 2-2
- #include <stdlib.h>  // lines 3-3
- #include <components/misc/stringops.hpp>  // lines 1-1
- #include <map>  // lines 5-5
- #include <string>  // lines 6-6
- #include <string>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "apps/essimporter/importinventory.hpp"  // lines 12-12
- #include "components/esm/cellref.hpp"  // lines 13-13
- #include "components/esm/cellref.hpp"  // lines 14-14
- #include "components/esm/inventorystate.hpp"  // lines 16-16
- #include "components/esm/objectstate.hpp"  // lines 17-17
- #include "components/esm/objectstate.hpp"  // lines 18-18

The full include-list for apps/essimporter/convertinventory.cpp:
#include "convertinventory.hpp"
#include <map>                          // for map
#include <vector>                       // for vector, etc
#include "apps/essimporter/importinventory.hpp"  // for Inventory, etc
#include "components/esm/inventorystate.hpp"  // for InventoryState
---
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/opencs/model/world/idtableproxymodel.hpp should add these lines:

apps/opencs/model/world/idtableproxymodel.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include "../filter/node.hpp"  // lines 11-11

The full include-list for apps/opencs/model/world/idtableproxymodel.hpp:
#include <QSortFilterProxyModel>        // for QSortFilterProxyModel
#include <QtCore>                       // for QModelIndex, Q_OBJECT
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map
#include <string>                       // for string
namespace CSMFilter { class Node; }  // lines 14-14
---

apps/opencs/model/world/idtableproxymodel.cpp should add these lines:

apps/opencs/model/world/idtableproxymodel.cpp should remove these lines:
- #include <utility>  // lines 3-3
- #include "apps/opencs/model/world/../filter/node.hpp"  // lines 7-7
- #include "apps/opencs/model/world/columns.hpp"  // lines 9-9

The full include-list for apps/opencs/model/world/idtableproxymodel.cpp:
#include "idtableproxymodel.hpp"
#include <utility>                      // for make_pair
#include <vector>                       // for vector, etc
#include "apps/opencs/model/world/../filter/node.hpp"  // for Node
#include "apps/opencs/model/world/columns.hpp"  // for ColumnId
#include "idtablebase.hpp"              // for IdTableBase
---
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:28:
apps/openmw/mwmechanics/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwmechanics/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:59:
In file included from ./apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwrender/animation.cpp:32:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:59:
In file included from ./apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'MWBase::Loading::ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwrender/animation.cpp:35:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwrender/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwmechanics/activespells.hpp:28:17: error: no type named 'TimeStamp' in namespace 'MWBase::Loading::MWWorld'; did you mean '::MWWorld::TimeStamp'?
                MWWorld::TimeStamp mTimeStamp;
                ^~~~~~~~~~~~~~~~~~
                ::MWWorld::TimeStamp
apps/openmw/mwmechanics/../mwworld/timestamp.hpp:14:11: note: '::MWWorld::TimeStamp' declared here
    class TimeStamp
          ^
In file included from apps/openmw/mwrender/animation.cpp:35:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwrender/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:59:
In file included from ./apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'MWBase::Loading::ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'MWBase::Loading::ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwrender/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwrender/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:48:21: error: unknown type name 'MagicEffects'
            mutable MagicEffects mEffects;
                    ^
In file included from apps/openmw/mwrender/animation.cpp:35:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwrender/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwrender/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

(apps/essimporter/importscpt.hpp has correct #includes/fwd-decls)

apps/essimporter/importscpt.cpp should add these lines:

apps/essimporter/importscpt.cpp should remove these lines:
- #include "apps/essimporter/importscri.hpp"  // lines 4-4
- #include "components/esm/loadscpt.hpp"  // lines 6-6

The full include-list for apps/essimporter/importscpt.cpp:
#include "importscpt.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importscri.hpp"  // for SCRI
#include "components/esm/loadscpt.hpp"  // for Script::SCHD
---
In file included from apps/openmw/main.cpp:22:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
apps/openmw/mwmechanics/activespells.hpp:50:21: error: no type named 'TimeStamp' in namespace 'MWBase::Loading::MWWorld'; did you mean '::MWWorld::TimeStamp'?
            mutable MWWorld::TimeStamp mLastUpdate;
                    ^~~~~~~~~~~~~~~~~~
                    ::MWWorld::TimeStamp
apps/openmw/mwmechanics/../mwworld/timestamp.hpp:14:11: note: '::MWWorld::TimeStamp' declared here
    class TimeStamp
          ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/openmw/main.cpp:2:
In file included from /usr/include/boost/any.hpp:17:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/main.cpp:2:
In file included from /usr/include/boost/any.hpp:17:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/openmw/main.cpp:22:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/main.cpp:22:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/main.cpp:22:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/openmw/main.cpp:22:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/main.cpp:22:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:59:
In file included from ./apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:98:19: error: unknown type name 'MagicEffects'
            const MagicEffects& getMagicEffects() const;
                  ^

apps/openmw/mwworld/refdata.hpp should add these lines:
namespace ESM { class CellRef; }
namespace ESM { struct ObjectState; }
namespace ESM { struct Script; }

apps/openmw/mwworld/refdata.hpp should remove these lines:
- #include <string>  // lines 6-6
- class CellRef;  // lines 17-17
- class Script;  // lines 18-18
- struct ObjectState;  // lines 20-20

The full include-list for apps/openmw/mwworld/refdata.hpp:
#include <components/esm/defs.hpp>      // for Position
#include <string>                       // for string
#include "../mwscript/locals.hpp"       // for Locals
namespace ESM { class CellRef; }
namespace ESM { struct ObjectState; }
namespace ESM { struct Script; }
namespace MWWorld { class CustomData; }  // lines 30-30
namespace Ogre { class SceneNode; }  // lines 13-13
---

apps/openmw/mwworld/refdata.cpp should add these lines:
namespace ESM { struct ObjectState; }
namespace ESM { struct Script; }

apps/openmw/mwworld/refdata.cpp should remove these lines:
- #include <components/esm/objectstate.hpp>  // lines 3-3
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 8-8
- #include "components/esm/cellref.hpp"  // lines 10-10

The full include-list for apps/openmw/mwworld/refdata.cpp:
#include "refdata.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/../mwscript/locals.hpp"  // for Locals
#include "components/esm/cellref.hpp"   // for CellRef
#include "components/esm/defs.hpp"      // for Position
#include "customdata.hpp"               // for CustomData
namespace ESM { struct ObjectState; }
namespace ESM { struct Script; }
---

apps/openmw/mwmechanics/aipursue.cpp should add these lines:

apps/openmw/mwmechanics/aipursue.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 1-1
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 2-2
- #include <components/esm/aisequence.hpp>  // lines 3-3
- #include <memory>  // lines 4-4
- #include <memory>  // lines 5-5
- #include <vector>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "../mwbase/environment.hpp"  // lines 9-9
- #include "../mwworld/class.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 14-14
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 18-18
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 22-22
- #include "components/esm/defs.hpp"  // lines 23-23
- #include "components/esm/defs.hpp"  // lines 24-24
- #include "components/esm/loadmgef.hpp"  // lines 25-25
- #include "components/esm/loadmgef.hpp"  // lines 26-26
- #include "components/esm/loadpgrd.hpp"  // lines 27-27
- #include "components/esm/loadpgrd.hpp"  // lines 28-28
- #include "creaturestats.hpp"  // lines 29-29
- #include "movement.hpp"  // lines 30-30

The full include-list for apps/openmw/mwmechanics/aipursue.cpp:
---
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
In file included from apps/openmw/mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
In file included from apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
In file included from apps/openmw/mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwworld/livecellref.cpp:25:10: error: incomplete type 'MWWorld::LiveCellRefBase' named in nested name specifier
MWWorld::LiveCellRefBase::LiveCellRefBase(std::string type, const ESM::CellRef &cref)
~~~~~~~~~^~~~~~~~~~~~~~~~~
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/livecellref.cpp:25:10: error: incomplete type 'MWWorld::LiveCellRefBase' named in nested name specifier
MWWorld::LiveCellRefBase::LiveCellRefBase(std::string type, const ESM::CellRef &cref)
~~~~~~~~~^~~~~~~~~~~~~~~~~
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/livecellref.cpp:30:15: error: incomplete type 'MWWorld::LiveCellRefBase' named in nested name specifier
void MWWorld::LiveCellRefBase::loadImp (const ESM::ObjectState& state)
     ~~~~~~~~~^~~~~~~~~~~~~~~~~
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/livecellref.cpp:64:15: error: incomplete type 'MWWorld::LiveCellRefBase' named in nested name specifier
void MWWorld::LiveCellRefBase::saveImp (ESM::ObjectState& state) const
     ~~~~~~~~~^~~~~~~~~~~~~~~~~
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/livecellref.cpp:76:15: error: incomplete type 'MWWorld::LiveCellRefBase' named in nested name specifier
bool MWWorld::LiveCellRefBase::checkStateImp (const ESM::ObjectState& state)
     ~~~~~~~~~^~~~~~~~~~~~~~~~~
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
apps/openmw/mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
apps/openmw/mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/main.cpp:51:
In file included from apps/openmw/engine.hpp:24:
apps/openmw/mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwmechanics/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwstate/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwstate/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/repair.cpp:12:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from 
apps/openmw/mwclass/apparatus.cpp should add these lines:

apps/openmw/mwclass/apparatus.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadappa.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwgui/tooltips.hpp"  // lines 11-11
- #include "../mwworld/actionalchemy.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "../mwworld/physicssystem.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 20-20
- #include "components/esm/loadnpc.hpp"  // lines 21-21
- #include "components/esm/loadnpc.hpp"  // lines 22-22
- namespace MWWorld { class Action; }  // lines 25-25
- namespace MWWorld { class Action; }  // lines 28-28
- namespace MWWorld { class Class; }  // lines 26-26
- namespace MWWorld { class Class; }  // lines 29-29

The full include-list for apps/openmw/mwclass/apparatus.cpp:
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
---
apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwstate/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

(apps/essimporter/importercontext.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/essimporter/convertcrec.cpp:3:
In file included from ./components/esm/creaturestate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:35:
In file included from apps/openmw/mwstate/../mwbase/soundmanager.hpp:10:
apps/openmw/mwstate/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwstate/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
In file included from apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwstate/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from In file included from libs/openengine/bullet/trace.cpp:19:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwstate/statemanagerimp.cpp:37:
In file included from apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwstate/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spells.cpp:28:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwstate/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwstate/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/spells.cpp:32:5: error: use of undeclared identifier 'Spells'; did you mean 'ESM::Spell'?
    Spells::TIterator Spells::begin() const
    ^~~~~~
    ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwstate/../mwmechanics/activespells.hpplibs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwstate/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/spells.cpp:32:13: error: no type named 'TIterator' in 'ESM::Spell'
    Spells::TIterator Spells::begin() const
    ~~~~~~~~^
In file included from apps/openmw/mwmechanics/aitravel.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/spells.cpp:32:23: error: use of undeclared identifier 'Spells'; did you mean 'ESM::Spell'?
    Spells::TIterator Spells::begin() const
                      ^~~~~~
                      ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwmechanics/spells.cpp:32:31: error: cannot define or redeclare 'begin' here because namespace 'MWMechanics' does not enclose namespace 'Spell'
    Spells::TIterator Spells::begin() const
                      ~~~~~~~~^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
In file included from apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwstate/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwstate/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
apps/openmw/mwmechanics/spells.cpp:37:5: error: use of undeclared identifier 'Spells'; did you mean 'ESM::Spell'?
    Spells::TIterator Spells::end() const
    ^~~~~~
    ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwmechanics/spells.cpp:37:13: error: no type named 'TIterator' in 'ESM::Spell'
    Spells::TIterator Spells::end() const
    ~~~~~~~~^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwstate/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwstate/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
apps/openmw/mwmechanics/spells.cpp:37:23: error: use of undeclared identifier 'Spells'; did you mean 'ESM::Spell'?
    Spells::TIterator Spells::end() const
                      ^~~~~~
                      ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwstate/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:37:
apps/openmw/mwstate/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwstate/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwrender/characterpreview.hpp should add these lines:
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"

apps/openmw/mwrender/characterpreview.hpp should remove these lines:
- #include <string>  // lines 7-7
- #include "GLX/../OgrePrerequisites.h"  // lines 10-10
- #include "OgreMath.h"  // lines 12-12
- #include "OgreResource.h"  // lines 14-14
- #include "OgreSharedPtr.h"  // lines 16-16
- #include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 21-21
- namespace Ogre { class Camera; }  // lines 30-30
- namespace Ogre { class RenderTarget; }  // lines 31-31
- namespace Ogre { class SceneManager; }  // lines 32-32
- namespace Ogre { class SceneNode; }  // lines 33-33
- namespace Ogre { class Viewport; }  // lines 34-34

The full include-list for apps/openmw/mwrender/characterpreview.hpp:
#include <OgreVector3.h>                // for Vector3
#include <components/esm/loadnpc.hpp>   // for NPC
#include <string>                       // for string
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreMath.h"                   // for Radian
#include "OgreResource.h"               // for ManualResourceLoader, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"
namespace MWRender { class NpcAnimation; }  // lines 48-48
namespace OEngine { namespace Render { class SelectionBuffer; } }  // lines 41-41
namespace Ogre { class Camera; }  // lines 24-24
namespace Ogre { class RenderTarget; }  // lines 25-25
namespace Ogre { class SceneManager; }  // lines 26-26
namespace Ogre { class SceneNode; }  // lines 27-27
namespace Ogre { class Viewport; }  // lines 28-28
---
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from ./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:13:
./apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from ./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

apps/openmw/mwrender/characterpreview.cpp should add these lines:
#include "apps/openmw/mwrender/../mwworld/livecellref.hpp"
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwrender/characterpreview.cpp should remove these lines:
- #include <stddef.h>  // lines 11-11
- #include <algorithm>  // lines 13-13
- #include <typeinfo>  // lines 15-15
- #include <utility>  // lines 17-17
- #include "OgreColourValue.h"  // lines 24-24
- #include "OgreNode.h"  // lines 27-27
- #include "OgrePixelFormat.h"  // lines 29-29
- #include "OgreQuaternion.h"  // lines 31-31
- #include "OgreRenderTarget.h"  // lines 33-33
- #include "OgreResourceGroupManager.h"  // lines 35-35
- #include "OgreTexture.h"  // lines 37-37
- #include "OgreVector3.h"  // lines 39-39
- #include "apps/openmw/mwrender/../mwworld/containerstore.hpp"  // lines 41-41
- #include "apps/openmw/mwrender/animation.hpp"  // lines 43-43
- #include "components/esm/loadligh.hpp"  // lines 46-46
- #include "components/esm/loadlock.hpp"  // lines 48-48
- #include "components/esm/loadnpc.hpp"  // lines 50-50
- #include "components/esm/loadprob.hpp"  // lines 52-52
- #include "components/esm/loadweap.hpp"  // lines 54-54

The full include-list for apps/openmw/mwrender/characterpreview.cpp:
#include "characterpreview.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRoot.h>                   // for Root
#include <OgreSceneManager.h>           // for SceneManager, etc
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for min
#include <libs/openengine/ogre/selectionbuffer.hpp>
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreColourValue.h"            // for ColourValue
#include "OgreLight.h"                  // for Light, etc
#include "OgreNode.h"                   // for Node
#include "OgrePixelFormat.h"            // for PixelFormat::PF_A8R8G8B8
#include "OgreQuaternion.h"             // for Quaternion, etc
#include "OgreRenderTarget.h"           // for RenderTarget
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_X, etc
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/livecellref.hpp"
#include "apps/openmw/mwrender/animation.hpp"  // for Animation, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadweap.hpp"  // for Weapon, etc
#include "npcanimation.hpp"             // for NpcAnimation, etc
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
In file included from ./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:7:
In file included from ./apps/openmw/mwsound/../mwbase/soundmanager.hpp:10:
./apps/openmw/mwsound/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwsound/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:4:
./libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
./libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
./libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
./libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
./libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/openmw/mwclass/misc.cpp:21:
apps/openmw/mwclass/../mwworld/physicssystem.hpp:36:5: error: expected unqualified-id
    {
    ^

apps/openmw/mwclass/npc.hpp should add these lines:
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwmechanics/npcstats.hpp"

apps/openmw/mwclass/npc.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "../mwworld/class.hpp"  // lines 8-8
- #include "OgreVector3.h"  // lines 21-21
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/class.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwworld/containerstore.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"  // lines 19-19
- namespace ESM { struct ObjectState; }  // lines 39-39
- namespace MWMechanics { class CreatureStats; }  // lines 23-23
- namespace MWMechanics { class CreatureStats; }  // lines 42-42
- namespace MWMechanics { class NpcStats; }  // lines 24-24
- namespace MWMechanics { class NpcStats; }  // lines 43-43
- namespace MWMechanics { struct Movement; }  // lines 25-25
- namespace MWMechanics { struct Movement; }  // lines 44-44
- namespace MWRender { class RenderingInterface; }  // lines 47-47
- namespace MWWorld { class Action; }  // lines 50-50
- namespace MWWorld { class CellStore; }  // lines 51-51
- namespace MWWorld { class PhysicsSystem; }  // lines 52-52

The full include-list for apps/openmw/mwclass/npc.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwmechanics/npcstats.hpp"
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"
namespace ESM { class GameSetting; }  // lines 57-57
namespace ESM { struct ObjectState; }  // lines 37-37
namespace MWRender { class RenderingInterface; }  // lines 28-28
namespace MWWorld { class Action; }  // lines 31-31
namespace MWWorld { class CellStore; }  // lines 32-32
namespace MWWorld { class PhysicsSystem; }  // lines 33-33
---
./libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
./libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^

(apps/launcher/main.cpp has correct #includes/fwd-decls)
./libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
./libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^

apps/openmw/mwclass/npc.cpp should add these lines:
namespace ESM { struct NpcState; }
namespace ESM { struct Sound; }
namespace ESM { struct Spell; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/npc.cpp should remove these lines:
- #include <algorithm>  // lines 7-7
- #include <components/esm/npcstate.hpp>  // lines 5-5
- #include <iostream>  // lines 9-9
- #include <stdexcept>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <vector>  // lines 14-14
- #include "../mwbase/dialoguemanager.hpp"  // lines 16-16
- #include "../mwbase/soundmanager.hpp"  // lines 18-18
- #include "../mwmechanics/autocalcspell.hpp"  // lines 20-20
- #include "../mwmechanics/character.hpp"  // lines 21-21
- #include "../mwworld/actionopen.hpp"  // lines 30-30
- #include "../mwworld/actiontalk.hpp"  // lines 31-31
- #include "../mwworld/cellstore.hpp"  // lines 32-32
- #include "../mwworld/failedaction.hpp"  // lines 34-34
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/spells.hpp"  // lines 42-42
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/esmstore.hpp"  // lines 43-43
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/drawstate.hpp"  // lines 45-45
- #include "apps/openmw/mwclass/../mwworld/../mwscript/locals.hpp"  // lines 47-47
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 48-48
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 49-49
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 50-50
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 51-51
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 53-53
- #include "components/esm/aipackage.hpp"  // lines 54-54
- #include "components/esm/defs.hpp"  // lines 56-56
- #include "components/esm/loadarmo.hpp"  // lines 57-57
- #include "components/esm/loadsoun.hpp"  // lines 63-63
- #include "components/esm/loadspel.hpp"  // lines 64-64
- #include "components/esm/loadweap.hpp"  // lines 65-65
- #include "components/esm/objectstate.hpp"  // lines 66-66
- #include "components/esm/spelllist.hpp"  // lines 67-67
- #include "components/misc/stringops.hpp"  // lines 68-68

The full include-list for apps/openmw/mwclass/npc.cpp:
#include "npc.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <cmath>                        // for floor, modf, pow
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include <components/esm/loadnpc.hpp>   // for NPC, NPC::Flags::Female
#include <memory>                       // for auto_ptr
#include <utility>                      // for pair
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/combat.hpp"    // for reduceWeaponCondition, etc
#include "../mwmechanics/difficultyscaling.hpp"  // for scaleDamage
#include "../mwmechanics/disease.hpp"   // for diseaseContact
#include "../mwmechanics/movement.hpp"  // for Movement
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwclass/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadrace.hpp"  // for Race, Race::SkillBonus, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace ESM { struct InventoryList; }  // lines 72-72
namespace ESM { struct NpcState; }
namespace ESM { struct Sound; }
namespace ESM { struct Spell; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
./libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
./libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^

apps/opencs/model/world/resourcetable.hpp should add these lines:

apps/opencs/model/world/resourcetable.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include "apps/opencs/model/world/columns.hpp"  // lines 14-14
- namespace CSMWorld { class UniversalId; }  // lines 19-19

The full include-list for apps/opencs/model/world/resourcetable.hpp:
#include <QtCore>                       // for QModelIndex, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include "apps/opencs/model/world/columns.hpp"  // for ColumnId
#include "idtablebase.hpp"              // for IdTableBase
namespace CSMWorld { class Resources; }  // lines 24-24
namespace CSMWorld { class UniversalId; }  // lines 17-17
---
In file included from apps/openmw/mwmechanics/aitravel.cpp:37:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/opencs/model/world/resourcetable.cpp should add these lines:

apps/opencs/model/world/resourcetable.cpp should remove these lines:
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 5-5

The full include-list for apps/opencs/model/world/resourcetable.cpp:
#include "resourcetable.hpp"
#include <stdexcept>                    // for logic_error
#include "apps/opencs/model/world/idtablebase.hpp"  // for IdTableBase, etc
#include "columnbase.hpp"               // for ColumnBase, etc
#include "resources.hpp"                // for Resources
#include "universalid.hpp"              // for UniversalId, etc
---
In file included from apps/openmw/mwmechanics/aitravel.cpp:37:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:31:
apps/openmw/mwmechanics/../mwworld/player.hpp:79:9: error: no type named 'Ptr' in namespace 'MWBase::Loading::MWWorld'; did you mean simply 'Ptr'?
        MWWorld::Ptr getPlayer();
        ^~~~~~~~~~~~
        Ptr
apps/openmw/mwmechanics/../mwworld/player.hpp:29:11: note: 'Ptr' declared here
    class Ptr;
          ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:42:
In file included from ./apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aitravel.cpp:37:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/projectilemanager.cpp:11:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from In file included from apps/openmw/mwrender/weaponanimation.cpp:9:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/spellcasting.cpp:42:
./apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'MWBase::Loading::ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/openmw/mwmechanics/spells.hpp should add these lines:

apps/openmw/mwmechanics/spells.hpp should remove these lines:
- #include <components/misc/stringops.hpp>  // lines 4-4
- #include <map>  // lines 5-5
- #include <string>  // lines 6-6
- #include "../mwworld/ptr.hpp"  // lines 8-8
- #include "magiceffects.hpp"  // lines 9-9
- namespace ESM { struct Spell; }  // lines 14-14
- namespace ESM { struct SpellState; }  // lines 15-15

The full include-list for apps/openmw/mwmechanics/spells.hpp:
---

apps/openmw/mwmechanics/spells.cpp should add these lines:

apps/openmw/mwmechanics/spells.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <components/esm/loadspel.hpp>  // lines 2-2
- #include <components/esm/spellstate.hpp>  // lines 3-3
- #include <utility>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <vector>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../mwbase/environment.hpp"  // lines 12-12
- #include "../mwbase/world.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 18-18
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "components/esm/defs.hpp"  // lines 20-20
- #include "components/esm/effectlist.hpp"  // lines 21-21
- #include "components/esm/effectlist.hpp"  // lines 22-22
- #include "components/esm/loadmgef.hpp"  // lines 23-23
- #include "components/esm/loadmgef.hpp"  // lines 24-24
- #include "components/misc/stringops.hpp"  // lines 25-25
- #include "components/misc/stringops.hpp"  // lines 26-26
- #include "magiceffects.hpp"  // lines 27-27

The full include-list for apps/openmw/mwmechanics/spells.cpp:
#include "spells.hpp"
#include <cstdlib>                      // for RAND_MAX
---
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwrender/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
./apps/openmw/mwmechanics/activespells.hpp:28:17: error: no type named 'TimeStamp' in namespace 'MWBase::Loading::MWWorld'; did you mean '::MWWorld::TimeStamp'?
                MWWorld::TimeStamp mTimeStamp;
                ^~~~~~~~~~~~~~~~~~
                ::MWWorld::TimeStamp
apps/openmw/mwmechanics/../mwworld/timestamp.hpp:14:11: note: '::MWWorld::TimeStamp' declared here
    class TimeStamp
          ^

(apps/essimporter/importinventory.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/projectilemanager.cpp:13:
In file included from apps/openmw/mwworld/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwworld/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/essimporter/importinventory.cpp should add these lines:

apps/essimporter/importinventory.cpp should remove these lines:
- #include "apps/essimporter/importscri.hpp"  // lines 6-6
- #include "components/esm/cellref.hpp"  // lines 8-8
- #include "components/esm/esmcommon.hpp"  // lines 10-10

The full include-list for apps/essimporter/importinventory.cpp:
#include "importinventory.hpp"
#include <stdlib.h>                     // for abs
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/loadcont.hpp>  // for ContItem
#include "apps/essimporter/importscri.hpp"  // for SCRI
#include "components/esm/cellref.hpp"   // for CellRef, etc
#include "components/esm/esmcommon.hpp"  // for NAME32
---
In file included from apps/openmw/mwmechanics/spellcasting.cpp:42:
./apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'MWBase::Loading::ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwrender/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwmechanics/aitravel.cpp:37:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/aitravel.cpp:37:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
./apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'MWBase::Loading::ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from 
(apps/esmtool/labels.hpp has correct #includes/fwd-decls)
apps/openmw/mwrender/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/aitravel.cpp:37:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
./apps/openmw/mwmechanics/activespells.hpp:50:21: error: no type named 'TimeStamp' in namespace 'MWBase::Loading::MWWorld'; did you mean '::MWWorld::TimeStamp'?
            mutable MWWorld::TimeStamp mLastUpdate;
                    ^~~~~~~~~~~~~~~~~~
                    ::MWWorld::TimeStamp
apps/openmw/mwmechanics/../mwworld/timestamp.hpp:14:11: note: '::MWWorld::TimeStamp' declared here
    class TimeStamp
          ^
apps/openmw/mwrender/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:44:
In file included from ./apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^

(apps/esmtool/labels.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/spellcasting.cpp:44:
./apps/openmw/mwmechanics/creaturestats.hpp:44:9: error: unknown type name 'DrawState_'; did you mean '::MWMechanics::DrawState_'?
        DrawState_ mDrawState;
        ^~~~~~~~~~
        ::MWMechanics::DrawState_
apps/openmw/mwmechanics/drawstate.hpp:7:10: note: '::MWMechanics::DrawState_' declared here
    enum DrawState_
         ^
In file included from apps/opencs/model/world/infocollection.cpp:12:
./apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:13:
./apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwrender/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwrender/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/misc.cpp:39:
In file included from apps/openmw/mwclass/misc.hpp:12:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwrender/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwrender/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:17:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwrender/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:10:
apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwrender/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwclass/book.cpp:10:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/launcher/utils/profilescombobox.hpp should add these lines:

apps/launcher/utils/profilescombobox.hpp should remove these lines:
- #include <QDebug>  // lines 4-4
- #include <QtCore>  // lines 6-6
- class QString;  // lines 12-12
- class QWidget;  // lines 13-13

The full include-list for apps/launcher/utils/profilescombobox.hpp:
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
#include "lineedit.hpp"                 // for LineEdit
class QWidget;  // lines 10-10
---
In file included from apps/openmw/mwclass/book.cpp:10:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/launcher/utils/profilescombobox.cpp should add these lines:

apps/launcher/utils/profilescombobox.cpp should remove these lines:
- #include <QApplication>  // lines 1-1
- #include <QLineEdit>  // lines 2-2
- #include <QRegExpValidator>  // lines 3-3
- #include <QString>  // lines 4-4
- #include "apps/launcher/utils/lineedit.hpp"  // lines 8-8

The full include-list for apps/launcher/utils/profilescombobox.cpp:
#include "profilescombobox.hpp"
#include <QtGui>                        // for QPalette, QStyle, etc
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit
---

apps/opencs/model/doc/saving.hpp should add these lines:

apps/opencs/model/doc/saving.hpp should remove these lines:
- #include <QArgument>  // lines 7-7
- #include <components/to_utf8/to_utf8.hpp>  // lines 5-5

The full include-list for apps/opencs/model/doc/saving.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <boost/filesystem/path.hpp>    // for path
#include "operation.hpp"                // for Operation
#include "savingstate.hpp"              // for SavingState
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 14-14
---

apps/opencs/model/doc/saving.cpp should add these lines:

apps/opencs/model/doc/saving.cpp should remove these lines:
- #include <vector>  // lines 2-2
- #include <vector>  // lines 3-3
- #include "../world/data.hpp"  // lines 5-5
- #include "../world/idcollection.hpp"  // lines 6-6
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 7-7
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 8-8
- #include "apps/opencs/model/doc/../world/scope.hpp"  // lines 9-9
- #include "apps/opencs/model/doc/../world/scope.hpp"  // lines 10-10
- #include "apps/opencs/model/doc/operation.hpp"  // lines 12-12
- #include "components/esm/debugprofile.hpp"  // lines 13-13
- #include "components/esm/debugprofile.hpp"  // lines 14-14
- #include "components/esm/filter.hpp"  // lines 15-15
- #include "components/esm/filter.hpp"  // lines 16-16
- #include "components/esm/loadbody.hpp"  // lines 17-17
- #include "components/esm/loadbody.hpp"  // lines 18-18
- #include "components/esm/loadbsgn.hpp"  // lines 19-19
- #include "components/esm/loadbsgn.hpp"  // lines 20-20
- #include "components/esm/loadclas.hpp"  // lines 21-21
- #include "components/esm/loadclas.hpp"  // lines 22-22
- #include "components/esm/loadench.hpp"  // lines 23-23
- #include "components/esm/loadench.hpp"  // lines 24-24
- #include "components/esm/loadfact.hpp"  // lines 25-25
- #include "components/esm/loadfact.hpp"  // lines 26-26
- #include "components/esm/loadglob.hpp"  // lines 27-27
- #include "components/esm/loadglob.hpp"  // lines 28-28
- #include "components/esm/loadgmst.hpp"  // lines 29-29
- #include "components/esm/loadgmst.hpp"  // lines 30-30
- #include "components/esm/loadmgef.hpp"  // lines 31-31
- #include "components/esm/loadmgef.hpp"  // lines 32-32
- #include "components/esm/loadrace.hpp"  // lines 33-33
- #include "components/esm/loadrace.hpp"  // lines 34-34
- #include "components/esm/loadregn.hpp"  // lines 35-35
- #include "components/esm/loadregn.hpp"  // lines 36-36
- #include "components/esm/loadscpt.hpp"  // lines 37-37
- #include "components/esm/loadscpt.hpp"  // lines 38-38
- #include "components/esm/loadskil.hpp"  // lines 39-39
- #include "components/esm/loadskil.hpp"  // lines 40-40
- #include "components/esm/loadsndg.hpp"  // lines 41-41
- #include "components/esm/loadsndg.hpp"  // lines 42-42
- #include "components/esm/loadsoun.hpp"  // lines 43-43
- #include "components/esm/loadsoun.hpp"  // lines 44-44
- #include "components/esm/loadspel.hpp"  // lines 45-45
- #include "components/esm/loadspel.hpp"  // lines 46-46
- #include "components/to_utf8/to_utf8.hpp"  // lines 47-47
- #include "components/to_utf8/to_utf8.hpp"  // lines 48-48
- #include "document.hpp"  // lines 49-49
- #include "savingstages.hpp"  // lines 51-51

The full include-list for apps/opencs/model/doc/saving.cpp:
#include "saving.hpp"
#include "apps/opencs/model/doc/operation.hpp"  // for Operation
#include "state.hpp"                    // for State::State_Saving
---

(apps/essimporter/importdial.hpp has correct #includes/fwd-decls)

(apps/essimporter/importdial.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/repair.hpp should add these lines:

apps/openmw/mwmechanics/repair.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 5-5

The full include-list for apps/openmw/mwmechanics/repair.hpp:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
---

apps/openmw/mwmechanics/repair.cpp should add these lines:
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwmechanics/repair.cpp should remove these lines:
- #include <stdlib.h>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <boost/format.hpp>  // lines 1-1
- #include <string>  // lines 7-7
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/../mwworld/../mwscript/locals.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/../mwworld/../mwscript/locals.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 22-22
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/creaturestats.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 28-28
- #include "components/esm/attr.hpp"  // lines 30-30
- #include "components/esm/loadgmst.hpp"  // lines 31-31
- #include "components/esm/loadgmst.hpp"  // lines 32-32
- #include "components/esm/loadrepa.hpp"  // lines 33-33
- #include "components/esm/loadrepa.hpp"  // lines 34-34
- #include "components/esm/loadskil.hpp"  // lines 36-36
- #include "components/misc/stringops.hpp"  // lines 38-38

The full include-list for apps/openmw/mwmechanics/repair.cpp:
#include "repair.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "apps/openmw/mwmechanics/stat.hpp"  // for AttributeValue, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/misc/stringops.hpp"  // for StringUtils
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwclass/ingredient.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/ingredient.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace MWRender { class RenderingInterface; }  // lines 24-24
- namespace MWWorld { class Action; }  // lines 27-27
- namespace MWWorld { class CellStore; }  // lines 28-28
- namespace MWWorld { class PhysicsSystem; }  // lines 29-29

The full include-list for apps/openmw/mwclass/ingredient.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 22-22
namespace MWWorld { class Action; }  // lines 16-16
namespace MWWorld { class CellStore; }  // lines 17-17
namespace MWWorld { class PhysicsSystem; }  // lines 18-18
---
In file included from apps/essimporter/convertcrec.cpp:3:
In file included from ./components/esm/creaturestate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^

apps/opencs/model/doc/savingstate.hpp should add these lines:
#include "components/esm/loadacti.hpp"  // for ESMWriter
namespace CSMDoc { namespace ESM { class ESMWriter; } }

apps/opencs/model/doc/savingstate.hpp should remove these lines:
- #include <components/esm/esmwriter.hpp>  // lines 5-5
- #include <fstream>  // lines 7-7
- #include <map>  // lines 8-8
- #include <string>  // lines 9-9
- #include <string>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12

The full include-list for apps/opencs/model/doc/savingstate.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <components/to_utf8/to_utf8.hpp>  // for FromType, Utf8Encoder
#include "components/esm/loadacti.hpp"  // for ESMWriter
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 16-16
namespace CSMDoc { namespace CSMDoc { class Operation; } }  // lines 18-18
namespace CSMDoc { namespace ESM { class ESMWriter; } }
---

apps/opencs/model/doc/savingstate.cpp should add these lines:
namespace CSMDoc { namespace ESM { class ESMWriter; } }

apps/opencs/model/doc/savingstate.cpp should remove these lines:
- #include <fstream>  // lines 2-2
- #include <fstream>  // lines 3-3
- #include "components/esm/esmwriter.hpp"  // lines 5-5
- #include "components/esm/esmwriter.hpp"  // lines 6-6
- #include "components/to_utf8/to_utf8.hpp"  // lines 8-8

The full include-list for apps/opencs/model/doc/savingstate.cpp:
#include "savingstate.hpp"
#include "components/to_utf8/to_utf8.hpp"  // for FromType
#include "document.hpp"                 // for Document
#include "operation.hpp"                // for Operation
namespace CSMDoc { namespace ESM { class ESMWriter; } }
---

apps/openmw/mwclass/ingredient.cpp should add these lines:
namespace MWMechanics { class NpcStats; }

apps/openmw/mwclass/ingredient.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadingr.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwrender/objects.hpp"  // lines 13-13
- #include "../mwrender/renderinginterface.hpp"  // lines 14-14
- #include "../mwworld/actioneat.hpp"  // lines 15-15
- #include "../mwworld/cellstore.hpp"  // lines 16-16
- #include "../mwworld/physicssystem.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 33-33
- #include "components/esm/loadgmst.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 35-35
- #include "components/esm/loadnpc.hpp"  // lines 36-36
- #include "components/esm/loadnpc.hpp"  // lines 37-37
- #include "components/esm/loadskil.hpp"  // lines 38-38
- #include "components/esm/loadskil.hpp"  // lines 39-39

The full include-list for apps/openmw/mwclass/ingredient.cpp:
#include "ingredient.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
namespace MWMechanics { class NpcStats; }
---
In file included from apps/essimporter/convertcrec.cpp:3:
In file included from ./components/esm/creaturestate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/convertcrec.cpp:3:
In file included from ./components/esm/creaturestate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/essimporter/convertcrec.cpp:3:
./components/esm/creaturestate.hpp:20:35: error: expected class name
    struct CreatureState : public ObjectState
                                  ^

(apps/openmw/mwmechanics/difficultyscaling.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/difficultyscaling.cpp should add these lines:

apps/openmw/mwmechanics/difficultyscaling.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"  // lines 9-9
- #include "components/esm/loadgmst.hpp"  // lines 11-11

The full include-list for apps/openmw/mwmechanics/difficultyscaling.cpp:
#include "difficultyscaling.hpp"
#include <components/settings/settings.hpp>  // for Manager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"
#include "components/esm/loadgmst.hpp"  // for GameSetting
---
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:14:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/openmw/mwstate/statemanagerimp.hpp should add these lines:

apps/openmw/mwstate/statemanagerimp.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwstate/character.hpp"  // lines 11-11
- namespace ESM { class ESMReader; }  // lines 15-15
- namespace ESM { class ESMReader; }  // lines 18-18
- namespace ESM { struct SavedGame; }  // lines 19-19

The full include-list for apps/openmw/mwstate/statemanagerimp.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <string>                       // for string
#include "../mwbase/statemanager.hpp"
#include "apps/openmw/mwstate/character.hpp"  // for Slot (ptr only), etc
#include "charactermanager.hpp"         // for CharacterManager
namespace ESM { struct SavedGame; }  // lines 16-16
---

apps/openmw/mwstate/statemanagerimp.cpp should add these lines:

apps/openmw/mwstate/statemanagerimp.cpp should remove these lines:
- #include <stddef.h>  // lines 13-13
- #include <algorithm>  // lines 14-14
- #include <algorithm>  // lines 15-15
- #include <boost/filesystem/operations.hpp>  // lines 5-5
- #include <components/misc/stringops.hpp>  // lines 10-10
- #include <components/settings/settings.hpp>  // lines 11-11
- #include <exception>  // lines 17-17
- #include <iostream>  // lines 19-19
- #include <list>  // lines 20-20
- #include <list>  // lines 21-21
- #include <stdexcept>  // lines 22-22
- #include <stdexcept>  // lines 23-23
- #include <utility>  // lines 24-24
- #include <utility>  // lines 25-25
- #include <vector>  // lines 26-26
- #include <vector>  // lines 27-27
- #include "../mwbase/scriptmanager.hpp"  // lines 34-34
- #include "../mwmechanics/npcstats.hpp"  // lines 38-38
- #include "../mwworld/class.hpp"  // lines 40-40
- #include "../mwworld/esmstore.hpp"  // lines 41-41
- #include "OgreDataStream.h"  // lines 43-43
- #include "OgreSharedPtr.h"  // lines 44-44
- #include "OgreSharedPtr.h"  // lines 45-45
- #include "apps/openmw/mwstate/../mwbase/../mwgui/mode.hpp"  // lines 46-46
- #include "apps/openmw/mwstate/../mwbase/../mwgui/mode.hpp"  // lines 47-47
- #include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 49-49
- #include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 51-51
- #include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 52-52
- #include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 53-53
- #include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/refdata.hpp"  // lines 55-55
- #include "apps/openmw/mwstate/../mwbase/../mwworld/store.hpp"  // lines 56-56
- #include "apps/openmw/mwstate/../mwbase/../mwworld/store.hpp"  // lines 57-57
- #include "apps/openmw/mwstate/../mwbase/statemanager.hpp"  // lines 59-59
- #include "apps/openmw/mwstate/charactermanager.hpp"  // lines 60-60
- #include "apps/openmw/mwstate/charactermanager.hpp"  // lines 61-61
- #include "components/esm/defs.hpp"  // lines 63-63
- #include "components/esm/esmcommon.hpp"  // lines 65-65
- #include "components/esm/loadclas.hpp"  // lines 66-66
- #include "components/esm/loadclas.hpp"  // lines 67-67
- #include "components/esm/loadnpc.hpp"  // lines 68-68
- #include "components/esm/loadnpc.hpp"  // lines 69-69
- #include "components/esm/loadtes3.hpp"  // lines 71-71
- #include "components/esm/savedgame.hpp"  // lines 73-73
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 75-75

The full include-list for apps/openmw/mwstate/statemanagerimp.cpp:
#include "statemanagerimp.hpp"
#include <OgreImage.h>                  // for Image
#include <stddef.h>                     // for size_t, NULL
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/operations.hpp>  // for exists
#include <components/esm/cellid.hpp>    // for CellId
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/loadcell.hpp>  // for Cell
#include <exception>                    // for exception
#include <iostream>                     // for stringstream
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "OgreDataStream.h"             // for DataStreamPtr
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwstate/../mwbase/statemanager.hpp"
#include "components/esm/defs.hpp"      // for RecNameInts::REC_SAVE, etc
#include "components/esm/esmcommon.hpp"  // for NAME, NAME_T
#include "components/esm/loadtes3.hpp"  // for Header, etc
#include "components/esm/savedgame.hpp"  // for SavedGame, etc
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener, etc
---
In file included from apps/essimporter/converter.cpp:2:
In file included from ./components/esm/containerstate.hpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/converter.cpp:2:
In file included from ./components/esm/containerstate.hpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:17:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;In file included from 
apps/essimporter/converter.cpp           ^:
2:
./components/esm/containerstate.hpp:19:36: error: expected class name
    struct ContainerState : public ObjectState
                                   ^
In file included from apps/essimporter/converter.cpp:3:
In file included from ./components/esm/creaturestate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/openmw/mwmechanics/aitravel.hpp should add these lines:

apps/openmw/mwmechanics/aitravel.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/aistate.hpp"  // lines 6-6
- namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 16-16
- namespace MWWorld { class Ptr; }  // lines 21-21

The full include-list for apps/openmw/mwmechanics/aitravel.hpp:
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 14-14
namespace ESM { namespace AiSequence { struct AiTravel; } }  // lines 28-28
namespace MWWorld { class Ptr; }  // lines 9-9
---

apps/openmw/mwmechanics/aitravel.cpp should add these lines:

apps/openmw/mwmechanics/aitravel.cpp should remove these lines:
- #include <limits>  // lines 4-4
- #include <memory>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "OgreMath.h"  // lines 15-15
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 22-22
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 28-28
- #include "components/esm/defs.hpp"  // lines 30-30
- #include "components/esm/loadcell.hpp"  // lines 32-32
- #include "components/esm/loadland.hpp"  // lines 34-34
- #include "components/esm/loadpgrd.hpp"  // lines 36-36

The full include-list for apps/openmw/mwmechanics/aitravel.cpp:
#include "aitravel.hpp"
#include <OgreVector3.h>                // for Vector3
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <limits>                       // for numeric_limits
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "OgreMath.h"                   // for Degree
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for PathFinder
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadland.hpp"  // for Land, Land::REAL_SIZE
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "steering.hpp"                 // for zTurn
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwmechanics/mechanicsmanagerimp.hpp should add these lines:
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }

apps/openmw/mwmechanics/mechanicsmanagerimp.hpp should remove these lines:
- #include <list>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 12-12
- #include "creaturestats.hpp"  // lines 13-13

The full include-list for apps/openmw/mwmechanics/mechanicsmanagerimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "../mwbase/mechanicsmanager.hpp"
#include "actors.hpp"                   // for Actors
#include "npcstats.hpp"                 // for NpcStats
#include "objects.hpp"                  // for Objects
namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 18-18
namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 19-19
namespace MWBase { namespace Loading { namespace ESM { struct Class; } } }  // lines 20-20
namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 23-23
namespace MWBase { namespace Loading { namespace MWWorld { class CellStore; } } }  // lines 33-33
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }
namespace MWBase { namespace Loading { namespace Ogre { class Vector3; } } }  // lines 28-28
---

apps/openmw/mwworld/globals.hpp should add these lines:

apps/openmw/mwworld/globals.hpp should remove these lines:
- #include <components/interpreter/types.hpp>  // lines 5-5
- #include <vector>  // lines 9-9

The full include-list for apps/openmw/mwworld/globals.hpp:
#include <stdint.h>                     // for uint32_t
#include <components/esm/variant.hpp>   // for Variant
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
namespace ESM { class ESMReader; }  // lines 13-13
namespace ESM { class ESMWriter; }  // lines 14-14
namespace Loading { class Listener; }  // lines 19-19
namespace MWWorld { class ESMStore; }  // lines 24-24
---

apps/openmw/mwworld/globals.cpp should add these lines:

apps/openmw/mwworld/globals.cpp should remove these lines:
- #include <utility>  // lines 7-7
- #include "apps/openmw/mwworld/store.hpp"  // lines 10-10
- #include "components/esm/defs.hpp"  // lines 12-12
- #include "components/esm/loadglob.hpp"  // lines 14-14
- #include "components/esm/variant.hpp"  // lines 16-16

The full include-list for apps/openmw/mwworld/globals.cpp:
#include "globals.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "apps/openmw/mwworld/store.hpp"  // for SharedIterator, Store, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_GLOB
#include "components/esm/loadglob.hpp"  // for Global
#include "components/esm/variant.hpp"   // for Variant, etc
#include "esmstore.hpp"                 // for ESMStore
---

apps/openmw/mwmechanics/mechanicsmanagerimp.cpp should add these lines:
namespace MWBase { namespace Loading { namespace ESM { struct Race; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace MWMechanics { class AiSequence; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class InventoryStore; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }

apps/openmw/mwmechanics/mechanicsmanagerimp.cpp should remove these lines:
- #include <OgreSceneNode.h>  // lines 2-2
- #include <stdlib.h>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <cmath>  // lines 9-9
- #include <map>  // lines 10-10
- #include <map>  // lines 11-11
- #include <ostream>  // lines 12-12
- #include <ostream>  // lines 13-13
- #include <typeinfo>  // lines 14-14
- #include <typeinfo>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <utility>  // lines 17-17
- #include "../mwbase/dialoguemanager.hpp"  // lines 19-19
- #include "../mwbase/environment.hpp"  // lines 20-20
- #include "../mwbase/windowmanager.hpp"  // lines 21-21
- #include "../mwbase/world.hpp"  // lines 22-22
- #include "../mwmechanics/aicombat.hpp"  // lines 23-23
- #include "../mwmechanics/aipursue.hpp"  // lines 24-24
- #include "../mwworld/class.hpp"  // lines 25-25
- #include "../mwworld/esmstore.hpp"  // lines 26-26
- #include "../mwworld/inventorystore.hpp"  // lines 27-27
- #include "../mwworld/player.hpp"  // lines 28-28
- #include "OgreMath.h"  // lines 29-29
- #include "OgreMath.h"  // lines 30-30
- #include "OgreQuaternion.h"  // lines 31-31
- #include "OgreQuaternion.h"  // lines 32-32
- #include "OgreVector3.h"  // lines 33-33
- #include "OgreVector3.h"  // lines 34-34
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 35-35
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/drawstate.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/drawstate.hpp"  // lines 40-40
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 41-41
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"  // lines 43-43
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"  // lines 44-44
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"  // lines 45-45
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"  // lines 46-46
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 47-47
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 48-48
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 49-49
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 50-50
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 51-51
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 52-52
- #include "apps/openmw/mwmechanics/actors.hpp"  // lines 54-54
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 55-55
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 56-56
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 57-57
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 58-58
- #include "apps/openmw/mwmechanics/creaturestats.hpp"  // lines 60-60
- #include "apps/openmw/mwmechanics/objects.hpp"  // lines 62-62
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 63-63
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 64-64
- #include "autocalcspell.hpp"  // lines 65-65
- #include "components/esm/attr.hpp"  // lines 66-66
- #include "components/esm/attr.hpp"  // lines 67-67
- #include "components/esm/defs.hpp"  // lines 68-68
- #include "components/esm/defs.hpp"  // lines 69-69
- #include "components/esm/loadbsgn.hpp"  // lines 70-70
- #include "components/esm/loadbsgn.hpp"  // lines 71-71
- #include "components/esm/loadclas.hpp"  // lines 72-72
- #include "components/esm/loadclas.hpp"  // lines 73-73
- #include "components/esm/loadcrea.hpp"  // lines 74-74
- #include "components/esm/loadcrea.hpp"  // lines 75-75
- #include "components/esm/loadgmst.hpp"  // lines 76-76
- #include "components/esm/loadgmst.hpp"  // lines 77-77
- #include "components/esm/loadmgef.hpp"  // lines 78-78
- #include "components/esm/loadmgef.hpp"  // lines 79-79
- #include "components/esm/loadnpc.hpp"  // lines 80-80
- #include "components/esm/loadnpc.hpp"  // lines 81-81
- #include "components/esm/loadrace.hpp"  // lines 82-82
- #include "components/esm/loadrace.hpp"  // lines 83-83
- #include "components/esm/loadskil.hpp"  // lines 84-84
- #include "components/esm/loadskil.hpp"  // lines 85-85
- #include "components/esm/loadspel.hpp"  // lines 86-86
- #include "components/esm/loadspel.hpp"  // lines 87-87
- #include "components/esm/spelllist.hpp"  // lines 88-88
- #include "components/esm/spelllist.hpp"  // lines 89-89
- #include "components/misc/stringops.hpp"  // lines 91-91
- #include "spellcasting.hpp"  // lines 94-94
- namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 104-104
- namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 105-105
- namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 108-108

The full include-list for apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:
#include "mechanicsmanagerimp.hpp"
#include <limits.h>                     // for INT_MAX
#include <stdlib.h>                     // for abs, rand, NULL, RAND_MAX
#include <cmath>                        // for abs
#include "apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp"
#include "apps/openmw/mwmechanics/actors.hpp"  // for Actors
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "apps/openmw/mwmechanics/objects.hpp"  // for Objects
#include "components/misc/stringops.hpp"  // for StringUtils
#include "npcstats.hpp"                 // for NpcStats
namespace MWBase { namespace Loading { namespace ESM { class ESMReader; } } }  // lines 101-101
namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } }  // lines 102-102
namespace MWBase { namespace Loading { namespace ESM { struct Race; } } }
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace Loading { class Listener; } } }  // lines 97-97
namespace MWBase { namespace Loading { namespace MWMechanics { class AiSequence; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class InventoryStore; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }
---
In file included from apps/openmw/mwmechanics/alchemy.cpp:21:
apps/openmw/mwmechanics/alchemy.hpp:20:5: error: expected '{'
    struct EffectKey;
    ^
apps/openmw/mwmechanics/alchemy.hpp:122:1: error: extraneous closing brace ('}')
}
^

apps/essimporter/main.cpp should add these lines:

apps/essimporter/main.cpp should remove these lines:
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <boost/program_options/options_description.hpp>  // lines 7-7
- #include <boost/program_options/positional_options.hpp>  // lines 10-10
- #include <boost/program_options/value_semantic.hpp>  // lines 12-12
- #include <boost/program_options/variables_map.hpp>  // lines 14-14
- #include <exception>  // lines 16-16
- #include <stdexcept>  // lines 19-19
- #include <string>  // lines 21-21

The full include-list for apps/essimporter/main.cpp:
#include <boost/filesystem/operations.hpp>  // for exists
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <boost/program_options/errors.hpp>  // for program_options
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>
#include <boost/program_options/positional_options.hpp>
#include <boost/program_options/value_semantic.hpp>  // for value, etc
#include <boost/program_options/variables_map.hpp>  // for variables_map, etc
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator!=, etc
#include "importer.hpp"                 // for Importer
---

apps/essimporter/convertcrec.hpp should add these lines:

apps/essimporter/convertcrec.hpp should remove these lines:
- namespace ESM { struct CreatureState; }  // lines 13-13
- namespace ESSImport { struct CREC; }  // lines 16-16

The full include-list for apps/essimporter/convertcrec.hpp:
namespace ESM { struct CreatureState; }  // lines 11-11
namespace ESSImport { struct CREC; }  // lines 7-7
---

apps/essimporter/convertcrec.cpp should add these lines:

apps/essimporter/convertcrec.cpp should remove these lines:
- #include "apps/essimporter/importcrec.hpp"  // lines 1-1
- #include "apps/essimporter/importcrec.hpp"  // lines 2-2
- #include "components/esm/creaturestate.hpp"  // lines 3-3
- #include "components/esm/creaturestate.hpp"  // lines 4-4
- #include "convertinventory.hpp"  // lines 6-6

The full include-list for apps/essimporter/convertcrec.cpp:
#include "convertcrec.hpp"
---
In file included from apps/essimporter/converter.cpp:3:
In file included from ./components/esm/creaturestate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/essimporter/converter.cpp:3:
./components/esm/creaturestate.hpp:20:35: error: expected class name
    struct CreatureState : public ObjectState
                                  ^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/opencs/model/world/universalid.cpp:157:36: error: implicit instantiation of undefined template 'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
                std::istringstream stream (universalId.substr (index+2));
                                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:97:11: note: template is declared here
    class basic_istringstream;
          ^
In file included from apps/openmw/mwmechanics/activespells.cpp:9:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/opencs/model/world/universalid.cpp:309:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^

apps/openmw/mwrender/animation.hpp should add these lines:

apps/openmw/mwrender/animation.hpp should remove these lines:
- #include <stddef.h>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <algorithm>  // lines 10-10
- #include <map>  // lines 11-11
- #include <string>  // lines 13-13
- #include <vector>  // lines 14-14
- #include <vector>  // lines 15-15
- #include "GLX/../OgrePrerequisites.h"  // lines 18-18
- #include "OgreAxisAlignedBox.h"  // lines 20-20
- #include "OgreMath.h"  // lines 22-22
- #include "OgreMemoryAllocatorConfig.h"  // lines 24-24
- #include "OgreSharedPtr.h"  // lines 27-27
- #include "apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp"  // lines 28-28
- #include "apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp"  // lines 29-29
- namespace MWRender { class Camera; }  // lines 64-64
- namespace Ogre { class Camera; }  // lines 45-45
- namespace Ogre { class Entity; }  // lines 46-46
- namespace Ogre { class Light; }  // lines 47-47
- namespace Ogre { class MovableObject; }  // lines 48-48
- namespace Ogre { class Node; }  // lines 49-49
- namespace Ogre { class SceneManager; }  // lines 50-50
- namespace Ogre { class SceneNode; }  // lines 51-51
- namespace Ogre { class SkeletonInstance; }  // lines 52-52
- namespace Ogre { class StaticGeometry; }  // lines 53-53
- namespace Ogre { class TagPoint; }  // lines 54-54

The full include-list for apps/openmw/mwrender/animation.hpp:
#include <OgreController.h>             // for ControllerValue
#include <OgreVector3.h>                // for Vector3
#include <stddef.h>                     // for size_t, NULL
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr, etc
#include <string>                       // for string
#include "../mwworld/ptr.hpp"           // for Ptr
#include "GLX/../OgrePrerequisites.h"   // for Real, String
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreMath.h"                   // for Radian
#include "OgreMemoryAllocatorConfig.h"  // for AnimationAlloc
#include "OgrePlatform.h"               // for uint8, uint32
#include "OgreSharedPtr.h"              // for SharedPtr
namespace ESM { struct Light; }  // lines 59-59
namespace Ogre { class Camera; }  // lines 34-34
namespace Ogre { class Entity; }  // lines 35-35
namespace Ogre { class Light; }  // lines 36-36
namespace Ogre { class MovableObject; }  // lines 37-37
namespace Ogre { class Node; }  // lines 38-38
namespace Ogre { class SceneManager; }  // lines 39-39
namespace Ogre { class SceneNode; }  // lines 40-40
namespace Ogre { class SkeletonInstance; }  // lines 41-41
namespace Ogre { class StaticGeometry; }  // lines 42-42
namespace Ogre { class TagPoint; }  // lines 43-43
---
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/essimporter/converter.cpp:29:
In file included from ./apps/essimporter/importercontext.hpp:7:
In file included from ./components/esm/player.hpp:6:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from apps/essimporter/converter.cpp:29:
In file included from ./apps/essimporter/importercontext.hpp:9:
./components/esm/globalmap.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/globalmap.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/converter.cpp:29:
./apps/essimporter/importercontext.hpp:35:14: error: no type named 'GlobalMap' in namespace 'ESM'
        ESM::GlobalMap mGlobalMapState;
        ~~~~~^

apps/openmw/mwrender/animation.cpp should add these lines:
#include <vector>                       // for vector
#include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class Fallback; }
namespace Ogre { class SubEntity; }
namespace sh { class MaterialInstance; }

apps/openmw/mwrender/animation.cpp should remove these lines:
- #include <OgreStaticGeometry.h>  // lines 7-7
- #include <assert.h>  // lines 10-10
- #include <cmath>  // lines 19-19
- #include <components/esm/loadstat.hpp>  // lines 13-13
- #include <iostream>  // lines 21-21
- #include <iterator>  // lines 22-22
- #include <iterator>  // lines 23-23
- #include <libs/openengine/ogre/lights.hpp>  // lines 17-17
- #include <limits>  // lines 25-25
- #include <typeinfo>  // lines 26-26
- #include <typeinfo>  // lines 27-27
- #include <utility>  // lines 28-28
- #include <utility>  // lines 29-29
- #include "../mwmechanics/character.hpp"  // lines 34-34
- #include "../mwmechanics/creaturestats.hpp"  // lines 35-35
- #include "../mwworld/esmstore.hpp"  // lines 38-38
- #include "../mwworld/fallback.hpp"  // lines 39-39
- #include "OgreAnimationState.h"  // lines 40-40
- #include "OgreAnimationState.h"  // lines 41-41
- #include "OgreColourValue.h"  // lines 43-43
- #include "OgreController.h"  // lines 44-44
- #include "OgreController.h"  // lines 45-45
- #include "OgreException.h"  // lines 47-47
- #include "OgreLight.h"  // lines 49-49
- #include "OgreMaterial.h"  // lines 51-51
- #include "OgreMesh.h"  // lines 52-52
- #include "OgreMesh.h"  // lines 53-53
- #include "OgreMovableObject.h"  // lines 55-55
- #include "OgreNode.h"  // lines 57-57
- #include "OgrePass.h"  // lines 59-59
- #include "OgreResourceGroupManager.h"  // lines 61-61
- #include "OgreSkeleton.h"  // lines 63-63
- #include "OgreStringConverter.h"  // lines 64-64
- #include "OgreStringConverter.h"  // lines 65-65
- #include "OgreTextureUnitState.h"  // lines 67-67
- #include "OgreVector3.h"  // lines 69-69
- #include "apps/openmw/mwrender/../mwmechanics/spells.hpp"  // lines 71-71
- #include "apps/openmw/mwrender/../mwmechanics/spells.hpp"  // lines 72-72
- #include "apps/openmw/mwrender/../mwworld/cellref.hpp"  // lines 73-73
- #include "apps/openmw/mwrender/../mwworld/cellref.hpp"  // lines 74-74
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 76-76
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 77-77
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 78-78
- #include "components/esm/effectlist.hpp"  // lines 80-80
- #include "components/esm/loadcell.hpp"  // lines 82-82
- #include "components/esm/loadmgef.hpp"  // lines 84-84
- #include "components/esm/loadspel.hpp"  // lines 85-85
- #include "components/esm/loadspel.hpp"  // lines 86-86
- #include "components/misc/stringops.hpp"  // lines 88-88
- #include "components/nifogre/ogrenifloader.hpp"  // lines 90-90
- #include "components/settings/settings.hpp"  // lines 91-91
- #include "components/settings/settings.hpp"  // lines 92-92
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 93-93
- #include "extern/shiny/Main/MaterialInstance.hpp"  // lines 94-94
- #include "extern/shiny/Main/Platform.hpp"  // lines 95-95
- #include "extern/shiny/Main/Platform.hpp"  // lines 96-96
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 97-97
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 98-98
- #include "renderconst.hpp"  // lines 99-99
- namespace Ogre { class Camera; }  // lines 105-105
- namespace Ogre { class TagPoint; }  // lines 106-106

The full include-list for apps/openmw/mwrender/animation.cpp:
#include "animation.hpp"
#include <OgreBone.h>                   // for Bone
#include <OgreControllerManager.h>      // for ControllerManager, etc
#include <OgreParticleSystem.h>         // for ParticleSystem
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreSkeletonInstance.h>       // for SkeletonInstance
#include <OgreTechnique.h>              // for Technique
#include <assert.h>                     // for assert
#include <cmath>                        // for pow, sqrt
#include <components/esm/loadench.hpp>  // for Enchantment
#include <components/esm/loadligh.hpp>  // for Light, Light::LHDTstruct, etc
#include <components/esm/loadweap.hpp>  // for Weapon, etc
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <iostream>                     // for stringstream
#include <limits>                       // for numeric_limits
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/soundmanager.hpp"   // for SoundManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "OgreColourValue.h"            // for ColourValue
#include "OgreException.h"              // for OgreAssert
#include "OgreLight.h"                  // for Light, etc
#include "OgreMaterial.h"               // for Material
#include "OgreMovableObject.h"          // for MovableObject
#include "OgreNode.h"                   // for Node, etc
#include "OgrePass.h"                   // for Pass
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreSkeleton.h"               // for Skeleton, etc
#include "OgreTextureUnitState.h"       // for TextureUnitState
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/effectlist.hpp"  // for EffectList
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "components/nifogre/ogrenifloader.hpp"  // for TextKeyMap, etc
namespace MWWorld { class Fallback; }
namespace Ogre { class Camera; }  // lines 102-102
namespace Ogre { class SubEntity; }
namespace Ogre { class TagPoint; }  // lines 103-103
namespace sh { class MaterialInstance; }
---

apps/opencs/model/world/infocollection.hpp should add these lines:

apps/opencs/model/world/infocollection.hpp should remove these lines:
- #include <string>  // lines 5-5
- #include <utility>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "apps/opencs/model/world/record.hpp"  // lines 12-12
- #include "apps/opencs/model/world/universalid.hpp"  // lines 17-17
- namespace ESM { class ESMReader; }  // lines 22-22

The full include-list for apps/opencs/model/world/infocollection.hpp:
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "apps/opencs/model/world/record.hpp"  // for Record
#include "apps/opencs/model/world/universalid.hpp"  // for UniversalId, etc
#include "collection.hpp"               // for IdAccessor, Collection
#include "info.hpp"                     // for Info
namespace ESM { class Dialogue; }  // lines 27-27
namespace ESM { class ESMReader; }  // lines 20-20
---

apps/opencs/model/world/infocollection.cpp should add these lines:

apps/opencs/model/world/infocollection.cpp should remove these lines:
- #include <cstddef>  // lines 6-6
- #include <map>  // lines 9-9
- #include "apps/opencs/model/world/collection.hpp"  // lines 13-13
- #include "apps/opencs/model/world/info.hpp"  // lines 15-15

The full include-list for apps/opencs/model/world/infocollection.cpp:
#include "infocollection.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/loaddial.hpp>  // for Dialogue
#include <components/misc/stringops.hpp>  // for StringUtils
#include <cstddef>                      // for size_t
#include <iterator>                     // for distance
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <stdexcept>                    // for runtime_error
#include "apps/opencs/model/world/collection.hpp"  // for IdAccessor, etc
#include "apps/opencs/model/world/info.hpp"  // for Info
---

apps/openmw/main.cpp should add these lines:

apps/openmw/main.cpp should remove these lines:
- #include <string.h>  // lines 25-25
- #include <unistd.h>  // lines 27-27
- #include <boost/any.hpp>  // lines 3-3
- #include <boost/filesystem/path.hpp>  // lines 6-6
- #include <boost/iostreams/concepts.hpp>  // lines 7-7
- #include <boost/iostreams/stream_buffer.hpp>  // lines 8-8
- #include <boost/iostreams/traits.hpp>  // lines 9-9
- #include <boost/iostreams/traits.hpp>  // lines 10-10
- #include <boost/lexical_cast.hpp>  // lines 11-11
- #include <boost/program_options/errors.hpp>  // lines 13-13
- #include <boost/program_options/options_description.hpp>  // lines 15-15
- #include <boost/program_options/parsers.hpp>  // lines 17-17
- #include <boost/program_options/value_semantic.hpp>  // lines 18-18
- #include <boost/program_options/value_semantic.hpp>  // lines 19-19
- #include <boost/program_options/variables_map.hpp>  // lines 21-21
- #include <exception>  // lines 30-30
- #include <map>  // lines 32-32
- #include <map>  // lines 33-33
- #include <memory>  // lines 35-35
- #include <sstream>  // lines 36-36
- #include <sstream>  // lines 37-37
- #include <string>  // lines 39-39
- #include <utility>  // lines 40-40
- #include <utility>  // lines 41-41
- #include <vector>  // lines 42-42
- #include <vector>  // lines 43-43
- #include "OgrePlatform.h"  // lines 46-46
- #include "components/files/multidircollection.hpp"  // lines 48-48
- #include "components/to_utf8/to_utf8.hpp"  // lines 50-50

The full include-list for apps/openmw/main.cpp:
#include <SDL_messagebox.h>             // for SDL_ShowSimpleMessageBox
#include <string.h>                     // for strcmp
#include <unistd.h>                     // for isatty
#include <boost/any.hpp>                // for any
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for operator/, path
#include <boost/program_options/errors.hpp>  // for program_options
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>  // for parsed_options
#include <boost/program_options/variables_map.hpp>  // for notify, store, etc
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <components/version/version.hpp>  // for OPENMW_VERSION, etc
#include <csignal>                      // for SIGABRT, SIGBUS, SIGFPE, etc
#include <cstdio>                       // for NULL, fileno, stdin
#include <exception>                    // for exception
#include <iostream>                     // for ostream, basic_ios::rdbuf, etc
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "components/files/multidircollection.hpp"  // for PathContainer
#include "components/to_utf8/to_utf8.hpp"  // for calculateEncoding
#include "engine.hpp"                   // for Engine
---

apps/openmw/mwworld/livecellref.hpp should add these lines:

apps/openmw/mwworld/livecellref.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <string>  // lines 7-7
- #include "components/esm/cellref.hpp"  // lines 12-12
- class ESMStore;  // lines 23-23
- class Ptr;  // lines 24-24

The full include-list for apps/openmw/mwworld/livecellref.hpp:
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include <typeinfo>                     // for type_info
#include "cellref.hpp"                  // for CellRef
#include "components/esm/cellref.hpp"   // for CellRef (ptr only), RefNum, etc
#include "refdata.hpp"                  // for RefData
class Class;  // lines 21-21
namespace ESM { struct ObjectState; }  // lines 18-18
---

apps/openmw/mwworld/livecellref.cpp should add these lines:

apps/openmw/mwworld/livecellref.cpp should remove these lines:
- #include <components/esm/objectstate.hpp>  // lines 2-2
- #include <exception>  // lines 3-3
- #include <exception>  // lines 4-4
- #include <iostream>  // lines 5-5
- #include <iostream>  // lines 6-6
- #include "../mwbase/environment.hpp"  // lines 8-8
- #include "../mwbase/world.hpp"  // lines 9-9
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/store.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/store.hpp"  // lines 17-17
- #include "class.hpp"  // lines 18-18
- #include "components/esm/loadscpt.hpp"  // lines 19-19
- #include "components/esm/loadscpt.hpp"  // lines 20-20
- #include "esmstore.hpp"  // lines 21-21
- #include "ptr.hpp"  // lines 23-23

The full include-list for apps/openmw/mwworld/livecellref.cpp:
#include "livecellref.hpp"
---
apps/essimporter/converter.cpp:64:65: error: no type named 'ObjectState' in namespace 'ESM'
    void convertCellRef(const ESSImport::CellRef& cellref, ESM::ObjectState& objstate)
                                                           ~~~~~^
apps/essimporter/converter.cpp:158:56: error: calling 'getColourAt' with incomplete return type 'Ogre::ColourValue'
                    image2.setColourAt(mGlobalMapImage.getColourAt(imageLeftSrc+x, imageTopSrc+y, 0)
                                       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreImage.h:433:21: note: 'getColourAt' declared here
        ColourValue getColourAt(size_t x, size_t y, size_t z) const;
                    ^
/usr/include/OGRE/OgrePrerequisites.h:137:11: note: forward declaration of 'Ogre::ColourValue'
    class ColourValue;
          ^
In file included from apps/essimporter/converter.cpp:321:22: error: no type named 'ObjectState' in namespace 'ESM'
                ESM::ObjectState objstate;
                ~~~~~^
apps/openmw/mwclass/creaturelevlist.cpp:4:
In file included from ./components/esm/creaturelevliststate.hpp:4:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
apps/essimporter/converter.cpp:347:30: error: no member named 'mRef' in 'ESM::NpcState'
                    objstate.mRef = out;
                    ~~~~~~~~ ^
apps/essimporter/converter.cpp:348:30: error: no member named 'mRef' in 'ESM::NpcState'
                    objstate.mRef.mRefID = idLower;
                    ~~~~~~~~ ^
apps/essimporter/converter.cpp:354:21: error: no matching function for call to 'convertCellRef'
                    convertCellRef(cellref, objstate);
                    ^~~~~~~~~~~~~~
apps/essimporter/converter.cpp:64:10: note: candidate function not viable: no known conversion from 'ESM::NpcState' to 'int &' for 2nd argument
    void convertCellRef(const ESSImport::CellRef& cellref, ESM::ObjectState& objstate)
         ^
apps/essimporter/converter.cpp:365:30: error: no member named 'blank' in 'ESM::ContainerState'
                    objstate.blank();
                    ~~~~~~~~ ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/creaturelevlist.cpp:4:
./components/esm/creaturelevliststate.hpp:18:42: error: expected class name
    struct CreatureLevListState : public ObjectState
                                         ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:38:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:38:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:4:
apps/openmw/mwclass/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwclass/book.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/alchemy.cpp:38:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:36:
apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:11:
In file included from apps/openmw/mwmechanics/../mwworld/containerstore.hpp:22:
apps/openmw/mwmechanics/../mwworld/cellreflist.hpp:25:59: error: no type named 'ESMStore' in namespace 'MWWorld'; did you mean simply 'ESMStore'?
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ^~~~~~~~~~~~~~~~~
                                                          ESMStore
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:23:11: note: 'ESMStore' declared here
    class ESMStore;
          ^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:42:
In file included from apps/opencs/model/world/refcollection.hpp:12:
apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^

(libs/openengine/bullet/trace.h has correct #includes/fwd-decls)

(libs/openengine/bullet/trace.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:42:
apps/opencs/model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:44:
apps/opencs/model/world/subcellcollection.hpp:9:58: error: no template named 'IdAccessor'; did you mean '::CSMWorld::IdAccessor'?
    template<typename ESXRecordT, typename IdAccessorT = IdAccessor<ESXRecordT> >
                                                         ^~~~~~~~~~
                                                         ::CSMWorld::IdAccessor
apps/opencs/model/world/collection.hpp:23:12: note: '::CSMWorld::IdAccessor' declared here
    struct IdAccessor
           ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:14:
./apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:44:
apps/opencs/model/world/subcellcollection.hpp:10:38: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
    class SubCellCollection : public IdCollection<ESXRecordT, IdAccessorT>
                                     ^~~~~~~~~~~~
                                     ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:44:
apps/opencs/model/world/subcellcollection.hpp:12:19: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
            const IdCollection<Cell>& mCells;
                  ^~~~~~~~~~~~
                  ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^
In file included from apps/essimporter/convertcntc.cpp:3:
In file included from ./components/esm/containerstate.hpp:4:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/essimporter/convertcntc.cpp:3:
In file included from ./components/esm/containerstate.hpp:4:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:42:
In file included from apps/opencs/model/world/refcollection.hpp:12:
apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/essimporter/convertcntc.cpp:3:
./components/esm/containerstate.hpp:19:36: error: expected class name
    struct ContainerState : public ObjectState
                                   ^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:44:
apps/opencs/model/world/subcellcollection.hpp:18:38: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
            SubCellCollection (const IdCollection<Cell>& cells);
                                     ^~~~~~~~~~~~
                                     ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:42:
apps/opencs/model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

(apps/opencs/model/world/universalid.hpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
In file included from apps/opencs/model/world/data.hpp:44:
apps/opencs/model/world/subcellcollection.hpp:32:15: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
        const IdCollection<Cell>& cells)
              ^~~~~~~~~~~~
              ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~

apps/openmw/mwmechanics/spellcasting.hpp should add these lines:
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for Ptr
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }

apps/openmw/mwmechanics/spellcasting.hpp should remove these lines:
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadskil.hpp>  // lines 4-4
- #include <string>  // lines 8-8
- #include "../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"  // lines 12-12
- #include "components/esm/defs.hpp"  // lines 13-13
- #include "components/esm/defs.hpp"  // lines 14-14
- namespace MWBase { namespace Loading { struct EffectList; } }  // lines 18-18

The full include-list for apps/openmw/mwmechanics/spellcasting.hpp:
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for Ptr
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace MWMechanics { class EffectKey; } } }  // lines 28-28
namespace MWBase { namespace Loading { namespace MWMechanics { class MagicEffects; } } }  // lines 29-29
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }
---
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/world/regionmap.cpp:23:
In file included from apps/opencs/model/world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
apps/opencs/model/world/data.hpp:87:13: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
            IdCollection<ESM::Global> mGlobals;
            ^~~~~~~~~~~~
            ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^

apps/openmw/mwmechanics/spellcasting.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace MWMechanics { class NpcStats; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }

apps/openmw/mwmechanics/spellcasting.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stdlib.h>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <boost/format.hpp>  // lines 3-3
- #include <map>  // lines 9-9
- #include <map>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include <stdexcept>  // lines 12-12
- #include <typeinfo>  // lines 13-13
- #include <typeinfo>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <vector>  // lines 17-17
- #include <vector>  // lines 18-18
- #include "../mwbase/mechanicsmanager.hpp"  // lines 21-21
- #include "../mwbase/soundmanager.hpp"  // lines 22-22
- #include "../mwbase/world.hpp"  // lines 24-24
- #include "../mwrender/animation.hpp"  // lines 25-25
- #include "../mwworld/actionteleport.hpp"  // lines 26-26
- #include "../mwworld/cellstore.hpp"  // lines 27-27
- #include "../mwworld/class.hpp"  // lines 28-28
- #include "../mwworld/containerstore.hpp"  // lines 29-29
- #include "../mwworld/esmstore.hpp"  // lines 30-30
- #include "../mwworld/player.hpp"  // lines 31-31
- #include "OgreVector3.h"  // lines 33-33
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"  // lines 34-34
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"  // lines 35-35
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"  // lines 37-37
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 40-40
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 41-41
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 43-43
- #include "apps/openmw/mwmechanics/creaturestats.hpp"  // lines 45-45
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 46-46
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 47-47
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 48-48
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 49-49
- #include "components/esm/attr.hpp"  // lines 50-50
- #include "components/esm/attr.hpp"  // lines 51-51
- #include "components/esm/effectlist.hpp"  // lines 52-52
- #include "components/esm/effectlist.hpp"  // lines 53-53
- #include "components/esm/loadalch.hpp"  // lines 54-54
- #include "components/esm/loadalch.hpp"  // lines 55-55
- #include "components/esm/loadcell.hpp"  // lines 56-56
- #include "components/esm/loadcell.hpp"  // lines 57-57
- #include "components/esm/loadcrea.hpp"  // lines 58-58
- #include "components/esm/loadcrea.hpp"  // lines 59-59
- #include "components/esm/loadench.hpp"  // lines 60-60
- #include "components/esm/loadench.hpp"  // lines 61-61
- #include "components/esm/loadgmst.hpp"  // lines 62-62
- #include "components/esm/loadgmst.hpp"  // lines 63-63
- #include "components/esm/loadingr.hpp"  // lines 64-64
- #include "components/esm/loadingr.hpp"  // lines 65-65
- #include "components/esm/loadmgef.hpp"  // lines 66-66
- #include "components/esm/loadmgef.hpp"  // lines 67-67
- #include "components/esm/loadnpc.hpp"  // lines 68-68
- #include "components/esm/loadnpc.hpp"  // lines 69-69
- #include "components/esm/loadskil.hpp"  // lines 70-70
- #include "components/esm/loadskil.hpp"  // lines 71-71
- #include "components/esm/loadspel.hpp"  // lines 72-72
- #include "components/esm/loadspel.hpp"  // lines 73-73
- #include "components/esm/loadstat.hpp"  // lines 74-74
- #include "components/esm/loadstat.hpp"  // lines 75-75
- #include "magiceffects.hpp"  // lines 76-76
- #include "npcstats.hpp"  // lines 77-77
- #include "summoning.hpp"  // lines 79-79

The full include-list for apps/openmw/mwmechanics/spellcasting.cpp:
#include "spellcasting.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for RAND_MAX, rand
#include <cfloat>                       // for FLT_MAX
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats
namespace MWBase { namespace Loading { namespace ESM { struct Spell; } } }
namespace MWBase { namespace Loading { namespace MWMechanics { class NpcStats; } } }
namespace MWBase { namespace Loading { namespace MWWorld { class Ptr; } } }
---
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
apps/opencs/model/world/data.hpp:87:31: error: no member named 'Global' in namespace 'CSMDoc::ESM'
            IdCollection<ESM::Global> mGlobals;
                         ~~~~~^
In file included from apps/openmw/mwmechanics/activespells.cpp:11:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/opencs/model/world/data.hpp:88:13: error: no template named 'IdCollection'; did you mean '::CSMWorld::IdCollection'?
            IdCollection<ESM::GameSetting> mGmsts;
            ^~~~~~~~~~~~
            ::CSMWorld::IdCollection
apps/opencs/model/world/idcollection.hpp:12:11: note: '::CSMWorld::IdCollection' declared here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
          ^
In file included from 
apps/opencs/model/world/universalid.cpp should add these lines:

apps/opencs/model/world/universalid.cpp should remove these lines:
- #include <iostream>  // lines 2-2

The full include-list for apps/opencs/model/world/universalid.cpp:
#include "universalid.hpp"
#include <stdexcept>                    // for logic_error, runtime_error
---
apps/openmw/mwmechanics/activespells.cpp:11:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/opencs/model/world/scriptcontext.cpp:28:
apps/opencs/model/world/data.hpp:88:31: error: no member named 'GameSetting' in namespace 'CSMDoc::ESM'
            IdCollection<ESM::GameSetting> mGmsts;
                         ~~~~~^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwmechanics/activespells.cpp:48:86: error: member reference base type 'int' is not a structure or union
                        MWWorld::TimeStamp end = start + static_cast<double>(effectIt->mDuration)*MWBase::Environment::get().getWorld()->getTimeScaleFactor()/(60*60);
                                                                             ~~~~~~~~^ ~~~~~~~~~
apps/openmw/mwmechanics/activespells.cpp:88:40: error: member reference base type 'const int' is not a structure or union
                int duration = effectIt->mDuration;
                               ~~~~~~~~^ ~~~~~~~~~
apps/openmw/mwmechanics/activespells.cpp:94:65: error: member reference base type 'const int' is not a structure or union
                    mEffects.add(MWMechanics::EffectKey(effectIt->mEffectId, effectIt->mArg), MWMechanics::EffectParam(effectIt->mMagnitude));
                                                        ~~~~~~~~^ ~~~~~~~~~
apps/openmw/mwmechanics/activespells.cpp:94:86: error: member reference base type 'const int' is not a structure or union
                    mEffects.add(MWMechanics::EffectKey(effectIt->mEffectId, effectIt->mArg), MWMechanics::EffectParam(effectIt->mMagnitude));
                                                                             ~~~~~~~~^ ~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwclass/misc.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/misc.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace MWRender { class RenderingInterface; }  // lines 24-24
- namespace MWWorld { class Action; }  // lines 27-27
- namespace MWWorld { class CellStore; }  // lines 28-28
- namespace MWWorld { class PhysicsSystem; }  // lines 29-29

The full include-list for apps/openmw/mwclass/misc.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 22-22
namespace MWWorld { class Action; }  // lines 16-16
namespace MWWorld { class CellStore; }  // lines 17-17
namespace MWWorld { class PhysicsSystem; }  // lines 18-18
---

apps/openmw/mwclass/misc.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
namespace MWWorld { class ESMStore; }

apps/openmw/mwclass/misc.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 7-7
- #include <boost/lexical_cast.hpp>  // lines 4-4
- #include <components/esm/loadmisc.hpp>  // lines 5-5
- #include <sstream>  // lines 8-8
- #include <sstream>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include <typeinfo>  // lines 11-11
- #include "../mwrender/renderinginterface.hpp"  // lines 16-16
- #include "../mwworld/actionsoulgem.hpp"  // lines 17-17
- #include "../mwworld/cellstore.hpp"  // lines 18-18
- #include "../mwworld/nullaction.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/esmstore.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/esmstore.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 32-32
- #include "components/esm/loadcrea.hpp"  // lines 33-33
- #include "components/esm/loadcrea.hpp"  // lines 34-34
- #include "components/esm/loadnpc.hpp"  // lines 35-35
- #include "components/esm/loadnpc.hpp"  // lines 36-36
- #include "components/misc/stringops.hpp"  // lines 37-37
- #include "components/misc/stringops.hpp"  // lines 38-38
- namespace MWWorld { class Action; }  // lines 45-45
- namespace MWWorld { class Class; }  // lines 46-46

The full include-list for apps/openmw/mwclass/misc.cpp:
#include "misc.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
namespace MWWorld { class Action; }  // lines 42-42
namespace MWWorld { class Class; }  // lines 43-43
namespace MWWorld { class ESMStore; }
---

apps/essimporter/convertcntc.hpp should add these lines:

apps/essimporter/convertcntc.hpp should remove these lines:
- namespace ESM { struct ContainerState; }  // lines 13-13
- namespace ESSImport { struct CNTC; }  // lines 16-16

The full include-list for apps/essimporter/convertcntc.hpp:
namespace ESM { struct ContainerState; }  // lines 11-11
namespace ESSImport { struct CNTC; }  // lines 7-7
---

apps/essimporter/convertcntc.cpp should add these lines:

apps/essimporter/convertcntc.cpp should remove these lines:
- #include "apps/essimporter/importcntc.hpp"  // lines 1-1
- #include "apps/essimporter/importcntc.hpp"  // lines 2-2
- #include "components/esm/containerstate.hpp"  // lines 3-3
- #include "components/esm/containerstate.hpp"  // lines 4-4
- #include "convertinventory.hpp"  // lines 6-6

The full include-list for apps/essimporter/convertcntc.cpp:
#include "convertcntc.hpp"
---

apps/essimporter/converter.hpp should add these lines:
#include "components/esm/loadcell.hpp"  // for Cell
namespace ESM { struct CreatureStats; }
namespace ESM { struct InventoryState; }

apps/essimporter/converter.hpp should remove these lines:
- #include <assert.h>  // lines 6-6
- #include <components/esm/cellstate.hpp>  // lines 7-7
- #include <map>  // lines 21-21
- #include <ostream>  // lines 23-23
- #include <stdexcept>  // lines 25-25
- #include <string>  // lines 27-27
- #include <utility>  // lines 29-29
- #include <vector>  // lines 31-31
- #include "apps/essimporter/importacdt.hpp"  // lines 34-34
- #include "apps/essimporter/importnpcc.hpp"  // lines 36-36
- #include "apps/essimporter/importplayer.hpp"  // lines 38-38
- #include "components/esm/cellref.hpp"  // lines 39-39
- #include "components/esm/cellref.hpp"  // lines 40-40
- #include "components/esm/creaturestats.hpp"  // lines 41-41
- #include "components/esm/creaturestats.hpp"  // lines 42-42
- #include "components/esm/defs.hpp"  // lines 44-44
- #include "components/esm/esmcommon.hpp"  // lines 46-46
- #include "components/esm/inventorystate.hpp"  // lines 47-47
- #include "components/esm/inventorystate.hpp"  // lines 48-48
- #include "components/esm/loadcont.hpp"  // lines 50-50
- #include "components/esm/loadnpc.hpp"  // lines 52-52
- #include "components/esm/npcstate.hpp"  // lines 53-53
- #include "components/esm/npcstate.hpp"  // lines 54-54
- #include "components/esm/npcstats.hpp"  // lines 56-56
- #include "components/esm/objectstate.hpp"  // lines 57-57
- #include "components/esm/objectstate.hpp"  // lines 58-58
- #include "components/esm/player.hpp"  // lines 59-59
- #include "components/esm/player.hpp"  // lines 60-60
- #include "components/esm/spelllist.hpp"  // lines 62-62
- #include "components/esm/spellstate.hpp"  // lines 63-63
- #include "components/esm/spellstate.hpp"  // lines 64-64
- #include "components/esm/variant.hpp"  // lines 66-66
- #include "components/misc/stringops.hpp"  // lines 68-68
- #include "convertnpcc.hpp"  // lines 70-70

The full include-list for apps/essimporter/converter.hpp:
#include <OgreImage.h>                  // for Image
#include <assert.h>                     // for assert
#include <components/esm/custommarkerstate.hpp>  // for CustomMarker
#include <components/esm/dialoguestate.hpp>  // for DialogueState
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/globalscript.hpp>  // for GlobalScript
#include <components/esm/loadbook.hpp>  // for Book
#include <components/esm/loadclas.hpp>  // for Class
#include <components/esm/loadcrea.hpp>  // for Creature
#include <components/esm/loadfact.hpp>  // for Faction
#include <components/esm/loadglob.hpp>  // for Global
#include <components/esm/queststate.hpp>  // for QuestState
#include <components/esm/weatherstate.hpp>  // for WeatherState
#include <map>                          // for map, etc
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator==, etc
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector, etc
#include "apps/essimporter/importacdt.hpp"  // for ActorData
#include "apps/essimporter/importnpcc.hpp"  // for NPCC, NPCC::NPDT
#include "apps/essimporter/importplayer.hpp"  // for PCDT, REFR, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_ASPL, etc
#include "components/esm/esmcommon.hpp"  // for NAME
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadcont.hpp"  // for InventoryList
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/npcstats.hpp"  // for NpcStats::Faction, NpcStats
#include "components/esm/spelllist.hpp"  // for SpellList
#include "components/esm/variant.hpp"   // for Variant
#include "components/misc/stringops.hpp"  // for StringUtils
#include "convertacdt.hpp"              // for convertACDT, convertNpcData
#include "convertscpt.hpp"              // for convertSCPT
#include "importcellref.hpp"            // for CellRef
#include "importcntc.hpp"               // for CNTC
#include "importcrec.hpp"               // for CREC
#include "importdial.hpp"               // for DIAL
#include "importercontext.hpp"          // for Context
#include "importgame.hpp"               // for GAME, GAME::GMDT
#include "importinfo.hpp"               // for INFO
#include "importjour.hpp"               // for JOUR
#include "importklst.hpp"               // for KLST
#include "importques.hpp"               // for QUES
#include "importscpt.hpp"               // for SCPT
namespace ESM { struct CreatureStats; }
namespace ESM { struct InventoryState; }
---
In file included from apps/openmw/mwmechanics/aicombataction.cpp:16:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:16:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/essimporter/converter.cpp should add these lines:
#include "components/esm/cellref.hpp"   // for CellRef
#include "components/esm/npcstate.hpp"  // for NpcState

apps/essimporter/converter.cpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <components/esm/creaturestate.hpp>  // lines 3-3
- #include <istream>  // lines 7-7
- #include <stdexcept>  // lines 9-9
- #include "OgreDataStream.h"  // lines 12-12
- #include "OgrePixelFormat.h"  // lines 14-14
- #include "OgrePlatform.h"  // lines 16-16
- #include "OgreSharedPtr.h"  // lines 17-17
- #include "OgreSharedPtr.h"  // lines 18-18
- #include "apps/essimporter/convertacdt.hpp"  // lines 20-20
- #include "apps/essimporter/convertnpcc.hpp"  // lines 22-22
- #include "apps/essimporter/importcellref.hpp"  // lines 24-24
- #include "apps/essimporter/importcntc.hpp"  // lines 26-26
- #include "apps/essimporter/importcrec.hpp"  // lines 27-27
- #include "apps/essimporter/importcrec.hpp"  // lines 28-28
- #include "apps/essimporter/importercontext.hpp"  // lines 30-30
- #include "components/esm/cellid.hpp"  // lines 32-32
- #include "components/esm/cellstate.hpp"  // lines 34-34
- #include "components/esm/custommarkerstate.hpp"  // lines 36-36
- #include "components/esm/esmreader.hpp"  // lines 38-38
- #include "components/esm/esmwriter.hpp"  // lines 40-40
- #include "components/esm/globalmap.hpp"  // lines 41-41
- #include "components/esm/globalmap.hpp"  // lines 42-42
- #include "components/esm/loadcell.hpp"  // lines 44-44
- #include "components/esm/locals.hpp"  // lines 45-45
- #include "components/esm/locals.hpp"  // lines 46-46
- #include "convertcrec.hpp"  // lines 48-48
- #include "convertscri.hpp"  // lines 50-50

The full include-list for apps/essimporter/converter.cpp:
#include "converter.hpp"
#include <OgreImage.h>                  // for Image, etc
#include <stddef.h>                     // for size_t
#include <components/esm/containerstate.hpp>  // for ContainerState
#include <istream>                      // for basic_istream::operator>>, etc
#include <set>                          // for set, set<>::const_iterator
#include "OgreDataStream.h"             // for DataStreamPtr, etc
#include "OgrePixelFormat.h"            // for PixelFormat::PF_BYTE_RGBA, etc
#include "OgrePlatform.h"               // for uint8
#include "apps/essimporter/convertacdt.hpp"  // for convertNpcData
#include "apps/essimporter/convertnpcc.hpp"  // for convertNPCC
#include "apps/essimporter/importcellref.hpp"  // for CellRef
#include "apps/essimporter/importcntc.hpp"  // for CNTC
#include "apps/essimporter/importercontext.hpp"  // for Context
#include "components/esm/cellid.hpp"    // for CellId
#include "components/esm/cellref.hpp"   // for CellRef
#include "components/esm/cellstate.hpp"  // for CellState
#include "components/esm/custommarkerstate.hpp"  // for CustomMarker
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/npcstate.hpp"  // for NpcState
#include "convertcntc.hpp"              // for convertCNTC
---

apps/opencs/model/world/refidadapterimp.hpp should add these lines:

apps/opencs/model/world/refidadapterimp.hpp should remove these lines:
- #include <QVariant>  // lines 6-6
- #include <QtCore>  // lines 8-8
- #include <string>  // lines 11-11
- #include <utility>  // lines 13-13
- #include "components/esm/loadarmo.hpp"  // lines 16-16
- #include "components/esm/loadbook.hpp"  // lines 18-18
- #include "components/esm/loadclot.hpp"  // lines 20-20
- #include "components/esm/loadcont.hpp"  // lines 22-22
- #include "components/esm/loadcrea.hpp"  // lines 24-24
- #include "components/esm/loaddoor.hpp"  // lines 26-26
- #include "components/esm/loadligh.hpp"  // lines 28-28
- #include "components/esm/loadmisc.hpp"  // lines 30-30
- #include "components/esm/loadnpc.hpp"  // lines 32-32
- #include "components/esm/loadweap.hpp"  // lines 34-34
- namespace CSMWorld { class RefIdColumn; }  // lines 43-43

The full include-list for apps/opencs/model/world/refidadapterimp.hpp:
#include <QtCore>                       // for QVariant, QString, etc
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadappa.hpp>  // for Apparatus
#include <map>                          // for map, map<>::const_iterator, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadweap.hpp"  // for Weapon
#include "record.hpp"                   // for Record, RecordBase, etc
#include "refidadapter.hpp"             // for RefIdAdapter
#include "refiddata.hpp"                // for RefIdData, etc
#include "universalid.hpp"              // for UniversalId, etc
namespace CSMWorld { class RefIdColumn; }  // lines 41-41
---
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

(apps/essimporter/importklst.hpp has correct #includes/fwd-decls)

(apps/essimporter/importklst.cpp has correct #includes/fwd-decls)
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:197:14: error: member access into incomplete type 'Ogre::SceneNode'
        mNode->attachObject(mLineDrawer);
             ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:228:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:37:
libs/openengine/bullet/BtOgreExtras.h:235:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:16:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:16:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:16:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwmechanics/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwmechanics/alchemy.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwmechanics/alchemy.hpp should remove these lines:
- #include <string>  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 11-11

The full include-list for apps/openmw/mwmechanics/alchemy.hpp:
#include <components/esm/effectlist.hpp>  // for ENAMstruct
#include <set>                          // for set
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Potion; }  // lines 16-16
struct EffectKey;  // lines 20-20
---

apps/openmw/mwmechanics/alchemy.cpp should add these lines:

apps/openmw/mwmechanics/alchemy.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <components/esm/loadappa.hpp>  // lines 2-2
- #include <components/esm/loadgmst.hpp>  // lines 3-3
- #include <components/esm/loadmgef.hpp>  // lines 4-4
- #include <components/esm/loadskil.hpp>  // lines 5-5
- #include <map>  // lines 9-9
- #include <ostream>  // lines 10-10
- #include <ostream>  // lines 11-11
- #include <stdexcept>  // lines 12-12
- #include <utility>  // lines 13-13
- #include <utility>  // lines 14-14
- #include "../mwbase/environment.hpp"  // lines 16-16
- #include "../mwbase/world.hpp"  // lines 17-17
- #include "../mwworld/class.hpp"  // lines 18-18
- #include "../mwworld/containerstore.hpp"  // lines 19-19
- #include "../mwworld/esmstore.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 22-22
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 25-25
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 28-28
- #include "components/esm/attr.hpp"  // lines 29-29
- #include "components/esm/effectlist.hpp"  // lines 30-30
- #include "components/esm/effectlist.hpp"  // lines 31-31
- #include "components/esm/loadalch.hpp"  // lines 32-32
- #include "components/esm/loadalch.hpp"  // lines 33-33
- #include "components/esm/loadingr.hpp"  // lines 34-34
- #include "components/esm/loadingr.hpp"  // lines 35-35
- #include "components/misc/stringops.hpp"  // lines 36-36
- #include "components/misc/stringops.hpp"  // lines 37-37
- #include "creaturestats.hpp"  // lines 38-38
- #include "magiceffects.hpp"  // lines 39-39
- #include "npcstats.hpp"  // lines 40-40

The full include-list for apps/openmw/mwmechanics/alchemy.cpp:
#include "alchemy.hpp"
#include <cassert>                      // for assert
#include <cstdlib>                      // for RAND_MAX
---

apps/opencs/model/world/refidadapterimp.cpp should add these lines:

apps/opencs/model/world/refidadapterimp.cpp should remove these lines:
- #include <stddef.h>  // lines 3-3
- #include "apps/opencs/model/world/record.hpp"  // lines 6-6
- #include "apps/opencs/model/world/refiddata.hpp"  // lines 8-8
- #include "apps/opencs/model/world/universalid.hpp"  // lines 10-10
- #include "components/esm/loadalch.hpp"  // lines 12-12
- #include "components/esm/loadappa.hpp"  // lines 14-14
- namespace CSMWorld { class RefIdColumn; }  // lines 20-20

The full include-list for apps/opencs/model/world/refidadapterimp.cpp:
#include "refidadapterimp.hpp"
#include <stddef.h>                     // for NULL
#include "apps/opencs/model/world/record.hpp"  // for Record
#include "apps/opencs/model/world/refiddata.hpp"  // for RefIdData, etc
#include "apps/opencs/model/world/universalid.hpp"  // for UniversalId, etc
#include "components/esm/loadalch.hpp"  // for Potion, Potion::ALDTstruct
#include "components/esm/loadappa.hpp"  // for Apparatus, etc
namespace CSMWorld { class RefIdColumn; }  // lines 18-18
---
apps/esmtool/record.cpp:81:24: error: implicit instantiation of undefined template 'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::istringstream iss(rule.substr(2,2));
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:97:11: note: template is declared here
    class basic_istringstream;
          ^
apps/esmtool/record.cpp:134:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^

apps/openmw/mwworld/projectilemanager.hpp should add these lines:
#include "apps/openmw/mwworld/../mwworld/class.hpp"  // for Vector3
namespace MWWorld { namespace ESM { class ESMReader; } }
namespace MWWorld { namespace ESM { class ESMWriter; } }
namespace MWWorld { namespace MWWorld { class Ptr; } }
namespace MWWorld { namespace Ogre { class Vector3; } }

apps/openmw/mwworld/projectilemanager.hpp should remove these lines:
- #include <OgreVector3.h>  // lines 4-4
- #include <stdint.h>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <components/esm/effectlist.hpp>  // lines 7-7
- #include <vector>  // lines 14-14
- #include "OgreQuaternion.h"  // lines 16-16
- #include "OgreQuaternion.h"  // lines 17-17
- #include "OgreSharedPtr.h"  // lines 18-18
- #include "OgreSharedPtr.h"  // lines 19-19
- #include "apps/openmw/mwworld/../mwsound/../mwbase/soundmanager.hpp"  // lines 21-21
- #include "ptr.hpp"  // lines 22-22
- namespace ESM { class ESMReader; }  // lines 36-36
- namespace ESM { class ESMWriter; }  // lines 37-37
- namespace ESM { namespace ESM { class ESMReader; } }  // lines 26-26
- namespace ESM { namespace ESM { class ESMWriter; } }  // lines 27-27
- namespace ESM { namespace MWWorld { class Ptr; } }  // lines 30-30
- namespace ESM { namespace Ogre { class SceneNode; } }  // lines 33-33
- namespace MWWorld { class Ptr; }  // lines 40-40
- namespace Ogre { class SceneManager; }  // lines 63-63
- namespace Ogre { class SceneNode; }  // lines 44-44

The full include-list for apps/openmw/mwworld/projectilemanager.hpp:
#include <stdint.h>                     // for uint32_t
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include <string>                       // for string
#include "apps/openmw/mwworld/../mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwworld/../mwworld/class.hpp"  // for Vector3
namespace Loading { class Listener; }  // lines 58-58
namespace MWWorld { namespace ESM { class ESMReader; } }
namespace MWWorld { namespace ESM { class ESMWriter; } }
namespace MWWorld { namespace MWWorld { class Ptr; } }
namespace MWWorld { namespace Ogre { class Vector3; } }
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 52-52
---

apps/openmw/mwworld/projectilemanager.cpp should add these lines:
namespace MWWorld { namespace ESM { class ESMReader; } }
namespace MWWorld { namespace ESM { class ESMWriter; } }
namespace MWWorld { namespace Ogre { class Vector3; } }

apps/openmw/mwworld/projectilemanager.cpp should remove these lines:
- #include <OgreSceneManager.h>  // lines 1-1
- #include <OgreSceneNode.h>  // lines 2-2
- #include <stddef.h>  // lines 6-6
- #include <components/esm/projectilestate.hpp>  // lines 3-3
- #include <utility>  // lines 7-7
- #include <utility>  // lines 8-8
- #include "../mwbase/world.hpp"  // lines 11-11
- #include "../mwmechanics/combat.hpp"  // lines 12-12
- #include "../mwmechanics/creaturestats.hpp"  // lines 13-13
- #include "../mwmechanics/spellcasting.hpp"  // lines 14-14
- #include "../mwrender/animation.hpp"  // lines 15-15
- #include "../mwrender/renderconst.hpp"  // lines 16-16
- #include "../mwsound/sound.hpp"  // lines 17-17
- #include "../mwworld/manualref.hpp"  // lines 20-20
- #include "LinearMath/btVector3.h"  // lines 22-22
- #include "OgreController.h"  // lines 23-23
- #include "OgreController.h"  // lines 24-24
- #include "OgreMath.h"  // lines 25-25
- #include "OgreMath.h"  // lines 26-26
- #include "OgreVector3.h"  // lines 28-28
- #include "apps/openmw/mwworld/../mwrender/../mwworld/ptr.hpp"  // lines 30-30
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 32-32
- #include "apps/openmw/mwworld/containerstore.hpp"  // lines 33-33
- #include "apps/openmw/mwworld/containerstore.hpp"  // lines 34-34
- #include "apps/openmw/mwworld/esmstore.hpp"  // lines 35-35
- #include "apps/openmw/mwworld/esmstore.hpp"  // lines 36-36
- #include "apps/openmw/mwworld/refdata.hpp"  // lines 38-38
- #include "apps/openmw/mwworld/store.hpp"  // lines 39-39
- #include "apps/openmw/mwworld/store.hpp"  // lines 40-40
- #include "components/esm/defs.hpp"  // lines 41-41
- #include "components/esm/defs.hpp"  // lines 42-42
- #include "components/esm/effectlist.hpp"  // lines 43-43
- #include "components/esm/effectlist.hpp"  // lines 44-44
- #include "components/esm/esmwriter.hpp"  // lines 45-45
- #include "components/esm/esmwriter.hpp"  // lines 46-46
- #include "components/esm/loadgmst.hpp"  // lines 47-47
- #include "components/esm/loadgmst.hpp"  // lines 48-48
- #include "components/esm/util.hpp"  // lines 49-49
- #include "components/esm/util.hpp"  // lines 50-50
- #include "components/misc/stringops.hpp"  // lines 51-51
- #include "components/misc/stringops.hpp"  // lines 52-52
- #include "components/nifogre/ogrenifloader.hpp"  // lines 54-54
- namespace ESM { class ESMReader; }  // lines 58-58
- namespace ESM { class ESMReader; }  // lines 60-60

The full include-list for apps/openmw/mwworld/projectilemanager.cpp:
#include "projectilemanager.hpp"
#include <stddef.h>                     // for size_t, NULL
#include <libs/openengine/bullet/physic.hpp>  // for PhysicActor, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwworld/class.hpp"         // for Vector3
#include "../mwworld/inventorystore.hpp"  // for Ptr
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/../mwrender/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "components/nifogre/ogrenifloader.hpp"  // for ObjectScenePtr
namespace MWWorld { namespace ESM { class ESMReader; } }
namespace MWWorld { namespace ESM { class ESMWriter; } }
namespace MWWorld { namespace Ogre { class Vector3; } }
---
libs/openengine/bullet/BtOgre.cpp:529:37: error: member access into incomplete type 'Ogre::Entity'
        mNode = (SceneNode*)(mEntity->getParentNode());
                                    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:533:20: error: member access into incomplete type 'Ogre::Entity'
        if (mEntity->getMesh()->sharedVertexData)
                   ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:535:61: error: member access into incomplete type 'Ogre::Entity'
            VertexIndexToShape::addStaticVertexData (mEntity->getMesh()->sharedVertexData);
                                                            ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:538:44: error: member access into incomplete type 'Ogre::Entity'
        for (unsigned int i = 0;i < mEntity->getNumSubEntities();++i)
                                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:540:40: error: member access into incomplete type 'Ogre::Entity'
            SubMesh *sub_mesh = mEntity->getSubEntity(i)->getSubMesh();
                                       ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:633:37: error: member access into incomplete type 'Ogre::Entity'
        mNode = (SceneNode*)(mEntity->getParentNode());
                                    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:636:23: error: member access into incomplete type 'Ogre::Entity'
        assert (entity->getMesh()->hasSkeleton ());
                      ^
/usr/include/assert.h:89:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:638:16: error: member access into incomplete type 'Ogre::Entity'
        mEntity->addSoftwareAnimationRequest(false);
               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:639:16: error: member access into incomplete type 'Ogre::Entity'
        mEntity->_updateAnimation();
               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:641:20: error: member access into incomplete type 'Ogre::Entity'
        if (mEntity->getMesh()->sharedVertexData)
                   ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:643:63: error: member access into incomplete type 'Ogre::Entity'
            VertexIndexToShape::addAnimatedVertexData (mEntity->getMesh()->sharedVertexData,
                                                              ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:644:28: error: member access into incomplete type 'Ogre::Entity'
                    mEntity->_getSkelAnimVertexData(),
                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:645:29: error: member access into incomplete type 'Ogre::Entity'
                    &mEntity->getMesh()->sharedBlendIndexToBoneIndexMap);
                            ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:648:44: error: member access into incomplete type 'Ogre::Entity'
        for (unsigned int i = 0;i < mEntity->getNumSubEntities();++i)
                                           ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:650:40: error: member access into incomplete type 'Ogre::Entity'
            SubMesh *sub_mesh = mEntity->getSubEntity(i)->getSubMesh();
                                       ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
libs/openengine/bullet/BtOgre.cpp:657:32: error: member access into incomplete type 'Ogre::Entity'
                        mEntity->getSubEntity(i)->_getSkelAnimVertexData(),
                               ^
/usr/include/OGRE/OgrePrerequisites.h:150:11: note: forward declaration of 'Ogre::Entity'
    class Entity;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^

apps/openmw/mwmechanics/activespells.hpp should add these lines:

apps/openmw/mwmechanics/activespells.hpp should remove these lines:
- #include <components/esm/activespells.hpp>  // lines 4-4
- #include <components/esm/defs.hpp>  // lines 5-5

The full include-list for apps/openmw/mwmechanics/activespells.hpp:
#include <map>                          // for multimap, etc
#include <string>                       // for string, basic_string
#include <vector>                       // for vector
#include "../mwworld/timestamp.hpp"     // for TimeStamp
#include "magiceffects.hpp"             // for MagicEffects
---
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwmechanics/activespells.cpp should add these lines:
namespace ESM { struct MagicEffect; }

apps/openmw/mwmechanics/activespells.cpp should remove these lines:
- #include <stdlib.h>  // lines 4-4
- #include <components/esm/loadmgef.hpp>  // lines 1-1
- #include <utility>  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 17-17
- #include "components/esm/activespells.hpp"  // lines 18-18
- #include "components/esm/activespells.hpp"  // lines 19-19
- #include "components/esm/defs.hpp"  // lines 20-20
- #include "components/esm/defs.hpp"  // lines 21-21

The full include-list for apps/openmw/mwmechanics/activespells.cpp:
#include "activespells.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <components/misc/stringops.hpp>  // for StringUtils
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for MagicEffects, etc
namespace ESM { struct MagicEffect; }
---
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

(apps/essimporter/importques.hpp has correct #includes/fwd-decls)

(apps/essimporter/importques.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/record.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/record.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:7:
apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwclass/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwclass/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwclass/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwclass/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwclass/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwclass/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:11:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:9:
In file included from apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwclass/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwrender/weaponanimation.hpp should add these lines:

apps/openmw/mwrender/weaponanimation.hpp should remove these lines:
- #include <string>  // lines 7-7
- #include "OgrePrerequisites.h"  // lines 10-10
- namespace MWWorld { class Ptr; }  // lines 19-19
- namespace Ogre { class SkeletonInstance; }  // lines 23-23

The full include-list for apps/openmw/mwrender/weaponanimation.hpp:
#include <OgreController.h>             // for ControllerValue
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include <string>                       // for string
#include "OgrePrerequisites.h"          // for Real
namespace MWRender { class Animation; }  // lines 29-29
namespace MWWorld { class Ptr; }  // lines 17-17
namespace Ogre { class SkeletonInstance; }  // lines 13-13
---

apps/openmw/mwrender/weaponanimation.cpp should add these lines:
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwrender/weaponanimation.cpp should remove these lines:
- #include <OgreBone.h>  // lines 1-1
- #include <OgreEntity.h>  // lines 2-2
- #include <OgreSkeletonInstance.h>  // lines 3-3
- #include <stdexcept>  // lines 4-4
- #include <stdexcept>  // lines 5-5
- #include <vector>  // lines 6-6
- #include "../mwbase/environment.hpp"  // lines 8-8
- #include "../mwbase/world.hpp"  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 12-12
- #include "OgreMath.h"  // lines 15-15
- #include "OgreNode.h"  // lines 17-17
- #include "OgreQuaternion.h"  // lines 19-19
- #include "OgreSharedPtr.h"  // lines 20-20
- #include "OgreSharedPtr.h"  // lines 21-21
- #include "OgreVector3.h"  // lines 23-23
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 26-26
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/stat.hpp"  // lines 28-28
- #include "apps/openmw/mwrender/../mwworld/containerstore.hpp"  // lines 30-30
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 31-31
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 32-32
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 34-34
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 35-35
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 36-36
- #include "components/esm/defs.hpp"  // lines 38-38
- #include "components/esm/loadgmst.hpp"  // lines 39-39
- #include "components/esm/loadgmst.hpp"  // lines 40-40
- #include "components/esm/loadweap.hpp"  // lines 41-41
- #include "components/esm/loadweap.hpp"  // lines 42-42
- #include "components/nifogre/ogrenifloader.hpp"  // lines 43-43
- #include "components/nifogre/ogrenifloader.hpp"  // lines 44-44

The full include-list for apps/openmw/mwrender/weaponanimation.cpp:
#include "weaponanimation.hpp"
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreMath.h"                   // for Radian
#include "OgreNode.h"                   // for Node, etc
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, etc
#include "animation.hpp"                // for Animation
#include "apps/openmw/mwrender/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwrender/../mwworld/../mwmechanics/stat.hpp"
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/defs.hpp"      // for Position
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:54:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/class.cpp:7:
In file included from apps/openmw/mwworld/../mwbase/world.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:54:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/opencs/model/world/ref.cpp:4:
apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
apps/opencs/model/world/ref.cpp:6:1: error: use of undeclared identifier 'CSMWorld'
CSMWorld::CellRef::CellRef()
^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwmechanics/enchanting.cpp:54:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/enchanting.cpp:54:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/cellref.cpp:1:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^

apps/opencs/model/world/ref.hpp should add these lines:

apps/opencs/model/world/ref.hpp should remove these lines:
- #include <string>  // lines 6-6
- class Cell;  // lines 9-9

The full include-list for apps/opencs/model/world/ref.hpp:
#include <components/esm/cellref.hpp>   // for CellRef
#include <string>                       // for string
---

apps/opencs/model/world/ref.cpp should add these lines:

apps/opencs/model/world/ref.cpp should remove these lines:
- #include "components/esm/cellref.hpp"  // lines 2-2
- #include "components/esm/cellref.hpp"  // lines 3-3

The full include-list for apps/opencs/model/world/ref.cpp:
#include "ref.hpp"
---
apps/openmw/mwworld/cellref.cpp:222:14: error: member access into incomplete type 'ESM::ObjectState'
        state.mRef = mCellRef;
             ^
apps/openmw/mwworld/cellref.hpp:15:12: note: forward declaration of 'ESM::ObjectState'
    struct ObjectState;
           ^
In file included from apps/opencs/model/doc/savingstages.cpp:25:
./apps/opencs/model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aifollow.cpp:32:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/openmw/mwmechanics/aifollow.cpp:68:27: error: member access into incomplete type 'const ESM::AiSequence::AiFollow'
    : mAlwaysFollow(follow->mAlwaysFollow), mRemainingDuration(follow->mRemainingDuration)
                          ^
apps/openmw/mwmechanics/aifollow.hpp:22:12: note: forward declaration of 'ESM::AiSequence::AiFollow'
    struct AiFollow;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwmechanics/stat.hpp should add these lines:
#include <limits>                       // for numeric_limits

apps/openmw/mwmechanics/stat.hpp should remove these lines:
- #include <algorithm>  // lines 9-9
- #include <components/esm/statstate.hpp>  // lines 7-7
- namespace ESM { template <typename T> struct StatState; }  // lines 16-16

The full include-list for apps/openmw/mwmechanics/stat.hpp:
#include <algorithm>                    // for max, min
#include <limits>                       // for numeric_limits
namespace ESM { template <typename T> struct StatState; }  // lines 12-12
---

apps/openmw/mwmechanics/stat.cpp should add these lines:

apps/openmw/mwmechanics/stat.cpp should remove these lines:
- #include "components/esm/statstate.hpp"  // lines 3-3

The full include-list for apps/openmw/mwmechanics/stat.cpp:
#include "stat.hpp"
#include "components/esm/statstate.hpp"  // for StatState
---
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwmechanics/aicombataction.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"

apps/openmw/mwmechanics/aicombataction.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "../mwworld/ptr.hpp"  // lines 9-9
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 11-11
- namespace ESM { struct ENAMstruct; }  // lines 18-18
- namespace ESM { struct EffectList; }  // lines 19-19
- namespace ESM { struct Spell; }  // lines 20-20

The full include-list for apps/openmw/mwmechanics/aicombataction.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
namespace ESM { struct ENAMstruct; }  // lines 14-14
namespace ESM { struct EffectList; }  // lines 15-15
namespace ESM { struct Spell; }  // lines 16-16
---
In file included from apps/openmw/mwrender/localmap.cpp:24:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/openmw/mwmechanics/aicombataction.cpp should add these lines:

apps/openmw/mwmechanics/aicombataction.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <map>  // lines 5-5
- #include <map>  // lines 6-6
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "../mwbase/environment.hpp"  // lines 14-14
- #include "../mwbase/world.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 26-26
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 29-29
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 32-32
- #include "apps/openmw/mwmechanics/creaturestats.hpp"  // lines 34-34
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 37-37
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 40-40
- #include "components/esm/activespells.hpp"  // lines 41-41
- #include "components/esm/activespells.hpp"  // lines 42-42
- #include "components/esm/attr.hpp"  // lines 44-44
- #include "components/esm/defs.hpp"  // lines 46-46
- #include "components/esm/effectlist.hpp"  // lines 48-48
- #include "components/esm/loadalch.hpp"  // lines 50-50
- #include "components/esm/loadnpc.hpp"  // lines 51-51
- #include "components/esm/loadnpc.hpp"  // lines 52-52
- #include "components/esm/loadrace.hpp"  // lines 54-54
- #include "components/esm/loadspel.hpp"  // lines 56-56
- #include "components/esm/loadweap.hpp"  // lines 58-58
- #include "components/esm/spelllist.hpp"  // lines 60-60

The full include-list for apps/openmw/mwmechanics/aicombataction.cpp:
#include "aicombataction.hpp"
#include <components/esm/loadench.hpp>  // for Enchantment, etc
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for getSpellSuccessChance
#include "../mwworld/actionequip.hpp"   // for ActionEquip
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/activespells.hpp"  // for ActiveSpells, etc
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Self
#include "components/esm/effectlist.hpp"  // for ENAMstruct, etc
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
---

apps/openmw/mwworld/cellref.hpp should add these lines:

apps/openmw/mwworld/cellref.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "components/esm/defs.hpp"  // lines 9-9

The full include-list for apps/openmw/mwworld/cellref.hpp:
#include <components/esm/cellref.hpp>   // for CellRef, RefNum
#include <string>                       // for string
#include "components/esm/defs.hpp"      // for Position
namespace ESM { struct ObjectState; }  // lines 15-15
---

apps/openmw/mwworld/cellref.cpp should add these lines:

apps/openmw/mwworld/cellref.cpp should remove these lines:
- #include <components/esm/objectstate.hpp>  // lines 1-1
- #include "components/esm/cellref.hpp"  // lines 5-5

The full include-list for apps/openmw/mwworld/cellref.cpp:
#include "cellref.hpp"
#include "components/esm/cellref.hpp"   // for CellRef, etc
---
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:50:37: error: no member named 'StringVector' in namespace 'MWWorld::Ogre'
        std::map<std::string, Ogre::StringVector> mMusicFiles;
                              ~~~~~~^

(apps/opencs/model/world/resourcesmanager.hpp has correct #includes/fwd-decls)

apps/opencs/model/world/resourcesmanager.cpp should add these lines:

apps/opencs/model/world/resourcesmanager.cpp should remove these lines:
- #include <utility>  // lines 4-4
- #include "apps/opencs/model/world/resources.hpp"  // lines 7-7
- #include "apps/opencs/model/world/universalid.hpp"  // lines 9-9

The full include-list for apps/opencs/model/world/resourcesmanager.cpp:
#include "resourcesmanager.hpp"
#include <stdexcept>                    // for logic_error
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/world/resources.hpp"  // for Resources
#include "apps/opencs/model/world/universalid.hpp"  // for UniversalId, etc
---
apps/openmw/mwsound/soundmanagerimp.hpp:69:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerPos;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^

apps/opencs/model/world/scriptcontext.hpp should add these lines:

apps/opencs/model/world/scriptcontext.hpp should remove these lines:
- #include <components/compiler/locals.hpp>  // lines 5-5
- #include <map>  // lines 6-6
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10

The full include-list for apps/opencs/model/world/scriptcontext.hpp:
#include <components/compiler/context.hpp>  // for Context
#include <string>                       // for string
#include <utility>                      // for pair
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 14-14
---

apps/opencs/model/world/scriptcontext.cpp should add these lines:

apps/opencs/model/world/scriptcontext.cpp should remove these lines:
- #include <QtCore>  // lines 6-6
- #include <QtCore>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <components/compiler/nullerrorhandler.hpp>  // lines 2-2
- #include <components/compiler/quickfileparser.hpp>  // lines 3-3
- #include <components/compiler/scanner.hpp>  // lines 4-4
- #include <iosfwd>  // lines 9-9
- #include <iosfwd>  // lines 10-10
- #include "apps/opencs/model/world/columns.hpp"  // lines 12-12
- #include "apps/opencs/model/world/columns.hpp"  // lines 13-13
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 14-14
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 15-15
- #include "apps/opencs/model/world/record.hpp"  // lines 16-16
- #include "apps/opencs/model/world/record.hpp"  // lines 17-17
- #include "apps/opencs/model/world/refidcollection.hpp"  // lines 18-18
- #include "apps/opencs/model/world/refidcollection.hpp"  // lines 19-19
- #include "components/compiler/locals.hpp"  // lines 20-20
- #include "components/compiler/locals.hpp"  // lines 21-21
- #include "components/esm/loadglob.hpp"  // lines 22-22
- #include "components/esm/loadglob.hpp"  // lines 23-23
- #include "components/esm/loadscpt.hpp"  // lines 24-24
- #include "components/esm/loadscpt.hpp"  // lines 25-25
- #include "components/esm/variant.hpp"  // lines 26-26
- #include "components/esm/variant.hpp"  // lines 27-27
- #include "data.hpp"  // lines 28-28

The full include-list for apps/opencs/model/world/scriptcontext.cpp:
#include "scriptcontext.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
---
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:70:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerDir;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:71:9: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        Ogre::Vector3 mListenerUp;
        ^~~~~~~~~~~~~
        ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:88:9: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        DecoderPtr getDecoder();
        ^~~~~~~~~~
        ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
In file included from apps/openmw/mwworld/class.cpp:8:
In file included from apps/openmw/mwworld/../mwgui/tooltips.hpp:17:
apps/openmw/mwworld/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:133:50: error: unknown type name 'DecoderPtr'; did you mean '::MWSound::DecoderPtr'?
        virtual MWBase::SoundPtr playTrack(const DecoderPtr& decoder, PlayType type);
                                                 ^~~~~~~~~~
                                                 ::MWSound::DecoderPtr
apps/openmw/mwsound/../mwbase/soundmanager.hpp:26:46: note: '::MWSound::DecoderPtr' declared here
    typedef boost::shared_ptr<Sound_Decoder> DecoderPtr;
                                             ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:146:58: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual MWBase::SoundPtr playManualSound3D(const Ogre::Vector3& initialPos, const std::string& soundId,
                                                         ^~~~~~~~~~~~~
                                                         ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^

apps/openmw/mwstate/charactermanager.hpp should add these lines:

apps/openmw/mwstate/charactermanager.hpp should remove these lines:
- #include <list>  // lines 6-6
- #include <string>  // lines 8-8

The full include-list for apps/openmw/mwstate/charactermanager.hpp:
#include <boost/filesystem/path.hpp>    // for path
#include <list>                         // for list, etc
#include <string>                       // for string
#include "character.hpp"                // for Character
---

apps/openmw/mwstate/charactermanager.cpp should add these lines:

apps/openmw/mwstate/charactermanager.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <boost/filesystem/operations.hpp>  // lines 3-3
- #include <boost/iterator/iterator_facade.hpp>  // lines 5-5
- #include "apps/openmw/mwstate/character.hpp"  // lines 14-14

The full include-list for apps/openmw/mwstate/charactermanager.cpp:
#include "charactermanager.hpp"
#include <stddef.h>                     // for NULL
#include <boost/filesystem/operations.hpp>  // for directory_iterator, etc
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <cctype>                       // for isalnum
#include <sstream>                      // for ostringstream, operator<<, etc
#include <stdexcept>                    // for logic_error
#include <vector>                       // for vector
#include "apps/openmw/mwstate/character.hpp"  // for Character, etc
---
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:37:31: error: 'system' is not a class, namespace, or enumeration
  BOOST_FILESYSTEM_DECL const system::error_category& codecvt_error_category();
                              ^
/usr/include/stdlib.h:717:12: note: 'system' declared here
extern int system (const char *__command) __wur;
           ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:46: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                             ^~~~~~~~~~~~~
                                             ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:72: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                       ^~~~~~~~~~~~~
                                                                       ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:76:14: error: no template named 'disable_if' in namespace 'Ogre::boost'; did you mean '::boost::disable_if'?
    typename boost::disable_if<boost::is_array<Container>, bool>::type
             ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:59:10: note: '::boost::disable_if' declared here
  struct disable_if : public disable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwsound/sound.cpp:4:
In file included from apps/openmw/mwsound/sound.hpp:8:
apps/openmw/mwsound/soundmanagerimp.hpp:185:98: error: no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?
        virtual void setListenerPosDir(const Ogre::Vector3 &pos, const Ogre::Vector3 &dir, const Ogre::Vector3 &up);
                                                                                                 ^~~~~~~~~~~~~
                                                                                                 ::Ogre::Vector3
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11: note: '::Ogre::Vector3' declared here
    class Vector3;
          ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:37:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals mLocals; // if we find the overhead of heaving a locals
            ^~~~~~~~
            Ogre::MWScript
./apps/openmw/mwrender/../mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12In file included from :
apps/openmw/mwsound/sound.cppIn file included from :./apps/openmw/mwrender/../mwworld/ptr.hpp4::
12apps/openmw/mwsound/sound.hpp:
:In file included from 20./apps/openmw/mwrender/../mwworld/livecellref.hpp::913::
 ./apps/openmw/mwrender/../mwworld/refdata.hpperror:: 46no type named 'Vector3' in namespace 'MWWorld::Ogre'; did you mean '::Ogre::Vector3'?:
13: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
        Ogre::Vector3 mPos;
        ^~~~~~~~~~~~~
            ESM::Position mPosition;        ::Ogre::Vector3

            ^~~~~~~~~~~~~
            Ogre::ESM::Position
apps/openmw/mwsound/../mwbase/soundmanager.hpp:14:11:./components/esm/defs.hpp :note36: :'::Ogre::Vector3' declared here8
: note: 'Ogre::ESM::Position' declared here
    class Vector3;
          ^
struct Position
       ^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:76:32: error: no template named 'is_array' in namespace 'Ogre::boost'; did you mean '::boost::is_array'?
    typename boost::disable_if<boost::is_array<Container>, bool>::type
                               ^~~~~~~
/usr/include/boost/type_traits/is_array.hpp:34:30: note: '::boost::is_array' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_array,T,false)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:65:33: error: no type named 'CellRef' in namespace 'ESM'
            RefData (const ESM::CellRef& cellRef);
                           ~~~~~^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/model/doc/../world/refcollection.hpp:12:
apps/opencs/model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:199:14: error: no template named 'disable_if' in namespace 'Ogre::boost'; did you mean '::boost::disable_if'?
    typename boost::disable_if<boost::is_array<Container>, void>::type
             ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:59:10: note: '::boost::disable_if' declared here
  struct disable_if : public disable_if_c<Cond::value, T> {};
         ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:67:33: error: no type named 'ObjectState' in namespace 'ESM'
            RefData (const ESM::ObjectState& objectState);
                           ~~~~~^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:25:
/usr/include/boost/filesystem/path_traits.hpp:199:32: error: no template named 'is_array' in namespace 'Ogre::boost'; did you mean '::boost::is_array'?
    typename boost::disable_if<boost::is_array<Container>, void>::type
                               ^~~~~~~
/usr/include/boost/type_traits/is_array.hpp:34:30: note: '::boost::is_array' declared here
BOOST_TT_AUX_BOOL_TRAIT_DEF1(is_array,T,false)
                             ^
/usr/include/boost/type_traits/detail/bool_trait_def.hpp:68:31: note: expanded from macro 'BOOST_TT_AUX_BOOL_TRAIT_DEF1'
template< typename T > struct trait \
                              ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
./apps/openmw/mwrender/../mwworld/refdata.hpp:75:30: error: no type named 'ObjectState' in namespace 'ESM'
            void write (ESM::ObjectState& objectState, const std::string& scriptId = "") const;
                        ~~~~~^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/model/doc/savingstages.cpp:27:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwmechanics/enchanting.hpp should add these lines:
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/enchanting.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 5-5
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 6-6
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwmechanics/enchanting.hpp:
#include <components/esm/effectlist.hpp>  // for EffectList
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"
---

apps/openmw/mwmechanics/enchanting.cpp should add these lines:
namespace ESM { struct GameSetting; }
namespace MWMechanics { class NpcStats; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwmechanics/enchanting.cpp should remove these lines:
- #include <stdlib.h>  // lines 2-2
- #include <algorithm>  // lines 3-3
- #include <typeinfo>  // lines 4-4
- #include <typeinfo>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwbase/environment.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/../mwworld/esmstore.hpp"  // lines 18-18
- #include "apps/openmw/mwmechanics/../mwworld/esmstore.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 22-22
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 24-24
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 25-25
- #include "components/esm/attr.hpp"  // lines 26-26
- #include "components/esm/attr.hpp"  // lines 27-27
- #include "components/esm/defs.hpp"  // lines 28-28
- #include "components/esm/defs.hpp"  // lines 29-29
- #include "components/esm/effectlist.hpp"  // lines 31-31
- #include "components/esm/loadarmo.hpp"  // lines 32-32
- #include "components/esm/loadarmo.hpp"  // lines 33-33
- #include "components/esm/loadbook.hpp"  // lines 34-34
- #include "components/esm/loadbook.hpp"  // lines 35-35
- #include "components/esm/loadclot.hpp"  // lines 36-36
- #include "components/esm/loadclot.hpp"  // lines 37-37
- #include "components/esm/loadcrea.hpp"  // lines 39-39
- #include "components/esm/loadench.hpp"  // lines 41-41
- #include "components/esm/loadgmst.hpp"  // lines 42-42
- #include "components/esm/loadgmst.hpp"  // lines 43-43
- #include "components/esm/loadmgef.hpp"  // lines 44-44
- #include "components/esm/loadmgef.hpp"  // lines 45-45
- #include "components/esm/loadmisc.hpp"  // lines 46-46
- #include "components/esm/loadmisc.hpp"  // lines 47-47
- #include "components/esm/loadskil.hpp"  // lines 49-49
- #include "components/esm/loadweap.hpp"  // lines 50-50
- #include "components/esm/loadweap.hpp"  // lines 51-51
- #include "components/misc/stringops.hpp"  // lines 52-52
- #include "components/misc/stringops.hpp"  // lines 53-53
- #include "npcstats.hpp"  // lines 56-56

The full include-list for apps/openmw/mwmechanics/enchanting.cpp:
#include "enchanting.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <vector>                       // for vector
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "apps/openmw/mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // for World
#include "components/esm/effectlist.hpp"  // for EffectList
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "creaturestats.hpp"            // for CreatureStats
#include "spellcasting.hpp"
namespace ESM { struct GameSetting; }
namespace MWMechanics { class NpcStats; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---
./apps/openmw/mwrender/../mwworld/refdata.hpp:92:40: error: no type named 'Script' in namespace 'ESM'
            void setLocals (const ESM::Script& script);
                                  ~~~~~^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
In file included from /usr/include/boost/filesystem/path.hpp:30:
/usr/include/boost/io/detail/quoted_manip.hpp:138:37: error: expected ';' after expression
          boost::io::ios_flags_saver ifs(is);
                                    ^
/usr/include/boost/io/detail/quoted_manip.hpp:138:22: error: no member named 'ios_flags_saver' in namespace 'Ogre::boost::io'
          boost::io::ios_flags_saver ifs(is);
          ~~~~~~~~~~~^
./apps/openmw/mwrender/../mwworld/refdata.hpp:110:13: error: use of undeclared identifier 'MWScript'; did you mean 'Ogre::MWScript'?
            MWScript::Locals& getLocals();
            ^~~~~~~~
            Ogre::MWScript
./apps/openmw/mwrender/../mwworld/../mwscript/locals.hpp:15:11: note: 'Ogre::MWScript' declared here
namespace MWScript
          ^
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:118:37: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            void setPosition (const ESM::Position& pos);
                                    ^~~~~~~~~~~~~
                                    Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^
In file included from In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
/usr/include/boost/filesystem/path.hpp:136:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/livecellref.hpp:13:
./apps/openmw/mwrender/../mwworld/refdata.hpp:119:19: error: no type named 'Position' in namespace 'ESM'; did you mean 'Ogre::ESM::Position'?
            const ESM::Position& getPosition();
                  ^~~~~~~~~~~~~
                  Ogre::ESM::Position
./components/esm/defs.hpp:36:8: note: 'Ogre::ESM::Position' declared here
struct Position
       ^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
/usr/include/boost/filesystem/path.hpp:137:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type> >::type* =0)
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:34:18: error: no type named 'CellRef' in namespace 'MWWorld'
        MWWorld::CellRef mRef;
        ~~~~~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwrender/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
/usr/include/boost/filesystem/path.hpp:197:16: error: no template named 'enable_if' in namespace 'Ogre::boost'; did you mean '::boost::enable_if'?
      typename boost::enable_if<path_traits::is_pathable<
               ^~~~~~~
/usr/include/boost/utility/enable_if.hpp:36:10: note: '::boost::enable_if' declared here
  struct enable_if : public enable_if_c<Cond::value, T> {};
         ^
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:39:54: error: no type named 'CellRef' in namespace 'ESM'
        LiveCellRefBase(std::string type, const ESM::CellRef &cref=ESM::CellRef());
                                                ~~~~~^
In file included from apps/openmw/mwrender/localmap.cpp:66:
In file included from apps/openmw/mwrender/renderingmanager.hpp:5:
In file included from /usr/include/boost/filesystem.hpp:16:
/usr/include/boost/filesystem/path.hpp:198:18: error: no template named 'decay' in namespace 'Ogre::boost'; did you mean '::boost::decay'?
        typename boost::decay<Source>::type>, path&>::type
                 ^~~~~~~
/usr/include/boost/type_traits/decay.hpp:25:12: note: '::boost::decay' declared here
    struct decay
           ^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:39:73: error: no member named 'CellRef' in namespace 'ESM'
        LiveCellRefBase(std::string type, const ESM::CellRef &cref=ESM::CellRef());
                                                                   ~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:70:67: error: no type named 'RefNum' in namespace 'ESM'; did you mean 'Ogre::ESM::RefNum'?
    inline bool operator== (const LiveCellRefBase& cellRef, const ESM::RefNum refNum)
                                                                  ^~~~~~~~~~~
                                                                  Ogre::ESM::RefNum
./components/esm/cellref.hpp:14:12: note: 'Ogre::ESM::RefNum' declared here
    struct RefNum
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
In file included from ./apps/openmw/mwrender/../mwworld/ptr.hpp:12:
./apps/openmw/mwrender/../mwworld/livecellref.hpp:84:32: error: no type named 'CellRef' in namespace 'ESM'
        LiveCellRef(const ESM::CellRef& cref, const X* b = NULL)
                          ~~~~~^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:89:15: error: no matching constructor for initialization of 'LiveCellRefBase'
            : LiveCellRefBase(typeid(X).name()), mBase(b)
              ^               ~~~~~~~~~~~~~~~~
./apps/openmw/mwrender/../mwworld/livecellref.hpp:27:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const char *' to 'const LiveCellRefBase' for 1st argument
    struct LiveCellRefBase
           ^
./apps/openmw/mwrender/../mwworld/livecellref.hpp:27:12: note: candidate constructor (the implicit default constructor) not viable: requires 0 arguments, but 1 was provided
./apps/openmw/mwrender/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/renderingmanager.cpp:18:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^

apps/openmw/mwmechanics/aifollow.hpp should add these lines:

apps/openmw/mwmechanics/aifollow.hpp should remove these lines:
- #include <components/esm/defs.hpp>  // lines 4-4
- #include "pathfinding.hpp"  // lines 10-10

The full include-list for apps/openmw/mwmechanics/aifollow.hpp:
#include <string>                       // for string
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiFollow; } }  // lines 22-22
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 14-14
---
In file included from apps/openmw/mwclass/weapon.cpp:14:
In file included from apps/openmw/mwclass/../mwrender/objects.hpp:12:
./apps/openmw/mwrender/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwmechanics/aifollow.cpp should add these lines:

apps/openmw/mwmechanics/aifollow.cpp should remove these lines:
- #include <list>  // lines 3-3
- #include <list>  // lines 4-4
- #include <memory>  // lines 6-6
- #include <vector>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "../mwbase/mechanicsmanager.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 23-23
- #include "apps/openmw/mwmechanics/pathfinding.hpp"  // lines 25-25
- #include "components/esm/defs.hpp"  // lines 27-27
- #include "components/esm/loadcell.hpp"  // lines 28-28
- #include "components/esm/loadcell.hpp"  // lines 29-29
- #include "components/esm/loadpgrd.hpp"  // lines 31-31

The full include-list for apps/openmw/mwmechanics/aifollow.cpp:
#include "aifollow.hpp"
#include <OgreMath.h>                   // for Degree, Math
#include <OgreVector3.h>                // for Vector3
#include <memory>                       // for auto_ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for distance
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "steering.hpp"                 // for zTurn
---
            LiveCellRef
./apps/openmw/mwrender/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/model/world/tablemimedata.hpp should add these lines:

apps/opencs/model/world/tablemimedata.hpp should remove these lines:
- #include <QMimeData>  // lines 6-6
- #include <string>  // lines 9-9

The full include-list for apps/opencs/model/world/tablemimedata.hpp:
#include <QMimeData>                    // for QMimeData
#include <QStringList>                  // for QStringList
#include <string>                       // for string
#include <vector>                       // for vector
#include "columnbase.hpp"               // for ColumnBase, etc
#include "universalid.hpp"              // for UniversalId, etc
namespace CSMDoc { class Document; }  // lines 18-18
---
In file included from apps/openmw/mwrender/renderingmanager.cpp:18:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:18:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/opencs/model/world/regionmap.hpp should add these lines:
#include "apps/opencs/model/world/data.hpp"  // for Data (ptr only), etc
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QVariant; }

apps/opencs/model/world/regionmap.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4
- #include <map>  // lines 6-6
- #include <string>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "cell.hpp"  // lines 11-11
- #include "cellcoordinates.hpp"  // lines 12-12
- #include "record.hpp"  // lines 13-13
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 22-22

The full include-list for apps/opencs/model/world/regionmap.hpp:
#include <QtCore>                       // for ItemDataRole::DisplayRole, etc
#include "apps/opencs/model/world/data.hpp"  // for Data (ptr only), etc
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QVariant; }
namespace CSMDoc { namespace CSMWorld { struct Cell; } }  // lines 16-16
namespace CSMDoc { namespace CSMWorld { template <typename ESXRecordT> struct Record; } }  // lines 17-17
---

apps/opencs/model/world/tablemimedata.cpp should add these lines:

apps/opencs/model/world/tablemimedata.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2
- #include <stdexcept>  // lines 5-5

The full include-list for apps/opencs/model/world/tablemimedata.cpp:
#include "tablemimedata.hpp"
#include <QCharRef>                     // for QString
#include <QDebug>                       // for qDebug, QDebug
#include <stdexcept>                    // for runtime_error
#include <string>                       // for allocator, basic_string, etc
#include "columnbase.hpp"               // for ColumnBase, etc
#include "universalid.hpp"              // for UniversalId, etc
---

apps/opencs/model/world/regionmap.cpp should add these lines:
namespace CSMDoc { class QModelIndex; }

apps/opencs/model/world/regionmap.cpp should remove these lines:
- #include <stdlib.h>  // lines 3-3
- #include <stdlib.h>  // lines 4-4
- #include <QColor>  // lines 5-5
- #include <QColor>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include <sstream>  // lines 8-8
- #include <sstream>  // lines 9-9
- #include <stdexcept>  // lines 10-10
- #include <stdexcept>  // lines 11-11
- #include "apps/opencs/model/world/cell.hpp"  // lines 13-13
- #include "apps/opencs/model/world/cell.hpp"  // lines 14-14
- #include "apps/opencs/model/world/cellcoordinates.hpp"  // lines 15-15
- #include "apps/opencs/model/world/cellcoordinates.hpp"  // lines 16-16
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 17-17
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 18-18
- #include "apps/opencs/model/world/record.hpp"  // lines 19-19
- #include "apps/opencs/model/world/record.hpp"  // lines 20-20
- #include "components/esm/loadregn.hpp"  // lines 21-21
- #include "components/esm/loadregn.hpp"  // lines 22-22
- #include "universalid.hpp"  // lines 25-25

The full include-list for apps/opencs/model/world/regionmap.cpp:
#include "regionmap.hpp"
#include "data.hpp"                     // for QModelIndex
namespace CSMDoc { class QModelIndex; }
---

apps/openmw/mwclass/creaturelevlist.hpp should add these lines:

apps/openmw/mwclass/creaturelevlist.hpp should remove these lines:
- #include "../mwworld/class.hpp"  // lines 6-6
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/class.hpp"  // lines 8-8
- namespace ESM { struct ObjectState; }  // lines 20-20
- namespace MWRender { class RenderingInterface; }  // lines 23-23
- namespace MWWorld { class Ptr; }  // lines 26-26

The full include-list for apps/openmw/mwclass/creaturelevlist.hpp:
#include <string>                       // for string
#include "apps/openmw/mwclass/../mwmechanics/../mwworld/class.hpp"
namespace ESM { struct ObjectState; }  // lines 18-18
namespace MWRender { class RenderingInterface; }  // lines 11-11
namespace MWWorld { class Ptr; }  // lines 14-14
---
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwclass/creaturelevlist.cpp should add these lines:

apps/openmw/mwclass/creaturelevlist.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include <components/esm/loadlevlist.hpp>  // lines 5-5
- #include <memory>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include <typeinfo>  // lines 9-9
- #include "../mwmechanics/levelledlist.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwmechanics/../mwbase/environment.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/manualref.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 28-28
- #include "components/esm/objectstate.hpp"  // lines 29-29
- #include "components/esm/objectstate.hpp"  // lines 30-30
- namespace MWRender { class RenderingInterface; }  // lines 40-40
- namespace MWWorld { class ESMStore; }  // lines 43-43

The full include-list for apps/openmw/mwclass/creaturelevlist.cpp:
#include "creaturelevlist.hpp"
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/creaturelevliststate.hpp>
#include <memory>                       // for auto_ptr
#include "../mwworld/customdata.hpp"    // for CustomData
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwworld/manualref.hpp"
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
namespace MWRender { class RenderingInterface; }  // lines 38-38
namespace MWWorld { class ESMStore; }  // lines 34-34
---
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/globalmap.cpp:6:
./components/esm/globalmap.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/globalmap.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:20:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:20:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/openmw/mwrender/globalmap.cpp:17:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/probe.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/opencs/model/world/cell.cpp:4:
apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/esmtool/record.hpp should add these lines:
#include <string>                       // for string

apps/esmtool/record.hpp should remove these lines:
- #include <stdint.h>  // lines 6-6
- #include <components/esm/records.hpp>  // lines 4-4
- #include "components/esm/esmcommon.hpp"  // lines 9-9
- #include "components/esm/loadacti.hpp"  // lines 11-11
- #include "components/esm/loadalch.hpp"  // lines 90-90
- #include "components/esm/loadappa.hpp"  // lines 91-91
- #include "components/esm/loadarmo.hpp"  // lines 15-15
- #include "components/esm/loadbody.hpp"  // lines 17-17
- #include "components/esm/loadbook.hpp"  // lines 19-19
- #include "components/esm/loadbsgn.hpp"  // lines 21-21
- #include "components/esm/loadcell.hpp"  // lines 92-92
- #include "components/esm/loadclas.hpp"  // lines 24-24
- #include "components/esm/loadclot.hpp"  // lines 26-26
- #include "components/esm/loadcont.hpp"  // lines 28-28
- #include "components/esm/loadcrea.hpp"  // lines 30-30
- #include "components/esm/loaddial.hpp"  // lines 32-32
- #include "components/esm/loaddoor.hpp"  // lines 34-34
- #include "components/esm/loadench.hpp"  // lines 36-36
- #include "components/esm/loadfact.hpp"  // lines 38-38
- #include "components/esm/loadglob.hpp"  // lines 40-40
- #include "components/esm/loadgmst.hpp"  // lines 42-42
- #include "components/esm/loadinfo.hpp"  // lines 44-44
- #include "components/esm/loadingr.hpp"  // lines 46-46
- #include "components/esm/loadland.hpp"  // lines 48-48
- #include "components/esm/loadlevlist.hpp"  // lines 50-50
- #include "components/esm/loadligh.hpp"  // lines 52-52
- #include "components/esm/loadlock.hpp"  // lines 54-54
- #include "components/esm/loadltex.hpp"  // lines 56-56
- #include "components/esm/loadmgef.hpp"  // lines 58-58
- #include "components/esm/loadmisc.hpp"  // lines 60-60
- #include "components/esm/loadnpc.hpp"  // lines 62-62
- #include "components/esm/loadpgrd.hpp"  // lines 64-64
- #include "components/esm/loadprob.hpp"  // lines 66-66
- #include "components/esm/loadrace.hpp"  // lines 68-68
- #include "components/esm/loadregn.hpp"  // lines 70-70
- #include "components/esm/loadrepa.hpp"  // lines 72-72
- #include "components/esm/loadscpt.hpp"  // lines 74-74
- #include "components/esm/loadskil.hpp"  // lines 76-76
- #include "components/esm/loadsndg.hpp"  // lines 78-78
- #include "components/esm/loadsoun.hpp"  // lines 80-80
- #include "components/esm/loadspel.hpp"  // lines 82-82
- #include "components/esm/loadsscr.hpp"  // lines 84-84
- #include "components/esm/loadstat.hpp"  // lines 86-86
- #include "components/esm/loadweap.hpp"  // lines 88-88

The full include-list for apps/esmtool/record.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "components/esm/esmcommon.hpp"  // for NAME
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbody.hpp"  // for BodyPart
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddial.hpp"  // for Dialogue
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadench.hpp"  // for Enchantment
#include "components/esm/loadfact.hpp"  // for Faction
#include "components/esm/loadglob.hpp"  // for Global
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadinfo.hpp"  // for DialInfo
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadltex.hpp"  // for LandTexture
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadpgrd.hpp"  // for Pathgrid
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadregn.hpp"  // for Region
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadskil.hpp"  // for Skill
#include "components/esm/loadsndg.hpp"  // for SoundGenerator
#include "components/esm/loadsoun.hpp"  // for Sound
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/loadsscr.hpp"  // for StartScript
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon
namespace ESM { class ESMReader; }  // lines 96-96
namespace ESM { class ESMWriter; }  // lines 97-97
namespace EsmTool { template <class T> class Record; }  // lines 102-102
---
apps/opencs/model/world/scope.cpp:4:1: error: use of undeclared identifier 'CSMWorld'
CSMWorld::Scope CSMWorld::getScopeFromId (const std::string& id)
^
apps/opencs/model/world/scope.cpp:4:17: error: use of undeclared identifier 'CSMWorld'
CSMWorld::Scope CSMWorld::getScopeFromId (const std::string& id)
                ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:20:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:20:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:20:
In file included from apps/openmw/mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/model/world/cell.cpp:16:5: error: use of undeclared identifier 'mName'
    mName = mId;
    ^
apps/opencs/model/world/cell.cpp:18:16: error: call to non-static member function without an object argument
    ESM::Cell::load (esm, false);
    ~~~~~~~~~~~^~~~
apps/opencs/model/world/cell.cpp:20:11: error: use of undeclared identifier 'mData'
    if (!(mData.mFlags & Interior))
          ^
apps/opencs/model/world/cell.cpp:20:26: error: use of undeclared identifier 'Interior'; did you mean 'ESM::Cell::Interior'?
    if (!(mData.mFlags & Interior))
                         ^~~~~~~~
                         ESM::Cell::Interior
./components/esm/loadcell.hpp:61:7: note: 'ESM::Cell::Interior' declared here
      Interior  = 0x01, // Interior cell
      ^
apps/opencs/model/world/cell.cpp:24:26: error: use of undeclared identifier 'mData'
        stream << "#" << mData.mX << " " << mData.mY;
                         ^
apps/opencs/model/world/cell.cpp:24:45: error: use of undeclared identifier 'mData'
        stream << "#" << mData.mX << " " << mData.mY;
                                            ^

apps/launcher/utils/textinputdialog.hpp should add these lines:

apps/launcher/utils/textinputdialog.hpp should remove these lines:
- #include "lineedit.hpp"  // lines 7-7

The full include-list for apps/launcher/utils/textinputdialog.hpp:
#include <QDialog>                      // for QDialog
#include <QtCore>                       // for QString, Q_OBJECT
class LineEdit;  // lines 9-9
class QDialogButtonBox;  // lines 10-10
class QWidget;  // lines 11-11
---

apps/launcher/utils/textinputdialog.cpp should add these lines:

apps/launcher/utils/textinputdialog.cpp should remove these lines:
- #include <QColorGroup>  // lines 3-3
- #include "apps/launcher/utils/lineedit.hpp"  // lines 11-11
- class QWidget;  // lines 16-16

The full include-list for apps/launcher/utils/textinputdialog.cpp:
#include "textinputdialog.hpp"
#include <QApplication>                 // for QApplication
#include <QColorGroup>                  // for QPalette, etc
#include <QDialogButtonBox>             // for QDialogButtonBox, etc
#include <QLabel>                       // for QLabel
#include <QPushButton>                  // for QPushButton
#include <QVBoxLayout>                  // for QVBoxLayout
#include <QValidator>                   // for QRegExpValidator
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit
class QWidget;  // lines 14-14
---
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/opencs/model/world/scope.cpp should add these lines:

apps/opencs/model/world/scope.cpp should remove these lines:
- #include <components/misc/stringops.hpp>  // lines 2-2

The full include-list for apps/opencs/model/world/scope.cpp:
---
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:36:
apps/opencs/model/tools/../doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:20:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^

apps/opencs/model/world/cell.hpp should add these lines:

apps/opencs/model/world/cell.hpp should remove these lines:
- #include <vector>  // lines 5-5
- namespace ESM { class ESMReader; }  // lines 10-10

The full include-list for apps/opencs/model/world/cell.hpp:
#include <string>                       // for string
namespace ESM { class ESMReader; }  // lines 8-8
---

apps/opencs/model/world/cell.cpp should add these lines:

apps/opencs/model/world/cell.cpp should remove these lines:
- #include <sstream>  // lines 2-2
- #include "components/esm/loadcell.hpp"  // lines 5-5
- #include "components/esm/loadcell.hpp"  // lines 6-6
- namespace ESM { class ESMReader; }  // lines 11-11

The full include-list for apps/opencs/model/world/cell.cpp:
#include "cell.hpp"
namespace ESM { class ESMReader; }  // lines 9-9
---
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwworld/class.hpp should add these lines:

apps/openmw/mwworld/class.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <map>  // lines 6-6
- #include <vector>  // lines 9-9
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 11-11

The full include-list for apps/openmw/mwworld/class.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "ptr.hpp"                      // for Ptr
namespace ESM { struct ObjectState; }  // lines 16-16
namespace ESM { struct Position; }  // lines 43-43
namespace MWGui { struct ToolTipInfo; }  // lines 38-38
namespace MWMechanics { class CreatureStats; }  // lines 31-31
namespace MWMechanics { class NpcStats; }  // lines 32-32
namespace MWMechanics { struct Movement; }  // lines 33-33
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 48-48
namespace MWWorld { class CellStore; }  // lines 49-49
namespace MWWorld { class ContainerStore; }  // lines 50-50
namespace MWWorld { class InventoryStore; }  // lines 51-51
namespace MWWorld { class PhysicsSystem; }  // lines 52-52
namespace Ogre { class Vector3; }  // lines 21-21
---

apps/esmtool/record.cpp should add these lines:

apps/esmtool/record.cpp should remove these lines:
- #include <list>  // lines 4-4
- #include <map>  // lines 6-6
- #include <vector>  // lines 9-9
- #include "components/esm/aipackage.hpp"  // lines 12-12
- #include "components/esm/defs.hpp"  // lines 14-14
- #include "components/esm/effectlist.hpp"  // lines 16-16
- #include "components/esm/spelllist.hpp"  // lines 18-18
- #include "components/esm/variant.hpp"  // lines 20-20

The full include-list for apps/esmtool/record.cpp:
#include "record.hpp"
#include <boost/format.hpp>             // for format, etc
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <list>                         // for _List_iterator, etc
#include <map>                          // for _Rb_tree_iterator, map, etc
#include <utility>                      // for pair
#include <vector>                       // for vector, vector<>::iterator, etc
#include "components/esm/aipackage.hpp"  // for AIPackage, AIData, etc
#include "components/esm/defs.hpp"      // for Position, etc
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/spelllist.hpp"  // for SpellList
#include "components/esm/variant.hpp"   // for operator<<
#include "labels.hpp"                   // for skillLabel, attributeLabel, etc
---
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/openmw/mwworld/class.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwworld/class.cpp should remove these lines:
- #include <stdexcept>  // lines 3-3
- #include "../mwbase/windowmanager.hpp"  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 10-10
- #include "actiontake.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/action.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/store.hpp"  // lines 15-15
- #include "components/esm/loadsoun.hpp"  // lines 17-17
- #include "failedaction.hpp"  // lines 18-18
- #include "nullaction.hpp"  // lines 19-19

The full include-list for apps/openmw/mwworld/class.cpp:
#include "class.hpp"
#include <OgreVector3.h>                // for Vector3
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef
#include "refdata.hpp"                  // for RefData
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
---
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
libs/openengine/bullet/physic.hppIn file included from apps/openmw/mwmechanics/pathfinding.cpp:11:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^

libs/openengine/bullet/BtOgre.cpp should add these lines:
namespace Ogre { class Entity; }

libs/openengine/bullet/BtOgre.cpp should remove these lines:
- #include <OgreSubEntity.h>  // lines 16-16
- #include <assert.h>  // lines 19-19
- #include <stddef.h>  // lines 21-21
- #include <string.h>  // lines 23-23
- #include <algorithm>  // lines 25-25
- #include <limits>  // lines 27-27
- #include <map>  // lines 29-29
- #include <string>  // lines 31-31
- #include <utility>  // lines 33-33
- #include <vector>  // lines 35-35
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 40-40
- #include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"  // lines 42-42
- #include "BulletCollision/CollisionShapes/btConvexHullShape.h"  // lines 44-44
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 46-46
- #include "BulletCollision/CollisionShapes/btSphereShape.h"  // lines 48-48
- #include "BulletCollision/CollisionShapes/btTriangleMesh.h"  // lines 50-50
- #include "LinearMath/btScalar.h"  // lines 52-52
- #include "LinearMath/btVector3.h"  // lines 54-54
- #include "OgreAxisAlignedBox.h"  // lines 56-56
- #include "OgreCamera.h"  // lines 58-58
- #include "OgreException.h"  // lines 60-60
- #include "OgreHardwareBuffer.h"  // lines 62-62
- #include "OgreHardwareBufferManager.h"  // lines 64-64
- #include "OgreHardwareIndexBuffer.h"  // lines 66-66
- #include "OgreHardwareVertexBuffer.h"  // lines 68-68
- #include "OgreLogManager.h"  // lines 70-70
- #include "OgreMath.h"  // lines 71-71
- #include "OgreMath.h"  // lines 72-72
- #include "OgreMatrix4.h"  // lines 74-74
- #include "OgreMesh.h"  // lines 76-76
- #include "OgrePrerequisites.h"  // lines 78-78
- #include "OgreQuaternion.h"  // lines 80-80
- #include "OgreRenderOperation.h"  // lines 82-82
- #include "OgreRenderable.h"  // lines 84-84
- #include "OgreSceneNode.h"  // lines 86-86
- #include "OgreSharedPtr.h"  // lines 88-88
- #include "OgreVector3.h"  // lines 90-90
- #include "OgreVertexIndexData.h"  // lines 92-92

The full include-list for libs/openengine/bullet/BtOgre.cpp:
#include <OgreSubMesh.h>                // for SubMesh
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <string.h>                     // for memcpy
#include <algorithm>                    // for max, min
#include <limits>                       // for numeric_limits
#include <map>                          // for _Rb_tree_iterator, etc
#include <string>                       // for operator+, basic_string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "BtOgreExtras.h"               // for DynamicLines, etc
#include "BtOgreGP.h"                   // for VertexIndexToShape, etc
#include "BulletCollision/CollisionShapes/btBoxShape.h"  // for btBoxShape
#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"
#include "BulletCollision/CollisionShapes/btConvexHullShape.h"
#include "BulletCollision/CollisionShapes/btCylinderShape.h"
#include "BulletCollision/CollisionShapes/btSphereShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "LinearMath/btScalar.h"        // for btScalar, etc
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreCamera.h"                 // for Camera
#include "OgreException.h"              // for OgreAssert
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreHardwareBufferManager.h"  // for HardwareBufferManager
#include "OgreHardwareIndexBuffer.h"    // for HardwareIndexBuffer, etc
#include "OgreHardwareVertexBuffer.h"   // for HardwareVertexBuffer, etc
#include "OgreLogManager.h"             // for LogManager
#include "OgreMatrix4.h"                // for Matrix4
#include "OgreMesh.h"                   // for Mesh, Mesh::IndexMap
#include "OgrePrerequisites.h"          // for Real, MeshPtr, String
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreRenderOperation.h"        // for RenderOperation, etc
#include "OgreRenderable.h"             // for Renderable
#include "OgreSceneNode.h"              // for SceneNode
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3, operator*, etc
#include "OgreVertexIndexData.h"        // for VertexData, IndexData
namespace Ogre { class Entity; }
---
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
In file included from apps/openmw/mwrender/renderingmanager.cpp:38:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:7:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/renderingmanager.cpp:38:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:38:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:13:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:7:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:38:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:38:
In file included from apps/openmw/mwrender/../mwbase/world.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:7:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/model/world/commands.cpp:8:
apps/opencs/model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/model/world/commands.cpp:11:11: error: no member named 'ModifyCommand' in namespace 'CSMWorld'
CSMWorld::ModifyCommand::ModifyCommand (QAbstractItemModel& model, const QModelIndex& index,
~~~~~~~~~~^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwmechanics/pickpocket.hpp should add these lines:

apps/openmw/mwmechanics/pickpocket.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 5-5

The full include-list for apps/openmw/mwmechanics/pickpocket.hpp:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
---

apps/openmw/mwmechanics/pickpocket.cpp should add these lines:
namespace MWMechanics { class NpcStats; }

apps/openmw/mwmechanics/pickpocket.cpp should remove these lines:
- #include <stdlib.h>  // lines 2-2
- #include <algorithm>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include "../mwbase/environment.hpp"  // lines 6-6
- #include "../mwbase/world.hpp"  // lines 7-7
- #include "../mwworld/esmstore.hpp"  // lines 9-9
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 13-13
- #include "components/esm/attr.hpp"  // lines 14-14
- #include "components/esm/attr.hpp"  // lines 15-15
- #include "components/esm/loadgmst.hpp"  // lines 16-16
- #include "components/esm/loadgmst.hpp"  // lines 17-17
- #include "components/esm/loadskil.hpp"  // lines 19-19
- #include "npcstats.hpp"  // lines 20-20

The full include-list for apps/openmw/mwmechanics/pickpocket.cpp:
#include "pickpocket.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include "../mwworld/class.hpp"         // for Class
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace MWMechanics { class NpcStats; }
---
apps/opencs/model/world/commands.cpp:18:16: error: no member named 'ModifyCommand' in namespace 'CSMWorld'
void CSMWorld::ModifyCommand::redo()
     ~~~~~~~~~~^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
apps/opencs/model/world/commands.cpp:24:16: error: no member named 'ModifyCommand' in namespace 'CSMWorld'
void CSMWorld::ModifyCommand::undo()
     ~~~~~~~~~~^
apps/opencs/model/world/commands.cpp:30:16: error: no member named 'CreateCommand' in namespace 'CSMWorld'
void CSMWorld::CreateCommand::applyModifications()
     ~~~~~~~~~~^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/opencs/model/world/commands.cpp:36:11: error: no member named 'CreateCommand' in namespace 'CSMWorld'
CSMWorld::CreateCommand::CreateCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
~~~~~~~~~~^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/opencs/model/world/commands.cpp:36:41: error: unknown type name 'IdTable'
CSMWorld::CreateCommand::CreateCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
                                        ^
apps/opencs/model/world/commands.cpp:42:16: error: no member named 'CreateCommand' in namespace 'CSMWorld'
void CSMWorld::CreateCommand::addValue (int column, const QVariant& value)
     ~~~~~~~~~~^
In file included from In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:42:
In file included from apps/opencs/model/tools/../doc/../world/refcollection.hpp:12:
apps/opencs/model/tools/../doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/tools/../doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/itemlevlist.cpp:8:
In file included from ./apps/openmw/mwclass/../mwworld/livecellref.hpp:13:
./apps/openmw/mwclass/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwclass/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:19:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
apps/opencs/model/world/commands.cpp:47:16: error: no member named 'CreateCommand' in namespace 'CSMWorld'
void CSMWorld::CreateCommand::setType (UniversalId::Type type)
     ~~~~~~~~~~^
In file included from apps/openmw/mwclass/itemlevlist.cpp:8:
./apps/openmw/mwclass/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwclass/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/itemlevlist.cpp:8:
./apps/openmw/mwclass/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:42:
apps/opencs/model/tools/../doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/tools/../doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
apps/opencs/model/world/commands.cpp:47:40: error: use of undeclared identifier 'UniversalId'; did you mean 'CSMWorld::UniversalId'?
void CSMWorld::CreateCommand::setType (UniversalId::Type type)
                                       ^~~~~~~~~~~
                                       CSMWorld::UniversalId
apps/opencs/model/world/idtablebase.hpp:18:11: note: 'CSMWorld::UniversalId' declared here
    class UniversalId;
          ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
apps/opencs/model/world/commands.cpp:52:16: error: no member named 'CreateCommand' in namespace 'CSMWorld'
void CSMWorld::CreateCommand::redo()
     ~~~~~~~~~~^
In file included from apps/openmw/mwclass/itemlevlist.cpp:10:
./apps/openmw/mwclass/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/itemlevlist.cpp:10:
./apps/openmw/mwclass/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwclass/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
./apps/openmw/mwclass/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/itemlevlist.cpp:10:
./apps/openmw/mwclass/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwclass/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/opencs/model/world/commands.cpp:58:16: error: no member named 'CreateCommand' in namespace 'CSMWorld'
void CSMWorld::CreateCommand::undo()
     ~~~~~~~~~~^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/model/tools/tools.cpp:12:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/model/world/commands.cpp:63:11: error: no member named 'RevertCommand' in namespace 'CSMWorld'
CSMWorld::RevertCommand::RevertCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
~~~~~~~~~~^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
apps/opencs/model/world/commands.cpp:63:41: error: unknown type name 'IdTable'
CSMWorld::RevertCommand::RevertCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
                                        ^

apps/openmw/mwsound/sound.hpp should add these lines:

apps/openmw/mwsound/sound.hpp should remove these lines:
- #include "soundmanagerimp.hpp"  // lines 8-8

The full include-list for apps/openmw/mwsound/sound.hpp:
#include <OgreVector3.h>                // for Vector3
#include <vector>                       // for vector
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"
---

apps/openmw/mwsound/sound.cpp should add these lines:

apps/openmw/mwsound/sound.cpp should remove these lines:
- #include <algorithm>  // lines 1-1
- #include <algorithm>  // lines 2-2

The full include-list for apps/openmw/mwsound/sound.cpp:
#include "sound.hpp"
---
In file included from apps/openmw/mwworld/worldimp.cpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/opencs/model/world/commands.cpp:71:11: error: no member named 'RevertCommand' in namespace 'CSMWorld'
CSMWorld::RevertCommand::~RevertCommand()
~~~~~~~~~~^
apps/opencs/model/world/commands.cpp:76:16: error: no member named 'RevertCommand' in namespace 'CSMWorld'
void CSMWorld::RevertCommand::redo()
     ~~~~~~~~~~^
In file included from apps/openmw/mwworld/worldimp.cpp:8:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/opencs/model/world/commands.cpp:93:16: error: no member named 'RevertCommand' in namespace 'CSMWorld'
void CSMWorld::RevertCommand::undo()
     ~~~~~~~~~~^
apps/opencs/model/world/cellcoordinates.cpp:28:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^
In file included from apps/openmw/mwclass/itemlevlist.cpp:10:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:48: error: 'MWWorld::LiveCellRefBase' is an incomplete type
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                               ^                                      ~~~~
apps/openmw/mwclass/itemlevlist.cpp:24:20: note: in instantiation of function template specialization 'MWWorld::Ptr::get<ESM::ItemLevList>' requested here
        return ptr.get<ESM::ItemLevList>()->mBase->mId;
                   ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/opencs/model/world/commands.cpp:98:11: error: no member named 'DeleteCommand' in namespace 'CSMWorld'
CSMWorld::DeleteCommand::DeleteCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
~~~~~~~~~~^
apps/opencs/model/world/commands.cpp:98:41: error: unknown type name 'IdTable'
CSMWorld::DeleteCommand::DeleteCommand (IdTable& model, const std::string& id, QUndoCommand* parent)
                                        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/opencs/model/world/collectionbase.hpp has correct #includes/fwd-decls)

apps/opencs/model/world/collectionbase.cpp should add these lines:

apps/opencs/model/world/collectionbase.cpp should remove these lines:
- #include "apps/opencs/model/world/columns.hpp"  // lines 5-5

The full include-list for apps/opencs/model/world/collectionbase.cpp:
#include "collectionbase.hpp"
#include <stdexcept>                    // for logic_error
#include "apps/opencs/model/world/columns.hpp"  // for ColumnId
#include "columnbase.hpp"               // for ColumnBase
---

apps/opencs/model/tools/factioncheck.hpp should add these lines:

apps/opencs/model/tools/factioncheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Faction; }  // lines 17-17

The full include-list for apps/opencs/model/tools/factioncheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Faction; }  // lines 8-8
---

apps/opencs/model/tools/factioncheck.cpp should add these lines:
#include <map>                          // for map, etc
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/factioncheck.cpp should remove these lines:
- #include <string>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "../world/universalid.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 11-11
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 13-13
- #include "apps/opencs/model/tools/../world/record.hpp"  // lines 15-15

The full include-list for apps/opencs/model/tools/factioncheck.cpp:
#include "factioncheck.hpp"
#include <components/esm/loadfact.hpp>  // for Faction, etc
#include <components/esm/loadskil.hpp>  // for Skill
#include <map>                          // for map, etc
#include <string>                       // for basic_string, allocator, etc
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
In file included from ./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/opencs/model/tools/spellcheck.hpp should add these lines:

apps/opencs/model/tools/spellcheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Spell; }  // lines 17-17

The full include-list for apps/opencs/model/tools/spellcheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Spell; }  // lines 8-8
---
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

apps/opencs/model/tools/spellcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/spellcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/spellcheck.cpp:
#include "spellcheck.hpp"
#include <components/esm/loadspel.hpp>  // for Spell, Spell::SPDTstruct
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/class.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^

apps/openmw/mwclass/itemlevlist.hpp should add these lines:

apps/openmw/mwclass/itemlevlist.hpp should remove these lines:
- #include <string>  // lines 5-5
- namespace MWWorld { class Ptr; }  // lines 12-12

The full include-list for apps/openmw/mwclass/itemlevlist.hpp:
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
namespace MWWorld { class Ptr; }  // lines 10-10
---

apps/openmw/mwclass/itemlevlist.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwclass/itemlevlist.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include <typeinfo>  // lines 6-6
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 9-9
- #include "apps/openmw/mwclass/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwclass/../mwworld/ptr.hpp"  // lines 11-11
- namespace MWWorld { class Class; }  // lines 17-17

The full include-list for apps/openmw/mwclass/itemlevlist.cpp:
#include "itemlevlist.hpp"
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/loadlevlist.hpp>  // for ItemLevList
#include <typeinfo>                     // for type_info
#include "apps/openmw/mwclass/../mwworld/livecellref.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
namespace MWWorld { class Class; }  // lines 15-15
---

(apps/opencs/model/world/cellcoordinates.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/cellcoordinates.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwworld/livecellref.hpp:13:
apps/openmw/mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwworld/action.cpp:3:
In file included from apps/openmw/mwworld/../mwbase/soundmanager.hpp:10:
apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
apps/openmw/mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwmechanics/spells.hpp:14:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/aiavoiddoor.cpp:20:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/openmw/mwrender/localmap.hpp should add these lines:
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox

apps/openmw/mwrender/localmap.hpp should remove these lines:
- #include <OgreColourValue.h>  // lines 4-4
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "GLX/../OgrePrerequisites.h"  // lines 24-24
- #include "OgrePlatform.h"  // lines 15-15
- #include "OgreQuaternion.h"  // lines 17-17
- #include "OgreSharedPtr.h"  // lines 19-19
- #include "OgreVector2.h"  // lines 21-21
- namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 37-37
- namespace Ogre { class Camera; }  // lines 42-42
- namespace Ogre { class Light; }  // lines 43-43
- namespace Ogre { class RenderTarget; }  // lines 44-44
- namespace Ogre { class SceneNode; }  // lines 45-45
- namespace Ogre { class Vector3; }  // lines 46-46

The full include-list for apps/openmw/mwrender/localmap.hpp:
#include <OgreResource.h>               // for ManualResourceLoader
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgrePlatform.h"               // for uint32
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector2.h"                // for Vector2
namespace ESM { class FogTexture; }  // lines 56-56
namespace MWRender { class RenderingManager; }  // lines 61-61
namespace MWWorld { class CellStore; }  // lines 51-51
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 35-35
namespace Ogre { class Camera; }  // lines 26-26
namespace Ogre { class Light; }  // lines 27-27
namespace Ogre { class RenderTarget; }  // lines 28-28
namespace Ogre { class SceneNode; }  // lines 29-29
namespace Ogre { class Vector3; }  // lines 30-30
---

apps/openmw/mwrender/localmap.cpp should add these lines:

apps/openmw/mwrender/localmap.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreHardwarePixelBuffer.h>  // lines 2-2
- #include <OgreSceneManager.h>  // lines 3-3
- #include <OgreSceneNode.h>  // lines 4-4
- #include <OgreTextureManager.h>  // lines 5-5
- #include <OgreViewport.h>  // lines 6-6
- #include <stddef.h>  // lines 9-9
- #include <string.h>  // lines 10-10
- #include <string.h>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <cmath>  // lines 14-14
- #include <cmath>  // lines 15-15
- #include <components/esm/fogstate.hpp>  // lines 7-7
- #include <memory>  // lines 16-16
- #include <memory>  // lines 17-17
- #include <stdexcept>  // lines 18-18
- #include <stdexcept>  // lines 19-19
- #include <utility>  // lines 20-20
- #include <utility>  // lines 21-21
- #include "../mwbase/environment.hpp"  // lines 23-23
- #include "../mwbase/world.hpp"  // lines 24-24
- #include "../mwworld/cellstore.hpp"  // lines 25-25
- #include "OgreAxisAlignedBox.h"  // lines 26-26
- #include "OgreAxisAlignedBox.h"  // lines 27-27
- #include "OgreColourValue.h"  // lines 28-28
- #include "OgreColourValue.h"  // lines 29-29
- #include "OgreCommon.h"  // lines 30-30
- #include "OgreCommon.h"  // lines 31-31
- #include "OgreDataStream.h"  // lines 32-32
- #include "OgreDataStream.h"  // lines 33-33
- #include "OgreFrustum.h"  // lines 34-34
- #include "OgreFrustum.h"  // lines 35-35
- #include "OgreHardwareBuffer.h"  // lines 36-36
- #include "OgreHardwareBuffer.h"  // lines 37-37
- #include "OgreImage.h"  // lines 38-38
- #include "OgreImage.h"  // lines 39-39
- #include "OgreLight.h"  // lines 40-40
- #include "OgreLight.h"  // lines 41-41
- #include "OgreMath.h"  // lines 42-42
- #include "OgreMath.h"  // lines 43-43
- #include "OgrePixelFormat.h"  // lines 44-44
- #include "OgrePixelFormat.h"  // lines 45-45
- #include "OgreRenderTarget.h"  // lines 46-46
- #include "OgreRenderTarget.h"  // lines 47-47
- #include "OgreResource.h"  // lines 48-48
- #include "OgreResource.h"  // lines 49-49
- #include "OgreResourceGroupManager.h"  // lines 50-50
- #include "OgreResourceGroupManager.h"  // lines 51-51
- #include "OgreStringConverter.h"  // lines 52-52
- #include "OgreStringConverter.h"  // lines 53-53
- #include "OgreTexture.h"  // lines 54-54
- #include "OgreTexture.h"  // lines 55-55
- #include "OgreVector3.h"  // lines 56-56
- #include "OgreVector3.h"  // lines 57-57
- #include "components/esm/loadcell.hpp"  // lines 58-58
- #include "components/esm/loadcell.hpp"  // lines 59-59
- #include "components/settings/settings.hpp"  // lines 60-60
- #include "components/settings/settings.hpp"  // lines 61-61
- #include "openengine/ogre/renderer.hpp"  // lines 63-63
- #include "openengine/ogre/renderer.hpp"  // lines 64-64
- #include "renderconst.hpp"  // lines 65-65
- #include "renderingmanager.hpp"  // lines 66-66

The full include-list for apps/openmw/mwrender/localmap.cpp:
#include "localmap.hpp"
#include <stddef.h>                     // for NULL
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwclass/book.hpp should add these lines:
#include "apps/openmw/mwclass/../mwrender/objects.hpp"  // for Ptr
namespace Ogre { namespace MWGui { struct ToolTipInfo; } }
namespace Ogre { namespace MWWorld { class Ptr; } }

apps/openmw/mwclass/book.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 10-10
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 12-12
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace Ogre { namespace MWRender { class RenderingInterface; } }  // lines 24-24
- namespace Ogre { namespace MWWorld { class Action; } }  // lines 27-27
- namespace Ogre { namespace MWWorld { class CellStore; } }  // lines 28-28
- namespace Ogre { namespace MWWorld { class PhysicsSystem; } }  // lines 29-29

The full include-list for apps/openmw/mwclass/book.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class, ToolTipInfo
#include "apps/openmw/mwclass/../mwrender/objects.hpp"  // for Ptr
namespace Ogre { namespace MWGui { struct ToolTipInfo; } }
namespace Ogre { namespace MWRender { class RenderingInterface; } }  // lines 22-22
namespace Ogre { namespace MWWorld { class Action; } }  // lines 16-16
namespace Ogre { namespace MWWorld { class CellStore; } }  // lines 17-17
namespace Ogre { namespace MWWorld { class PhysicsSystem; } }  // lines 18-18
namespace Ogre { namespace MWWorld { class Ptr; } }
---

apps/openmw/mwclass/book.cpp should add these lines:
namespace Ogre { namespace ESM { struct Book; } }
namespace Ogre { namespace MWWorld { class Ptr; } }

apps/openmw/mwclass/book.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 5-5
- #include <components/esm/loadbook.hpp>  // lines 3-3
- #include <typeinfo>  // lines 6-6
- #include <typeinfo>  // lines 7-7
- #include "../mwbase/environment.hpp"  // lines 9-9
- #include "../mwbase/world.hpp"  // lines 10-10
- #include "../mwgui/tooltips.hpp"  // lines 11-11
- #include "../mwworld/actionread.hpp"  // lines 14-14
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "../mwworld/failedaction.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 30-30
- #include "components/esm/loadnpc.hpp"  // lines 33-33
- #include "components/esm/loadsoun.hpp"  // lines 34-34
- #include "components/esm/loadsoun.hpp"  // lines 35-35

The full include-list for apps/openmw/mwclass/book.cpp:
#include "book.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwrender/objects.hpp"      // for Ptr, Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/cellstore.hpp"     // for Book
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for ToolTipInfo, etc
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Books, etc
namespace Ogre { namespace ESM { struct Book; } }
namespace Ogre { namespace MWWorld { class Ptr; } }
---

apps/opencs/model/doc/savingstages.hpp should add these lines:

apps/opencs/model/doc/savingstages.hpp should remove these lines:
- #include "../world/record.hpp"  // lines 4-4
- #include "../world/scope.hpp"  // lines 5-5
- #include "apps/opencs/model/doc/../world/../doc/stage.hpp"  // lines 6-6
- #include "apps/opencs/model/doc/../world/../doc/stage.hpp"  // lines 7-7
- #include "savingstate.hpp"  // lines 8-8
- #include "stage.hpp"  // lines 9-9
- namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 12-12
- namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 14-14
- namespace CSMDoc { namespace CSMWorld { class InfoCollection; } }  // lines 26-26
- namespace CSMDoc { namespace ESM { struct Dialogue; } }  // lines 20-20

The full include-list for apps/opencs/model/doc/savingstages.hpp:
---

apps/opencs/model/doc/savingstages.cpp should add these lines:

apps/opencs/model/doc/savingstages.cpp should remove these lines:
- #include <stdint.h>  // lines 9-9
- #include <stdint.h>  // lines 10-10
- #include <QUndoStack>  // lines 11-11
- #include <boost/filesystem/fstream.hpp>  // lines 2-2
- #include <boost/filesystem/fstream.hpp>  // lines 3-3
- #include <boost/filesystem/operations.hpp>  // lines 4-4
- #include <boost/filesystem/operations.hpp>  // lines 5-5
- #include <boost/filesystem/path.hpp>  // lines 6-6
- #include <boost/filesystem/path.hpp>  // lines 7-7
- #include <components/esm/loaddial.hpp>  // lines 8-8
- #include <fstream>  // lines 12-12
- #include <map>  // lines 13-13
- #include <map>  // lines 14-14
- #include <stdexcept>  // lines 15-15
- #include <stdexcept>  // lines 16-16
- #include <string>  // lines 17-17
- #include <string>  // lines 18-18
- #include <utility>  // lines 19-19
- #include <utility>  // lines 20-20
- #include <vector>  // lines 21-21
- #include <vector>  // lines 22-22
- #include "../world/infocollection.hpp"  // lines 24-24
- #include "apps/opencs/model/doc/../world/cell.hpp"  // lines 25-25
- #include "apps/opencs/model/doc/../world/cell.hpp"  // lines 26-26
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 27-27
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 28-28
- #include "apps/opencs/model/doc/../world/idcollection.hpp"  // lines 29-29
- #include "apps/opencs/model/doc/../world/idcollection.hpp"  // lines 30-30
- #include "apps/opencs/model/doc/../world/info.hpp"  // lines 31-31
- #include "apps/opencs/model/doc/../world/info.hpp"  // lines 32-32
- #include "apps/opencs/model/doc/../world/pathgrid.hpp"  // lines 33-33
- #include "apps/opencs/model/doc/../world/pathgrid.hpp"  // lines 34-34
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 35-35
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 36-36
- #include "apps/opencs/model/doc/../world/ref.hpp"  // lines 37-37
- #include "apps/opencs/model/doc/../world/ref.hpp"  // lines 38-38
- #include "apps/opencs/model/doc/../world/refcollection.hpp"  // lines 39-39
- #include "apps/opencs/model/doc/../world/refcollection.hpp"  // lines 40-40
- #include "apps/opencs/model/doc/../world/refidcollection.hpp"  // lines 41-41
- #include "apps/opencs/model/doc/../world/refidcollection.hpp"  // lines 42-42
- #include "apps/opencs/model/doc/../world/subcellcollection.hpp"  // lines 43-43
- #include "apps/opencs/model/doc/../world/subcellcollection.hpp"  // lines 44-44
- #include "components/esm/esmwriter.hpp"  // lines 45-45
- #include "components/esm/esmwriter.hpp"  // lines 46-46
- #include "components/esm/loadcell.hpp"  // lines 47-47
- #include "components/esm/loadcell.hpp"  // lines 48-48
- #include "components/esm/loadinfo.hpp"  // lines 49-49
- #include "components/esm/loadinfo.hpp"  // lines 50-50
- #include "components/esm/loadpgrd.hpp"  // lines 51-51
- #include "components/esm/loadpgrd.hpp"  // lines 52-52
- #include "document.hpp"  // lines 53-53
- #include "savingstate.hpp"  // lines 55-55
- namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 58-58
- namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 60-60

The full include-list for apps/opencs/model/doc/savingstages.cpp:
#include "savingstages.hpp"
---

apps/openmw/mwclass/probe.hpp should add these lines:

apps/openmw/mwclass/probe.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/probe.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---

apps/openmw/mwclass/probe.cpp should add these lines:
namespace ESM { struct Probe; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/probe.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadprob.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwworld/actionequip.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "../mwworld/inventorystore.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 22-22
- #include "components/esm/loadnpc.hpp"  // lines 24-24
- namespace MWWorld { class Class; }  // lines 30-30

The full include-list for apps/openmw/mwclass/probe.cpp:
#include "probe.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Probes
namespace ESM { struct Probe; }
namespace MWWorld { class Class; }  // lines 28-28
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/opencs/model/world/data.cpp:14:
./apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/doc/filedialog.cpp:6:
./components/contentselector/view/contentselector.hpp:8:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^
In file included from apps/opencs/model/world/data.cpp:20:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:20:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:20:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:20:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:20:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:20:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/launcher/datafilespage.cpp:1:
./components/config/gamesettings.hpp:20:23: error: use of undeclared identifier 'boost'
  typedef std::vector<boost::filesystem::path> PathContainer;
                      ^
In file included from apps/opencs/view/world/infocreator.cpp:11:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^

apps/openmw/mwworld/action.hpp should add these lines:

apps/openmw/mwworld/action.hpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwworld/action.hpp:
#include <string>                       // for string
#include "ptr.hpp"                      // for Ptr
---

apps/openmw/mwworld/action.cpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwworld/action.cpp should remove these lines:

The full include-list for apps/openmw/mwworld/action.cpp:
#include "action.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/soundmanager.hpp"   // for SoundManager, etc
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
---

apps/opencs/model/world/commands.hpp should add these lines:

apps/opencs/model/world/commands.hpp should remove these lines:
- #include <QUndoCommand>  // lines 4-4
- #include <QVariant>  // lines 5-5
- #include <map>  // lines 6-6
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "record.hpp"  // lines 10-10
- #include "universalid.hpp"  // lines 11-11
- class QAbstractItemModel;  // lines 13-13
- class QModelIndex;  // lines 14-14

The full include-list for apps/opencs/model/world/commands.hpp:
---

apps/opencs/model/world/commands.cpp should add these lines:

apps/opencs/model/world/commands.cpp should remove these lines:
- #include <QtCore>  // lines 2-2
- #include <utility>  // lines 3-3
- #include "apps/opencs/model/world/columns.hpp"  // lines 5-5
- #include "apps/opencs/model/world/record.hpp"  // lines 6-6
- #include "apps/opencs/model/world/universalid.hpp"  // lines 7-7
- #include "idtable.hpp"  // lines 9-9

The full include-list for apps/opencs/model/world/commands.cpp:
#include "commands.hpp"
---
In file included from apps/opencs/model/world/data.cpp:34:
./apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/world/data.cpp:36:
./apps/opencs/model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/world/data.cpp:38:
In file included from ./apps/opencs/model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/openmw/mwrender/globalmap.cpp:54:15: error: incomplete type 'Ogre::TextureManager' named in nested name specifier
        Ogre::TextureManager::getSingleton().remove(mOverlayTexture->getName());
        ~~~~~~^~~~~~~~~~~~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:285:11: note: forward declaration of 'Ogre::TextureManager'
    class TextureManager;
          ^
apps/openmw/mwrender/globalmap.cpp:160:21: error: incomplete type 'Ogre::TextureManager' named in nested name specifier
        tex = Ogre::TextureManager::getSingleton ().createManual ("GlobalMap.png", Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,
              ~~~~~~^~~~~~~~~~~~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:285:11: note: forward declaration of 'Ogre::TextureManager'
    class TextureManager;
          ^
apps/openmw/mwrender/globalmap.cpp:166:33: error: incomplete type 'Ogre::TextureManager' named in nested name specifier
        mOverlayTexture = Ogre::TextureManager::getSingleton().createManual("GlobalMapOverlay", Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,
                          ~~~~~~^~~~~~~~~~~~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:285:11: note: forward declaration of 'Ogre::TextureManager'
    class TextureManager;
          ^
apps/openmw/mwrender/globalmap.cpp:198:50: error: incomplete type 'Ogre::TextureManager' named in nested name specifier
        Ogre::TexturePtr localMapTexture = Ogre::TextureManager::getSingleton().getByName("Cell_"
                                           ~~~~~~^~~~~~~~~~~~~~~~
/usr/include/OGRE/GLX/../OgrePrerequisites.h:285:11: note: forward declaration of 'Ogre::TextureManager'
    class TextureManager;
          ^
apps/openmw/mwrender/globalmap.cpp:223:54: error: calling 'getColourAt' with incomplete return type 'Ogre::ColourValue'
                    mOverlayImage.setColourAt(backup.getColourAt(x, y, 0), originX+x, originY+y, 0);
                                              ~~~~~~~^~~~~~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreImage.h:433:21: note: 'getColourAt' declared here
        ColourValue getColourAt(size_t x, size_t y, size_t z) const;
                    ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:137:11: note: forward declaration of 'Ogre::ColourValue'
    class ColourValue;
          ^
apps/openmw/mwrender/globalmap.cpp:248:12: error: member access into incomplete type 'ESM::GlobalMap'
        map.mBounds.mMinX = mMinX;
           ^
apps/openmw/mwrender/globalmap.hpp:28:11: note: forward declaration of 'ESM::GlobalMap'
    class GlobalMap;
          ^
apps/openmw/mwrender/globalmap.cpp:249:12: error: member access into incomplete type 'ESM::GlobalMap'
        map.mBounds.mMaxX = mMaxX;
           ^
apps/openmw/mwrender/globalmap.hpp:28:11: note: forward declaration of 'ESM::GlobalMap'
    class GlobalMap;
          ^
apps/openmw/mwrender/globalmap.cpp:250:12: error: member access into incomplete type 'ESM::GlobalMap'
        map.mBounds.mMinY = mMinY;
           ^
apps/openmw/mwrender/globalmap.hpp:28:11: note: forward declaration of 'ESM::GlobalMap'
    class GlobalMap;
          ^
apps/openmw/mwrender/globalmap.cpp:251:12: error: member access into incomplete type 'ESM::GlobalMap'
        map.mBounds.mMaxY = mMaxY;
           ^
apps/openmw/mwrender/globalmap.hpp:28:11: note: forward declaration of 'ESM::GlobalMap'
    class GlobalMap;
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/genericcreator.cpp:13:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^

apps/opencs/view/doc/globaldebugprofilemenu.hpp should add these lines:

apps/opencs/view/doc/globaldebugprofilemenu.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 10-10
- class QAction;  // lines 14-14
- class QWidget;  // lines 17-17

The full include-list for apps/opencs/view/doc/globaldebugprofilemenu.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include <QMenu>                        // for QMenu
#include <string>                       // for string
class QAction;  // lines 11-11
class QActionGroup;  // lines 15-15
class QModelIndex;  // lines 16-16
class QWidget;  // lines 12-12
namespace CSMWorld { class IdTable; }  // lines 21-21
---

apps/opencs/view/doc/globaldebugprofilemenu.cpp should add these lines:

apps/opencs/view/doc/globaldebugprofilemenu.cpp should remove these lines:
- #include <QAction>  // lines 3-3
- #include <QtCore>  // lines 6-6
- #include "apps/opencs/view/doc/../../model/world/columns.hpp"  // lines 13-13
- class QWidget;  // lines 18-18

The full include-list for apps/opencs/view/doc/globaldebugprofilemenu.cpp:
#include "globaldebugprofilemenu.hpp"
#include <QAction>                      // for QAction
#include <QActionGroup>                 // for QActionGroup
#include <QtCore>                       // for QString, QVariant, etc
#include <algorithm>                    // for sort
#include <vector>                       // for vector, etc
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../../model/world/record.hpp"  // for RecordBase, etc
#include "apps/opencs/view/doc/../../model/world/columns.hpp"
class QWidget;  // lines 16-16
---

apps/openmw/mwmechanics/aiavoiddoor.cpp should add these lines:

apps/openmw/mwmechanics/aiavoiddoor.cpp should remove these lines:
- #include <OgreMath.h>  // lines 1-1
- #include <cmath>  // lines 2-2
- #include <vector>  // lines 3-3
- #include <vector>  // lines 4-4
- #include "../mwbase/environment.hpp"  // lines 6-6
- #include "../mwworld/class.hpp"  // lines 7-7
- #include "OgreVector3.h"  // lines 8-8
- #include "OgreVector3.h"  // lines 9-9
- #include "apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp"  // lines 10-10
- #include "apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 14-14
- #include "apps/openmw/mwmechanics/aipackage.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 16-16
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 17-17
- #include "components/esm/defs.hpp"  // lines 18-18
- #include "components/esm/defs.hpp"  // lines 19-19
- #include "creaturestats.hpp"  // lines 20-20
- #include "movement.hpp"  // lines 21-21
- #include "steering.hpp"  // lines 22-22

The full include-list for apps/openmw/mwmechanics/aiavoiddoor.cpp:
---
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:8:
In file included from apps/opencs/model/world/pathgrid.hpp:8:
apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:119:47: error: implicit instantiation of undefined template 'CSMWorld::Record<CSMWorld::Cell>'
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
apps/opencs/model/world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<CSMWorld::Cell, CSMWorld::IdAccessor<CSMWorld::Cell> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/world/pathgrid.cpp:28:45: note: in instantiation of template class 'CSMWorld::IdCollection<CSMWorld::Cell, CSMWorld::IdAccessor<CSMWorld::Cell> >' requested here
    if (!mId.empty() && mId[0]!='#' && cells.searchId (mId)==-1)
                                            ^
apps/opencs/model/world/columnbase.hpp:13:39: note: template is declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:121:47: error: implicit instantiation of undefined template 'CSMWorld::Record<CSMWorld::Cell>'
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                                              ^
apps/opencs/model/world/columnbase.hpp:13:39: note: template is declared here
template <typename ESXRecordT> struct Record;
                                      ^

apps/openmw/mwclass/weapon.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/weapon.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/weapon.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---

apps/openmw/mwclass/weapon.cpp should add these lines:
namespace MWWorld { class Class; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwclass/weapon.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <map>  // lines 7-7
- #include <map>  // lines 8-8
- #include <typeinfo>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include "../mwworld/actionequip.hpp"  // lines 16-16
- #include "../mwworld/cellstore.hpp"  // lines 17-17
- #include "../mwworld/esmstore.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 31-31
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 33-33
- #include "components/esm/loadgmst.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 35-35
- #include "components/esm/loadnpc.hpp"  // lines 37-37
- #include "components/esm/loadskil.hpp"  // lines 39-39

The full include-list for apps/openmw/mwclass/weapon.cpp:
#include "weapon.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadweap.hpp>  // for Weapon, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace MWWorld { class Class; }
namespace MWWorld { class ESMStore; }
---
In file included from apps/opencs/model/world/refcollection.cpp:8:
./apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/refcollection.cpp:9:
apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/model/world/refcollection.cpp:15:
apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/world/refcollection.cpp:16:
apps/opencs/model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
apps/opencs/model/world/refcollection.cpp:28:5: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
    Record<Cell> cell = mCells.getRecord (cellIndex);
    ^~~~~~
    ::CSMWorld::Record
apps/opencs/model/world/record.hpp:36:12: note: '::CSMWorld::Record' declared here
    struct Record : public RecordBase
           ^
apps/opencs/model/world/record.hpp:38:20: error: field has incomplete type 'CSMDoc::CSMWorld::Cell'
        ESXRecordT mBase;
                   ^
apps/opencs/model/world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<CSMDoc::CSMWorld::Cell>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
apps/opencs/model/world/refcollection.cpp:28:31: note: in instantiation of template class 'CSMWorld::Collection<CSMDoc::CSMWorld::Cell, CSMWorld::IdAccessor<CSMDoc::CSMWorld::Cell> >' requested here
    Record<Cell> cell = mCells.getRecord (cellIndex);
                              ^
apps/opencs/model/world/refcollection.hpp:30:12: note: forward declaration of 'CSMDoc::CSMWorld::Cell'
    struct Cell;
           ^
In file included from apps/opencs/model/world/refcollection.cpp:14:
apps/opencs/model/world/record.hpp:39:20: error: field has incomplete type 'CSMDoc::CSMWorld::Cell'
        ESXRecordT mModified;
                   ^
apps/opencs/model/world/refcollection.hpp:30:12: note: forward declaration of 'CSMDoc::CSMWorld::Cell'
    struct Cell;
           ^
In file included from apps/opencs/model/world/refcollection.cpp:8:
apps/opencs/model/world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<CSMDoc::CSMWorld::Cell> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
apps/opencs/model/world/refcollection.cpp:28:31: note: in instantiation of template class 'CSMWorld::Collection<CSMDoc::CSMWorld::Cell, CSMWorld::IdAccessor<CSMDoc::CSMWorld::Cell> >' requested here
    Record<Cell> cell = mCells.getRecord (cellIndex);
                              ^
apps/opencs/model/world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^
apps/opencs/model/world/refcollection.cpp:36:12: error: no member named 'Cell' in namespace 'CSMDoc::ESM'; did you mean simply 'Cell'?
    while (ESM::Cell::getNextRef (reader, ref, deleted))
           ^~~~~~~~~
           Cell
apps/opencs/model/world/refcollection.hpp:30:12: note: 'Cell' declared here
    struct Cell;
           ^
apps/opencs/model/world/refcollection.cpp:36:17: error: incomplete type 'CSMDoc::CSMWorld::Cell' named in nested name specifier
    while (ESM::Cell::getNextRef (reader, ref, deleted))
                ^~~~~~
apps/opencs/model/world/refcollection.hpp:30:12: note: forward declaration of 'CSMDoc::CSMWorld::Cell'
    struct Cell;
           ^
apps/opencs/model/world/refcollection.cpp:38:26: error: member access into incomplete type 'CSMDoc::CSMWorld::Cell'
        ref.mCell = cell2.mId;
                         ^
apps/opencs/model/world/refcollection.hpp:30:12: note: forward declaration of 'CSMDoc::CSMWorld::Cell'
    struct Cell;
           ^
apps/opencs/model/world/refcollection.cpp:42:67: error: no matching member function for call to 'find'
        std::map<ESM::RefNum, std::string>::iterator iter = cache.find (ref.mRefNum);
                                                            ~~~~~~^~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:859:7: note: candidate function not viable: no known conversion from 'ESM::RefNum' to 'const key_type' (aka 'const CSMDoc::ESM::RefNum') for 1st argument
      find(const key_type& __x)
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:874:7: note: candidate function not viable: no known conversion from 'ESM::RefNum' to 'const key_type' (aka 'const CSMDoc::ESM::RefNum') for 1st argument
      find(const key_type& __x) const
      ^
In file included from apps/opencs/model/world/refcollection.cpp:2:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/sstream:38:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/istream:38:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ios:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:101:11: error: field has incomplete type 'const CSMDoc::ESM::RefNum'
      _T1 first;                 /// @c first is a copy of the first object
          ^
apps/opencs/model/world/refcollection.cpp:46:21: note: in instantiation of template class 'std::pair<const CSMDoc::ESM::RefNum, std::basic_string<char> >' requested here
            if (iter==cache.end())
                    ^
apps/opencs/model/world/refcollection.hpp:25:8: note: forward declaration of 'CSMDoc::ESM::RefNum'
struct RefNum;
       ^
apps/opencs/model/world/refcollection.cpp:48:53: error: incomplete type 'CSMDoc::CSMWorld::UniversalId' named in nested name specifier
                CSMWorld::UniversalId id (CSMWorld::UniversalId::Type_Cell,
                                          ~~~~~~~~~~^~~~~~~~~~~~~
apps/opencs/model/world/refcollection.hpp:31:12: note: forward declaration of 'CSMDoc::CSMWorld::UniversalId'
    struct UniversalId;
           ^
apps/opencs/model/world/refcollection.cpp:48:39: error: variable has incomplete type 'CSMWorld::UniversalId'
                CSMWorld::UniversalId id (CSMWorld::UniversalId::Type_Cell,
                                      ^
apps/opencs/model/world/refcollection.hpp:31:12: note: forward declaration of 'CSMDoc::CSMWorld::UniversalId'
    struct UniversalId;
           ^
apps/opencs/model/world/refcollection.cpp:58:13: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
            Record<CellRef> record = getRecord (index);
            ^~~~~~
            ::CSMWorld::Record
apps/opencs/model/world/record.hpp:36:12: note: '::CSMWorld::Record' declared here
    struct Record : public RecordBase
           ^
apps/opencs/model/world/refcollection.cpp:60:32: error: use of undeclared identifier 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
            if (record.mState==RecordBase::State_BaseOnly)
                               ^~~~~~~~~~
                               ::CSMWorld::RecordBase
apps/opencs/model/world/record.hpp:8:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase
           ^
apps/opencs/model/world/refcollection.cpp:67:33: error: use of undeclared identifier 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~
                                ::CSMWorld::RecordBase
apps/opencs/model/world/record.hpp:8:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/openmw/mwstate/character.hpp should add these lines:

apps/openmw/mwstate/character.hpp should remove these lines:
- #include <time.h>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 11-11

The full include-list for apps/openmw/mwstate/character.hpp:
#include <time.h>                       // for time_t
#include <boost/filesystem/path.hpp>    // for path
#include <components/esm/savedgame.hpp>  // for SavedGame
#include <string>                       // for string
#include <vector>                       // for vector, etc
---

apps/openmw/mwstate/character.cpp should add these lines:
#include <ostream>                      // for ostringstream, operator<<, etc

apps/openmw/mwstate/character.cpp should remove these lines:
- #include <ctype.h>  // lines 10-10
- #include <boost/filesystem/operations.hpp>  // lines 3-3
- #include <boost/iterator/iterator_facade.hpp>  // lines 5-5
- #include <ctime>  // lines 12-12
- #include "components/esm/esmcommon.hpp"  // lines 17-17
- #include "components/esm/loadtes3.hpp"  // lines 19-19
- #include "components/esm/savedgame.hpp"  // lines 21-21

The full include-list for apps/openmw/mwstate/character.cpp:
#include "character.hpp"
#include <ctype.h>                      // for isalnum
#include <algorithm>                    // for sort
#include <boost/filesystem/operations.hpp>  // for directory_iterator, etc
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <components/esm/defs.hpp>      // for RecNameInts::REC_SAVE
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/misc/stringops.hpp>  // for StringUtils
#include <ostream>                      // for ostringstream, operator<<, etc
#include <stdexcept>                    // for logic_error
#include "components/esm/esmcommon.hpp"  // for NAME_T
#include "components/esm/loadtes3.hpp"  // for Header, etc
#include "components/esm/savedgame.hpp"  // for SavedGame
---
In file included from apps/launcher/datafilespage.cpp:3:
./components/contentselector/view/contentselector.hpp:8:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^
In file included from apps/launcher/maindialog.cpp:18:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/launcher/maindialog.cpp:1:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/maindialog.cpp:1:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/launcher/maindialog.cpp:18:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/maindialog.cpp:18:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/maindialog.cpp:18:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/launcher/maindialog.cpp:18:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/maindialog.cpp:18:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/maindialog.cpp:22:
apps/launcher/datafilespage.hpp:4:10: fatal error: 'ui_datafilespage.h' file not found
#include "ui_datafilespage.h"
         ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"
Aborted (core dumped)
In file included from apps/openmw/mwrender/npcanimation.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/openmw/mwrender/npcanimation.cpp:9:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/opencs/model/world/pathgrid.hpp should add these lines:

apps/opencs/model/world/pathgrid.hpp should remove these lines:
- #include <vector>  // lines 6-6
- #include "cell.hpp"  // lines 8-8

The full include-list for apps/opencs/model/world/pathgrid.hpp:
#include <components/esm/loadpgrd.hpp>  // for Pathgrid
#include <string>                       // for string
#include "idcollection.hpp"             // for IdCollection
namespace CSMWorld { struct Cell; }  // lines 12-12
namespace ESM { class ESMReader; }  // lines 15-15
---

apps/openmw/mwrender/renderingmanager.hpp should add these lines:
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Actors; } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } } } }

apps/openmw/mwrender/renderingmanager.hpp should remove these lines:
- #include <boost/filesystem.hpp>  // lines 5-5
- #include <boost/filesystem/path.hpp>  // lines 6-6
- #include "OgreAxisAlignedBox.h"  // lines 10-10
- #include "OgreColourValue.h"  // lines 11-11
- #include "OgreVector2.h"  // lines 12-12
- #include "OgreVector4.h"  // lines 13-13
- #include "actors.hpp"  // lines 14-14
- #include "camera.hpp"  // lines 15-15
- #include "debugging.hpp"  // lines 16-16
- #include "openengine/ogre/renderer.hpp"  // lines 19-19
- #include "sky.hpp"  // lines 21-21

The full include-list for apps/openmw/mwrender/renderingmanager.hpp:
#include <OgreRenderTargetListener.h>   // for RenderTargetListener
#include <components/settings/settings.hpp>  // for CategorySettingVector
#include <string>                       // for string
#include "objects.hpp"                  // for Objects
#include "occlusionquery.hpp"           // for OcclusionQuery
#include "renderinginterface.hpp"       // for Actors, RenderingInterface
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Actors; } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Animation; } } } }  // lines 66-66
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Debugging; } } } }  // lines 24-24
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class EffectManager; } } } }  // lines 67-67
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class GlobalMap; } } } }  // lines 68-68
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class LocalMap; } } } }  // lines 69-69
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class NpcAnimation; } } } }  // lines 25-25
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Shadows; } } } }  // lines 70-70
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class SkyManager; } } } }  // lines 26-26
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Water; } } } }  // lines 71-71
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class CellStore; } } } }  // lines 50-50
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Fallback; } } } }  // lines 29-29
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Ptr; } } } }  // lines 51-51
namespace Ogre { namespace OEngine { namespace Ogre { namespace OEngine { namespace Physic { class PhysicEngine; } } } } }  // lines 33-33
namespace Ogre { namespace OEngine { namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class Image; } } } }  // lines 37-37
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class Light; } } } }  // lines 38-38
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class SceneNode; } } } }  // lines 45-45
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class Vector3; } } } }  // lines 39-39
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class Viewport; } } } }  // lines 40-40
namespace Ogre { namespace OEngine { namespace Ogre { namespace Terrain { class World; } } } }  // lines 61-61
namespace Ogre { namespace OEngine { namespace Ogre { namespace sh { class Factory; } } } }  // lines 56-56
---

apps/opencs/model/world/pathgrid.cpp should add these lines:

apps/opencs/model/world/pathgrid.cpp should remove these lines:
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 5-5
- #include "components/esm/loadpgrd.hpp"  // lines 7-7
- namespace CSMWorld { struct Cell; }  // lines 17-17
- namespace ESM { class ESMReader; }  // lines 20-20

The full include-list for apps/opencs/model/world/pathgrid.cpp:
#include "pathgrid.hpp"
#include <sstream>                      // for basic_ostream::operator<<, etc
#include "apps/opencs/model/world/idcollection.hpp"  // for IdCollection
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::DATAstruct, etc
namespace CSMWorld { struct Cell; }  // lines 15-15
namespace ESM { class ESMReader; }  // lines 11-11
---
In file included from apps/openmw/mwrender/npcanimation.cpp:9:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

(apps/opencs/view/render/navigation.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigation.cpp has correct #includes/fwd-decls)

apps/openmw/mwrender/renderingmanager.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwrender/renderinginterface.hpp"  // for Actors
#include "components/esmterrain/storage.hpp"  // for ColourValue, Vector2
namespace Ogre { namespace OEngine { namespace Ogre { class Vector3; } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Actors; } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class ColourValue; } } } }
struct SDL_Window;

apps/openmw/mwrender/renderingmanager.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 1-1
- #include <OgreControllerManager.h>  // lines 2-2
- #include <OgreHardwarePixelBuffer.h>  // lines 3-3
- #include <OgreMeshManager.h>  // lines 4-4
- #include <OgreRenderTexture.h>  // lines 5-5
- #include <OgreRenderWindow.h>  // lines 6-6
- #include <OgreRoot.h>  // lines 7-7
- #include <OgreSceneManager.h>  // lines 8-8
- #include <OgreSceneNode.h>  // lines 9-9
- #include <OgreTextureManager.h>  // lines 10-10
- #include <OgreViewport.h>  // lines 11-11
- #include <string.h>  // lines 22-22
- #include <algorithm>  // lines 23-23
- #include <algorithm>  // lines 24-24
- #include <boost/filesystem/operations.hpp>  // lines 13-13
- #include <boost/filesystem/operations.hpp>  // lines 14-14
- #include <components/terrain/defaultworld.hpp>  // lines 16-16
- #include <components/terrain/terraingrid.hpp>  // lines 17-17
- #include <extern/shiny/Main/Factory.hpp>  // lines 18-18
- #include <extern/shiny/Platforms/Ogre/OgrePlatform.hpp>  // lines 19-19
- #include <limits>  // lines 27-27
- #include <new>  // lines 28-28
- #include <new>  // lines 29-29
- #include <openengine/bullet/physic.hpp>  // lines 20-20
- #include <utility>  // lines 30-30
- #include <utility>  // lines 31-31
- #include <vector>  // lines 32-32
- #include <vector>  // lines 33-33
- #include "../mwbase/environment.hpp"  // lines 35-35
- #include "../mwbase/statemanager.hpp"  // lines 36-36
- #include "../mwbase/windowmanager.hpp"  // lines 37-37
- #include "../mwbase/world.hpp"  // lines 38-38
- #include "../mwmechanics/npcstats.hpp"  // lines 39-39
- #include "../mwworld/cellstore.hpp"  // lines 40-40
- #include "../mwworld/esmstore.hpp"  // lines 41-41
- #include "../mwworld/ptr.hpp"  // lines 42-42
- #include "GLX/../OgrePrerequisites.h"  // lines 43-43
- #include "GLX/../OgrePrerequisites.h"  // lines 44-44
- #include "LinearMath/btVector3.h"  // lines 45-45
- #include "OgreCommon.h"  // lines 47-47
- #include "OgreHardwareBuffer.h"  // lines 48-48
- #include "OgreHardwareBuffer.h"  // lines 49-49
- #include "OgreImage.h"  // lines 50-50
- #include "OgreImage.h"  // lines 51-51
- #include "OgreLight.h"  // lines 52-52
- #include "OgreLight.h"  // lines 53-53
- #include "OgreMaterialManager.h"  // lines 55-55
- #include "OgreMath.h"  // lines 56-56
- #include "OgreMath.h"  // lines 57-57
- #include "OgreMatrix4.h"  // lines 58-58
- #include "OgreMatrix4.h"  // lines 59-59
- #include "OgreMemoryAllocatorConfig.h"  // lines 61-61
- #include "OgrePixelFormat.h"  // lines 62-62
- #include "OgrePlatform.h"  // lines 63-63
- #include "OgrePlatform.h"  // lines 64-64
- #include "OgreQuaternion.h"  // lines 65-65
- #include "OgreQuaternion.h"  // lines 66-66
- #include "OgreRenderSystem.h"  // lines 67-67
- #include "OgreRenderSystem.h"  // lines 68-68
- #include "OgreRenderTarget.h"  // lines 69-69
- #include "OgreRenderTarget.h"  // lines 70-70
- #include "OgreResourceGroupManager.h"  // lines 71-71
- #include "OgreResourceGroupManager.h"  // lines 72-72
- #include "OgreSharedPtr.h"  // lines 73-73
- #include "OgreSharedPtr.h"  // lines 74-74
- #include "OgreTexture.h"  // lines 75-75
- #include "OgreTexture.h"  // lines 76-76
- #include "OgreVector3.h"  // lines 77-77
- #include "OgreVector3.h"  // lines 78-78
- #include "SDL_stdinc.h"  // lines 80-80
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/creaturestats.hpp"  // lines 81-81
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/creaturestats.hpp"  // lines 82-82
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 83-83
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 84-84
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 85-85
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 86-86
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 87-87
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 88-88
- #include "apps/openmw/mwrender/actors.hpp"  // lines 89-89
- #include "apps/openmw/mwrender/actors.hpp"  // lines 90-90
- #include "apps/openmw/mwrender/animation.hpp"  // lines 91-91
- #include "apps/openmw/mwrender/animation.hpp"  // lines 92-92
- #include "apps/openmw/mwrender/camera.hpp"  // lines 93-93
- #include "apps/openmw/mwrender/camera.hpp"  // lines 94-94
- #include "apps/openmw/mwrender/debugging.hpp"  // lines 96-96
- #include "apps/openmw/mwrender/objects.hpp"  // lines 98-98
- #include "apps/openmw/mwrender/occlusionquery.hpp"  // lines 100-100
- #include "apps/openmw/mwrender/renderconst.hpp"  // lines 101-101
- #include "apps/openmw/mwrender/renderconst.hpp"  // lines 102-102
- #include "apps/openmw/mwrender/sky.hpp"  // lines 103-103
- #include "apps/openmw/mwrender/sky.hpp"  // lines 104-104
- #include "components/esm/defs.hpp"  // lines 105-105
- #include "components/esm/defs.hpp"  // lines 106-106
- #include "components/esm/loadcell.hpp"  // lines 107-107
- #include "components/esm/loadcell.hpp"  // lines 108-108
- #include "components/esm/loadgmst.hpp"  // lines 109-109
- #include "components/esm/loadgmst.hpp"  // lines 110-110
- #include "components/esm/loadmgef.hpp"  // lines 111-111
- #include "components/esm/loadmgef.hpp"  // lines 112-112
- #include "components/terrain/defs.hpp"  // lines 113-113
- #include "components/terrain/defs.hpp"  // lines 114-114
- #include "components/terrain/world.hpp"  // lines 115-115
- #include "components/terrain/world.hpp"  // lines 116-116
- #include "effectmanager.hpp"  // lines 117-117
- #include "extern/shiny/Main/Language.hpp"  // lines 118-118
- #include "extern/shiny/Main/Language.hpp"  // lines 119-119
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 120-120
- #include "extern/shiny/Main/PropertyBase.hpp"  // lines 121-121
- #include "localmap.hpp"  // lines 122-122
- #include "terrainstorage.hpp"  // lines 126-126
- namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Fallback; } } } }  // lines 136-136
- namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { struct RenderTargetEvent; } } } }  // lines 139-139

The full include-list for apps/openmw/mwrender/renderingmanager.cpp:
#include "renderingmanager.hpp"
#include <SDL_video.h>                  // for SDL_SetWindowFullscreen, etc
#include <string.h>                     // for NULL
#include <cassert>                      // for assert
#include <components/settings/settings.hpp>  // for CategorySettingVector
#include <limits>                       // for numeric_limits
#include "OgreCommon.h"                 // for TextureFilterOptions
#include "OgreMaterialManager.h"        // for MaterialManager
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_ALLOC_T
#include "SDL_stdinc.h"                 // for ::SDL_FALSE, ::SDL_TRUE
#include "apps/openmw/mwrender/../mwbase/../mwworld/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwrender/debugging.hpp"  // for Debugging, Ptr
#include "apps/openmw/mwrender/objects.hpp"  // for Objects
#include "apps/openmw/mwrender/occlusionquery.hpp"  // for OcclusionQuery
#include "apps/openmw/mwrender/renderinginterface.hpp"  // for Actors
#include "components/esmterrain/storage.hpp"  // for ColourValue, Vector2
#include "npcanimation.hpp"             // for NpcAnimation
#include "shadows.hpp"                  // for Shadows
#include "water.hpp"                    // for Water
namespace Ogre { namespace OEngine { namespace Ogre { class Vector3; } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWRender { class Actors; } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace MWWorld { class Fallback; } } } }  // lines 134-134
namespace Ogre { namespace OEngine { namespace Ogre { namespace OEngine { namespace Render { class OgreRenderer; } } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { class ColourValue; } } } }
namespace Ogre { namespace OEngine { namespace Ogre { namespace Ogre { struct RenderTargetEvent; } } } }  // lines 130-130
struct SDL_Window;
---
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

apps/opencs/view/doc/filedialog.hpp should add these lines:

apps/opencs/view/doc/filedialog.hpp should remove these lines:
- #include <QModelIndex>  // lines 5-5
- #include <QtCore>  // lines 7-7
- class PluginsProxyModel;  // lines 20-20
- class QWidget;  // lines 21-21

The full include-list for apps/opencs/view/doc/filedialog.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include <boost/filesystem/path.hpp>    // for path
#include "adjusterwidget.hpp"           // for ContentAction
class QWidget;  // lines 18-18
namespace CSVDoc { class FileWidget; }  // lines 32-32
namespace ContentSelectorView { class ContentSelector; }  // lines 26-26
---
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
In file included from apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwrender/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^

apps/opencs/view/doc/filedialog.cpp should add these lines:
#include "components/contentselector/view/../model/contentmodel.hpp"

apps/opencs/view/doc/filedialog.cpp should remove these lines:

The full include-list for apps/opencs/view/doc/filedialog.cpp:
#include "filedialog.hpp"
#include <stddef.h>                     // for NULL
#include <QPushButton>                  // for QPushButton
#include "adjusterwidget.hpp"           // for AdjusterWidget, etc
#include "components/contentselector/model/esmfile.hpp"  // for EsmFile
#include "components/contentselector/view/../model/contentmodel.hpp"
#include "components/contentselector/view/contentselector.hpp"
#include "filewidget.hpp"               // for FileWidget
class QWidget;  // lines 10-10
---
In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/clothing.cpp:12:
In file included from apps/openmw/mwclass/../mwbase/world.hpp:10:
apps/openmw/mwclass/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/essimporter/importer.cpp:13:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:4:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from In file included from apps/openmw/mwrender/npcanimation.cpp:25:
In file included from apps/openmw/mwrender/../mwbase/soundmanager.hpp:10:
apps/openmw/mwrender/../mwbase/../mwworld/ptr.hppapps/opencs/view/world/infocreator.cpp::6112::
61In file included from :apps/opencs/view/world/../../model/world/data.hpp :error43: :
no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?In file included from 
apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef        NAME32  mId;

        ^~~~~~
        ::ESM::NAME32
apps/openmw/mwrender/../mwbase/../mwworld/livecellref.hpp:82:./components/esm/esmcommon.hpp12::52 :note20: :'LiveCellRef' declared here 
note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;    struct LiveCellRef : public LiveCellRefBase

                   ^           ^

In file included from In file included from apps/opencs/model/doc/documentmanager.cpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^

apps/opencs/model/world/refcollection.hpp should add these lines:
struct CellRef;

apps/opencs/model/world/refcollection.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "../doc/stage.hpp"  // lines 9-9
- #include "ref.hpp"  // lines 12-12
- namespace CSMDoc { class Messages; }  // lines 21-21
- namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }  // lines 31-31
- namespace ESM { class ESMReader; }  // lines 15-15
- namespace ESM { struct RefNum; }  // lines 16-16

The full include-list for apps/opencs/model/world/refcollection.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
#include "collection.hpp"               // for Collection
#include "record.hpp"                   // for Record
namespace CSMDoc { class Messages; }  // lines 20-20
namespace CSMDoc { namespace CSMWorld { struct Cell; } }  // lines 30-30
namespace CSMDoc { namespace ESM { class ESMReader; } }  // lines 24-24
namespace CSMDoc { namespace ESM { struct RefNum; } }  // lines 25-25
struct CellRef;
---

apps/opencs/model/world/refcollection.cpp should add these lines:

apps/opencs/model/world/refcollection.cpp should remove these lines:
- #include <utility>  // lines 3-3
- #include <utility>  // lines 4-4
- #include "apps/opencs/model/world/../doc/messages.hpp"  // lines 6-6
- #include "apps/opencs/model/world/../doc/messages.hpp"  // lines 7-7
- #include "cell.hpp"  // lines 9-9
- #include "components/esm/cellref.hpp"  // lines 10-10
- #include "components/esm/cellref.hpp"  // lines 11-11
- #include "components/esm/loadcell.hpp"  // lines 12-12
- #include "components/esm/loadcell.hpp"  // lines 13-13
- #include "universalid.hpp"  // lines 17-17
- namespace CSMDoc { namespace ESM { class ESMReader; } }  // lines 22-22

The full include-list for apps/opencs/model/world/refcollection.cpp:
#include "refcollection.hpp"
#include <sstream>                      // for ostringstream
#include "apps/opencs/model/world/collection.hpp"  // for Collection
#include "record.hpp"                   // for Record
#include "ref.hpp"                      // for CellRef
namespace CSMDoc { namespace ESM { class ESMReader; } }  // lines 20-20
---
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/essimporter/importer.cpp:13:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:4:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/model/doc/documentmanager.cpp:2:
In file included from /usr/include/boost/filesystem/operations.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/doc/documentmanager.cpp:2:
In file included from /usr/include/boost/filesystem/operations.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/model/doc/documentmanager.cpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/doc/documentmanager.cpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/doc/documentmanager.cpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/model/doc/documentmanager.cpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/doc/documentmanager.cpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
In file included from apps/essimporter/importer.cpp:13:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:5:
In file included from ./components/esm/inventorystate.hpp:12:
./components/esm/objectstate.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/objectstate.hpp:11:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwrender/npcanimation.cpp:27:
In file included from apps/openmw/mwrender/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwrender/../mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:36:
apps/opencs/view/doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/essimporter/importer.cpp:13:
In file included from ./components/esm/player.hpp:6:
In file included from ./components/esm/npcstate.hpp:5:
./components/esm/inventorystate.hpp:26:21: error: use of undeclared identifier 'ObjectState'
        std::vector<ObjectState> mItems;
                    ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^

(apps/opencs/model/world/cellselection.hpp has correct #includes/fwd-decls)

apps/opencs/model/world/cellselection.cpp should add these lines:

apps/opencs/model/world/cellselection.cpp should remove these lines:
- #include <utility>  // lines 6-6
- #include "apps/opencs/model/world/cellcoordinates.hpp"  // lines 9-9

The full include-list for apps/opencs/model/world/cellselection.cpp:
#include "cellselection.hpp"
#include <cmath>                        // for sqrt
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "apps/opencs/model/world/cellcoordinates.hpp"
---
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/openmw/mwrender/npcanimation.cpp:27:
In file included from apps/openmw/mwrender/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:13:
apps/openmw/mwrender/../mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
apps/openmw/mwrender/../mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/essimporter/importer.cpp:13:
In file included from ./components/esm/player.hpp:6:
./components/esm/npcstate.hpp:21:30: error: expected class name
    struct NpcState : public ObjectState
                             ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/documentmanager.cpp:20:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:36:
./apps/opencs/model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
apps/openmw/mwrender/../mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwrender/../mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/opencs/view/world/infocreator.cpp:12:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/openmw/mwrender/npcanimation.cpp:27:
In file included from apps/openmw/mwrender/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwrender/../mwmechanics/creaturestats.hpp:19:
apps/openmw/mwrender/../mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwrender/../mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/essimporter/importer.cpp:51:
In file included from apps/essimporter/converter.hpp:76:
In file included from apps/essimporter/importercontext.hpp:9:
./components/esm/globalmap.hpp:10:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/globalmap.hpp:11:1: error: expected unqualified-id
{
^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/essimporter/importer.cpp:51:
In file included from apps/essimporter/converter.hpp:76:
apps/essimporter/importercontext.hpp:35:14: error: no type named 'GlobalMap' in namespace 'ESM'; did you mean 'Global'?
        ESM::GlobalMap mGlobalMapState;
        ~~~~~^~~~~~~~~
             Global
./components/esm/loadglob.hpp:18:8: note: 'Global' declared here
struct Global
       ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/essimporter/importer.cpp:51:
In file included from apps/essimporter/converter.hpp:76:
apps/essimporter/importercontext.hpp:58:29: error: no member named 'mBounds' in 'ESM::Global'
            mGlobalMapState.mBounds.mMinX = 0;
            ~~~~~~~~~~~~~~~ ^
apps/essimporter/importercontext.hpp:59:29: error: no member named 'mBounds' in 'ESM::Global'
            mGlobalMapState.mBounds.mMaxX = 0;
            ~~~~~~~~~~~~~~~ ^
apps/essimporter/importercontext.hpp:60:29: error: no member named 'mBounds' in 'ESM::Global'
            mGlobalMapState.mBounds.mMinY = 0;
            ~~~~~~~~~~~~~~~ ^
apps/essimporter/importercontext.hpp:61:29: error: no member named 'mBounds' in 'ESM::Global'
            mGlobalMapState.mBounds.mMaxY = 0;
            ~~~~~~~~~~~~~~~ ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:36:
apps/opencs/model/tools/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/essimporter/importer.cpp:51:
apps/essimporter/converter.hpp:377:9: error: no type named 'Cell' in namespace 'ESM'; did you mean simply 'Cell'?
        ESM::Cell mCell;
        ^~~~~~~~~
        Cell
apps/essimporter/converter.hpp:375:12: note: 'Cell' declared here
    struct Cell
           ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:13:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^

(apps/opencs/model/doc/blacklist.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/aiescort.cpp:11:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
In file included from apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:12:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/model/doc/blacklist.cpp should add these lines:

apps/opencs/model/doc/blacklist.cpp should remove these lines:
- #include <utility>  // lines 5-5
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 8-8

The full include-list for apps/opencs/model/doc/blacklist.cpp:
#include "blacklist.hpp"
#include <algorithm>                    // for binary_search, sort, etc
#include <components/misc/stringops.hpp>  // for StringUtils
#include <utility>                      // for pair
#include "apps/opencs/model/doc/../world/universalid.hpp"
---
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/opencs/model/doc/documentmanager.cpp:20:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
In file included from ./apps/opencs/model/doc/../world/refcollection.hpp:12:
./apps/opencs/model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
apps/essimporter/importer.cpp:58:62: error: no type named 'SavedGame' in namespace 'ESM'
    void writeScreenshot(const ESM::Header& fileHeader, ESM::SavedGame& out)
                                                        ~~~~~^
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:8:
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/model/doc/documentmanager.cpp:20:
In file included from apps/opencs/model/doc/document.hpp:17:
In file included from apps/opencs/model/doc/../world/data.hpp:42:
./apps/opencs/model/doc/../world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
In file included from apps/opencs/view/world/genericcreator.cpp:14:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwclass/repair.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
./apps/opencs/model/doc/../world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
./apps/opencs/model/doc/../world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
apps/essimporter/importer.cpp:319:24: error: use of undeclared identifier 'profile'; did you mean 'profil'?
        ESM::SavedGame profile;
                       ^~~~~~~
                       profil
/usr/include/unistd.h:917:12: note: 'profil' declared here
extern int profil (unsigned short int *__sample_buffer, size_t __size,
           ^
apps/openmw/mwmechanics/aiescort.cpp:90:49: error: member access into incomplete type 'MWMechanics::CreatureStats'
        actor.getClass().getCreatureStats(actor).setDrawState(DrawState_Nothing);
                                                ^
apps/openmw/mwmechanics/../mwworld/class.hpp:31:11: note: forward declaration of 'MWMechanics::CreatureStats'
    class CreatureStats;
          ^
apps/openmw/mwmechanics/aiescort.cpp:91:49: error: member access into incomplete type 'MWMechanics::CreatureStats'
        actor.getClass().getCreatureStats(actor).setMovementFlag(CreatureStats::Flag_Run, false);
                                                ^
apps/openmw/mwmechanics/../mwworld/class.hpp:31:11: note: forward declaration of 'MWMechanics::CreatureStats'
    class CreatureStats;
          ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
apps/essimporter/importer.cpp:319:23: error: expected ';' after expression
        ESM::SavedGame profile;
                      ^
                      ;
apps/essimporter/importer.cpp:319:14: error: no member named 'SavedGame' in namespace 'ESM'
        ESM::SavedGame profile;
        ~~~~~^

apps/opencs/model/world/columnbase.hpp should add these lines:

apps/opencs/model/world/columnbase.hpp should remove these lines:
- #include <stdexcept>  // lines 7-7
- namespace CSMWorld { template <typename ESXRecordT> struct Record; }  // lines 13-13

The full include-list for apps/opencs/model/world/columnbase.hpp:
#include <QVariant>                     // for QVariant
#include <Qt>                           // for ItemDataRole::UserRole
#include <stdexcept>                    // for logic_error
#include <string>                       // for string
namespace CSMWorld { template <typename ESXRecordT> struct Record; }  // lines 11-11
---

(apps/opencs/model/world/columnbase.cpp has correct #includes/fwd-decls)

apps/openmw/mwrender/globalmap.hpp should add these lines:

apps/openmw/mwrender/globalmap.hpp should remove these lines:
- #include <OgreTexture.h>  // lines 4-4
- #include <vector>  // lines 8-8
- #include "GLX/../OgrePrerequisites.h"  // lines 11-11
- #include "OgreImage.h"  // lines 18-18
- #include "OgreResource.h"  // lines 14-14
- #include "OgreSharedPtr.h"  // lines 16-16

The full include-list for apps/openmw/mwrender/globalmap.hpp:
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "OgreImage.h"                  // for Image
#include "OgreResource.h"               // for ManualResourceLoader, etc
#include "OgreSharedPtr.h"              // for SharedPtr
namespace ESM { class GlobalMap; }  // lines 28-28
namespace Loading { class Listener; }  // lines 23-23
---

apps/opencs/model/tools/racecheck.hpp should add these lines:

apps/opencs/model/tools/racecheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Race; }  // lines 17-17

The full include-list for apps/opencs/model/tools/racecheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Race; }  // lines 8-8
---

apps/openmw/mwrender/globalmap.cpp should add these lines:

apps/openmw/mwrender/globalmap.cpp should remove these lines:
- #include <assert.h>  // lines 4-4
- #include <algorithm>  // lines 10-10
- #include <boost/lexical_cast.hpp>  // lines 5-5
- #include <components/esm/globalmap.hpp>  // lines 6-6
- #include <sstream>  // lines 11-11
- #include <sstream>  // lines 12-12
- #include <stdexcept>  // lines 13-13
- #include <stdexcept>  // lines 14-14
- #include "OgreDataStream.h"  // lines 20-20
- #include "OgreMemoryAllocatorConfig.h"  // lines 22-22
- #include "OgrePixelFormat.h"  // lines 24-24
- #include "OgreResourceGroupManager.h"  // lines 25-25
- #include "OgreResourceGroupManager.h"  // lines 26-26
- #include "OgreTexture.h"  // lines 28-28
- #include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"  // lines 30-30
- #include "components/esm/loadcell.hpp"  // lines 32-32
- #include "components/esm/loadland.hpp"  // lines 34-34
- #include "components/settings/settings.hpp"  // lines 36-36

The full include-list for apps/openmw/mwrender/globalmap.cpp:
#include "globalmap.hpp"
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreImage.h>                  // for Image, Image::Box, etc
#include <assert.h>                     // for assert
#include <limits.h>                     // for SCHAR_MIN
#include <string.h>                     // for memset
#include <components/loadinglistener/loadinglistener.hpp>  // for Listener
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "OgreDataStream.h"             // for DataStreamPtr, etc
#include "OgreMemoryAllocatorConfig.h"
#include "OgrePixelFormat.h"            // for PixelFormat::PF_A8B8G8R8, etc
#include "OgreTexture.h"                // for Texture
#include "apps/openmw/mwrender/../mwbase/../mwworld/store.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadland.hpp"  // for Land, Land::::DATA_WNAM, etc
#include "components/settings/settings.hpp"  // for Manager
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^

(apps/openmw/mwmechanics/pathfinding.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/racecheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/racecheck.cpp should remove these lines:
- #include <string>  // lines 4-4
- #include "../world/universalid.hpp"  // lines 7-7
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 11-11
- #include "apps/opencs/model/tools/../world/record.hpp"  // lines 13-13

The full include-list for apps/opencs/model/tools/racecheck.cpp:
#include "racecheck.hpp"
#include <components/esm/loadrace.hpp>  // for Race, Race::RADTstruct, etc
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

apps/openmw/mwmechanics/pathfinding.cpp should add these lines:

apps/openmw/mwmechanics/pathfinding.cpp should remove these lines:
- #include <math.h>  // lines 2-2
- #include <stddef.h>  // lines 4-4
- #include <memory>  // lines 6-6
- #include <utility>  // lines 8-8
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"  // lines 17-17
- #include "components/esm/loadcell.hpp"  // lines 19-19
- #include "components/esm/loadland.hpp"  // lines 21-21
- #include "components/esm/loadpgrd.hpp"  // lines 23-23

The full include-list for apps/openmw/mwmechanics/pathfinding.cpp:
#include "pathfinding.hpp"
#include <math.h>                       // for sqrt
#include <stddef.h>                     // for NULL
#include <memory>                       // for allocator
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "OgreMath.h"                   // for Math, Radian
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadland.hpp"  // for Land, Land::REAL_SIZE
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid, etc
---
In file included from apps/openmw/mwclass/clothing.cpp:17:
apps/openmw/mwclass/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
./apps/opencs/model/doc/../world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
./apps/opencs/model/doc/../world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
./apps/opencs/model/doc/../world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^

apps/launcher/datafilespage.hpp should add these lines:
#include <QtCore>                       // for QString, QStringList, etc

apps/launcher/datafilespage.hpp should remove these lines:
- #include <QFile>  // lines 9-9
- class QAbstractItemModel;  // lines 12-12
- class QMenu;  // lines 13-13
- class QSortFilterProxyModel;  // lines 11-11
- namespace Launcher { class ProfilesComboBox; }  // lines 23-23

The full include-list for apps/launcher/datafilespage.hpp:
#include <QDir>                         // for QDir
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, QStringList, etc
namespace Config { class GameSettings; }  // lines 17-17
namespace Config { class LauncherSettings; }  // lines 18-18
namespace ContentSelectorView { class ContentSelector; }  // lines 16-16
namespace Files { struct ConfigurationManager; }  // lines 15-15
namespace Launcher { class TextInputDialog; }  // lines 22-22
---
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^

apps/launcher/datafilespage.cpp should add these lines:
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit

apps/launcher/datafilespage.cpp should remove these lines:

The full include-list for apps/launcher/datafilespage.cpp:
#include "datafilespage.hpp"
#include <QDebug>                       // for QDebug, qDebug
#include <QDialog>                      // for QDialog, etc
#include <QMessageBox>                  // for QMessageBox
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include <components/contentselector/view/contentselector.hpp>
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit
#include "components/contentselector/view/../model/contentmodel.hpp"
#include "utils/textinputdialog.hpp"    // for TextInputDialog
class QAbstractButton;  // lines 12-12
namespace ContentSelectorModel { class EsmFile; }  // lines 14-14
---
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:42:
In file included from apps/opencs/model/tools/../world/refcollection.hpp:12:
apps/opencs/model/tools/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/tools/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:42:
apps/opencs/model/tools/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/tools/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/world/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:49:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from apps/opencs/model/tools/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/doc/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/doc/view.cpp:10:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^

apps/openmw/mwworld/worldimp.hpp should add these lines:
class CellStore;
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { class Ptr; } } } }

apps/openmw/mwworld/worldimp.hpp should remove these lines:
- #include <stdint.h>  // lines 8-8
- #include <boost/filesystem/path.hpp>  // lines 4-4
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <map>  // lines 9-9
- #include <string>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <utility>  // lines 12-12
- #include <vector>  // lines 13-13
- #include "../mwbase/world.hpp"  // lines 15-15
- #include "OgreQuaternion.h"  // lines 16-16
- #include "OgreQuaternion.h"  // lines 17-17
- #include "OgreVector2.h"  // lines 18-18
- #include "OgreVector3.h"  // lines 19-19
- #include "OgreVector3.h"  // lines 20-20
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/world.hpp"  // lines 21-21
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/cellstore.hpp"  // lines 22-22
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/cellstore.hpp"  // lines 23-23
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 24-24
- #include "apps/openmw/mwworld/../mwbase/../mwworld/globals.hpp"  // lines 25-25
- #include "apps/openmw/mwworld/../mwbase/../mwworld/globals.hpp"  // lines 26-26
- #include "apps/openmw/mwworld/../mwrender/animation.hpp"  // lines 27-27
- #include "apps/openmw/mwworld/../mwrender/animation.hpp"  // lines 28-28
- #include "apps/openmw/mwworld/../mwrender/camera.hpp"  // lines 29-29
- #include "apps/openmw/mwworld/../mwrender/camera.hpp"  // lines 30-30
- #include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"  // lines 31-31
- #include "apps/openmw/mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 32-32
- #include "apps/openmw/mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 33-33
- #include "apps/openmw/mwworld/player.hpp"  // lines 35-35
- #include "cells.hpp"  // lines 36-36
- #include "components/esm/esmreader.hpp"  // lines 37-37
- #include "components/esm/esmreader.hpp"  // lines 38-38
- #include "components/esm/loadalch.hpp"  // lines 39-39
- #include "components/esm/loadalch.hpp"  // lines 66-66
- #include "components/esm/loadarmo.hpp"  // lines 40-40
- #include "components/esm/loadarmo.hpp"  // lines 41-41
- #include "components/esm/loadbook.hpp"  // lines 42-42
- #include "components/esm/loadbook.hpp"  // lines 43-43
- #include "components/esm/loadcell.hpp"  // lines 44-44
- #include "components/esm/loadcell.hpp"  // lines 45-45
- #include "components/esm/loadclas.hpp"  // lines 46-46
- #include "components/esm/loadclas.hpp"  // lines 47-47
- #include "components/esm/loadclot.hpp"  // lines 48-48
- #include "components/esm/loadclot.hpp"  // lines 67-67
- #include "components/esm/loadench.hpp"  // lines 49-49
- #include "components/esm/loadench.hpp"  // lines 50-50
- #include "components/esm/loadlevlist.hpp"  // lines 51-51
- #include "components/esm/loadlevlist.hpp"  // lines 52-52
- #include "components/esm/loadnpc.hpp"  // lines 53-53
- #include "components/esm/loadnpc.hpp"  // lines 54-54
- #include "components/esm/loadspel.hpp"  // lines 55-55
- #include "components/esm/loadspel.hpp"  // lines 56-56
- #include "components/esm/loadweap.hpp"  // lines 57-57
- #include "components/settings/settings.hpp"  // lines 59-59
- #include "contentloader.hpp"  // lines 60-60
- #include "esmstore.hpp"  // lines 61-61
- #include "fallback.hpp"  // lines 62-62
- #include "scene.hpp"  // lines 63-63
- #include "timestamp.hpp"  // lines 64-64
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } } } } }  // lines 93-93
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { class ESMWriter; } } } } } }  // lines 97-97
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Loading { struct EffectList; } } } } } } }  // lines 100-100
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWRender { class Camera; } } } } } } }  // lines 148-148
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWRender { class CellRender; } } } } } } }  // lines 149-149
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWRender { class SkyManager; } } } } } } }  // lines 150-150
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class ProjectileManager; } } } } } } }  // lines 158-158
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { struct ContentLoader; } } } } } } }  // lines 108-108
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Render { class OgreRenderer; } } } } } } }  // lines 142-142
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace ToUTF8 { class Utf8Encoder; } } } } } } }  // lines 122-122
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { struct CellId; } } } } } }  // lines 94-94
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { struct CellId; } } } } } }  // lines 98-98
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { struct ContentLoader; } } } } } }  // lines 153-153
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { struct EffectList; } } } } } }  // lines 95-95
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace Loading { class Listener; } } } } } }  // lines 69-69
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWWorld { class PhysicsSystem; } } } } } }  // lines 72-72
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWWorld { class RefData; } } } } } }  // lines 73-73
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWWorld { class Scene; } } } } } }  // lines 74-74
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace MWWorld { struct ContentLoader; } } } } } }  // lines 75-75
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace OEngine { namespace Physic { class PhysicEngine; } } } } } } }  // lines 79-79
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace OEngine { namespace Render { class OgreRenderer; } } } } } } }  // lines 82-82
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace Ogre { class Image; } } } } } }  // lines 86-86
- namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ToUTF8 { class Utf8Encoder; } } } } } }  // lines 89-89

The full include-list for apps/openmw/mwworld/worldimp.hpp:
#include <stdint.h>                     // for uint32_t
#include "apps/openmw/mwworld/player.hpp"  // for Ptr
#include "components/settings/settings.hpp"  // for CategorySettingVector
class CellStore;
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { class Ptr; } } } }
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace ESM { struct Position; } } } } } } }  // lines 132-132
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Files { class Collections; } } } } } } }  // lines 137-137
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Loading { class Listener; } } } } } } }  // lines 102-102
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWRender { class Animation; } } } } } } }  // lines 147-147
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class PhysicsSystem; } } } } } } }  // lines 105-105
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class Player; } } } } } } }  // lines 157-157
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class RefData; } } } } } } }  // lines 106-106
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class Scene; } } } } } } }  // lines 107-107
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace MWWorld { class WeatherManager; } } } } } } }  // lines 159-159
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace OEngine { namespace Physic { class PhysicEngine; } } } } } } } }  // lines 112-112
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace OEngine { namespace Render { class OgreRenderer; } } } } } } } }  // lines 115-115
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Ogre { class Image; } } } } } } }  // lines 119-119
namespace Ogre { namespace OEngine { namespace MWWorld { namespace MWBase { namespace Loading { namespace ESM { namespace Ogre { class Vector3; } } } } } } }  // lines 127-127
---

apps/openmw/mwworld/worldimp.cpp should add these lines:
#include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"
namespace Ogre { namespace OEngine { namespace MWWorld { class Ptr; } } }
namespace Ogre { namespace OEngine { namespace MWWorld { namespace Loading { class Listener; } } } }
namespace Ogre { namespace OEngine { namespace MWWorld { namespace Ogre { class SceneNode; } } } }

apps/openmw/mwworld/worldimp.cpp should remove these lines:
- #include <OgreSceneNode.h>  // lines 55-55
- #include <libs/openengine/bullet/trace.h>  // lines 61-61
- #include <algorithm>  // lines 63-63
- #include <cmath>  // lines 64-64
- #include <components/esm/cellid.hpp>  // lines 56-56
- #include <components/files/collections.hpp>  // lines 57-57
- #include <components/misc/resourcehelpers.hpp>  // lines 58-58
- #include <libs/openengine/bullet/physic.hpp>  // lines 60-60
- #include <list>  // lines 65-65
- #include <ostream>  // lines 66-66
- #include <set>  // lines 67-67
- #include <stdexcept>  // lines 68-68
- #include <tr1/unordered_map>  // lines 53-53
- #include <typeinfo>  // lines 69-69
- #include "../mwbase/mechanicsmanager.hpp"  // lines 71-71
- #include "../mwbase/scriptmanager.hpp"  // lines 72-72
- #include "../mwbase/soundmanager.hpp"  // lines 73-73
- #include "../mwbase/windowmanager.hpp"  // lines 74-74
- #include "../mwclass/door.hpp"  // lines 75-75
- #include "../mwmechanics/aiavoiddoor.hpp"  // lines 76-76
- #include "../mwmechanics/levelledlist.hpp"  // lines 77-77
- #include "../mwmechanics/npcstats.hpp"  // lines 78-78
- #include "../mwmechanics/spellcasting.hpp"  // lines 79-79
- #include "../mwrender/animation.hpp"  // lines 80-80
- #include "../mwrender/sky.hpp"  // lines 81-81
- #include "../mwscript/globalscripts.hpp"  // lines 82-82
- #include "../mwscript/interpretercontext.hpp"  // lines 83-83
- #include "LinearMath/btVector3.h"  // lines 1-1
- #include "OgreAxisAlignedBox.h"  // lines 2-2
- #include "OgreMath.h"  // lines 3-3
- #include "OgreNode.h"  // lines 4-4
- #include "OgreVector4.h"  // lines 5-5
- #include "actionteleport.hpp"  // lines 84-84
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/environment.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/activespells.hpp"  // lines 9-9
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/aipackage.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/aisequence.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/spells.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/stat.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/../mwclass/../mwworld/class.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/../mwrender/../mwworld/weather.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 17-17
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 19-19
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 20-20
- #include "apps/openmw/mwworld/cellreflist.hpp"  // lines 21-21
- #include "apps/openmw/mwworld/cells.hpp"  // lines 22-22
- #include "apps/openmw/mwworld/esmstore.hpp"  // lines 23-23
- #include "apps/openmw/mwworld/fallback.hpp"  // lines 24-24
- #include "apps/openmw/mwworld/localscripts.hpp"  // lines 25-25
- #include "apps/openmw/mwworld/physicssystem.hpp"  // lines 26-26
- #include "apps/openmw/mwworld/scene.hpp"  // lines 27-27
- #include "apps/openmw/mwworld/store.hpp"  // lines 28-28
- #include "components/esm/defs.hpp"  // lines 29-29
- #include "components/esm/effectlist.hpp"  // lines 30-30
- #include "components/esm/esmwriter.hpp"  // lines 31-31
- #include "components/esm/loadcont.hpp"  // lines 32-32
- #include "components/esm/loadcrea.hpp"  // lines 33-33
- #include "components/esm/loadglob.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 35-35
- #include "components/esm/loadmgef.hpp"  // lines 36-36
- #include "components/esm/loadrace.hpp"  // lines 37-37
- #include "components/esm/loadregn.hpp"  // lines 38-38
- #include "components/esm/loadskil.hpp"  // lines 39-39
- #include "components/esm/loadstat.hpp"  // lines 40-40
- #include "components/esm/variant.hpp"  // lines 41-41
- #include "components/files/multidircollection.hpp"  // lines 42-42
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 43-43
- #include "components/misc/stringops.hpp"  // lines 44-44
- #include "containerstore.hpp"  // lines 85-85
- #include "contentloader.hpp"  // lines 86-86
- #include "esmloader.hpp"  // lines 87-87
- #include "manualref.hpp"  // lines 89-89
- #include "openengine/ogre/renderer.hpp"  // lines 45-45
- #include "player.hpp"  // lines 90-90
- #include "projectilemanager.hpp"  // lines 91-91
- namespace Ogre { namespace OEngine { namespace ESM { struct Door; } } }  // lines 94-94
- namespace Ogre { namespace OEngine { namespace Ogre { class Image; } } }  // lines 97-97
- namespace Ogre { namespace OEngine { namespace ToUTF8 { class Utf8Encoder; } } }  // lines 100-100

The full include-list for apps/openmw/mwworld/worldimp.cpp:
#include "worldimp.hpp"
#include <float.h>                      // for FLT_MAX
#include <stdlib.h>                     // for NULL, RAND_MAX
#include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"
#include "inventorystore.hpp"           // for Ptr
namespace Ogre { namespace OEngine { namespace MWWorld { class Ptr; } } }
namespace Ogre { namespace OEngine { namespace MWWorld { namespace Loading { class Listener; } } } }
namespace Ogre { namespace OEngine { namespace MWWorld { namespace Ogre { class SceneNode; } } } }
---
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
In file included from apps/openmw/mwclass/clothing.cpp:32:
In file included from apps/openmw/mwclass/clothing.hpp:16:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:17:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/openmw/mwmechanics/aiescort.hpp should add these lines:

apps/openmw/mwmechanics/aiescort.hpp should remove these lines:
- #include "pathfinding.hpp"  // lines 8-8
- namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 18-18
- namespace MWWorld { class Ptr; }  // lines 22-22

The full include-list for apps/openmw/mwmechanics/aiescort.hpp:
#include <string>                       // for string
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiEscort; } }  // lines 29-29
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 16-16
namespace MWWorld { class Ptr; }  // lines 11-11
---

apps/openmw/mwmechanics/aiescort.cpp should add these lines:

apps/openmw/mwmechanics/aiescort.cpp should remove these lines:
- #include <limits>  // lines 3-3
- #include <memory>  // lines 5-5
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 22-22
- #include "components/esm/defs.hpp"  // lines 24-24
- #include "components/esm/loadpgrd.hpp"  // lines 26-26

The full include-list for apps/openmw/mwmechanics/aiescort.cpp:
#include "aiescort.hpp"
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <limits>                       // for numeric_limits
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "movement.hpp"                 // for Movement
---
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/main.cpp:2:
In file included from ./components/ogreinit/ogreinit.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/vector:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/main.cpp:2:
In file included from ./components/ogreinit/ogreinit.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/vector:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:16:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/scriptsubview.cpp:10:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwclass/repair.hpp should add these lines:

apps/openmw/mwclass/repair.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 11-11
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 13-13
- namespace MWRender { class RenderingInterface; }  // lines 24-24
- namespace MWWorld { class Action; }  // lines 27-27
- namespace MWWorld { class CellStore; }  // lines 28-28
- namespace MWWorld { class PhysicsSystem; }  // lines 29-29

The full include-list for apps/openmw/mwclass/repair.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 22-22
namespace MWWorld { class Action; }  // lines 16-16
namespace MWWorld { class CellStore; }  // lines 17-17
namespace MWWorld { class PhysicsSystem; }  // lines 18-18
---

apps/openmw/mwclass/repair.cpp should add these lines:

apps/openmw/mwclass/repair.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <components/esm/loadrepa.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwworld/actionrepair.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 19-19
- #include "components/esm/loadnpc.hpp"  // lines 21-21
- namespace MWWorld { class Action; }  // lines 28-28
- namespace MWWorld { class Class; }  // lines 29-29

The full include-list for apps/openmw/mwclass/repair.cpp:
#include "repair.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "components/esm/loadnpc.hpp"   // for NPC, etc
namespace MWWorld { class Action; }  // lines 25-25
namespace MWWorld { class Class; }  // lines 26-26
---
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:36:
./apps/opencs/view/doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/launcher/maindialog.hpp should add these lines:

apps/launcher/maindialog.hpp should remove these lines:
- #include <QProcess>  // lines 5-5
- #include <components/process/processinvoker.hpp>  // lines 14-14
- class QStackedWidget;  // lines 21-21
- class QString;  // lines 22-22
- class QStringList;  // lines 23-23
- class QStringListModel;  // lines 24-24

The full include-list for apps/launcher/maindialog.hpp:
#include <QMainWindow>                  // for QMainWindow
#include <QtCore>                       // for QString, QStringList, slots, etc
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include <components/files/configurationmanager.hpp>
#include "settings/graphicssettings.hpp"  // for GraphicsSettings
class QCloseEvent;  // lines 19-19
class QListWidgetItem;  // lines 20-20
class QWidget;  // lines 25-25
namespace Launcher { class DataFilesPage; }  // lines 32-32
namespace Launcher { class GraphicsPage; }  // lines 33-33
namespace Launcher { class PlayPage; }  // lines 34-34
namespace Launcher { class SettingsPage; }  // lines 35-35
namespace Launcher { class UnshieldThread; }  // lines 36-36
namespace Process { class ProcessInvoker; }  // lines 27-27
---

apps/opencs/view/world/infocreator.hpp should add these lines:
namespace CSMDoc { class QLineEdit; }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/infocreator.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 7-7
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 10-10
- namespace CSMDoc { class QUndoStack; }  // lines 20-20
- namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 22-22
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 23-23
- namespace CSMDoc { namespace CSMWorld { class InfoCollection; } }  // lines 28-28

The full include-list for apps/opencs/view/world/infocreator.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <string>                       // for string
#include "genericcreator.hpp"           // for GenericCreator
namespace CSMDoc { class QLineEdit; }
namespace CSMDoc { class QUndoStack; }  // lines 14-14
namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 16-16
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 17-17
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/opencs/view/world/infocreator.cpp should add these lines:
namespace CSMDoc { class QLabel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/infocreator.cpp should remove these lines:
- #include <QLabel>  // lines 3-3
- #include <QLineEdit>  // lines 4-4
- #include <QUuid>  // lines 5-5
- #include <QtCore>  // lines 6-6
- #include <QtCore>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include "../../model/world/columns.hpp"  // lines 10-10
- #include "../../model/world/commands.hpp"  // lines 11-11
- #include "../../model/world/data.hpp"  // lines 12-12
- #include "../../model/world/idtable.hpp"  // lines 13-13
- #include "apps/opencs/view/world/../../model/world/idcollection.hpp"  // lines 14-14
- #include "apps/opencs/view/world/../../model/world/idcollection.hpp"  // lines 15-15
- #include "apps/opencs/view/world/genericcreator.hpp"  // lines 17-17
- namespace CSMDoc { class QUndoStack; }  // lines 22-22

The full include-list for apps/opencs/view/world/infocreator.cpp:
#include "infocreator.hpp"
#include "apps/opencs/view/world/genericcreator.hpp"
namespace CSMDoc { class QLabel; }
namespace CSMDoc { class QUndoStack; }  // lines 20-20
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/launcher/maindialog.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

apps/launcher/maindialog.cpp should remove these lines:
- #include <QDebug>  // lines 5-5
- #include <QIcon>  // lines 7-7
- #include <boost/filesystem/path.hpp>  // lines 1-1
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include <string>  // lines 10-10
- #include "apps/launcher/settings/graphicssettings.hpp"  // lines 13-13
- #include "components/config/gamesettings.hpp"  // lines 15-15
- #include "components/config/launchersettings.hpp"  // lines 17-17
- #include "components/files/configurationmanager.hpp"  // lines 18-18
- #include "components/files/configurationmanager.hpp"  // lines 19-19
- #include "components/process/processinvoker.hpp"  // lines 21-21
- class QAbstractButton;  // lines 31-31
- class QWidget;  // lines 32-32

The full include-list for apps/launcher/maindialog.cpp:
#include "maindialog.hpp"
#include <QCloseEvent>                  // for QCloseEvent
#include <QIcon>                        // for QIcon
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <QPushButton>                  // for QPushButton
#include <components/version/version.hpp>  // for OPENMW_VERSION, etc
#include "apps/launcher/settings/graphicssettings.hpp"
#include "components/config/gamesettings.hpp"  // for GameSettings
#include "components/config/launchersettings.hpp"  // for LauncherSettings, etc
#include "components/process/processinvoker.hpp"  // for ProcessInvoker
#include "datafilespage.hpp"            // for DataFilesPage
#include "graphicspage.hpp"             // for GraphicsPage
#include "playpage.hpp"                 // for PlayPage
#include "settingspage.hpp"             // for SettingsPage
class QAbstractButton;  // lines 28-28
class QWidget;  // lines 29-29
---

apps/opencs/model/world/landtexture.hpp should add these lines:

apps/opencs/model/world/landtexture.hpp should remove these lines:
- namespace ESM { class ESMReader; }  // lines 10-10

The full include-list for apps/opencs/model/world/landtexture.hpp:
#include <components/esm/loadltex.hpp>  // for LandTexture
#include <string>                       // for string
namespace ESM { class ESMReader; }  // lines 8-8
---

apps/opencs/model/world/landtexture.cpp should add these lines:

apps/opencs/model/world/landtexture.cpp should remove these lines:
- #include <ostream>  // lines 3-3
- #include "components/esm/loadltex.hpp"  // lines 6-6

The full include-list for apps/opencs/model/world/landtexture.cpp:
#include "landtexture.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <ostream>                      // for basic_ostream::operator<<, etc
#include "components/esm/loadltex.hpp"  // for LandTexture
---
In file included from apps/openmw/mwmechanics/character.cpp:43:
apps/openmw/mwmechanics/../mwworld/inventorystore.hpp:28:1: error: extraneous closing brace ('}')
}  // namespace MWWorld
^

(apps/opencs/model/world/columns.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/character.cpp:66:
./apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
./apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:24:
apps/opencs/view/doc/filedialog.hpp:16:10: fatal error: 'ui_filedialog.h' file not found
#include "ui_filedialog.h"
         ^
In file included from apps/openmw/mwmechanics/character.cpp:97:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

(apps/opencs/model/world/columns.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/character.cpp:97:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/openmw/mwclass/clothing.hpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwclass/clothing.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // lines 17-17
- namespace MWRender { class RenderingInterface; }  // lines 28-28
- namespace MWWorld { class Action; }  // lines 31-31
- namespace MWWorld { class CellStore; }  // lines 32-32
- namespace MWWorld { class PhysicsSystem; }  // lines 33-33

The full include-list for apps/openmw/mwclass/clothing.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class RenderingInterface; }  // lines 26-26
namespace MWWorld { class Action; }  // lines 20-20
namespace MWWorld { class CellStore; }  // lines 21-21
namespace MWWorld { class PhysicsSystem; }  // lines 22-22
---

apps/openmw/mwclass/clothing.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/clothing.cpp should remove these lines:
- #include <assert.h>  // lines 3-3
- #include <stddef.h>  // lines 6-6
- #include <typeinfo>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwrender/renderinginterface.hpp"  // lines 13-13
- #include "../mwworld/actionequip.hpp"  // lines 14-14
- #include "../mwworld/cellstore.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "../mwworld/inventorystore.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 31-31
- #include "components/esm/loadarmo.hpp"  // lines 33-33
- #include "components/esm/loadarmo.hpp"  // lines 34-34
- #include "components/esm/loadnpc.hpp"  // lines 36-36
- #include "components/esm/loadrace.hpp"  // lines 38-38
- #include "components/esm/loadskil.hpp"  // lines 39-39
- #include "components/esm/loadskil.hpp"  // lines 40-40

The full include-list for apps/openmw/mwclass/clothing.cpp:
#include "clothing.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadclot.hpp>  // for Clothing, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/character.cpp:97:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/character.cpp:97:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/opencs/view/world/genericcreator.hpp should add these lines:
#include "apps/opencs/view/world/../../model/world/refcollection.hpp"
class QWidget;
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/genericcreator.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include "../../model/world/universalid.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 10-10
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/view/world/../../model/world/scope.hpp"  // lines 15-15
- namespace CSMDoc { class QUndoStack; }  // lines 29-29
- namespace CSMDoc { class QWidget; }  // lines 21-21
- namespace CSMDoc { class QWidget; }  // lines 31-31
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 33-33

The full include-list for apps/opencs/view/world/genericcreator.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/refcollection.hpp"
#include "apps/opencs/view/world/../../model/world/scope.hpp"
#include "creator.hpp"                  // for Creator
class QWidget;
namespace CSMDoc { class QComboBox; }  // lines 17-17
namespace CSMDoc { class QHBoxLayout; }  // lines 18-18
namespace CSMDoc { class QLabel; }  // lines 19-19
namespace CSMDoc { class QLineEdit; }  // lines 26-26
namespace CSMDoc { class QPushButton; }  // lines 27-27
namespace CSMDoc { class QString; }  // lines 28-28
namespace CSMDoc { class QUndoStack; }  // lines 20-20
namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 39-39
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 23-23
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace CSVWorld { class IdValidator; } }  // lines 44-44
---
In file included from apps/openmw/mwmechanics/character.cpp:97:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/opencs/view/world/genericcreator.cpp should add these lines:
class QWidget;
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/genericcreator.cpp should remove these lines:
- #include <QComboBox>  // lines 3-3
- #include <QHBoxLayout>  // lines 4-4
- #include <QLabel>  // lines 5-5
- #include <QLineEdit>  // lines 6-6
- #include <QPushButton>  // lines 7-7
- #include <QUndoStack>  // lines 8-8
- #include <QtCore>  // lines 9-9
- #include <QtCore>  // lines 10-10
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include "../../model/world/commands.hpp"  // lines 13-13
- #include "../../model/world/data.hpp"  // lines 14-14
- #include "../../model/world/idtable.hpp"  // lines 15-15
- namespace CSMDoc { class QWidget; }  // lines 19-19
- namespace CSMDoc { class QWidget; }  // lines 21-21

The full include-list for apps/opencs/view/world/genericcreator.cpp:
#include "genericcreator.hpp"
#include <memory>                       // for auto_ptr
#include "idvalidator.hpp"              // for IdValidator
class QWidget;
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/model/doc/messages.hpp should add these lines:

apps/opencs/model/doc/messages.hpp should remove these lines:
- #include <utility>  // lines 6-6

The full include-list for apps/opencs/model/doc/messages.hpp:
#include <string>                       // for string, allocator, etc
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "../world/universalid.hpp"     // for UniversalId
---

apps/opencs/model/doc/messages.cpp should add these lines:

apps/opencs/model/doc/messages.cpp should remove these lines:
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 3-3

The full include-list for apps/opencs/model/doc/messages.cpp:
#include "messages.hpp"
#include "apps/opencs/model/doc/../world/universalid.hpp"
---

apps/opencs/model/world/refidcollection.hpp should add these lines:

apps/opencs/model/world/refidcollection.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 9-9
- #include "apps/opencs/model/world/universalid.hpp"  // lines 13-13
- namespace CSMWorld { struct RecordBase; }  // lines 26-26
- namespace ESM { class ESMReader; }  // lines 29-29

The full include-list for apps/opencs/model/world/refidcollection.hpp:
#include <QtCore>                       // for QVariant
#include <deque>                        // for deque
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/opencs/model/world/universalid.hpp"
#include "collectionbase.hpp"           // for CollectionBase
#include "columnbase.hpp"
#include "refiddata.hpp"                // for RefIdData
namespace CSMWorld { class RefIdAdapter; }  // lines 39-39
namespace CSMWorld { struct RecordBase; }  // lines 24-24
namespace ESM { class ESMReader; }  // lines 20-20
namespace ESM { class ESMWriter; }  // lines 34-34
---

apps/openmw/mwrender/npcanimation.hpp should add these lines:

apps/openmw/mwrender/npcanimation.hpp should remove these lines:
- #include <stddef.h>  // lines 5-5
- #include <map>  // lines 6-6
- #include <map>  // lines 7-7
- #include <string>  // lines 9-9
- #include <vector>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "GLX/../OgrePrerequisites.h"  // lines 15-15
- #include "OgreController.h"  // lines 17-17
- #include "OgreMath.h"  // lines 32-32
- #include "OgreSharedPtr.h"  // lines 20-20
- #include "OgreVector3.h"  // lines 22-22
- #include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // lines 25-25
- #include "components/esm/loadarmo.hpp"  // lines 27-27
- #include "components/nifogre/ogrenifloader.hpp"  // lines 29-29
- namespace ESM { struct MagicEffect; }  // lines 42-42
- namespace Ogre { class Camera; }  // lines 45-45
- namespace Ogre { class Entity; }  // lines 46-46
- namespace Ogre { class SceneNode; }  // lines 47-47

The full include-list for apps/openmw/mwrender/npcanimation.hpp:
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "../mwworld/inventorystore.hpp"  // for InventoryStoreListener
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreController.h"             // for ControllerValue
#include "OgreMath.h"                   // for Radian
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3
#include "animation.hpp"                // for Animation
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadarmo.hpp"
#include "components/nifogre/ogrenifloader.hpp"  // for ObjectScenePtr
#include "weaponanimation.hpp"          // for WeaponAnimation
namespace ESM { struct MagicEffect; }  // lines 40-40
namespace ESM { struct NPC; }  // lines 52-52
namespace Ogre { class Camera; }  // lines 34-34
namespace Ogre { class Entity; }  // lines 35-35
namespace Ogre { class SceneNode; }  // lines 36-36
---

apps/openmw/mwrender/npcanimation.cpp should add these lines:
namespace ESM { struct BodyPart; }
namespace ESM { struct Static; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace Ogre { class MovableObject; }
namespace Ogre { class SkeletonInstance; }

apps/openmw/mwrender/npcanimation.cpp should remove these lines:
- #include <OgreBone.h>  // lines 1-1
- #include <OgreSkeleton.h>  // lines 3-3
- #include <OgreTechnique.h>  // lines 5-5
- #include <assert.h>  // lines 7-7
- #include <stdlib.h>  // lines 11-11
- #include <algorithm>  // lines 12-12
- #include <algorithm>  // lines 13-13
- #include <components/misc/resourcehelpers.hpp>  // lines 8-8
- #include <exception>  // lines 15-15
- #include <extern/shiny/Main/Factory.hpp>  // lines 9-9
- #include <iostream>  // lines 16-16
- #include <iostream>  // lines 17-17
- #include <typeinfo>  // lines 18-18
- #include <typeinfo>  // lines 19-19
- #include <utility>  // lines 21-21
- #include "../mwworld/esmstore.hpp"  // lines 29-29
- #include "OgreAnimationState.h"  // lines 31-31
- #include "OgreAnimationState.h"  // lines 32-32
- #include "OgreAny.h"  // lines 33-33
- #include "OgreAny.h"  // lines 34-34
- #include "OgreBlendMode.h"  // lines 35-35
- #include "OgreBlendMode.h"  // lines 36-36
- #include "OgreColourValue.h"  // lines 37-37
- #include "OgreCommon.h"  // lines 38-38
- #include "OgreCommon.h"  // lines 39-39
- #include "OgreMaterial.h"  // lines 41-41
- #include "OgreMovableObject.h"  // lines 42-42
- #include "OgreMovableObject.h"  // lines 43-43
- #include "OgreNode.h"  // lines 45-45
- #include "OgrePass.h"  // lines 46-46
- #include "OgrePass.h"  // lines 47-47
- #include "OgreQuaternion.h"  // lines 49-49
- #include "OgreUserObjectBindings.h"  // lines 50-50
- #include "OgreUserObjectBindings.h"  // lines 51-51
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/creaturestats.hpp"  // lines 53-53
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 55-55
- #include "apps/openmw/mwrender/../mwworld/containerstore.hpp"  // lines 57-57
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 58-58
- #include "apps/openmw/mwrender/../mwworld/livecellref.hpp"  // lines 59-59
- #include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // lines 61-61
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 62-62
- #include "apps/openmw/mwrender/../mwworld/store.hpp"  // lines 63-63
- #include "apps/openmw/mwrender/animation.hpp"  // lines 65-65
- #include "apps/openmw/mwrender/weaponanimation.hpp"  // lines 66-66
- #include "apps/openmw/mwrender/weaponanimation.hpp"  // lines 67-67
- #include "components/esm/defs.hpp"  // lines 69-69
- #include "components/esm/loadbody.hpp"  // lines 70-70
- #include "components/esm/loadbody.hpp"  // lines 71-71
- #include "components/esm/loadclot.hpp"  // lines 72-72
- #include "components/esm/loadclot.hpp"  // lines 73-73
- #include "components/esm/loadligh.hpp"  // lines 74-74
- #include "components/esm/loadligh.hpp"  // lines 75-75
- #include "components/esm/loadmgef.hpp"  // lines 77-77
- #include "components/esm/loadnpc.hpp"  // lines 79-79
- #include "components/esm/loadrace.hpp"  // lines 81-81
- #include "components/esm/loadstat.hpp"  // lines 82-82
- #include "components/esm/loadstat.hpp"  // lines 83-83
- #include "components/esm/loadweap.hpp"  // lines 84-84
- #include "components/esm/loadweap.hpp"  // lines 85-85
- #include "components/misc/stringops.hpp"  // lines 86-86
- #include "components/misc/stringops.hpp"  // lines 87-87
- namespace Ogre { class Camera; }  // lines 94-94

The full include-list for apps/openmw/mwrender/npcanimation.cpp:
#include "npcanimation.hpp"
#include <OgreEntity.h>                 // for Entity
#include <OgreSubEntity.h>              // for SubEntity
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, RAND_MAX
#include <exception>                    // for exception
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreMaterial.h"               // for Material, etc
#include "OgreNode.h"                   // for Node, etc
#include "OgreQuaternion.h"             // for Quaternion
#include "apps/openmw/mwrender/../mwworld/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwrender/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwrender/animation.hpp"  // for Animation
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Flags::Female
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
#include "renderconst.hpp"
namespace ESM { struct BodyPart; }
namespace ESM { struct Static; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace Ogre { class Camera; }  // lines 92-92
namespace Ogre { class MovableObject; }
namespace Ogre { class SkeletonInstance; }
---
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:12:
./apps/opencs/view/doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/view/doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
./apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
./apps/opencs/view/doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_documentmanager.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: redefinition of 'qobject_interface_iid' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/doc/runlogsubview.cpp:4:
In file included from ./apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:57: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                                        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_loader.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/world/refidcollection.cpp should add these lines:

apps/opencs/model/world/refidcollection.cpp should remove these lines:
- #include <utility>  // lines 6-6
- #include "apps/opencs/model/world/columnbase.hpp"  // lines 9-9
- #include "apps/opencs/model/world/record.hpp"  // lines 11-11
- #include "apps/opencs/model/world/refiddata.hpp"  // lines 13-13
- #include "components/esm/loadacti.hpp"  // lines 16-16
- #include "components/esm/loadcrea.hpp"  // lines 18-18
- #include "components/esm/loadingr.hpp"  // lines 20-20
- #include "components/esm/loadlevlist.hpp"  // lines 22-22
- #include "components/esm/loadligh.hpp"  // lines 24-24
- #include "components/esm/loadlock.hpp"  // lines 26-26
- #include "components/esm/loadnpc.hpp"  // lines 28-28
- #include "components/esm/loadprob.hpp"  // lines 30-30
- #include "components/esm/loadrepa.hpp"  // lines 32-32
- #include "components/esm/loadstat.hpp"  // lines 34-34
- #include "components/esm/loadweap.hpp"  // lines 36-36

The full include-list for apps/opencs/model/world/refidcollection.cpp:
#include "refidcollection.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <memory>                       // for auto_ptr, etc
#include <stdexcept>                    // for logic_error, runtime_error
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/world/columnbase.hpp"  // for ColumnBase, etc
#include "apps/opencs/model/world/record.hpp"  // for RecordBase, etc
#include "apps/opencs/model/world/refiddata.hpp"  // for RefIdData, etc
#include "columns.hpp"                  // for ColumnId::ColumnId_Biped, etc
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light, etc
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Flags, etc
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon, etc
#include "refidadapter.hpp"             // for RefIdAdapter
#include "refidadapterimp.hpp"          // for NpcColumns, CreatureColumns, etc
---
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_runner.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtableproxymodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/essimporter/importer.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_regionmap.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_data.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/essimporter/importer.cpp should add these lines:
#include <unistd.h>                     // for profil

apps/essimporter/importer.cpp should remove these lines:
- #include <stddef.h>  // lines 15-15
- #include <cmath>  // lines 16-16
- #include <cmath>  // lines 17-17
- #include <components/esm/player.hpp>  // lines 13-13
- #include <iomanip>  // lines 19-19
- #include <iostream>  // lines 21-21
- #include <map>  // lines 23-23
- #include <utility>  // lines 26-26
- #include "OgreDataStream.h"  // lines 30-30
- #include "OgreImage.h"  // lines 32-32
- #include "OgreLogManager.h"  // lines 34-34
- #include "OgrePixelFormat.h"  // lines 36-36
- #include "OgreSharedPtr.h"  // lines 37-37
- #include "OgreSharedPtr.h"  // lines 38-38
- #include "components/esm/cellid.hpp"  // lines 39-39
- #include "components/esm/cellid.hpp"  // lines 40-40
- #include "components/esm/dialoguestate.hpp"  // lines 42-42
- #include "components/esm/esmcommon.hpp"  // lines 44-44
- #include "components/esm/loadnpc.hpp"  // lines 46-46
- #include "components/esm/loadtes3.hpp"  // lines 48-48
- #include "components/esm/npcstate.hpp"  // lines 49-49
- #include "components/esm/npcstate.hpp"  // lines 50-50

The full include-list for apps/essimporter/importer.cpp:
#include "importer.hpp"
#include <OgreRoot.h>                   // for Root
#include <stddef.h>                     // for size_t
#include <unistd.h>                     // for profil
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/defs.hpp>      // for FourCC, FourCC<>::value, etc
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadarmo.hpp>  // for Armor
#include <components/esm/loadclot.hpp>  // for Clothing
#include <components/esm/loadench.hpp>  // for Enchantment
#include <components/esm/loadlevlist.hpp>  // for CreatureLevList, etc
#include <components/esm/loadspel.hpp>  // for Spell
#include <components/esm/loadweap.hpp>  // for Weapon
#include <iomanip>                      // for operator<<, setfill, setw
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <map>                          // for map, map<>::mapped_type, etc
#include <set>                          // for set
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector, etc
#include "OgreDataStream.h"             // for DataStreamPtr, etc
#include "OgreImage.h"                  // for Image
#include "OgreLogManager.h"             // for LogManager
#include "OgrePixelFormat.h"            // for PixelFormat::PF_BYTE_BGRA
#include "components/esm/dialoguestate.hpp"  // for DialogueState
#include "components/esm/esmcommon.hpp"  // for NAME, NAME64
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadtes3.hpp"  // for Header, Header::MasterData, etc
#include "converter.hpp"                // for DefaultConverter, Converter, etc
#include "importercontext.hpp"          // for Context
---
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_commanddispatcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtablebase.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_resourcetable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/tools/moc_tools.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/tools/moc_reportmodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_viewmanager.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_view.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_operations.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_operation.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_subview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_startup.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_filedialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_newgame.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/engine.cpp:8:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_filewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_adjusterwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_loader.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/openmw/engine.cpp:1:
In file included from /usr/include/OGRE/OgreRenderWindow.h:29:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^

apps/opencs/model/doc/documentmanager.hpp should add these lines:

apps/opencs/model/doc/documentmanager.hpp should remove these lines:
- #include <QArgument>  // lines 7-7

The full include-list for apps/opencs/model/doc/documentmanager.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QObject>                      // for QObject
#include <QThread>                      // for QThread
#include <boost/filesystem/path.hpp>    // for path
#include <components/to_utf8/to_utf8.hpp>  // for FromType
#include <string>                       // for string
#include <vector>                       // for vector
#include "../world/resourcesmanager.hpp"  // for ResourcesManager
#include "loader.hpp"                   // for Loader
namespace CSMDoc { class Document; }  // lines 24-24
namespace Files { class ConfigurationManager; }  // lines 18-18
---
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_globaldebugprofilemenu.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_runlogsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hppIn file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_table.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/doc/documentmanager.cpp should add these lines:

apps/opencs/model/doc/documentmanager.cpp should remove these lines:
- #include <QtCore>  // lines 4-4
- #include <QtCore>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <boost/filesystem/operations.hpp>  // lines 3-3
- #include <components/files/configurationmanager.hpp>  // lines 17-17
- #include <stdexcept>  // lines 7-7
- #include "apps/opencs/model/doc/../world/resourcesmanager.hpp"  // lines 9-9
- #include "apps/opencs/model/doc/loader.hpp"  // lines 10-10
- #include "apps/opencs/model/doc/loader.hpp"  // lines 11-11
- #include "components/to_utf8/to_utf8.hpp"  // lines 12-12
- #include "components/to_utf8/to_utf8.hpp"  // lines 13-13
- #include "document.hpp"  // lines 20-20

The full include-list for apps/opencs/model/doc/documentmanager.cpp:
#include "documentmanager.hpp"
---
In file included from apps/openmw/mwmechanics/combat.cpp:13:
In file included from apps/openmw/mwmechanics/../mwbase/soundmanager.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_tablesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_scriptsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:36:
./apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^

apps/launcher/utils/lineedit.hpp should add these lines:

apps/launcher/utils/lineedit.hpp should remove these lines:
- #include <QtCore>  // lines 15-15
- class QResizeEvent;  // lines 21-21
- class QWidget;  // lines 23-23

The full include-list for apps/launcher/utils/lineedit.hpp:
#include <QLineEdit>                    // for QLineEdit
#include <QtCore>                       // for QString, Q_OBJECT, slots
class QResizeEvent;  // lines 18-18
class QToolButton;  // lines 22-22
class QWidget;  // lines 19-19
---

(apps/opencs/model/world/refidadapter.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/refidadapter.cpp has correct #includes/fwd-decls)

apps/launcher/utils/lineedit.cpp should add these lines:

apps/launcher/utils/lineedit.cpp should remove these lines:
- #include <QStyle>  // lines 1-1
- #include <QStyle>  // lines 2-2
- #include <QToolButton>  // lines 3-3
- #include <QToolButton>  // lines 4-4
- #include <QtGui>  // lines 6-6
- class QResizeEvent;  // lines 10-10
- class QResizeEvent;  // lines 12-12

The full include-list for apps/launcher/utils/lineedit.cpp:
#include "lineedit.hpp"
#include <QtGui>                        // for QToolButton, QPixmap, etc
---
In file included from apps/opencs/view/tools/reportsubview.cpp:2:
./apps/opencs/view/tools/../doc/subview.hpp:17:5: error: expected '{'
    class Data;
    ^
./apps/opencs/view/tools/../doc/subview.hpp:18:1: error: extraneous closing brace ('}')
}
^
./apps/opencs/view/tools/../doc/subview.hpp:21:5: error: expected '{'
    class View;
    ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_util.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
./apps/opencs/view/tools/../doc/subview.hpp:23:28: error: expected class name
    class SubView : public QDockWidget
                           ^
./apps/opencs/view/tools/../doc/subview.hpp:73:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/tools/reportsubview.cpp:4:
apps/opencs/view/tools/reportsubview.hpp:21:34: error: base class has incomplete type
    class ReportSubView : public CSVDoc::SubView
                          ~~~~~~~^~~~~~~~~~~~~~~
./apps/opencs/view/tools/../doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp
apps/opencs/model/tools/referenceablecheck.hpp should add these lines:

apps/opencs/model/tools/referenceablecheck.hpp should remove these lines:
- #include <string>  // lines 4-4
- #include "../doc/stage.hpp"  // lines 6-6
- #include "../world/data.hpp"  // lines 7-7
- #include "../world/refiddata.hpp"  // lines 8-8
- #include "../world/universalid.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../world/../doc/stage.hpp"  // lines 10-10
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 11-11
- namespace CSMDoc { namespace ESM { struct Class; } }  // lines 25-25
- namespace CSMDoc { namespace ESM { struct Faction; } }  // lines 31-31
- namespace CSMDoc { namespace ESM { struct Race; } }  // lines 40-40

The full include-list for apps/opencs/model/tools/referenceablecheck.hpp:
namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 14-14
namespace CSMDoc { namespace CSMWorld { class RefIdData; } }  // lines 17-17
namespace CSMDoc { namespace CSMWorld { template <typename RecordT> struct RefIdDataContainer; } }  // lines 18-18
namespace CSMDoc { namespace ESM { struct Activator; } }  // lines 21-21
namespace CSMDoc { namespace ESM { struct Apparatus; } }  // lines 22-22
namespace CSMDoc { namespace ESM { struct Armor; } }  // lines 23-23
namespace CSMDoc { namespace ESM { struct Book; } }  // lines 24-24
namespace CSMDoc { namespace ESM { struct Clothing; } }  // lines 26-26
namespace CSMDoc { namespace ESM { struct Container; } }  // lines 27-27
namespace CSMDoc { namespace ESM { struct Creature; } }  // lines 28-28
namespace CSMDoc { namespace ESM { struct CreatureLevList; } }  // lines 29-29
namespace CSMDoc { namespace ESM { struct Door; } }  // lines 30-30
namespace CSMDoc { namespace ESM { struct Ingredient; } }  // lines 32-32
namespace CSMDoc { namespace ESM { struct ItemLevList; } }  // lines 33-33
namespace CSMDoc { namespace ESM { struct Light; } }  // lines 34-34
namespace CSMDoc { namespace ESM { struct Lockpick; } }  // lines 35-35
namespace CSMDoc { namespace ESM { struct Miscellaneous; } }  // lines 36-36
namespace CSMDoc { namespace ESM { struct NPC; } }  // lines 37-37
namespace CSMDoc { namespace ESM { struct Potion; } }  // lines 38-38
namespace CSMDoc { namespace ESM { struct Probe; } }  // lines 39-39
namespace CSMDoc { namespace ESM { struct Repair; } }  // lines 41-41
namespace CSMDoc { namespace ESM { struct Static; } }  // lines 42-42
namespace CSMDoc { namespace ESM { struct Weapon; } }  // lines 43-43
---

apps/opencs/model/tools/referenceablecheck.cpp should add these lines:
#include "apps/opencs/model/tools/../world/refcollection.hpp"
namespace CSMDoc { namespace CSMWorld { struct RecordBase; } }

apps/opencs/model/tools/referenceablecheck.cpp should remove these lines:
- #include <components/misc/stringops.hpp>  // lines 1-1
- #include <utility>  // lines 2-2
- #include <utility>  // lines 3-3
- #include "../world/record.hpp"  // lines 5-5
- #include "../world/universalid.hpp"  // lines 6-6
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 7-7
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 8-8
- #include "apps/opencs/model/tools/../world/refiddata.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../world/refiddata.hpp"  // lines 10-10
- #include "components/esm/loadacti.hpp"  // lines 11-11
- #include "components/esm/loadacti.hpp"  // lines 12-12
- #include "components/esm/loadalch.hpp"  // lines 13-13
- #include "components/esm/loadalch.hpp"  // lines 14-14
- #include "components/esm/loadappa.hpp"  // lines 15-15
- #include "components/esm/loadappa.hpp"  // lines 16-16
- #include "components/esm/loadarmo.hpp"  // lines 17-17
- #include "components/esm/loadarmo.hpp"  // lines 18-18
- #include "components/esm/loadbook.hpp"  // lines 19-19
- #include "components/esm/loadbook.hpp"  // lines 20-20
- #include "components/esm/loadclot.hpp"  // lines 21-21
- #include "components/esm/loadclot.hpp"  // lines 22-22
- #include "components/esm/loadcont.hpp"  // lines 23-23
- #include "components/esm/loadcont.hpp"  // lines 24-24
- #include "components/esm/loadcrea.hpp"  // lines 25-25
- #include "components/esm/loadcrea.hpp"  // lines 26-26
- #include "components/esm/loaddoor.hpp"  // lines 27-27
- #include "components/esm/loaddoor.hpp"  // lines 28-28
- #include "components/esm/loadingr.hpp"  // lines 29-29
- #include "components/esm/loadingr.hpp"  // lines 30-30
- #include "components/esm/loadlevlist.hpp"  // lines 31-31
- #include "components/esm/loadlevlist.hpp"  // lines 32-32
- #include "components/esm/loadligh.hpp"  // lines 33-33
- #include "components/esm/loadligh.hpp"  // lines 34-34
- #include "components/esm/loadlock.hpp"  // lines 35-35
- #include "components/esm/loadlock.hpp"  // lines 36-36
- #include "components/esm/loadmisc.hpp"  // lines 37-37
- #include "components/esm/loadmisc.hpp"  // lines 38-38
- #include "components/esm/loadnpc.hpp"  // lines 39-39
- #include "components/esm/loadnpc.hpp"  // lines 40-40
- #include "components/esm/loadprob.hpp"  // lines 41-41
- #include "components/esm/loadprob.hpp"  // lines 42-42
- #include "components/esm/loadrepa.hpp"  // lines 43-43
- #include "components/esm/loadrepa.hpp"  // lines 44-44
- #include "components/esm/loadstat.hpp"  // lines 45-45
- #include "components/esm/loadstat.hpp"  // lines 46-46
- #include "components/esm/loadweap.hpp"  // lines 47-47
- #include "components/esm/loadweap.hpp"  // lines 48-48
- namespace CSMDoc { namespace ESM { struct Class; } }  // lines 52-52
- namespace CSMDoc { namespace ESM { struct Class; } }  // lines 56-56
- namespace CSMDoc { namespace ESM { struct Faction; } }  // lines 53-53
- namespace CSMDoc { namespace ESM { struct Faction; } }  // lines 57-57
- namespace CSMDoc { namespace ESM { struct Race; } }  // lines 54-54
- namespace CSMDoc { namespace ESM { struct Race; } }  // lines 58-58

The full include-list for apps/opencs/model/tools/referenceablecheck.cpp:
#include "referenceablecheck.hpp"
#include "apps/opencs/model/tools/../world/refcollection.hpp"
namespace CSMDoc { namespace CSMWorld { struct RecordBase; } }
---
:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
error: no such file or directory: 'build-include/apps/launcher/qrc_launcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_regionmapsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_tablebottombox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/engine.cpp:31:
In file included from ./apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp:10:
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
./apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
In file included from apps/openmw/mwmechanics/activespells.hpp:4:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_referencecreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_creator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_scenesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:13:
apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/opencs/model/tools/reportmodel.hpp should add these lines:

apps/opencs/model/tools/reportmodel.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4
- #include <QtCore>  // lines 6-6
- #include <utility>  // lines 9-9

The full include-list for apps/opencs/model/tools/reportmodel.hpp:
#include <QtCore>                       // for ItemDataRole::DisplayRole, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "../world/universalid.hpp"     // for UniversalId
---
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_genericcreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_infocreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/tools/reportmodel.cpp should add these lines:
#include <QAbstractTableModel>          // for QModelIndex

apps/opencs/model/tools/reportmodel.cpp should remove these lines:

The full include-list for apps/opencs/model/tools/reportmodel.cpp:
#include "reportmodel.hpp"
#include <QAbstractTableModel>          // for QModelIndex
#include "apps/opencs/model/tools/../world/universalid.hpp"
---
apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_scriptedit.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_cellcreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_dialoguesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_referenceablecreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
In file included from apps/openmw/mwmechanics/creaturestats.hpp:19:
apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_previewsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolmode.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:47:16: error: field has incomplete type 'ESM::Spell'
        Spells mSpells;
               ^
apps/openmw/mwmechanics/../mwbase/world.hpp:34:12: note: forward declaration of 'ESM::Spell'
    struct Spell;
           ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_regionmap.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_pushbutton.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/render/worldspacewidget.cpp:9:
apps/opencs/view/render/../world/physicssystem.hpp:10:5: error: expected '{'
    class Camera;
    ^
apps/opencs/view/render/../world/physicssystem.hpp:13:1: error: expected unqualified-id
{
^
apps/opencs/view/render/../world/physicssystem.hpp:28:5: error: expected '{'
    class SceneWidget;
    ^
apps/opencs/view/render/../world/physicssystem.hpp:29:1: error: extraneous closing brace ('}')
}
^
apps/opencs/view/render/../world/physicssystem.hpp:36:44: error: use of undeclared identifier 'Ogre'
            std::map<std::string, std::map<Ogre::SceneManager *, std::string> > mRefIdToSceneNode;
                                           ^
apps/opencs/view/render/../world/physicssystem.hpp:36:64: error: expected expression
            std::map<std::string, std::map<Ogre::SceneManager *, std::string> > mRefIdToSceneNode;
                                                               ^
apps/opencs/view/render/../world/physicssystem.hpp:36:79: error: expected a type
            std::map<std::string, std::map<Ogre::SceneManager *, std::string> > mRefIdToSceneNode;
                                                                              ^

apps/opencs/model/world/land.hpp should add these lines:

apps/opencs/model/world/land.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- namespace ESM { class ESMReader; }  // lines 12-12
- namespace ESM { struct Land; }  // lines 13-13

The full include-list for apps/opencs/model/world/land.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
namespace ESM { class ESMReader; }  // lines 9-9
namespace ESM { struct Land; }  // lines 10-10
---

apps/opencs/model/world/land.cpp should add these lines:

apps/opencs/model/world/land.cpp should remove these lines:
- #include "components/esm/loadland.hpp"  // lines 4-4
- namespace ESM { class ESMReader; }  // lines 10-10

The full include-list for apps/opencs/model/world/land.cpp:
#include "land.hpp"
#include <sstream>                      // for basic_ostream::operator<<, etc
#include "components/esm/loadland.hpp"  // for Land
namespace ESM { class ESMReader; }  // lines 8-8
---
In file included from apps/openmw/mwmechanics/combat.cpp:18:
In file included from apps/openmw/mwmechanics/../mwmechanics/npcstats.hpp:12:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
apps/opencs/view/render/../world/physicssystem.hpp:38:22: error: use of undeclared identifier 'Ogre'
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> mSceneWidgets;
                     ^
apps/opencs/view/render/../world/physicssystem.hpp:38:41: error: expected expression
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> mSceneWidgets;
                                        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_dragrecordtable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpp:40:40: error: use of undeclared identifier 'Ogre'
            std::multimap<std::string, Ogre::SceneManager *> mTerrain;
                                       ^
apps/opencs/view/render/../world/physicssystem.hpp:40:60: error: expected expression
            std::multimap<std::string, Ogre::SceneManager *> mTerrain;
                                                           ^
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetooltoggle.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetooltoggle2.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpp:47:34: error: use of undeclared identifier 'Ogre'
            void addSceneManager(Ogre::SceneManager *sceneMgr, CSVRender::SceneWidget * scene);
                                 ^
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolbar.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpp:47:64: error: use of undeclared identifier 'CSVRender'
            void addSceneManager(Ogre::SceneManager *sceneMgr, CSVRender::SceneWidget * scene);
                                                               ^
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolrun.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpperror: no such file or directory: 'build-include/apps/opencs/view/render/moc_scenewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
:49:37: error: use of undeclared identifier 'Ogre'
            void removeSceneManager(Ogre::SceneManager *sceneMgr);
                                    ^
apps/opencs/view/render/../world/physicssystem.hpp:53:27: error: use of undeclared identifier 'Ogre'
                    const Ogre::Vector3 &position, const Ogre::Quaternion &rotation,
                          ^
apps/opencs/view/render/../world/physicssystem.hpperror: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetool.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
:53:58: error: use of undeclared identifier 'Ogre'
                    const Ogre::Vector3 &position, const Ogre::Quaternion &rotation,
                                                         ^
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_modebutton.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpp:60:40: error: use of undeclared identifier 'Ogre'
                    float scale, const Ogre::Vector3 &position,
                                       ^
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_worldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/render/../world/physicssystem.hpp:61:27: error: use of undeclared identifier 'Ogre'
                    const Ogre::Quaternion &rotation, bool placeable=false);
                          ^
apps/opencs/view/render/../world/physicssystem.hpp:64:27: error: use of undeclared identifier 'Ogre'
                    const Ogre::Vector3 &position, const Ogre::Quaternion &rotation);
                          ^
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_previewwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_dialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
fatal errorerror: no such file or directory: 'build-include/apps/opencs/view/render/moc_pagedworldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
: too many errors emitted, stopping now [-ferror-limit=]
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_editmode.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_page.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_unpagedworldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/filter/leafnode.hpp should add these lines:

apps/opencs/model/filter/leafnode.hpp should remove these lines:
- #include <vector>  // lines 5-5

The full include-list for apps/opencs/model/filter/leafnode.hpp:
#include <vector>                       // for vector
#include "node.hpp"                     // for Node
---

(apps/opencs/model/filter/leafnode.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/tools/moc_reportsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_view.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_listview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
errorerror: no such file or directory: 'build-include/apps/opencs/view/tools/moc_reporttable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
: no such file or directory: 'build-include/apps/opencs/view/settings/moc_booleanview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_rangeview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_settingwindow.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_textview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_resizeablestackedwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/settings/moc_setting.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/tools/reportsubview.cpp:8:11: error: type 'CSVDoc::SubView' is not a direct or virtual base of 'CSVTools::ReportSubView'
error: no such file or directory: 'build-include/apps/opencs/qrc_resources.cxx': CSVDoc::SubView (id)

          ^~~~~~~
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
apps/opencs/view/tools/reportsubview.cpp:10:29: error: no matching constructor for initialization of 'CSVTools::ReportTable'
    setWidget (mTable = new ReportTable (document, id, this));
                            ^            ~~~~~~~~~~~~~~~~~~
apps/opencs/view/tools/reporttable.hpp:63:13: note: candidate constructor not viable: no known conversion from 'CSVTools::ReportSubView *' to 'QWidget *' for 3rd argument
            ReportTable (CSMDoc::Document& document, const CSMWorld::UniversalId& id,
            ^
apps/opencs/view/tools/reporttable.hpp:44:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
    class ReportTable : public CSVWorld::DragRecordTable
          ^
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_spinbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
errorapps/opencs/view/tools/reportsubview.cpp:12:5: error: use of undeclared identifier 'connect'
    connect (mTable, SIGNAL (editRequest (const CSMWorld::UniversalId&, const std::string&)),
    ^
: no such file or directory: 'build-include/apps/opencs/model/settings/moc_connector.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/tools/soundcheck.hpp should add these lines:

apps/opencs/model/tools/soundcheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Sound; }  // lines 17-17

The full include-list for apps/opencs/model/tools/soundcheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Sound; }  // lines 8-8
---

apps/opencs/model/tools/soundcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/soundcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 5-5

The full include-list for apps/opencs/model/tools/soundcheck.cpp:
#include "soundcheck.hpp"
#include <string>                       // for string
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
#include "components/esm/loadsoun.hpp"  // for Sound, SOUNstruct
---
error: no such file or directory: 'build-include/apps/opencs/qrc_launcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/settings/moc_usersettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_filterbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:42:
In file included from ./apps/opencs/view/render/../../model/world/refcollection.hpp:12:
./apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:42:
./apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
./apps/opencs/view/render/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_recordfilterbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_editwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/view/render/terrainstorage.cpp:10:
In file included from ./apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from ./apps/opencs/view/render/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/launcher/playpage.cpp:1:
apps/launcher/playpage.hpp:8:10: fatal error: 'ui_playpage.h' file not found
#include "ui_playpage.h"
         ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^

apps/opencs/view/world/scriptsubview.hpp should add these lines:

apps/opencs/view/world/scriptsubview.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 7-7
- #include "../doc/subview.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 11-11

The full include-list for apps/opencs/view/world/scriptsubview.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
class QModelIndex;  // lines 14-14
namespace CSMDoc { class Document; }  // lines 18-18
namespace CSMWorld { class IdTable; }  // lines 23-23
namespace CSMWorld { namespace CSVWorld { class ScriptEdit; } }  // lines 27-27
---

apps/opencs/view/world/scriptsubview.cpp should add these lines:

apps/opencs/view/world/scriptsubview.cpp should remove these lines:
- #include <QtCore>  // lines 3-3
- #include <QtGui>  // lines 5-5
- #include <istream>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include "../../model/doc/document.hpp"  // lines 10-10
- #include "../../model/world/columnbase.hpp"  // lines 11-11
- #include "../../model/world/commands.hpp"  // lines 12-12
- #include "../../model/world/data.hpp"  // lines 13-13
- #include "../../model/world/idtable.hpp"  // lines 14-14
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 16-16
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 17-17
- #include "apps/opencs/view/world/scripthighlighter.hpp"  // lines 18-18
- #include "apps/opencs/view/world/scripthighlighter.hpp"  // lines 19-19
- #include "scriptedit.hpp"  // lines 20-20

The full include-list for apps/opencs/view/world/scriptsubview.cpp:
#include "scriptsubview.hpp"
#include <QtCore>                       // for QModelIndex
#include <QtGui>                        // for QTextCursor
#include <istream>                      // for istringstream
#include "../../model/world/universalid.hpp"  // for UniversalId
---
In file included from apps/opencs/view/settings/rangeview.cpp:6:
In file included from ./apps/opencs/view/settings/view.hpp:8:
apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^

apps/opencs/view/world/dragrecordtable.hpp should add these lines:

apps/opencs/view/world/dragrecordtable.hpp should remove these lines:
- #include <QtGui/qevent.h>  // lines 4-4
- #include <vector>  // lines 9-9
- class QAction;  // lines 13-13
- class QDragEnterEvent;  // lines 14-14
- class QDragMoveEvent;  // lines 15-15

The full include-list for apps/opencs/view/world/dragrecordtable.hpp:
#include <stddef.h>                     // for NULL
#include <QTableView>                   // for QTableView
#include <vector>                       // for vector
class QDragEnterEvent;  // lines 10-10
class QDragMoveEvent;  // lines 11-11
class QWidget;  // lines 16-16
namespace CSMDoc { class Document; }  // lines 20-20
namespace CSMWorld { class UniversalId; }  // lines 25-25
---

apps/opencs/view/world/dragrecordtable.cpp should add these lines:

apps/opencs/view/world/dragrecordtable.cpp should remove these lines:
- #include <QtCore>  // lines 3-3
- #include <QtGui>  // lines 5-5
- #include <string>  // lines 7-7

The full include-list for apps/opencs/view/world/dragrecordtable.cpp:
#include "dragrecordtable.hpp"
#include <QDrag>                        // for QDrag
#include <QtCore>                       // for DropAction::CopyAction, etc
#include <QtGui>                        // for QDragEnterEvent, etc
#include <string>                       // for string
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
---
In file included from apps/opencs/view/settings/rangeview.cpp:6:
./apps/opencs/view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/settings/rangeview.cpp:6:
./apps/opencs/view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/launcher/graphicspage.cpp:7:
apps/launcher/graphicspage.hpp:9:10: fatal error: 'ui_graphicspage.h' file not found
#include "ui_graphicspage.h"
         ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^

apps/opencs/model/filter/notnode.hpp should add these lines:

apps/opencs/model/filter/notnode.hpp should remove these lines:
- #include <map>  // lines 5-5
- namespace CSMFilter { class Node; }  // lines 19-19
- namespace CSMWorld { class IdTableBase; }  // lines 22-22
- namespace boost { template <class Y> class shared_ptr; }  // lines 25-25

The full include-list for apps/opencs/model/filter/notnode.hpp:
#include <map>                          // for map
#include "unarynode.hpp"                // for UnaryNode
namespace CSMFilter { class Node; }  // lines 17-17
namespace CSMWorld { class IdTableBase; }  // lines 10-10
namespace boost { template <class Y> class shared_ptr; }  // lines 13-13
---

apps/opencs/model/filter/notnode.cpp should add these lines:

apps/opencs/model/filter/notnode.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include "apps/opencs/model/filter/node.hpp"  // lines 6-6
- #include "apps/opencs/model/filter/unarynode.hpp"  // lines 8-8
- namespace CSMWorld { class IdTableBase; }  // lines 14-14

The full include-list for apps/opencs/model/filter/notnode.cpp:
#include "notnode.hpp"
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include "apps/opencs/model/filter/node.hpp"  // for Node
#include "apps/opencs/model/filter/unarynode.hpp"  // for UnaryNode
namespace CSMWorld { class IdTableBase; }  // lines 12-12
---
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/opencs/model/world/data.hpp should add these lines:
#include "components/esm/esmwriter.hpp"  // for Utf8Encoder
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/model/world/data.hpp should remove these lines:
- #include <QArgument>  // lines 26-26
- #include <QModelIndex>  // lines 27-27
- #include <QObject>  // lines 28-28
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <components/esm/debugprofile.hpp>  // lines 7-7
- #include <components/esm/filter.hpp>  // lines 8-8
- #include <components/esm/loadbody.hpp>  // lines 9-9
- #include <components/esm/loadbsgn.hpp>  // lines 10-10
- #include <components/esm/loaddial.hpp>  // lines 11-11
- #include <components/esm/loadench.hpp>  // lines 12-12
- #include <components/esm/loadfact.hpp>  // lines 13-13
- #include <components/esm/loadglob.hpp>  // lines 14-14
- #include <components/esm/loadgmst.hpp>  // lines 15-15
- #include <components/esm/loadmgef.hpp>  // lines 16-16
- #include <components/esm/loadrace.hpp>  // lines 17-17
- #include <components/esm/loadregn.hpp>  // lines 18-18
- #include <components/esm/loadscpt.hpp>  // lines 19-19
- #include <components/esm/loadskil.hpp>  // lines 20-20
- #include <components/esm/loadsndg.hpp>  // lines 21-21
- #include <components/esm/loadsoun.hpp>  // lines 22-22
- #include <components/esm/loadspel.hpp>  // lines 23-23
- #include <components/to_utf8/to_utf8.hpp>  // lines 24-24
- #include <map>  // lines 29-29
- #include <string>  // lines 30-30
- #include <string>  // lines 31-31
- #include <vector>  // lines 32-32
- #include "../doc/stage.hpp"  // lines 34-34
- #include "apps/opencs/model/world/record.hpp"  // lines 35-35
- #include "cell.hpp"  // lines 36-36
- #include "idcollection.hpp"  // lines 37-37
- #include "infocollection.hpp"  // lines 38-38
- #include "land.hpp"  // lines 39-39
- #include "landtexture.hpp"  // lines 40-40
- #include "pathgrid.hpp"  // lines 41-41
- #include "subcellcollection.hpp"  // lines 44-44
- #include "universalid.hpp"  // lines 45-45
- namespace CSMDoc { class QModelIndex; }  // lines 59-59
- namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 62-62
- namespace CSMDoc { namespace ESM { struct RefNum; } }  // lines 55-55
- namespace CSMDoc { namespace ESM { struct RefNum; } }  // lines 67-67

The full include-list for apps/opencs/model/world/data.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include <boost/filesystem/path.hpp>    // for path
#include "components/esm/esmwriter.hpp"  // for Utf8Encoder
#include "refcollection.hpp"            // for RefCollection
#include "refidcollection.hpp"          // for RefIdCollection
namespace CSMDoc { class QAbstractItemModel; }  // lines 58-58
namespace CSMDoc { class QModelIndex; }  // lines 47-47
namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 49-49
namespace CSMDoc { namespace CSMWorld { class CollectionBase; } }  // lines 52-52
namespace CSMDoc { namespace CSMWorld { class Resources; } }  // lines 79-79
namespace CSMDoc { namespace CSMWorld { class ResourcesManager; } }  // lines 80-80
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace ESM { class ESMReader; } }  // lines 73-73
namespace CSMDoc { namespace ESM { struct Dialogue; } }  // lines 74-74
---
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/opencs/model/world/data.cpp should add these lines:

apps/opencs/model/world/data.cpp should remove these lines:
- #include <QModelIndex>  // lines 6-6
- #include <QModelIndex>  // lines 7-7
- #include <components/esm/cellref.hpp>  // lines 2-2
- #include <components/esm/defs.hpp>  // lines 3-3
- #include <components/esm/esmreader.hpp>  // lines 4-4
- #include <components/esm/loadglob.hpp>  // lines 5-5
- #include <stdexcept>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <utility>  // lines 10-10
- #include "apps/opencs/model/world/../doc/messages.hpp"  // lines 12-12
- #include "apps/opencs/model/world/../doc/messages.hpp"  // lines 13-13
- #include "apps/opencs/model/world/cell.hpp"  // lines 14-14
- #include "apps/opencs/model/world/cell.hpp"  // lines 15-15
- #include "apps/opencs/model/world/collectionbase.hpp"  // lines 16-16
- #include "apps/opencs/model/world/collectionbase.hpp"  // lines 17-17
- #include "apps/opencs/model/world/columnbase.hpp"  // lines 18-18
- #include "apps/opencs/model/world/columnbase.hpp"  // lines 19-19
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 20-20
- #include "apps/opencs/model/world/idcollection.hpp"  // lines 21-21
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 22-22
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 23-23
- #include "apps/opencs/model/world/info.hpp"  // lines 24-24
- #include "apps/opencs/model/world/info.hpp"  // lines 25-25
- #include "apps/opencs/model/world/infocollection.hpp"  // lines 26-26
- #include "apps/opencs/model/world/infocollection.hpp"  // lines 27-27
- #include "apps/opencs/model/world/land.hpp"  // lines 28-28
- #include "apps/opencs/model/world/land.hpp"  // lines 29-29
- #include "apps/opencs/model/world/landtexture.hpp"  // lines 30-30
- #include "apps/opencs/model/world/landtexture.hpp"  // lines 31-31
- #include "apps/opencs/model/world/pathgrid.hpp"  // lines 32-32
- #include "apps/opencs/model/world/pathgrid.hpp"  // lines 33-33
- #include "apps/opencs/model/world/ref.hpp"  // lines 34-34
- #include "apps/opencs/model/world/ref.hpp"  // lines 35-35
- #include "apps/opencs/model/world/refcollection.hpp"  // lines 36-36
- #include "apps/opencs/model/world/refcollection.hpp"  // lines 37-37
- #include "apps/opencs/model/world/refidcollection.hpp"  // lines 38-38
- #include "apps/opencs/model/world/refidcollection.hpp"  // lines 39-39
- #include "apps/opencs/model/world/subcellcollection.hpp"  // lines 40-40
- #include "apps/opencs/model/world/subcellcollection.hpp"  // lines 41-41
- #include "apps/opencs/model/world/universalid.hpp"  // lines 42-42
- #include "apps/opencs/model/world/universalid.hpp"  // lines 43-43
- #include "columnimp.hpp"  // lines 44-44
- #include "columns.hpp"  // lines 45-45
- #include "components/esm/debugprofile.hpp"  // lines 46-46
- #include "components/esm/debugprofile.hpp"  // lines 47-47
- #include "components/esm/esmcommon.hpp"  // lines 48-48
- #include "components/esm/esmcommon.hpp"  // lines 49-49
- #include "components/esm/filter.hpp"  // lines 50-50
- #include "components/esm/filter.hpp"  // lines 51-51
- #include "components/esm/loadbody.hpp"  // lines 52-52
- #include "components/esm/loadbody.hpp"  // lines 53-53
- #include "components/esm/loadbsgn.hpp"  // lines 54-54
- #include "components/esm/loadbsgn.hpp"  // lines 55-55
- #include "components/esm/loadcell.hpp"  // lines 56-56
- #include "components/esm/loadcell.hpp"  // lines 57-57
- #include "components/esm/loadclas.hpp"  // lines 58-58
- #include "components/esm/loadclas.hpp"  // lines 59-59
- #include "components/esm/loaddial.hpp"  // lines 60-60
- #include "components/esm/loaddial.hpp"  // lines 61-61
- #include "components/esm/loadench.hpp"  // lines 62-62
- #include "components/esm/loadench.hpp"  // lines 63-63
- #include "components/esm/loadfact.hpp"  // lines 64-64
- #include "components/esm/loadfact.hpp"  // lines 65-65
- #include "components/esm/loadgmst.hpp"  // lines 66-66
- #include "components/esm/loadgmst.hpp"  // lines 67-67
- #include "components/esm/loadland.hpp"  // lines 68-68
- #include "components/esm/loadland.hpp"  // lines 69-69
- #include "components/esm/loadmgef.hpp"  // lines 70-70
- #include "components/esm/loadmgef.hpp"  // lines 71-71
- #include "components/esm/loadrace.hpp"  // lines 72-72
- #include "components/esm/loadrace.hpp"  // lines 73-73
- #include "components/esm/loadregn.hpp"  // lines 74-74
- #include "components/esm/loadregn.hpp"  // lines 75-75
- #include "components/esm/loadscpt.hpp"  // lines 76-76
- #include "components/esm/loadscpt.hpp"  // lines 77-77
- #include "components/esm/loadskil.hpp"  // lines 78-78
- #include "components/esm/loadskil.hpp"  // lines 79-79
- #include "components/esm/loadsndg.hpp"  // lines 80-80
- #include "components/esm/loadsndg.hpp"  // lines 81-81
- #include "components/esm/loadsoun.hpp"  // lines 82-82
- #include "components/esm/loadsoun.hpp"  // lines 83-83
- #include "components/esm/loadspel.hpp"  // lines 84-84
- #include "components/esm/loadspel.hpp"  // lines 85-85
- #include "components/misc/stringops.hpp"  // lines 86-86
- #include "components/misc/stringops.hpp"  // lines 87-87
- #include "components/to_utf8/to_utf8.hpp"  // lines 88-88
- #include "components/to_utf8/to_utf8.hpp"  // lines 89-89
- #include "idtable.hpp"  // lines 91-91
- #include "regionmap.hpp"  // lines 92-92
- #include "resourcesmanager.hpp"  // lines 93-93
- #include "resourcetable.hpp"  // lines 94-94

The full include-list for apps/opencs/model/world/data.cpp:
#include "data.hpp"
---
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/record.hpp:36:12: note: '::CSMWorld::Record' declared here
    struct Record : public RecordBase
           ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/idtypedelegate.cpp:7:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/launcher/playpage.hpp should add these lines:

apps/launcher/playpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QComboBox;  // lines 10-10
- class QPushButton;  // lines 12-12

The full include-list for apps/launcher/playpage.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QWidget>                      // for QWidget
---

(apps/launcher/playpage.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/character.hpp should add these lines:

apps/openmw/mwmechanics/character.hpp should remove these lines:
- #include <components/esm/loadmgef.hpp>  // lines 4-4
- #include <deque>  // lines 7-7
- #include <utility>  // lines 10-10
- #include "../mwworld/ptr.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 16-16
- namespace MWMechanics { class Movement; }  // lines 33-33

The full include-list for apps/openmw/mwmechanics/character.hpp:
#include <stddef.h>                     // for NULL, size_t
#include <deque>                        // for deque
#include <string>                       // for string
#include <utility>                      // for pair
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
namespace MWMechanics { class CreatureStats; }  // lines 32-32
namespace MWRender { class Animation; }  // lines 26-26
namespace MWWorld { class ContainerStoreIterator; }  // lines 20-20
namespace MWWorld { class InventoryStore; }  // lines 21-21
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/opencs/main.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/character.cpp should add these lines:
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat
namespace ESM { struct GameSetting; }
namespace ESM { struct Sound; }
namespace ESM { struct Static; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwmechanics/character.cpp should remove these lines:
- #include <OgreStringConverter.h>  // lines 21-21
- #include <stdlib.h>  // lines 23-23
- #include <algorithm>  // lines 24-24
- #include <algorithm>  // lines 25-25
- #include <cmath>  // lines 27-27
- #include <iostream>  // lines 28-28
- #include <iostream>  // lines 29-29
- #include <typeinfo>  // lines 30-30
- #include <typeinfo>  // lines 31-31
- #include <vector>  // lines 33-33
- #include "../mwbase/soundmanager.hpp"  // lines 36-36
- #include "../mwbase/statemanager.hpp"  // lines 37-37
- #include "../mwworld/esmstore.hpp"  // lines 42-42
- #include "OgreMath.h"  // lines 45-45
- #include "OgreNode.h"  // lines 47-47
- #include "OgreQuaternion.h"  // lines 49-49
- #include "OgreVector3.h"  // lines 51-51
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 52-52
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 53-53
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 54-54
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 55-55
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 57-57
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 58-58
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 59-59
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 61-61
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 62-62
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 63-63
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 65-65
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 66-66
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 67-67
- #include "components/esm/defs.hpp"  // lines 70-70
- #include "components/esm/effectlist.hpp"  // lines 72-72
- #include "components/esm/loadcrea.hpp"  // lines 73-73
- #include "components/esm/loadcrea.hpp"  // lines 74-74
- #include "components/esm/loadgmst.hpp"  // lines 75-75
- #include "components/esm/loadgmst.hpp"  // lines 76-76
- #include "components/esm/loadligh.hpp"  // lines 77-77
- #include "components/esm/loadligh.hpp"  // lines 78-78
- #include "components/esm/loadlock.hpp"  // lines 79-79
- #include "components/esm/loadlock.hpp"  // lines 80-80
- #include "components/esm/loadmgef.hpp"  // lines 82-82
- #include "components/esm/loadprob.hpp"  // lines 83-83
- #include "components/esm/loadprob.hpp"  // lines 84-84
- #include "components/esm/loadskil.hpp"  // lines 86-86
- #include "components/esm/loadsoun.hpp"  // lines 87-87
- #include "components/esm/loadsoun.hpp"  // lines 88-88
- #include "components/esm/loadspel.hpp"  // lines 90-90
- #include "components/esm/loadstat.hpp"  // lines 91-91
- #include "components/esm/loadstat.hpp"  // lines 92-92
- #include "components/esm/loadweap.hpp"  // lines 94-94
- #include "components/settings/settings.hpp"  // lines 95-95
- #include "components/settings/settings.hpp"  // lines 96-96
- #include "security.hpp"  // lines 100-100

The full include-list for apps/openmw/mwmechanics/character.cpp:
#include "character.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <stdlib.h>                     // for RAND_MAX, rand
#include <cmath>                        // for abs, fmod
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwrender/animation.hpp"    // for Animation, etc
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreMath.h"                   // for Radian, Math, operator*, etc
#include "OgreNode.h"                   // for Node
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/effectlist.hpp"  // for EffectList, ENAMstruct
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "npcstats.hpp"                 // for NpcStats
namespace ESM { struct GameSetting; }
namespace ESM { struct Sound; }
namespace ESM { struct Static; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---

apps/opencs/view/doc/runlogsubview.hpp should add these lines:

apps/opencs/view/doc/runlogsubview.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include "apps/opencs/view/doc/../../model/world/universalid.hpp"  // lines 8-8
- namespace CSMDoc { class Document; }  // lines 14-14

The full include-list for apps/opencs/view/doc/runlogsubview.hpp:
#include <QArgument>                    // for Q_OBJECT
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
#include "subview.hpp"                  // for SubView
namespace CSMDoc { class Document; }  // lines 12-12
---

apps/opencs/view/doc/runlogsubview.cpp should add these lines:

apps/opencs/view/doc/runlogsubview.cpp should remove these lines:
- #include "apps/opencs/view/doc/../../model/doc/document.hpp"  // lines 4-4
- #include "apps/opencs/view/doc/../../model/doc/document.hpp"  // lines 5-5
- #include "apps/opencs/view/doc/subview.hpp"  // lines 7-7

The full include-list for apps/opencs/view/doc/runlogsubview.cpp:
#include "runlogsubview.hpp"
#include <QTextEdit>                    // for QTextEdit
#include "apps/opencs/view/doc/subview.hpp"  // for SubView
---
In file included from apps/opencs/model/tools/mandatoryid.cpp:6:
apps/opencs/model/tools/mandatoryid.hpp:25:45: error: expected class name
    class MandatoryIdStage : public CSMDoc::Stage
                                            ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:36:
apps/opencs/view/filter/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from libs/openengine/bullet/physic.cpp:5:
./components/nifbullet/bulletnifloader.hpp:76:35: error: expected class name
struct TriangleMeshShape : public btBvhTriangleMeshShape
                                  ^
./components/nifbullet/bulletnifloader.hpp:79:11: error: member initializer 'btBvhTriangleMeshShape' does not name a non-static data member or base class
        : btBvhTriangleMeshShape(meshInterface, useQuantizedAabbCompression)
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./components/nifbullet/bulletnifloader.hpp:85:16: error: use of undeclared identifier 'getTriangleInfoMap'
        delete getTriangleInfoMap();
               ^

(apps/essimporter/importplayer.hpp has correct #includes/fwd-decls)

apps/essimporter/importplayer.cpp should add these lines:

apps/essimporter/importplayer.cpp should remove these lines:
- #include "apps/essimporter/importacdt.hpp"  // lines 4-4
- #include "components/esm/cellref.hpp"  // lines 6-6
- #include "components/esm/defs.hpp"  // lines 8-8

The full include-list for apps/essimporter/importplayer.cpp:
#include "importplayer.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importacdt.hpp"  // for ActorData
#include "components/esm/cellref.hpp"   // for RefNum
#include "components/esm/defs.hpp"      // for Position
---
./components/nifbullet/bulletnifloader.hpp:86:16: error: use of undeclared identifier 'm_meshInterface'
        delete m_meshInterface;
               ^

apps/opencs/model/settings/setting.hpp should add these lines:

apps/opencs/model/settings/setting.hpp should remove these lines:
- #include <QStringList>  // lines 5-5
- #include <QtCore>  // lines 7-7

The full include-list for apps/opencs/model/settings/setting.hpp:
#include <QMap>                         // for QMap<>::const_iterator, etc
#include <QtCore>                       // for QString, QList, QStringList
#include "support.hpp"                  // for SettingProperty, etc
---
./components/nifbullet/bulletnifloader.hpp:94:40: error: use of undeclared identifier 'OEngine'
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                       ^
./components/nifbullet/bulletnifloader.hpp:94:57: error: expected class name
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                                        ^

apps/opencs/view/tools/reportsubview.hpp should add these lines:
#include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"

apps/opencs/view/tools/reportsubview.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include "apps/opencs/view/tools/../doc/../../model/world/universalid.hpp"  // lines 7-7
- class QModelIndex;  // lines 9-9
- class QTableView;  // lines 10-10

The full include-list for apps/opencs/view/tools/reportsubview.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"
namespace CSMDoc { class Document; }  // lines 15-15
namespace CSVTools { class ReportTable; }  // lines 19-19
---

apps/opencs/view/tools/reportsubview.cpp should add these lines:

apps/opencs/view/tools/reportsubview.cpp should remove these lines:
- #include "apps/opencs/view/tools/../doc/subview.hpp"  // lines 2-2
- #include "apps/opencs/view/tools/../doc/subview.hpp"  // lines 3-3

The full include-list for apps/opencs/view/tools/reportsubview.cpp:
#include "reportsubview.hpp"
#include "reporttable.hpp"              // for ReportTable
---

apps/opencs/model/settings/setting.cpp should add these lines:
#include <QStringList>                  // for QStringList

apps/opencs/model/settings/setting.cpp should remove these lines:

The full include-list for apps/opencs/model/settings/setting.cpp:
#include "setting.hpp"
#include <QStringList>                  // for QStringList
#include "support.hpp"                  // for SettingProperty, etc
---
./components/nifbullet/bulletnifloader.hpp:152:5: error: use of undeclared identifier 'OEngine'
    OEngine::Physic::BulletShape* mShape;//current shape
    ^
In file included from apps/opencs/view/world/physicssystem.cpp:4:
./components/nifbullet/bulletnifloader.hpp:76:35: error: expected class name
struct TriangleMeshShape : public btBvhTriangleMeshShape
                                  ^
./components/nifbullet/bulletnifloader.hpp:79:11: error: member initializer 'btBvhTriangleMeshShape' does not name a non-static data member or base class
        : btBvhTriangleMeshShape(meshInterface, useQuantizedAabbCompression)
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./components/nifbullet/bulletnifloader.hpp:85:16: error: use of undeclared identifier 'getTriangleInfoMap'
        delete getTriangleInfoMap();
               ^
./components/nifbullet/bulletnifloader.hpp:86:16: error: use of undeclared identifier 'm_meshInterface'
        delete m_meshInterface;
               ^
./components/nifbullet/bulletnifloader.hpp:94:40: error: use of undeclared identifier 'OEngine'
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                       ^
./components/nifbullet/bulletnifloader.hpp:94:57: error: expected class name
class ManualBulletShapeLoader : public OEngine::Physic::BulletShapeLoader
                                                        ^
./components/nifbullet/bulletnifloader.hpp:152:5: error: use of undeclared identifier 'OEngine'
    OEngine::Physic::BulletShape* mShape;//current shape
    ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:1:
In file included from ./components/esm/creaturestats.hpp:10:
./components/esm/activespells.hpp:12:5: error: expected '{'
    class ESMReader;
    ^
./components/esm/activespells.hpp:13:1: error: expected unqualified-id
{
^

apps/opencs/view/widget/scenetooltoggle.hpp should add these lines:

apps/opencs/view/widget/scenetooltoggle.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 8-8
- class QRect;  // lines 14-14
- class QWidget;  // lines 15-15

The full include-list for apps/opencs/view/widget/scenetooltoggle.hpp:
#include <QtCore>                       // for QString, QRect, Q_OBJECT, etc
#include <map>                          // for map
#include <string>                       // for string
#include "scenetool.hpp"                // for SceneTool
class QHBoxLayout;  // lines 13-13
class QWidget;  // lines 11-11
namespace CSVWidget { class PushButton; }  // lines 20-20
namespace CSVWidget { class SceneToolbar; }  // lines 21-21
---

apps/opencs/view/widget/scenetooltoggle.cpp should add these lines:

apps/opencs/view/widget/scenetooltoggle.cpp should remove these lines:
- #include <QFrame>  // lines 2-2
- #include <QHBoxLayout>  // lines 3-3
- #include <QPainter>  // lines 5-5
- #include <QtGui>  // lines 7-7
- #include <utility>  // lines 10-10
- #include "apps/opencs/view/widget/scenetool.hpp"  // lines 13-13

The full include-list for apps/opencs/view/widget/scenetooltoggle.cpp:
#include "scenetooltoggle.hpp"
#include <QIcon>                        // for QIcon
#include <QtGui>                        // for QHBoxLayout, QPixmap, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "apps/opencs/view/widget/scenetool.hpp"  // for SceneTool
#include "pushbutton.hpp"               // for PushButton, etc
#include "scenetoolbar.hpp"             // for SceneToolbar
---

apps/opencs/view/doc/newgame.hpp should add these lines:

apps/opencs/view/doc/newgame.hpp should remove these lines:
- #include <QArgument>  // lines 6-6

The full include-list for apps/opencs/view/doc/newgame.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include <QDialog>                      // for QDialog
#include <QMetaType>                    // for Q_DECLARE_METATYPE
#include <boost/filesystem/path.hpp>    // for path
class QPushButton;  // lines 15-15
namespace CSVDoc { class AdjusterWidget; }  // lines 19-19
namespace CSVDoc { class FileWidget; }  // lines 20-20
---

apps/opencs/view/doc/newgame.cpp should add these lines:

apps/opencs/view/doc/newgame.cpp should remove these lines:
- #include <QtCore>  // lines 8-8

The full include-list for apps/opencs/view/doc/newgame.cpp:
#include "newgame.hpp"
#include <QApplication>                 // for QApplication
#include <QDesktopWidget>               // for QDesktopWidget
#include <QDialogButtonBox>             // for QDialogButtonBox, etc
#include <QPushButton>                  // for QPushButton
#include <QVBoxLayout>                  // for QVBoxLayout
#include <QtCore>                       // for QRect, QPoint
#include "adjusterwidget.hpp"           // for AdjusterWidget
#include "filewidget.hpp"               // for FileWidget
---

apps/opencs/model/tools/mandatoryid.hpp should add these lines:

apps/opencs/model/tools/mandatoryid.hpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 7-7
- #include "apps/opencs/model/tools/../doc/../world/universalid.hpp"  // lines 9-9
- namespace CSMDoc { class Messages; }  // lines 14-14

The full include-list for apps/opencs/model/tools/mandatoryid.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
namespace CSMDoc { class Messages; }  // lines 12-12
namespace CSMWorld { class CollectionBase; }  // lines 19-19
---

apps/opencs/model/tools/mandatoryid.cpp should add these lines:

apps/opencs/model/tools/mandatoryid.cpp should remove these lines:
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 5-5

The full include-list for apps/opencs/model/tools/mandatoryid.cpp:
#include "mandatoryid.hpp"
#include "../world/collectionbase.hpp"  // for CollectionBase
#include "../world/record.hpp"          // for RecordBase
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
---
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:42:
In file included from apps/opencs/view/filter/../../model/world/refcollection.hpp:12:
apps/opencs/view/filter/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/filter/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: redefinition of 'qobject_interface_iid' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/world/scriptedit.cpp:9:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:57: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                                        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:42:
apps/opencs/view/filter/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/filter/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/view/filter/editwidget.cpp:8:
In file included from apps/opencs/view/filter/../../model/world/data.hpp:43:
In file included from apps/opencs/view/filter/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/openmw/mwmechanics/combat.hpp should add these lines:

apps/openmw/mwmechanics/combat.hpp should remove these lines:
- #include <OgreVector3.h>  // lines 4-4
- #include "../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwmechanics/combat.hpp:
namespace MWWorld { class Ptr; }  // lines 9-9
namespace Ogre { class Vector3; }  // lines 12-12
---

apps/openmw/mwmechanics/combat.cpp should add these lines:
namespace ESM { struct GameSetting; }
namespace ESM { struct Sound; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwmechanics/combat.cpp should remove these lines:
- #include <stdlib.h>  // lines 3-3
- #include <algorithm>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <string>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include <typeinfo>  // lines 9-9
- #include "../mwbase/soundmanager.hpp"  // lines 13-13
- #include "../mwbase/windowmanager.hpp"  // lines 14-14
- #include "../mwmechanics/movement.hpp"  // lines 17-17
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "OgreMath.h"  // lines 24-24
- #include "OgreQuaternion.h"  // lines 26-26
- #include "OgreVector3.h"  // lines 28-28
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 30-30
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 32-32
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 34-34
- #include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // lines 36-36
- #include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"  // lines 38-38
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"  // lines 40-40
- #include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 43-43
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 44-44
- #include "apps/openmw/mwmechanics/creaturestats.hpp"  // lines 46-46
- #include "components/esm/attr.hpp"  // lines 49-49
- #include "components/esm/defs.hpp"  // lines 51-51
- #include "components/esm/loadarmo.hpp"  // lines 52-52
- #include "components/esm/loadarmo.hpp"  // lines 53-53
- #include "components/esm/loadench.hpp"  // lines 55-55
- #include "components/esm/loadgmst.hpp"  // lines 56-56
- #include "components/esm/loadgmst.hpp"  // lines 57-57
- #include "components/esm/loadmgef.hpp"  // lines 59-59
- #include "components/esm/loadskil.hpp"  // lines 61-61
- #include "components/esm/loadsoun.hpp"  // lines 62-62
- #include "components/esm/loadsoun.hpp"  // lines 63-63
- #include "components/esm/loadweap.hpp"  // lines 64-64
- #include "components/esm/loadweap.hpp"  // lines 65-65

The full include-list for apps/openmw/mwmechanics/combat.cpp:
#include "combat.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <stdlib.h>                     // for rand, RAND_MAX
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/difficultyscaling.hpp"  // for scaleDamage
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell, etc
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreMath.h"                   // for Degree, Math, Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace ESM { struct GameSetting; }
namespace ESM { struct Sound; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---
In file included from libs/openengine/bullet/physic.cpp:67:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:16:
apps/opencs/model/tools/../doc/../tools/tools.hpp:30:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:16:
apps/opencs/model/tools/../doc/../tools/tools.hpp:30:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/model/tools/../doc/../tools/tools.hpp:30:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/model/tools/../doc/../tools/tools.hpp:30:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/model/tools/../doc/../tools/tools.hpp:32:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:16:
apps/opencs/model/tools/../doc/../tools/tools.hpp:32:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/model/tools/../doc/../tools/tools.hpp:32:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/model/tools/../doc/../tools/tools.hpp:32:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

apps/opencs/view/world/cellcreator.hpp should add these lines:

apps/opencs/view/world/cellcreator.hpp should remove these lines:
- #include <QArgument>  // lines 12-12
- #include <string>  // lines 13-13
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 8-8
- class QUndoStack;  // lines 22-22
- namespace CSMWorld { class Data; }  // lines 24-24

The full include-list for apps/opencs/view/world/cellcreator.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
#include "genericcreator.hpp"           // for GenericCreator
class QComboBox;  // lines 19-19
class QLabel;  // lines 20-20
class QSpinBox;  // lines 21-21
class QUndoStack;  // lines 14-14
namespace CSMWorld { class Data; }  // lines 16-16
---

apps/opencs/view/world/cellcreator.cpp should add these lines:

apps/opencs/view/world/cellcreator.cpp should remove these lines:
- #include "apps/opencs/view/world/genericcreator.hpp"  // lines 9-9
- class QUndoStack;  // lines 17-17
- namespace CSMWorld { class Data; }  // lines 19-19

The full include-list for apps/opencs/view/world/cellcreator.cpp:
#include "cellcreator.hpp"
#include <QComboBox>                    // for QComboBox
#include <QLabel>                       // for QLabel
#include <QSpinBox>                     // for QSpinBox
#include <limits>                       // for numeric_limits
#include <sstream>                      // for basic_ostream::operator<<, etc
#include "apps/opencs/view/world/genericcreator.hpp"
class QUndoStack;  // lines 12-12
namespace CSMWorld { class Data; }  // lines 14-14
---
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/wizard/importpage.cpp:1:
apps/wizard/importpage.hpp:8:10: fatal error: 'ui_importpage.h' file not found
#include "ui_importpage.h"
         ^
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
In file included from apps/opencs/view/world/physicssystem.cpp:5:
libs/openengine/bullet/physic.hpp:52:1: error: extraneous closing brace ('}')
}  // namespace OEngine
^
libs/openengine/bullet/physic.hpp:58:5: error: expected '{'
    class DebugDrawer;
    ^
libs/openengine/bullet/physic.hpp:59:1: error: extraneous closing brace ('}')
}
^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
libs/openengine/bullet/physic.cpp:97:16: error: cannot initialize return object of type 'btCollisionShape *' with an lvalue of type 'NifBullet::TriangleMeshShape *'
        return newShape;
               ^~~~~~~~
libs/openengine/bullet/physic.hpp:382:9: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~
        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.cpp:146:47: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
            mShape.reset(new btCylinderShapeZ(BtOgre::Convert::toBullet(mHalfExtents)));
                                              ^~~~~~
                                              Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^

apps/opencs/model/filter/booleannode.hpp should add these lines:

apps/opencs/model/filter/booleannode.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- namespace CSMWorld { class IdTableBase; }  // lines 14-14

The full include-list for apps/opencs/model/filter/booleannode.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include "leafnode.hpp"                 // for LeafNode
namespace CSMWorld { class IdTableBase; }  // lines 12-12
---

apps/opencs/model/filter/booleannode.cpp should add these lines:

apps/opencs/model/filter/booleannode.cpp should remove these lines:
- namespace CSMWorld { class IdTableBase; }  // lines 7-7

The full include-list for apps/opencs/model/filter/booleannode.cpp:
#include "booleannode.hpp"
namespace CSMWorld { class IdTableBase; }  // lines 5-5
---
libs/openengine/bullet/physic.hpp:382:9: error: no type named 'DebugDrawer' in namespace 'Ogre'; did you mean simply 'DebugDrawer'?
        BtOgre::DebugDrawer* mDebugDrawer;
        ^~~~~~~~~~~~~~~~~~~
        DebugDrawer
libs/openengine/bullet/physic.hpp:58:11: note: 'DebugDrawer' declared here
    class DebugDrawer;
          ^
libs/openengine/bullet/physic.cpp:146:55: error: no member named 'Convert' in namespace 'Ogre'
            mShape.reset(new btCylinderShapeZ(BtOgre::Convert::toBullet(mHalfExtents)));
                                              ~~~~~~~~^
libs/openengine/bullet/physic.hpp:387:40: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ^~~~~~
                                       Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.cpp:149:41: error: use of undeclared identifier 'BtOgre'; did you mean 'Ogre'?
            mShape.reset(new btBoxShape(BtOgre::Convert::toBullet(mHalfExtents)));
                                        ^~~~~~
                                        Ogre
libs/openengine/bullet/physic.hpp:61:11: note: 'Ogre' declared here
namespace Ogre
          ^
libs/openengine/bullet/physic.hpp:387:61: error: expected expression
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                                            ^
libs/openengine/bullet/physic.hpp:387:48: error: no member named 'DebugDrawer' in namespace 'Ogre'
        std::map<Ogre::SceneManager *, BtOgre::DebugDrawer *> mDebugDrawers;
                                       ~~~~~~~~^
In file included from apps/wizard/unshield/unshieldworker.cpp:1:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:36:
apps/opencs/model/tools/../doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/opencs/model/world/idtable.hpp should add these lines:

apps/opencs/model/world/idtable.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9

The full include-list for apps/opencs/model/world/idtable.hpp:
#include <QtCore>                       // for QModelIndex, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "columns.hpp"                  // for ColumnId
#include "idtablebase.hpp"              // for IdTableBase
#include "universalid.hpp"              // for UniversalId, etc
namespace CSMWorld { class CollectionBase; }  // lines 20-20
namespace CSMWorld { class RecordBase; }  // lines 21-21
---

apps/opencs/model/world/idtable.cpp should add these lines:

apps/opencs/model/world/idtable.cpp should remove these lines:
- #include "apps/opencs/model/world/columns.hpp"  // lines 3-3
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 5-5
- #include "apps/opencs/model/world/record.hpp"  // lines 7-7
- #include "apps/opencs/model/world/universalid.hpp"  // lines 9-9

The full include-list for apps/opencs/model/world/idtable.cpp:
#include "idtable.hpp"
#include "apps/opencs/model/world/columns.hpp"  // for ColumnId, etc
#include "apps/opencs/model/world/idtablebase.hpp"  // for IdTableBase, etc
#include "apps/opencs/model/world/record.hpp"  // for RecordBase
#include "apps/opencs/model/world/universalid.hpp"  // for UniversalId, etc
#include "collectionbase.hpp"           // for CollectionBase
#include "columnbase.hpp"               // for ColumnBase, etc
---
error: no such file or directory: 'build-include/apps/wizard/moc_importpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_installationtargetpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/view/render/terrainstorage.hpp should add these lines:
namespace CSMDoc { namespace ESM { struct Land; } }
namespace CSMDoc { namespace ESM { struct LandTexture; } }

apps/opencs/view/render/terrainstorage.hpp should remove these lines:
- #include "components/esm/loadland.hpp"  // lines 6-6
- #include "components/esm/loadland.hpp"  // lines 7-7
- #include "components/esm/loadltex.hpp"  // lines 8-8
- #include "components/esm/loadltex.hpp"  // lines 9-9
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 14-14

The full include-list for apps/opencs/view/render/terrainstorage.hpp:
#include <components/esmterrain/storage.hpp>  // for Storage
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 12-12
namespace CSMDoc { namespace ESM { struct Land; } }
namespace CSMDoc { namespace ESM { struct LandTexture; } }
---

apps/opencs/view/render/terrainstorage.cpp should add these lines:
#include "components/esm/loadland.hpp"  // for Land, Land::::DATA_VCLR, etc
namespace CSMDoc { namespace ESM { struct LandTexture; } }

apps/opencs/view/render/terrainstorage.cpp should remove these lines:
- #include <stddef.h>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 1-1
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 2-2
- #include <ostream>  // lines 5-5
- #include <ostream>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include "apps/opencs/view/render/../../model/world/data.hpp"  // lines 10-10
- #include "apps/opencs/view/render/../../model/world/data.hpp"  // lines 11-11
- #include "apps/opencs/view/render/../../model/world/idcollection.hpp"  // lines 12-12
- #include "apps/opencs/view/render/../../model/world/idcollection.hpp"  // lines 13-13
- #include "apps/opencs/view/render/../../model/world/land.hpp"  // lines 14-14
- #include "apps/opencs/view/render/../../model/world/land.hpp"  // lines 15-15
- #include "apps/opencs/view/render/../../model/world/landtexture.hpp"  // lines 16-16
- #include "apps/opencs/view/render/../../model/world/landtexture.hpp"  // lines 17-17
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 18-18
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 19-19

The full include-list for apps/opencs/view/render/terrainstorage.cpp:
#include "terrainstorage.hpp"
#include <stddef.h>                     // for NULL
#include "components/esm/loadland.hpp"  // for Land, Land::::DATA_VCLR, etc
namespace CSMDoc { namespace ESM { struct LandTexture; } }
---
error: no such file or directory: 'build-include/apps/wizard/moc_intropage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_languageselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_mainwizard.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_methodselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/utils/moc_componentlistwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_installationpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/unshield/moc_unshieldworker.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwmechanics/creaturestats.cpp:1:
./components/esm/creaturestats.hpp:68:9: error: unknown type name 'ActiveSpells'
        ActiveSpells mActiveSpells;
        ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:30:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:30:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:30:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:30:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:32:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:32:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:32:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:32:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:42:
In file included from apps/opencs/model/tools/../doc/../world/refcollection.hpp:12:
apps/opencs/model/tools/../doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/tools/../doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:13:
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:17:5: error: expected '{'
    class CellRef;
    ^
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:21:1: error: extraneous closing brace ('}')
}
^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:37:9: error: unknown type name 'RefData'; did you mean 'MWWorld::RefData'?
        RefData mData;
        ^~~~~~~
        MWWorld::RefData
apps/openmw/mwmechanics/../mwbase/../mwworld/refdata.hpp:32:11: note: 'MWWorld::RefData' declared here
    class RefData
          ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
In file included from apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:12:
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:129:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:42:
apps/opencs/model/tools/../doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/tools/../doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:59:13: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
            MWWorld::LiveCellRef<T> *get() const
            ^~~~~~~~~~~~~~~~~~~~
            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:54:34: error: member access into incomplete type 'MWWorld::LiveCellRefBase'
                    return *(mRef->mClass);
                                 ^
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:26:11: note: forward declaration of 'MWWorld::LiveCellRefBase'
    class LiveCellRefBase;
          ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:17: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                ^~~~~~~~~~~~~~~~~~~~
                LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:8:
In file included from apps/openmw/mwmechanics/../mwbase/world.hpp:10:
apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp:61:61: error: no template named 'LiveCellRef' in namespace 'MWWorld'; did you mean simply 'LiveCellRef'?
                MWWorld::LiveCellRef<T> *ref = dynamic_cast<MWWorld::LiveCellRef<T>*>(mRef);
                                                            ^~~~~~~~~~~~~~~~~~~~
                                                            LiveCellRef
apps/openmw/mwmechanics/../mwbase/../mwworld/livecellref.hpp:82:12: note: 'LiveCellRef' declared here
    struct LiveCellRef : public LiveCellRefBase
           ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:14:
In file included from apps/opencs/model/tools/../doc/document.hpp:17:
In file included from apps/opencs/model/tools/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/tools/../doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/wizard/componentselectionpage.cpp:3:
apps/wizard/componentselectionpage.hpp:8:10: fatal error: 'ui_componentselectionpage.h' file not found
#include "ui_componentselectionpage.h"
         ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

(apps/opencs/view/doc/subviewfactory.hpp has correct #includes/fwd-decls)

apps/opencs/view/doc/subviewfactory.cpp should add these lines:

apps/opencs/view/doc/subviewfactory.cpp should remove these lines:
- #include <string>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "apps/opencs/view/doc/../../model/world/universalid.hpp"  // lines 10-10

The full include-list for apps/opencs/view/doc/subviewfactory.cpp:
#include "subviewfactory.hpp"
#include <cassert>                      // for assert
#include <stdexcept>                    // for runtime_error
#include <string>                       // for char_traits, operator+, etc
#include <utility>                      // for make_pair, pair
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
---
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/model/doc/../tools/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/model/tools/regioncheck.hpp should add these lines:

apps/opencs/model/tools/regioncheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Region; }  // lines 17-17

The full include-list for apps/opencs/model/tools/regioncheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Region; }  // lines 8-8
---

apps/opencs/model/tools/regioncheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/regioncheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/regioncheck.cpp:
#include "regioncheck.hpp"
#include <components/esm/loadregn.hpp>  // for Region
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

apps/opencs/model/world/refiddata.hpp should add these lines:

apps/opencs/model/world/refiddata.hpp should remove these lines:
- #include <stdexcept>  // lines 26-26
- #include <string>  // lines 28-28
- #include <utility>  // lines 30-30

The full include-list for apps/opencs/model/world/refiddata.hpp:
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/loadacti.hpp>  // for Activator
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadappa.hpp>  // for Apparatus
#include <components/esm/loadarmo.hpp>  // for Armor
#include <components/esm/loadbook.hpp>  // for Book
#include <components/esm/loadclot.hpp>  // for Clothing
#include <components/esm/loadcont.hpp>  // for Container
#include <components/esm/loadcrea.hpp>  // for Creature
#include <components/esm/loaddoor.hpp>  // for Door
#include <components/esm/loadingr.hpp>  // for Ingredient
#include <components/esm/loadlevlist.hpp>  // for CreatureLevList, etc
#include <components/esm/loadligh.hpp>  // for Light
#include <components/esm/loadlock.hpp>  // for Lockpick
#include <components/esm/loadmisc.hpp>  // for Miscellaneous
#include <components/esm/loadnpc.hpp>   // for NPC
#include <components/esm/loadprob.hpp>  // for Probe
#include <components/esm/loadrepa.hpp>  // for Repair
#include <components/esm/loadstat.hpp>  // for Static
#include <components/esm/loadweap.hpp>  // for Weapon
#include <map>                          // for map
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "record.hpp"                   // for RecordBase, etc
#include "universalid.hpp"              // for UniversalId::Type, etc
namespace ESM { class ESMReader; }  // lines 39-39
---
In file included from apps/openmw/mwmechanics/creaturestats.cpp:12:
./apps/openmw/mwmechanics/activespells.hpp:23:26: error: no type named 'ActiveEffect' in namespace 'ESM'
            typedef ESM::ActiveEffect ActiveEffect;
                    ~~~~~^

apps/opencs/model/world/refiddata.cpp should add these lines:

apps/opencs/model/world/refiddata.cpp should remove these lines:
- #include "apps/opencs/model/world/universalid.hpp"  // lines 6-6
- #include "components/esm/loadacti.hpp"  // lines 8-8
- #include "components/esm/loadalch.hpp"  // lines 10-10
- #include "components/esm/loadappa.hpp"  // lines 12-12
- #include "components/esm/loadarmo.hpp"  // lines 14-14
- #include "components/esm/loadbook.hpp"  // lines 16-16
- #include "components/esm/loadclot.hpp"  // lines 18-18
- #include "components/esm/loadcont.hpp"  // lines 20-20
- #include "components/esm/loadcrea.hpp"  // lines 22-22
- #include "components/esm/loaddoor.hpp"  // lines 24-24
- #include "components/esm/loadingr.hpp"  // lines 26-26
- #include "components/esm/loadlevlist.hpp"  // lines 28-28
- #include "components/esm/loadligh.hpp"  // lines 30-30
- #include "components/esm/loadlock.hpp"  // lines 32-32
- #include "components/esm/loadmisc.hpp"  // lines 34-34
- #include "components/esm/loadnpc.hpp"  // lines 36-36
- #include "components/esm/loadprob.hpp"  // lines 38-38
- #include "components/esm/loadrepa.hpp"  // lines 40-40
- #include "components/esm/loadstat.hpp"  // lines 42-42
- #include "components/esm/loadweap.hpp"  // lines 44-44
- namespace ESM { class ESMWriter; }  // lines 50-50

The full include-list for apps/opencs/model/world/refiddata.cpp:
#include "refiddata.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
#include "apps/opencs/model/world/record.hpp"  // for RecordBase
#include "apps/opencs/model/world/universalid.hpp"
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon
namespace ESM { class ESMWriter; }  // lines 48-48
---
./apps/openmw/mwmechanics/activespells.hpp:38:35: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void readState (const ESM::ActiveSpells& state);
                                  ^~~~~~~~~~~~~~~~~
                                  ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
./apps/openmw/mwmechanics/activespells.hpp:39:30: error: no type named 'ActiveSpells' in namespace 'ESM'; did you mean simply 'ActiveSpells'?
            void writeState (ESM::ActiveSpells& state) const;
                             ^~~~~~~~~~~~~~~~~
                             ActiveSpells
./apps/openmw/mwmechanics/activespells.hpp:19:11: note: 'ActiveSpells' declared here
    class ActiveSpells
          ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:20:
./apps/openmw/mwmechanics/spells.hpp:17:1: error: expected '{'
}
^
./apps/openmw/mwmechanics/spells.hpp:19:1: error: expected unqualified-id
{
^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:38:
apps/openmw/mwmechanics/creaturestats.hpp:47:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells mSpells;
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
In file included from apps/openmw/mwmechanics/creaturestats.cpp:38:
apps/openmw/mwmechanics/creaturestats.hpp:131:15: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        const Spells & getSpells() const;
              ^~~~~~
              ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^

apps/opencs/view/world/idtypedelegate.hpp should add these lines:
#include "apps/opencs/view/world/datadisplaydelegate.hpp"
class QObject;

apps/opencs/view/world/idtypedelegate.hpp should remove these lines:
- #include "util.hpp"  // lines 4-4
- namespace CSMDoc { class QObject; }  // lines 14-14
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 16-16
- namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 19-19

The full include-list for apps/opencs/view/world/idtypedelegate.hpp:
#include "apps/opencs/view/world/datadisplaydelegate.hpp"
class QObject;
namespace CSMDoc { class QObject; }  // lines 6-6
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 8-8
namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 11-11
---

apps/opencs/view/world/idtypedelegate.cpp should add these lines:
#include "apps/opencs/view/world/../../model/world/refcollection.hpp"
class QObject;

apps/opencs/view/world/idtypedelegate.cpp should remove these lines:
- #include <QCharRef>  // lines 1-1
- #include <QCharRef>  // lines 2-2
- #include <string>  // lines 3-3
- #include <string>  // lines 4-4
- #include "../../model/world/universalid.hpp"  // lines 6-6
- #include "apps/opencs/view/world/datadisplaydelegate.hpp"  // lines 8-8
- #include "apps/opencs/view/world/util.hpp"  // lines 10-10
- namespace CSMDoc { class QObject; }  // lines 18-18
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 20-20

The full include-list for apps/opencs/view/world/idtypedelegate.cpp:
#include "idtypedelegate.hpp"
#include "apps/opencs/view/world/../../model/world/refcollection.hpp"
#include "apps/opencs/view/world/datadisplaydelegate.hpp"
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
class QObject;
namespace CSMDoc { class QObject; }  // lines 13-13
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 15-15
---
In file included from apps/openmw/mwmechanics/creaturestats.cpp:38:
apps/openmw/mwmechanics/creaturestats.hpp:141:9: error: unknown type name 'Spells'; did you mean 'ESM::Spell'?
        Spells & getSpells();
        ^~~~~~
        ESM::Spell
apps/openmw/mwmechanics/spells.hpp:14:12: note: 'ESM::Spell' declared here
    struct Spell;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/essimporter/importnpcc.hpp should add these lines:

apps/essimporter/importnpcc.hpp should remove these lines:
- #include <components/esm/aipackage.hpp>  // lines 4-4
- #include <components/esm/loadcont.hpp>  // lines 5-5

The full include-list for apps/essimporter/importnpcc.hpp:
#include "importinventory.hpp"          // for Inventory
namespace ESM { class ESMReader; }  // lines 11-11
---

apps/essimporter/importnpcc.cpp should add these lines:

apps/essimporter/importnpcc.cpp should remove these lines:
- #include "apps/essimporter/importinventory.hpp"  // lines 4-4

The full include-list for apps/essimporter/importnpcc.cpp:
#include "importnpcc.hpp"
#include <components/esm/esmreader.hpp>  // for ESMReader
#include "apps/essimporter/importinventory.hpp"  // for Inventory
---
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/model/doc/../tools/../world/refcollection.hpp:12:
apps/opencs/model/doc/../tools/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/doc/../tools/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/model/doc/../tools/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/doc/../tools/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^

apps/opencs/view/render/worldspacewidget.hpp should add these lines:
#include "apps/opencs/view/render/navigation1st.hpp"  // for Navigation1st
class QWidget;

apps/opencs/view/render/worldspacewidget.hpp should remove these lines:
- #include <QArgument>  // lines 8-8
- #include <apps/opencs/model/world/tablemimedata.hpp>  // lines 4-4
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- namespace CSMDoc { class QDragEnterEvent; }  // lines 34-34
- namespace CSMDoc { class QDragMoveEvent; }  // lines 35-35
- namespace CSMDoc { class QDropEvent; }  // lines 36-36
- namespace CSMDoc { class QKeyEvent; }  // lines 37-37
- namespace CSMDoc { class QModelIndex; }  // lines 38-38
- namespace CSMDoc { class QMouseEvent; }  // lines 39-39
- namespace CSMDoc { class QWheelEvent; }  // lines 40-40
- namespace CSMDoc { class QWidget; }  // lines 26-26
- namespace CSMDoc { class QWidget; }  // lines 41-41
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 44-44
- namespace CSMDoc { namespace CSMWorld { class UniversalId; } }  // lines 52-52
- namespace CSMDoc { namespace CSVRender { class MouseState; } }  // lines 47-47

The full include-list for apps/opencs/view/render/worldspacewidget.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "apps/opencs/view/render/navigation1st.hpp"  // for Navigation1st
#include "navigationfree.hpp"           // for NavigationFree
#include "navigationorbit.hpp"          // for NavigationOrbit
#include "scenewidget.hpp"              // for SceneWidget
class QWidget;
namespace CSMDoc { class QDragEnterEvent; }  // lines 19-19
namespace CSMDoc { class QDragMoveEvent; }  // lines 20-20
namespace CSMDoc { class QDropEvent; }  // lines 21-21
namespace CSMDoc { class QKeyEvent; }  // lines 22-22
namespace CSMDoc { class QModelIndex; }  // lines 23-23
namespace CSMDoc { class QMouseEvent; }  // lines 24-24
namespace CSMDoc { class QWheelEvent; }  // lines 25-25
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 28-28
namespace CSMDoc { namespace CSVRender { class MouseState; } }  // lines 31-31
namespace CSMDoc { namespace CSVWidget { class SceneToolMode; } }  // lines 57-57
namespace CSMDoc { namespace CSVWidget { class SceneToolRun; } }  // lines 58-58
namespace CSMDoc { namespace CSVWidget { class SceneToolToggle2; } }  // lines 59-59
namespace CSMDoc { namespace CSVWidget { class SceneToolbar; } }  // lines 60-60
namespace CSMDoc { namespace CSVWorld { class PhysicsSystem; } }  // lines 65-65
---
In file included from In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^

apps/opencs/view/render/worldspacewidget.cpp should add these lines:
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }

apps/opencs/view/render/worldspacewidget.cpp should remove these lines:
- #include <QtCore>  // lines 2-2
- #include <QtCore>  // lines 3-3
- #include <QtGui>  // lines 4-4
- #include <QtGui>  // lines 5-5
- #include <algorithm>  // lines 6-6
- #include "../widget/scenetoolrun.hpp"  // lines 8-8
- #include "../world/physicssystem.hpp"  // lines 9-9
- #include "apps/opencs/model/doc/../world/columns.hpp"  // lines 10-10
- #include "apps/opencs/model/doc/../world/columns.hpp"  // lines 11-11
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 12-12
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 13-13
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 14-14
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 15-15
- #include "apps/opencs/model/doc/document.hpp"  // lines 17-17
- #include "apps/opencs/model/world/tablemimedata.hpp"  // lines 19-19
- #include "apps/opencs/view/render/mousestate.hpp"  // lines 21-21
- #include "apps/opencs/view/render/navigation1st.hpp"  // lines 22-22
- #include "apps/opencs/view/render/navigation1st.hpp"  // lines 23-23
- #include "apps/opencs/view/render/navigationfree.hpp"  // lines 24-24
- #include "apps/opencs/view/render/navigationfree.hpp"  // lines 25-25
- #include "apps/opencs/view/render/navigationorbit.hpp"  // lines 26-26
- #include "apps/opencs/view/render/navigationorbit.hpp"  // lines 27-27
- #include "apps/opencs/view/render/scenewidget.hpp"  // lines 29-29
- #include "editmode.hpp"  // lines 30-30

The full include-list for apps/opencs/view/render/worldspacewidget.cpp:
#include "worldspacewidget.hpp"
#include "apps/opencs/model/doc/document.hpp"  // for Document
#include "apps/opencs/model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/render/mousestate.hpp"  // for MouseState
#include "apps/opencs/view/render/scenewidget.hpp"  // for SceneWidget
#include "elements.hpp"                 // for Elements::Element_CellArrow, etc
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
---
apps/opencs/model/tools/skillcheck.cpp:12:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:12:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/model/doc/../tools/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/model/doc/../tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/model/doc/../tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/model/doc/../tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/model/doc/../tools/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/model/doc/../tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/doc/loader.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/model/doc/../tools/../world/refidcollection.hpp:16:
apps/opencs/model/doc/../tools/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/model/doc/../tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/table.cpp:4:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^
In file included from apps/opencs/view/world/table.cpp:6:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:45:
In file included from /usr/include/qt4/QtGui/qkeysequence.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
/usr/include/qt4/QtCore/qglobal.h:1094:78: error: unknown type name 'qint8'; did you mean 'quint8'?
template <>    struct QIntegerForSize<1> { typedef quint8  Unsigned; typedef qint8  Signed; };
                                                                             ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^

apps/opencs/view/render/navigation1st.hpp should add these lines:

apps/opencs/view/render/navigation1st.hpp should remove these lines:
- class QPoint;  // lines 11-11
- namespace Ogre { class Camera; }  // lines 13-13

The full include-list for apps/opencs/view/render/navigation1st.hpp:
#include "navigation.hpp"               // for Navigation
class QPoint;  // lines 6-6
namespace Ogre { class Camera; }  // lines 8-8
---

apps/opencs/view/render/navigation1st.cpp should add these lines:

apps/opencs/view/render/navigation1st.cpp should remove these lines:
- #include "OgreMath.h"  // lines 6-6
- #include "OgreQuaternion.h"  // lines 8-8
- #include "OgreVector3.h"  // lines 10-10

The full include-list for apps/opencs/view/render/navigation1st.cpp:
#include "navigation1st.hpp"
#include <OgreCamera.h>                 // for Camera
#include <QPoint>                       // for QPoint
#include "OgreMath.h"                   // for Radian, Degree, Math, etc
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, operator*, etc
---

apps/openmw/engine.hpp should add these lines:

apps/openmw/engine.hpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 6-6
- #include <map>  // lines 10-10
- #include <map>  // lines 11-11
- #include <string>  // lines 13-13
- #include <vector>  // lines 14-14
- #include <vector>  // lines 15-15
- #include "components/files/multidircollection.hpp"  // lines 19-19
- #include "components/to_utf8/to_utf8.hpp"  // lines 21-21
- #include "mwworld/ptr.hpp"  // lines 24-24
- class WindowManager;  // lines 49-49
- namespace MWScript { class ScriptManager; }  // lines 37-37
- namespace MWSound { class SoundManager; }  // lines 41-41
- namespace MWWorld { class World; }  // lines 45-45
- namespace OEngine { namespace GUI { class MyGUIManager; } }  // lines 57-57
- namespace Settings { class Manager; }  // lines 29-29

The full include-list for apps/openmw/engine.hpp:
#include <OgreFrameListener.h>          // for FrameListener
#include <boost/filesystem/path.hpp>    // for path
#include <components/compiler/extensions.hpp>  // for Extensions
#include <components/nifcache/nifcache.hpp>  // for Cache
#include <components/translation/translation.hpp>  // for Storage
#include <string>                       // for string
#include "components/bsa/../files/collections.hpp"  // for Collections
#include "components/files/multidircollection.hpp"  // for PathContainer
#include "components/to_utf8/to_utf8.hpp"  // for FromType, etc
#include "mwbase/environment.hpp"       // for Environment
namespace Compiler { class Context; }  // lines 33-33
namespace Files { struct ConfigurationManager; }  // lines 69-69
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 63-63
namespace Settings { class Manager; }  // lines 27-27
---

(apps/opencs/model/world/resources.hpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/doc/filewidget.cpp:2:
apps/opencs/view/doc/filewidget.hpp:21:13: error: unknown type name 'QLabel'
            QLabel *mType;
            ^

apps/opencs/model/world/resources.cpp should add these lines:

apps/opencs/model/world/resources.cpp should remove these lines:
- #include <utility>  // lines 8-8
- #include "OgreSharedPtr.h"  // lines 11-11
- #include "OgreStringVector.h"  // lines 13-13
- #include "apps/opencs/model/world/universalid.hpp"  // lines 15-15

The full include-list for apps/opencs/model/world/resources.cpp:
#include "resources.hpp"
#include <OgreResourceGroupManager.h>   // for ResourceGroupManager
#include <algorithm>                    // for replace
#include <components/misc/stringops.hpp>  // for StringUtils
#include <sstream>                      // for basic_ostream, operator<<, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for make_pair, pair
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringVector.h"           // for StringVector, etc
#include "apps/opencs/model/world/universalid.hpp"  // for UniversalId, etc
---
In file included from apps/opencs/model/settings/connector.cpp:1:
In file included from apps/opencs/model/settings/../../view/settings/view.hpp:8:
apps/opencs/model/settings/../../view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
apps/opencs/model/settings/../../view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~

apps/openmw/engine.cpp should add these lines:
#include "apps/openmw/mwbase/../mwgui/../mwbase/windowmanager.hpp"
namespace MWInput { class InputManager; }
namespace MWWorld { namespace MWMechanics { class CreatureStats; } }
namespace MWWorld { namespace Ogre { namespace ESM { namespace ToUTF8 { class Utf8Encoder; } } } }

apps/openmw/engine.cpp should remove these lines:
- #include <OgreRenderWindow.h>  // lines 1-1
- #include <OgreRoot.h>  // lines 2-2
- #include <stdlib.h>  // lines 12-12
- #include <time.h>  // lines 13-13
- #include <algorithm>  // lines 14-14
- #include <boost/filesystem/operations.hpp>  // lines 5-5
- #include <components/bsa/resources.hpp>  // lines 6-6
- #include <components/compiler/extensions0.hpp>  // lines 7-7
- #include <components/files/configurationmanager.hpp>  // lines 8-8
- #include <components/translation/translation.hpp>  // lines 10-10
- #include <iomanip>  // lines 16-16
- #include <stdexcept>  // lines 18-18
- #include "GLX/OgreTimerImp.h"  // lines 21-21
- #include "OgreFrameListener.h"  // lines 22-22
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "SDL_error.h"  // lines 25-25
- #include "SDL_main.h"  // lines 27-27
- #include "apps/openmw/mwbase/../mwgui/mode.hpp"  // lines 29-29
- #include "apps/openmw/mwbase/../mwmechanics/../mwbase/mechanicsmanager.hpp"  // lines 30-30
- #include "apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp"  // lines 31-31
- #include "apps/openmw/mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 32-32
- #include "apps/openmw/mwbase/../mwmechanics/aisequence.hpp"  // lines 33-33
- #include "apps/openmw/mwbase/../mwmechanics/creaturestats.hpp"  // lines 34-34
- #include "apps/openmw/mwbase/../mwmechanics/magiceffects.hpp"  // lines 35-35
- #include "apps/openmw/mwdialogue/../mwscript/compilercontext.hpp"  // lines 37-37
- #include "apps/openmw/mwinput/../mwbase/inputmanager.hpp"  // lines 38-38
- #include "apps/openmw/mwinput/../mwgui/../mwbase/windowmanager.hpp"  // lines 39-39
- #include "apps/openmw/mwstate/../mwbase/statemanager.hpp"  // lines 40-40
- #include "apps/openmw/mwworld/../mwbase/soundmanager.hpp"  // lines 41-41
- #include "apps/openmw/mwworld/../mwscript/../mwbase/scriptmanager.hpp"  // lines 42-42
- #include "apps/openmw/mwworld/../mwscript/globalscripts.hpp"  // lines 43-43
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 44-44
- #include "apps/openmw/mwworld/localscripts.hpp"  // lines 45-45
- #include "components/compiler/context.hpp"  // lines 46-46
- #include "components/esm/loadmgef.hpp"  // lines 47-47
- #include "mwclass/classes.hpp"  // lines 50-50
- #include "mwdialogue/dialoguemanagerimp.hpp"  // lines 51-51
- #include "mwdialogue/journalimp.hpp"  // lines 52-52
- #include "mwdialogue/scripttest.hpp"  // lines 53-53
- #include "mwgui/windowmanagerimp.hpp"  // lines 54-54
- #include "mwinput/inputmanagerimp.hpp"  // lines 55-55
- #include "mwmechanics/mechanicsmanagerimp.hpp"  // lines 56-56
- #include "mwscript/scriptmanagerimp.hpp"  // lines 58-58
- #include "mwsound/soundmanagerimp.hpp"  // lines 59-59
- #include "mwstate/statemanagerimp.hpp"  // lines 60-60
- #include "mwworld/class.hpp"  // lines 61-61
- #include "openengine/ogre/renderer.hpp"  // lines 63-63

The full include-list for apps/openmw/engine.cpp:
#include "engine.hpp"
#include <SDL.h>                        // for SDL_INIT_NOPARACHUTE, etc
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL, size_t
#include <components/nifoverrides/nifoverrides.hpp>  // for Overrides
#include <exception>                    // for exception
#include <iostream>                     // for ostringstream
#include <utility>                      // for pair
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "SDL_hints.h"                  // for SDL_HINT_RENDER_DRIVER, etc
#include "SDL_stdinc.h"                 // for Uint32
#include "apps/openmw/mwbase/../mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwbase/environment.hpp"  // for Environment
#include "components/settings/settings.hpp"  // for Manager
#include "mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "mwworld/worldimp.hpp"         // for Utf8Encoder
namespace MWInput { class InputManager; }
namespace MWWorld { namespace MWMechanics { class CreatureStats; } }
namespace MWWorld { namespace Ogre { namespace ESM { namespace ToUTF8 { class Utf8Encoder; } } } }
---
apps/opencs/model/settings/../../view/settings/frame.hpp
components/esm/creaturestats.hpp should add these lines:

components/esm/creaturestats.hpp should remove these lines:
- #include <utility>  // lines 7-7
- #include "activespells.hpp"  // lines 10-10

The full include-list for components/esm/creaturestats.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "aisequence.hpp"               // for AiSequence
#include "defs.hpp"                     // for TimeStamp
#include "magiceffects.hpp"             // for MagicEffects
#include "spellstate.hpp"               // for SpellState
#include "statstate.hpp"                // for StatState
namespace ESM { class ESMReader; }  // lines 19-19
namespace ESM { class ESMWriter; }  // lines 21-21
---

apps/openmw/mwmechanics/creaturestats.hpp should add these lines:
#include "components/esm/loadspel.hpp"  // for Spell

apps/openmw/mwmechanics/creaturestats.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <utility>  // lines 9-9
- #include <vector>  // lines 11-11
- #include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"  // lines 16-16
- #include "spells.hpp"  // lines 19-19
- namespace ESM { class ESMReader; }  // lines 27-27
- namespace ESM { class ESMWriter; }  // lines 28-28

The full include-list for apps/openmw/mwmechanics/creaturestats.hpp:
#include <map>                          // for map
#include <set>                          // for set
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "activespells.hpp"             // for ActiveSpells
#include "aisequence.hpp"               // for AiSequence
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "components/esm/loadspel.hpp"  // for Spell
#include "drawstate.hpp"                // for DrawState_
#include "magiceffects.hpp"             // for MagicEffects
#include "stat.hpp"                     // for DynamicStat, Stat, etc
namespace ESM { class ESMReader; }  // lines 24-24
namespace ESM { class ESMWriter; }  // lines 25-25
namespace ESM { struct CreatureStats; }  // lines 33-33
---
:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
apps/opencs/model/settings/../../view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^

apps/openmw/mwmechanics/creaturestats.cpp should add these lines:
namespace MWMechanics { class ActiveSpells; }

apps/openmw/mwmechanics/creaturestats.cpp should remove these lines:
- #include <stdexcept>  // lines 4-4
- #include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // lines 11-11
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 12-12
- #include "apps/openmw/mwmechanics/activespells.hpp"  // lines 13-13
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 15-15
- #include "apps/openmw/mwmechanics/drawstate.hpp"  // lines 17-17
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 19-19
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 20-20
- #include "apps/openmw/mwmechanics/spells.hpp"  // lines 21-21
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 23-23
- #include "components/esm/attr.hpp"  // lines 25-25
- #include "components/esm/defs.hpp"  // lines 27-27
- #include "components/esm/esmreader.hpp"  // lines 28-28
- #include "components/esm/esmreader.hpp"  // lines 29-29
- #include "components/esm/esmwriter.hpp"  // lines 31-31
- #include "components/esm/loadgmst.hpp"  // lines 33-33
- #include "components/esm/loadmgef.hpp"  // lines 35-35
- #include "components/esm/statstate.hpp"  // lines 37-37

The full include-list for apps/openmw/mwmechanics/creaturestats.cpp:
#include "creaturestats.hpp"
#include <components/esm/creaturestats.hpp>
#include <algorithm>                    // for max
#include <stdexcept>                    // for runtime_error
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "apps/openmw/mwmechanics/drawstate.hpp"  // for DrawState_, etc
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for MagicEffects, etc
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_ACTC, etc
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/statstate.hpp"  // for StatState
namespace MWMechanics { class ActiveSpells; }
---
In file included from apps/opencs/model/settings/connector.cpp:1:
apps/opencs/model/settings/../../view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/model/settings/connector.cpp:1:
apps/opencs/model/settings/../../view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^

apps/opencs/view/settings/rangeview.hpp should add these lines:
#include "apps/opencs/view/settings/../../model/settings/support.hpp"
#include "apps/opencs/view/settings/view.hpp"  // for IViewFactory, View

apps/opencs/view/settings/rangeview.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <QtGui>  // lines 7-7
- class QAbstractSpinBox;  // lines 16-16
- class QStringListModel;  // lines 17-17
- namespace CSMSettings { class Setting; }  // lines 19-19
- namespace CSVSettings { class Page; }  // lines 22-22

The full include-list for apps/opencs/view/settings/rangeview.hpp:
#include <QtCore>                       // for QObject, Q_OBJECT, slots
#include <QtGui>                        // for QWidget
#include "apps/opencs/view/settings/../../model/settings/support.hpp"
#include "apps/opencs/view/settings/view.hpp"  // for IViewFactory, View
namespace CSMSettings { class Setting; }  // lines 10-10
namespace CSVSettings { class Page; }  // lines 13-13
---

apps/opencs/view/settings/rangeview.cpp should add these lines:

apps/opencs/view/settings/rangeview.cpp should remove these lines:
- #include <QDial>  // lines 1-1
- #include <QDoubleSpinBox>  // lines 2-2
- #include "apps/opencs/view/settings/view.hpp"  // lines 7-7
- namespace CSVSettings { class Page; }  // lines 14-14

The full include-list for apps/opencs/view/settings/rangeview.cpp:
#include "rangeview.hpp"
#include "../../model/settings/setting.hpp"  // for Setting
#include "../../model/settings/support.hpp"
#include "apps/opencs/view/settings/view.hpp"  // for View
#include "spinbox.hpp"                  // for SpinBox
namespace CSVSettings { class Page; }  // lines 12-12
---
apps/opencs/view/doc/filewidget.cpp:17:31: error: no matching constructor for initialization of 'QHBoxLayout'
    QHBoxLayout *layout = new QHBoxLayout (this);
                              ^            ~~~~
/usr/include/qt4/QtGui/qboxlayout.h:134:14: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'QWidget *' for 1st argument
    explicit QHBoxLayout(QWidget *parent);
             ^
/usr/include/qt4/QtGui/qboxlayout.h:146:20: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QHBoxLayout' for 1st argument
    Q_DISABLE_COPY(QHBoxLayout)
                   ^
/usr/include/qt4/QtCore/qglobal.h:2639:5: note: expanded from macro 'Q_DISABLE_COPY'
    Class(const Class &); \
    ^
/usr/include/qt4/QtGui/qboxlayout.h:133:5: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
    QHBoxLayout();
    ^
apps/opencs/view/doc/filewidget.cpp:19:18: error: no matching constructor for initialization of 'QLineEdit'
    mInput = new QLineEdit (this);
                 ^          ~~~~
/usr/include/qt4/QtGui/qlineedit.h:91:14: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'QWidget *' for 1st argument
    explicit QLineEdit(QWidget* parent=0);
             ^
/usr/include/qt4/QtGui/qlineedit.h:92:14: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QString' for 1st argument
    explicit QLineEdit(const QString &, QWidget* parent=0);
             ^
/usr/include/qt4/QtGui/qlineedit.h:280:20: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QLineEdit' for 1st argument
    Q_DISABLE_COPY(QLineEdit)
                   ^
/usr/include/qt4/QtCore/qglobal.h:2639:5: note: expanded from macro 'Q_DISABLE_COPY'
    Class(const Class &); \
    ^
apps/opencs/view/doc/filewidget.cpp:24:17: error: no matching constructor for initialization of 'QLabel'
    mType = new QLabel (this);
                ^       ~~~~
/usr/include/qt4/QtGui/qlabel.h:72:14: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'QWidget *' for 1st argument
    explicit QLabel(QWidget *parent=0, Qt::WindowFlags f=0);
             ^
/usr/include/qt4/QtGui/qlabel.h:73:14: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QString' for 1st argument
    explicit QLabel(const QString &text, QWidget *parent=0, Qt::WindowFlags f=0);
             ^
/usr/include/qt4/QtGui/qlabel.h:165:20: note: candidate constructor not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QLabel' for 1st argument
    Q_DISABLE_COPY(QLabel)
                   ^
/usr/include/qt4/QtCore/qglobal.h:2639:5: note: expanded from macro 'Q_DISABLE_COPY'
    Class(const Class &); \
    ^
apps/opencs/view/doc/filewidget.cpp:28:5: error: no matching member function for call to 'connect'
    connect (mInput, SIGNAL (textChanged (const QString&)), this, SLOT (textChanged (const QString&)));
    ^~~~~~~
/usr/include/qt4/QtCore/qobject.h:204:17: note: candidate function not viable: no known conversion from 'CSVDoc::FileWidget *' to 'const QObject *' for 3rd argument
    static bool connect(const QObject *sender, const char *signal,
                ^
/usr/include/qt4/QtCore/qobject.h:337:22: note: candidate function not viable: no known conversion from 'CSVDoc::FileWidget' to 'const QObject' for object argument
inline bool QObject::connect(const QObject *asender, const char *asignal,
                     ^
/usr/include/qt4/QtCore/qobject.h:217:17: note: candidate function not viable: no known conversion from 'const char *' to 'const QMetaMethod' for 2nd argument
    static bool connect(const QObject *sender, const QMetaMethod &signal,
                ^
apps/opencs/view/doc/filewidget.cpp:30:5: error: cannot initialize object parameter of type 'QWidget' with an expression of type 'CSVDoc::FileWidget'
    setLayout (layout);
    ^~~~~~~~~

apps/opencs/view/filter/editwidget.hpp should add these lines:
namespace CSMDoc { class QString; }

apps/opencs/view/filter/editwidget.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <string>  // lines 8-8
- #include <string>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <vector>  // lines 12-12
- namespace CSMDoc { class QWidget; }  // lines 25-25
- namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 28-28
- namespace CSMDoc { namespace boost { template <class Y> class shared_ptr; } }  // lines 31-31

The full include-list for apps/opencs/view/filter/editwidget.hpp:
#include <QLineEdit>                    // for QLineEdit
#include <QPalette>                     // for QPalette
#include <QtCore>                       // for Q_OBJECT, signals, slots
#include "../../model/filter/parser.hpp"  // for Parser
namespace CSMDoc { class QModelIndex; }  // lines 24-24
namespace CSMDoc { class QString; }
namespace CSMDoc { class QWidget; }  // lines 16-16
namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 18-18
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 36-36
namespace CSMDoc { namespace boost { template <class Y> class shared_ptr; } }  // lines 21-21
---

apps/opencs/view/filter/editwidget.cpp should add these lines:
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QString; }

apps/opencs/view/filter/editwidget.cpp should remove these lines:
- #include <QAbstractItemModel>  // lines 2-2
- #include <QApplication>  // lines 3-3
- #include <QString>  // lines 4-4
- #include <sstream>  // lines 5-5
- #include <sstream>  // lines 6-6
- #include "../../model/world/data.hpp"  // lines 8-8
- #include "apps/opencs/view/filter/../../model/filter/parser.hpp"  // lines 9-9
- #include "apps/opencs/view/filter/../../model/filter/parser.hpp"  // lines 10-10
- #include "apps/opencs/view/filter/../../model/world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/view/filter/../../model/world/universalid.hpp"  // lines 12-12
- namespace CSMDoc { class QWidget; }  // lines 17-17

The full include-list for apps/opencs/view/filter/editwidget.cpp:
#include "editwidget.hpp"
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QString; }
namespace CSMDoc { class QWidget; }  // lines 15-15
---

apps/opencs/view/world/scriptedit.hpp should add these lines:

apps/opencs/view/world/scriptedit.hpp should remove these lines:
- #include <QTimer>  // lines 5-5
- #include <QVector>  // lines 6-6
- #include <QtCore>  // lines 8-8
- #include <string>  // lines 9-9
- #include "../../model/world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/view/world/../../model/doc/../world/universalid.hpp"  // lines 12-12
- #include "apps/opencs/view/world/../../model/doc/../world/universalid.hpp"  // lines 13-13
- namespace CSMDoc { class QDragEnterEvent; }  // lines 20-20
- namespace CSMDoc { class QDragMoveEvent; }  // lines 21-21
- namespace CSMDoc { class QDropEvent; }  // lines 22-22
- namespace CSMDoc { class QRegExp; }  // lines 23-23

The full include-list for apps/opencs/view/world/scriptedit.hpp:
#include <QPlainTextEdit>               // for QPlainTextEdit
#include <QtCore>                       // for QTimer, Q_OBJECT, slots
#include "scripthighlighter.hpp"        // for ScriptHighlighter, etc
namespace CSMDoc { class QDragEnterEvent; }  // lines 16-16
namespace CSMDoc { class QDragMoveEvent; }  // lines 17-17
namespace CSMDoc { class QDropEvent; }  // lines 18-18
namespace CSMDoc { class QWidget; }  // lines 25-25
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 29-29
---

apps/opencs/view/world/scriptedit.cpp should add these lines:

apps/opencs/view/world/scriptedit.cpp should remove these lines:
- #include <QDragEnterEvent>  // lines 1-1
- #include <QString>  // lines 2-2
- #include <new>  // lines 3-3
- #include <vector>  // lines 4-4
- #include <vector>  // lines 5-5
- #include "../../model/world/tablemimedata.hpp"  // lines 7-7
- #include "../../model/world/universalid.hpp"  // lines 8-8
- #include "apps/opencs/view/world/../../model/doc/../world/data.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../../model/doc/../world/data.hpp"  // lines 10-10
- #include "apps/opencs/view/world/scripthighlighter.hpp"  // lines 12-12

The full include-list for apps/opencs/view/world/scriptedit.cpp:
#include "scriptedit.hpp"
#include "apps/opencs/view/world/scripthighlighter.hpp"
---
error: no such file or directory: 'build-include/apps/opencs/moc_editor.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_document.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/model/filter/textnode.hpp should add these lines:

apps/opencs/model/filter/textnode.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "apps/opencs/model/filter/../world/idtablebase.hpp"  // lines 12-12

The full include-list for apps/opencs/model/filter/textnode.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/opencs/model/filter/../world/idtablebase.hpp"
#include "leafnode.hpp"                 // for LeafNode
---

apps/opencs/model/filter/textnode.cpp should add these lines:

apps/opencs/model/filter/textnode.cpp should remove these lines:
- #include <QRegExp>  // lines 2-2
- #include <QtCore>  // lines 4-4
- #include <utility>  // lines 8-8

The full include-list for apps/opencs/model/filter/textnode.cpp:
#include "textnode.hpp"
#include <QtCore>                       // for QVariant, QString, QRegExp, etc
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "../world/columns.hpp"         // for ColumnId, getEnums, getName, etc
#include "../world/idtablebase.hpp"     // for IdTableBase
---
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_operation.cxx'

apps/opencs/view/doc/view.hpp should add these lines:
class QAction;

apps/opencs/view/doc/view.hpp should remove these lines:
- #include <map>  // lines 6-6
- #include <string>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "subviewfactory.hpp"  // lines 11-11
- class QCloseEvent;  // lines 19-19
- class QDockWidget;  // lines 20-20
- namespace CSVDoc { class SubView; }  // lines 22-22

The full include-list for apps/opencs/view/doc/view.hpp:
#include <QMainWindow>                  // for QMainWindow
#include <QtCore>                       // for QString, slots, QList, etc
#include <string>                       // for string
class QAction;
class QCloseEvent;  // lines 14-14
namespace CSMDoc { class Document; }  // lines 27-27
namespace CSMWorld { class UniversalId; }  // lines 32-32
namespace CSVDoc { class GlobalDebugProfileMenu; }  // lines 37-37
namespace CSVDoc { class Operations; }  // lines 38-38
namespace CSVDoc { class SubView; }  // lines 16-16
namespace CSVDoc { class ViewManager; }  // lines 39-39
---
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_saving.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/world/table.cpp:6:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:144:29: error: unknown type name 'qint8'; did you mean 'quint8'?
    QDataStream &operator>>(qint8 &i);
                            ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:6:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:145:18: error: class member cannot be redeclared
    QDataStream &operator>>(quint8 &i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:144:18: note: previous declaration is here
    QDataStream &operator>>(qint8 &i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:158:29: error: unknown type name 'qint8'; did you mean 'quint8'?
    QDataStream &operator<<(qint8 i);
                            ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:6:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:159:18: error: class member cannot be redeclared
    QDataStream &operator<<(quint8 i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:158:18: note: previous declaration is here
    QDataStream &operator<<(qint8 i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:219:36: error: unknown type name 'qint8'; did you mean 'quint8'?
{ return *this >> reinterpret_cast<qint8&>(i); }
                                   ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:6:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:231:19: error: use of undeclared identifier 'qint8'
{ return *this << qint8(i); }
                  ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:36:
apps/opencs/model/filter/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/launcher/textslotmsgbox.hpp should add these lines:

apps/launcher/textslotmsgbox.hpp should remove these lines:
- #include <QtCore>  // lines 6-6

The full include-list for apps/launcher/textslotmsgbox.hpp:
#include <QMessageBox>                  // for QMessageBox
#include <QtCore>                       // for QString, Q_OBJECT, slots
---

apps/launcher/textslotmsgbox.cpp should add these lines:

apps/launcher/textslotmsgbox.cpp should remove these lines:
- #include <QCharRef>  // lines 1-1
- #include <QCharRef>  // lines 2-2

The full include-list for apps/launcher/textslotmsgbox.cpp:
#include "textslotmsgbox.hpp"
---
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/view/settings/page.cpp:1:
In file included from /usr/include/qt4/QtGui/QLabel:1:
In file included from /usr/include/qt4/QtGui/qlabel.h:45:
In file included from /usr/include/qt4/QtGui/qframe.h:45:
In file included from /usr/include/qt4/QtGui/qwidget.h:46:
In file included from /usr/include/qt4/QtGui/qwindowdefs.h:45:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/page.cpp:1:
In file included from /usr/include/qt4/QtGui/QLabel:1:
In file included from /usr/include/qt4/QtGui/qlabel.h:45:
In file included from /usr/include/qt4/QtGui/qframe.h:45:
In file included from /usr/include/qt4/QtGui/qwidget.h:46:
In file included from /usr/include/qt4/QtGui/qwindowdefs.h:45:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/page.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: 
apps/opencs/model/tools/skillcheck.hpp should add these lines:

apps/opencs/model/tools/skillcheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Skill; }  // lines 17-17

The full include-list for apps/opencs/model/tools/skillcheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Skill; }  // lines 8-8
---

apps/opencs/model/tools/skillcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/skillcheck.cpp should remove these lines:
- #include <string>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "../world/universalid.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 11-11
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 13-13
- #include "apps/opencs/model/tools/../world/record.hpp"  // lines 15-15

The full include-list for apps/opencs/model/tools/skillcheck.cpp:
#include "skillcheck.hpp"
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SKDTstruct
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for basic_string, char_traits, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^

libs/openengine/bullet/physic.hpp should add these lines:
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string

libs/openengine/bullet/physic.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <list>  // lines 8-8
- #include <vector>  // lines 11-11
- #include "BulletCollision/CollisionDispatch/btCollisionWorld.h"  // lines 19-19
- #include "BulletCollision/CollisionDispatch/btGhostObject.h"  // lines 20-20
- #include "BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.h"  // lines 21-21
- #include "BulletShapeLoader.h"  // lines 22-22
- #include "LinearMath/btScalar.h"  // lines 23-23
- #include "OgreQuaternion.h"  // lines 24-24
- #include "OgreVector3.h"  // lines 17-17
- class DebugDrawer;  // lines 58-58
- class btCollisionObject;  // lines 40-40
- class btCollisionShape;  // lines 41-41
- class btRigidBody;  // lines 46-46
- class btVector3;  // lines 48-48
- namespace MWWorld { class World; }  // lines 68-68
- namespace OEngine { class BulletShapeLoader; }  // lines 50-50
- namespace OEngine { namespace Physic { class RigidBody; } }  // lines 76-76
- namespace OEngine { namespace Physic { struct PhysicEvent; } }  // lines 77-77
- namespace Ogre { class SceneNode; }  // lines 54-54

The full include-list for libs/openengine/bullet/physic.hpp:
#include <BulletDynamics/Dynamics/btRigidBody.h>  // for btRigidBody
#include <stddef.h>                     // for NULL
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector
#include "BulletCollision/CollisionDispatch/btCollisionWorld.h"
#include "LinearMath/btScalar.h"        // for btScalar
#include "OgreQuaternion.h"             // for Quaternion, etc
#include "OgreVector3.h"                // for Vector3, Vector3::ZERO
class btBroadphaseInterface;  // lines 37-37
class btCollisionDispatcher;  // lines 38-38
class btCollisionObject;  // lines 25-25
class btCollisionShape;  // lines 26-26
class btDefaultCollisionConfiguration;  // lines 42-42
class btDiscreteDynamicsWorld;  // lines 43-43
class btHeightfieldTerrainShape;  // lines 44-44
class btSequentialImpulseConstraintSolver;  // lines 47-47
class btVector3;  // lines 27-27
namespace OEngine { namespace Physic { class BulletShapeLoader; } }  // lines 30-30
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 75-75
namespace Ogre { class SceneManager; }  // lines 63-63
namespace Ogre { class SceneNode; }  // lines 34-34
---
In file included from apps/opencs/view/settings/page.cpp:9:
./apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
./apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
./apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^

libs/openengine/bullet/physic.cpp should add these lines:
class btManifoldPoint;

libs/openengine/bullet/physic.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <boost/lexical_cast.hpp>  // lines 4-4
- #include <cmath>  // lines 9-9
- #include <limits>  // lines 11-11
- #include <sstream>  // lines 12-12
- #include <sstream>  // lines 13-13
- #include <stdexcept>  // lines 15-15
- #include "BulletCollision/BroadphaseCollision/btBroadphaseInterface.h"  // lines 18-18
- #include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.h"  // lines 19-19
- #include "BulletCollision/CollisionDispatch/btCollisionDispatcher.h"  // lines 22-22
- #include "BulletCollision/CollisionDispatch/btCollisionObject.h"  // lines 24-24
- #include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"  // lines 26-26
- #include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h"  // lines 28-28
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 29-29
- #include "BulletCollision/CollisionShapes/btBoxShape.h"  // lines 30-30
- #include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"  // lines 32-32
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 34-34
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 36-36
- #include "BulletCollision/CollisionShapes/btConcaveShape.h"  // lines 38-38
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 39-39
- #include "BulletCollision/CollisionShapes/btCylinderShape.h"  // lines 40-40
- #include "BulletCollision/CollisionShapes/btSphereShape.h"  // lines 42-42
- #include "BulletCollision/CollisionShapes/btTriangleMesh.h"  // lines 44-44
- #include "BulletCollision/NarrowPhaseCollision/btManifoldPoint.h"  // lines 45-45
- #include "BulletCollision/NarrowPhaseCollision/btManifoldPoint.h"  // lines 46-46
- #include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h"  // lines 48-48
- #include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"  // lines 50-50
- #include "BulletDynamics/Dynamics/btRigidBody.h"  // lines 52-52
- #include "LinearMath/btMotionState.h"  // lines 54-54
- #include "LinearMath/btQuaternion.h"  // lines 56-56
- #include "LinearMath/btTransform.h"  // lines 58-58
- #include "LinearMath/btVector3.h"  // lines 60-60
- #include "OgreSceneNode.h"  // lines 62-62
- #include "OgreSharedPtr.h"  // lines 63-63
- #include "OgreSharedPtr.h"  // lines 64-64
- #include "openengine/bullet/BulletShapeLoader.h"  // lines 66-66

The full include-list for libs/openengine/bullet/physic.cpp:
#include "physic.hpp"
#include <BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h>
#include <OgreSceneManager.h>           // for SceneManager
#include <assert.h>                     // for assert
#include <cmath>                        // for abs
#include <components/nifbullet/bulletnifloader.hpp>  // for getBoundingBox, etc
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for logic_error
#include "BulletCollision/BroadphaseCollision/btBroadphaseInterface.h"
#include "BulletCollision/BroadphaseCollision/btDbvtBroadphase.h"
#include "BulletCollision/CollisionDispatch/btCollisionDispatcher.h"
#include "BulletCollision/CollisionDispatch/btCollisionObject.h"
#include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"
#include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h"
#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "BulletCollision/CollisionShapes/btConcaveShape.h"
#include "BulletCollision/CollisionShapes/btSphereShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h"
#include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"
#include "BulletDynamics/Dynamics/btRigidBody.h"  // for btRigidBody, etc
#include "LinearMath/btMotionState.h"   // for btMotionState
#include "LinearMath/btQuaternion.h"    // for btQuaternion
#include "LinearMath/btTransform.h"     // for btTransform
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreSceneNode.h"              // for SceneNode
#include "openengine/bullet/BulletShapeLoader.h"  // for BulletShapePtr, etc
class btManifoldPoint;
---
./apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
In file included from apps/opencs/view/world/util.cpp:15:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/settings/page.cpp:11:
In file included from apps/opencs/view/settings/booleanview.hpp:9:
apps/opencs/view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/settings/page.cpp:11:
In file included from apps/opencs/view/settings/booleanview.hpp:9:
apps/opencs/view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/world/referenceablecreator.cpp:11:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
apps/opencs/view/world/referenceablecreator.cpp:29:12: error: member access into incomplete type 'CSMWorld::CreateCommand'
    command.setType (
           ^
apps/opencs/view/world/genericcreator.hpp:39:11: note: forward declaration of 'CSMWorld::CreateCommand'
    class CreateCommand;
          ^

apps/opencs/view/render/lightingday.hpp should add these lines:

apps/opencs/view/render/lightingday.hpp should remove these lines:
- namespace Ogre { class ColourValue; }  // lines 10-10
- namespace Ogre { class SceneManager; }  // lines 11-11

The full include-list for apps/opencs/view/render/lightingday.hpp:
#include "lighting.hpp"                 // for Lighting
namespace Ogre { class ColourValue; }  // lines 7-7
namespace Ogre { class Light; }  // lines 16-16
namespace Ogre { class SceneManager; }  // lines 8-8
---

apps/opencs/view/render/lightingday.cpp should add these lines:

apps/opencs/view/render/lightingday.cpp should remove these lines:
- #include "OgreColourValue.h"  // lines 5-5
- #include "OgreLight.h"  // lines 7-7
- #include "OgreVector3.h"  // lines 9-9

The full include-list for apps/opencs/view/render/lightingday.cpp:
#include "lightingday.hpp"
#include <OgreSceneManager.h>           // for SceneManager
#include "OgreColourValue.h"            // for ColourValue
#include "OgreLight.h"                  // for Light, etc
#include "OgreVector3.h"                // for Vector3
---

apps/opencs/model/tools/scriptcheck.hpp should add these lines:

apps/opencs/model/tools/scriptcheck.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include "../doc/stage.hpp"  // lines 8-8
- #include "apps/opencs/model/tools/../doc/../world/../doc/stage.hpp"  // lines 10-10

The full include-list for apps/opencs/model/tools/scriptcheck.hpp:
#include <components/compiler/errorhandler.hpp>  // for ErrorHandler::Type, etc
#include <components/compiler/extensions.hpp>  // for Extensions
#include "../world/scriptcontext.hpp"   // for ScriptContext
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 21-21
namespace CSMDoc { namespace CSMDoc { class Messages; } }  // lines 13-13
namespace CSMDoc { namespace Compiler { struct TokenLoc; } }  // lines 16-16
---

apps/opencs/model/tools/scriptcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/refcollection.hpp"
namespace CSMDoc { namespace CSMWorld { class Data; } }

apps/opencs/model/tools/scriptcheck.cpp should remove these lines:
- #include <components/compiler/exception.hpp>  // lines 2-2
- #include <components/compiler/extensions0.hpp>  // lines 3-3
- #include <components/compiler/fileparser.hpp>  // lines 4-4
- #include <components/compiler/scanner.hpp>  // lines 5-5
- #include <components/compiler/tokenloc.hpp>  // lines 6-6
- #include <exception>  // lines 7-7
- #include <exception>  // lines 8-8
- #include <ostream>  // lines 9-9
- #include <ostream>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <utility>  // lines 12-12
- #include "../world/data.hpp"  // lines 15-15
- #include "apps/opencs/model/tools/../doc/../world/idcollection.hpp"  // lines 16-16
- #include "apps/opencs/model/tools/../doc/../world/idcollection.hpp"  // lines 17-17
- #include "apps/opencs/model/tools/../doc/../world/record.hpp"  // lines 18-18
- #include "apps/opencs/model/tools/../doc/../world/record.hpp"  // lines 19-19
- #include "apps/opencs/model/tools/../doc/../world/universalid.hpp"  // lines 20-20
- #include "apps/opencs/model/tools/../doc/../world/universalid.hpp"  // lines 21-21
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 22-22
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 23-23
- #include "apps/opencs/model/tools/../world/scriptcontext.hpp"  // lines 25-25
- #include "components/compiler/errorhandler.hpp"  // lines 27-27
- #include "components/esm/loadscpt.hpp"  // lines 28-28
- #include "components/esm/loadscpt.hpp"  // lines 29-29

The full include-list for apps/opencs/model/tools/scriptcheck.cpp:
#include "scriptcheck.hpp"
#include "../doc/document.hpp"          // for Document
#include "apps/opencs/model/tools/../doc/../world/refcollection.hpp"
#include "apps/opencs/model/tools/../world/scriptcontext.hpp"
#include "components/compiler/errorhandler.hpp"  // for ErrorHandler::Type
namespace CSMDoc { namespace CSMWorld { class Data; } }
---

apps/opencs/view/doc/view.cpp should add these lines:
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"

apps/opencs/view/doc/view.cpp should remove these lines:
- #include <QCloseEvent>  // lines 4-4
- #include <QMenuBar>  // lines 5-5
- #include <algorithm>  // lines 7-7
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include "../../model/doc/document.hpp"  // lines 10-10
- #include "../../model/settings/usersettings.hpp"  // lines 11-11
- #include "../../model/world/idtable.hpp"  // lines 12-12
- #include "../tools/subviews.hpp"  // lines 13-13
- #include "../world/subviews.hpp"  // lines 14-14
- #include "apps/opencs/view/doc/../../model/doc/../world/data.hpp"  // lines 15-15
- #include "apps/opencs/view/doc/../../model/doc/../world/universalid.hpp"  // lines 16-16
- #include "apps/opencs/view/doc/../../model/doc/state.hpp"  // lines 17-17
- #include "apps/opencs/view/doc/subviewfactory.hpp"  // lines 18-18
- #include "globaldebugprofilemenu.hpp"  // lines 19-19
- #include "operations.hpp"  // lines 20-20
- #include "runlogsubview.hpp"  // lines 21-21
- #include "subview.hpp"  // lines 22-22
- #include "subviewfactoryimp.hpp"  // lines 23-23
- #include "viewmanager.hpp"  // lines 25-25

The full include-list for apps/opencs/view/doc/view.cpp:
#include "view.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <QtGui>                        // for QMenu, QAction, etc
#include <sstream>                      // for ostringstream
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
---
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:42:
In file included from apps/opencs/model/filter/../world/refcollection.hpp:12:
apps/opencs/model/filter/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/filter/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:42:
apps/opencs/model/filter/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/filter/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
In file included from apps/opencs/model/filter/parser.cpp:10:
In file included from apps/opencs/model/filter/../world/data.hpp:43:
In file included from apps/opencs/model/filter/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: extraneous 'template<>' in declaration of variable 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:398:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
    ^~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/openmw/crashcatcher.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/wizard/unshield/unshieldworker.hpp should add these lines:

apps/wizard/unshield/unshieldworker.hpp should remove these lines:
- #include <QMutex>  // lines 6-6
- #include <QObject>  // lines 7-7
- #include <QReadWriteLock>  // lines 8-8
- #include <QStringList>  // lines 9-9
- #include <QThread>  // lines 10-10
- #include <QWaitCondition>  // lines 11-11
- #include <QtCore>  // lines 13-13

The full include-list for apps/wizard/unshield/unshieldworker.hpp:
#include <libunshield.h>                // for Unshield
#include <stdbool.h>                    // for bool, true, false
#include <QtCore>                       // for QString, MatchFlags, etc
#include "../inisettings.hpp"           // for IniSettings
---

apps/opencs/view/doc/filewidget.hpp should add these lines:

apps/opencs/view/doc/filewidget.hpp should remove these lines:
- #include <QtCore>  // lines 6-6
- class QString;  // lines 11-11

The full include-list for apps/opencs/view/doc/filewidget.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
class QLineEdit;  // lines 9-9
---

apps/opencs/view/doc/filewidget.cpp should add these lines:

apps/opencs/view/doc/filewidget.cpp should remove these lines:
- #include <QLabel>  // lines 6-6
- #include <QRegExp>  // lines 8-8

The full include-list for apps/opencs/view/doc/filewidget.cpp:
#include "filewidget.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QLineEdit>                    // for QLineEdit
#include <QRegExpValidator>             // for QRegExpValidator
---

apps/opencs/model/doc/loader.hpp should add these lines:

apps/opencs/model/doc/loader.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <utility>  // lines 12-12
- #include <vector>  // lines 13-13

The full include-list for apps/opencs/model/doc/loader.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QMutex>                       // for QMutex
#include <QObject>                      // for QObject
#include <QWaitCondition>               // for QWaitCondition
#include <string>                       // for string
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 18-18
---

apps/opencs/model/doc/loader.cpp should add these lines:

apps/opencs/model/doc/loader.cpp should remove these lines:
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <exception>  // lines 6-6
- #include "../tools/reportmodel.hpp"  // lines 8-8
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 9-9
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 10-10
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 12-12
- #include "apps/opencs/model/doc/messages.hpp"  // lines 13-13

The full include-list for apps/opencs/model/doc/loader.cpp:
#include "loader.hpp"
#include <QTimer>                       // for QTimer
#include <exception>                    // for exception
#include "document.hpp"                 // for Document
---

apps/opencs/model/settings/connector.hpp should add these lines:

apps/opencs/model/settings/connector.hpp should remove these lines:
- #include <QList>  // lines 4-4
- #include <QMap>  // lines 5-5
- #include <QObject>  // lines 6-6
- #include <QStringList>  // lines 7-7
- #include "support.hpp"  // lines 10-10

The full include-list for apps/opencs/model/settings/connector.hpp:
#include <QtCore>                       // for QList, QString, QStringList, etc
namespace CSVSettings { class View; }  // lines 13-13
---

apps/opencs/model/settings/connector.cpp should add these lines:
#include <QList>                        // for QList
#include <QMap>                         // for QMap
#include <QObject>                      // for QObject
#include <QStringList>                  // for QStringList

apps/opencs/model/settings/connector.cpp should remove these lines:

The full include-list for apps/opencs/model/settings/connector.cpp:
#include "connector.hpp"
#include <QList>                        // for QList
#include <QMap>                         // for QMap
#include <QObject>                      // for QObject
#include <QStringList>                  // for QStringList
#include "../../view/settings/view.hpp"  // for View
---

apps/wizard/unshield/unshieldworker.cpp should add these lines:
#include <QMutex>                       // for QMutex
#include <QObject>                      // for QObject
#include <QReadWriteLock>               // for QReadLocker, QWriteLocker

apps/wizard/unshield/unshieldworker.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 1-1
- #include <QDebug>  // lines 3-3
- #include <QDir>  // lines 4-4
- #include <QFile>  // lines 5-5
- #include <QFileInfoListIterator>  // lines 6-6
- #include <QTextCodec>  // lines 8-8
- #include <QTextStream>  // lines 9-9

The full include-list for apps/wizard/unshield/unshieldworker.cpp:
#include "unshieldworker.hpp"
#include <stddef.h>                     // for size_t
#include <QMutex>                       // for QMutex
#include <QObject>                      // for QObject
#include <QReadWriteLock>               // for QReadLocker, QWriteLocker
#include <QStringList>                  // for QStringList
#include "apps/wizard/unshield/../inisettings.hpp"  // for IniSettings
---
error: no such file or directory: 'build-include/apps/wizard/qrc_wizard.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_componentselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
error: no such file or directory: 'build-include/apps/wizard/moc_conclusionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_existinginstallationpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/view/world/physicssystem.cpp:14:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^

apps/opencs/model/tools/birthsigncheck.hpp should add these lines:

apps/opencs/model/tools/birthsigncheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct BirthSign; }  // lines 17-17

The full include-list for apps/opencs/model/tools/birthsigncheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct BirthSign; }  // lines 8-8
---

apps/opencs/model/tools/birthsigncheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/birthsigncheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/birthsigncheck.cpp:
#include "birthsigncheck.hpp"
#include <components/esm/loadbsgn.hpp>  // for BirthSign
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:36:
apps/opencs/model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/launcher/settingspage.cpp:1:
./components/config/gamesettings.hpp:20:23: error: use of undeclared identifier 'boost'
  typedef std::vector<boost::filesystem::path> PathContainer;
                      ^

apps/opencs/view/world/referenceablecreator.hpp should add these lines:

apps/opencs/view/world/referenceablecreator.hpp should remove these lines:
- #include <QArgument>  // lines 12-12
- #include <string>  // lines 6-6
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 9-9
- class QUndoStack;  // lines 20-20
- namespace CSMWorld { class CreateCommand; }  // lines 22-22
- namespace CSMWorld { class Data; }  // lines 23-23

The full include-list for apps/opencs/view/world/referenceablecreator.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
#include "genericcreator.hpp"           // for GenericCreator
class QComboBox;  // lines 19-19
class QUndoStack;  // lines 13-13
namespace CSMWorld { class CreateCommand; }  // lines 15-15
namespace CSMWorld { class Data; }  // lines 16-16
---

apps/opencs/view/world/referenceablecreator.cpp should add these lines:

apps/opencs/view/world/referenceablecreator.cpp should remove these lines:
- #include <QIcon>  // lines 4-4
- #include <QtCore>  // lines 6-6
- #include <QtCore>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "../../model/world/commands.hpp"  // lines 11-11
- #include "apps/opencs/view/world/genericcreator.hpp"  // lines 14-14
- class QUndoStack;  // lines 22-22
- namespace CSMWorld { class Data; }  // lines 24-24

The full include-list for apps/opencs/view/world/referenceablecreator.cpp:
#include "referenceablecreator.hpp"
#include <QComboBox>                    // for QComboBox
#include <QIcon>                        // for QIcon
#include <QLabel>                       // for QLabel
#include <vector>                       // for vector, etc
#include "../../model/world/universalid.hpp"  // for UniversalId, etc
#include "apps/opencs/view/world/genericcreator.hpp"
class QUndoStack;  // lines 17-17
namespace CSMWorld { class Data; }  // lines 19-19
---
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

(apps/opencs/view/world/subviews.hpp has correct #includes/fwd-decls)

apps/opencs/view/world/subviews.cpp should add these lines:

apps/opencs/view/world/subviews.cpp should remove these lines:
- #include "../doc/subviewfactoryimp.hpp"  // lines 2-2
- #include "apps/opencs/view/world/../../model/world/scope.hpp"  // lines 3-3
- #include "apps/opencs/view/world/../../model/world/scope.hpp"  // lines 4-4
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 5-5
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 6-6
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 7-7
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 8-8
- #include "apps/opencs/view/world/../doc/subviewfactory.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../doc/subviewfactory.hpp"  // lines 10-10
- #include "apps/opencs/view/world/creator.hpp"  // lines 11-11
- #include "apps/opencs/view/world/creator.hpp"  // lines 12-12
- #include "cellcreator.hpp"  // lines 13-13
- #include "dialoguecreator.hpp"  // lines 14-14
- #include "dialoguesubview.hpp"  // lines 15-15
- #include "genericcreator.hpp"  // lines 16-16
- #include "infocreator.hpp"  // lines 17-17
- #include "previewsubview.hpp"  // lines 18-18
- #include "referenceablecreator.hpp"  // lines 19-19
- #include "referencecreator.hpp"  // lines 20-20
- #include "regionmapsubview.hpp"  // lines 21-21
- #include "scenesubview.hpp"  // lines 22-22
- #include "scriptsubview.hpp"  // lines 23-23
- #include "tablesubview.hpp"  // lines 25-25

The full include-list for apps/opencs/view/world/subviews.cpp:
#include "subviews.hpp"
---
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
apps/opencs/view/settings/page.cpp:23:43: error: no matching constructor for initialization of 'CSVSettings::Frame'
: mParent(parent), mIsEditorPage (false), Frame(false, "", parent), mLabel (label)
                                          ^     ~~~~~~~~~~~~~~~~~
apps/opencs/view/settings/frame.hpp:39:18: note: candidate constructor not viable: cannot convert argument of incomplete type 'CSVSettings::SettingWindow *' to 'QWidget *'
        explicit Frame (bool isVisible, const QString &title = "",
                 ^
apps/opencs/view/settings/frame.hpp:28:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
    class Frame : public QGroupBox
          ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
apps/opencs/view/settings/page.cpp:83:23: error: member access into incomplete type 'CSVSettings::SettingWindow'
        return mParent->findView (page, setting);
                      ^
apps/opencs/view/settings/page.hpp:20:11: note: forward declaration of 'CSVSettings::SettingWindow'
    class SettingWindow;
          ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:42:
In file included from apps/opencs/model/world/refcollection.hpp:12:
apps/opencs/model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:42:
apps/opencs/model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/util.cpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from ./apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:14:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/tools/../../model/tools/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
In file included from apps/opencs/model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/commanddispatcher.cpp:9:
In file included from apps/opencs/model/world/../doc/document.hpp:17:
In file included from apps/opencs/model/world/../doc/../world/data.hpp:43:
In file included from apps/opencs/model/world/refidcollection.hpp:16:
apps/opencs/model/world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
./apps/opencs/model/tools/../doc/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
apps/opencs/view/settings/resizeablestackedwidget.cpp:10:14: error: no member named 'ResizeableStackedWidget' in namespace 'CSVSettings'
CSVSettings::ResizeableStackedWidget::ResizeableStackedWidget(QWidget *parent) :
~~~~~~~~~~~~~^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
apps/opencs/view/settings/resizeablestackedwidget.cpp:14:19: error: no member named 'ResizeableStackedWidget' in namespace 'CSVSettings'
void CSVSettings::ResizeableStackedWidget::addWidget(QWidget* pWidget)
     ~~~~~~~~~~~~~^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:16:
apps/opencs/model/tools/bodypartcheck.hpp:31:47: error: expected class name
    class BodyPartCheckStage : public CSMDoc::Stage
                                              ^
apps/opencs/view/settings/resizeablestackedwidget.cpp:19:19: error: no member named 'ResizeableStackedWidget' in namespace 'CSVSettings'
void CSVSettings::ResizeableStackedWidget::changePage
     ~~~~~~~~~~~~~^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:12:
./apps/opencs/model/tools/../world/record.hpp:38:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mBase;
                   ^
./apps/opencs/model/tools/../doc/../world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<ESM::Race>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/bodypartcheck.cpp:72:21: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if ( mRaces.searchId( bodyPart.mRace ) == -1 )
                    ^
apps/opencs/model/tools/bodypartcheck.hpp:12:8: note: forward declaration of 'ESM::Race'
struct Race;
       ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:12:
./apps/opencs/model/tools/../world/record.hpp:39:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mModified;
                   ^
apps/opencs/model/tools/bodypartcheck.hpp:12:8: note: forward declaration of 'ESM::Race'
struct Race;
       ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:10:
In file included from apps/opencs/model/tools/../world/idcollection.hpp:6:
./apps/opencs/model/tools/../doc/../world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<ESM::Race> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/bodypartcheck.cpp:72:21: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if ( mRaces.searchId( bodyPart.mRace ) == -1 )
                    ^
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^

apps/launcher/graphicspage.hpp should add these lines:

apps/launcher/graphicspage.hpp should remove these lines:
- #include <QtCore>  // lines 7-7

The full include-list for apps/launcher/graphicspage.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, QStringList, slots, etc
#include <components/ogreinit/ogreinit.hpp>  // for OgreInit
namespace Files { struct ConfigurationManager; }  // lines 13-13
namespace Launcher { class GraphicsSettings; }  // lines 23-23
namespace Ogre { class RenderSystem; }  // lines 17-17
namespace Ogre { class Root; }  // lines 17-17
---

apps/launcher/graphicspage.cpp should add these lines:
#include "OgreStringVector.h"           // for StringVector

apps/launcher/graphicspage.cpp should remove these lines:

The full include-list for apps/launcher/graphicspage.cpp:
#include "graphicspage.hpp"
#include <OgreRenderSystem.h>           // for RenderSystem
#include <OgreRoot.h>                   // for Root, RenderSystemList
#include <stddef.h>                     // for NULL
#include <QMessageBox>                  // for QMessageBox, etc
#include "OgreConfigOptionMap.h"        // for ConfigOptionMap
#include "OgreException.h"              // for Exception
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "OgreStringVector.h"           // for StringVector
#include "SDL_video.h"                  // for SDL_DisplayMode, etc
---
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/tools/../../model/tools/../world/refcollection.hpp:12:
apps/opencs/view/tools/../../model/tools/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/tools/../../model/tools/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/tools/../../model/tools/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/tools/../../model/tools/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^

apps/opencs/model/filter/parser.hpp should add these lines:
#include "apps/opencs/model/filter/andnode.hpp"  // for shared_ptr
namespace CSMDoc { namespace boost { template <class Y> class shared_ptr; } }

apps/opencs/model/filter/parser.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 6-6
- #include "node.hpp"  // lines 8-8
- namespace CSMDoc { namespace CSMFilter { namespace CSMFilter { class Node; } } }  // lines 12-12

The full include-list for apps/opencs/model/filter/parser.hpp:
#include "apps/opencs/model/filter/andnode.hpp"  // for shared_ptr
namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 15-15
namespace CSMDoc { namespace CSMFilter { struct Token; } }  // lines 26-26
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 21-21
namespace CSMDoc { namespace boost { template <class Y> class shared_ptr; } }
---
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^

apps/opencs/model/filter/parser.cpp should add these lines:

apps/opencs/model/filter/parser.cpp should remove these lines:
- #include <cctype>  // lines 3-3
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include <sstream>  // lines 4-4
- #include <stdexcept>  // lines 5-5
- #include <vector>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "../world/columns.hpp"  // lines 9-9
- #include "../world/data.hpp"  // lines 10-10
- #include "../world/idcollection.hpp"  // lines 11-11
- #include "apps/opencs/model/filter/../world/record.hpp"  // lines 13-13
- #include "apps/opencs/model/filter/../world/record.hpp"  // lines 14-14
- #include "booleannode.hpp"  // lines 15-15
- #include "components/esm/filter.hpp"  // lines 16-16
- #include "components/esm/filter.hpp"  // lines 17-17
- #include "notnode.hpp"  // lines 18-18
- #include "textnode.hpp"  // lines 21-21
- namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 27-27

The full include-list for apps/opencs/model/filter/parser.cpp:
#include "parser.hpp"
#include "andnode.hpp"                  // for shared_ptr
#include "ornode.hpp"                   // for shared_ptr
#include "valuenode.hpp"                // for ValueNode, etc
namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 25-25
---
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/tools/../../model/tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/tools/../../model/tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/tools/../../model/tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^

apps/opencs/model/filter/node.hpp should add these lines:
#include <string>                       // for string

apps/opencs/model/filter/node.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6

The full include-list for apps/opencs/model/filter/node.hpp:
#include <QMetaType>                    // for Q_DECLARE_METATYPE
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
namespace CSMWorld { class IdTableBase; }  // lines 13-13
---

(apps/opencs/model/filter/node.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/tools/../../model/tools/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^

apps/opencs/model/tools/classcheck.hpp should add these lines:

apps/opencs/model/tools/classcheck.hpp should remove these lines:
- namespace CSMDoc { class Messages; }  // lines 14-14
- namespace ESM { struct Class; }  // lines 17-17

The full include-list for apps/opencs/model/tools/classcheck.hpp:
#include "../doc/stage.hpp"             // for Stage
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 12-12
namespace ESM { struct Class; }  // lines 8-8
---
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^

apps/opencs/model/tools/classcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/classcheck.cpp should remove these lines:
- #include <string>  // lines 7-7
- #include <utility>  // lines 9-9
- #include "../world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 13-13
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 15-15
- #include "apps/opencs/model/tools/../world/record.hpp"  // lines 17-17

The full include-list for apps/opencs/model/tools/classcheck.cpp:
#include "classcheck.hpp"
#include <components/esm/loadclas.hpp>  // for Class, Class::CLDTstruct
#include <components/esm/loadskil.hpp>  // for Skill
#include <map>                          // for map, etc
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for basic_string, allocator, etc
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/tools/../../model/tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/wizard/main.cpp:1:
In file included from /usr/include/qt4/QtGui/QApplication:1:
In file included from /usr/include/qt4/QtGui/qapplication.h:45:
In file included from /usr/include/qt4/QtCore/qcoreapplication.h:45:
In file included from /usr/include/qt4/QtCore/qobject.h:47:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/main.cpp:1:
In file included from /usr/include/qt4/QtGui/QApplication:1:
In file included from /usr/include/qt4/QtGui/qapplication.h:45:
In file included from /usr/include/qt4/QtCore/qcoreapplication.h:45:
In file included from /usr/include/qt4/QtCore/qobject.h:47:
In file included from /usr/include/qt4/QtCore/qobjectdefs.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/main.cpp:6:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
apps/wizard/main.cpp:46:5: error: cannot initialize object parameter of type 'QWidget' with an expression of type 'Wizard::MainWizard'
    wizard.show();
    ^~~~~~
In file included from apps/opencs/view/tools/reporttable.cpp:10:
In file included from apps/opencs/view/tools/../../view/world/idtypedelegate.hpp:4:
In file included from apps/opencs/view/tools/../../view/world/util.hpp:12:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../../model/tools/../world/refidcollection.hpp:16:
apps/opencs/view/tools/../../model/tools/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/tools/../../model/tools/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/model/tools/bodypartcheck.hpp should add these lines:

apps/opencs/model/tools/bodypartcheck.hpp should remove these lines:
- #include "../world/resources.hpp"  // lines 5-5
- namespace CSMDoc { class Messages; }  // lines 18-18
- namespace CSMWorld { class Resources; }  // lines 21-21
- namespace ESM { struct BodyPart; }  // lines 24-24
- namespace ESM { struct Race; }  // lines 25-25

The full include-list for apps/opencs/model/tools/bodypartcheck.hpp:
#include "../world/idcollection.hpp"    // for IdCollection
namespace CSMDoc { class Messages; }  // lines 16-16
namespace CSMWorld { class Resources; }  // lines 8-8
namespace ESM { struct BodyPart; }  // lines 11-11
namespace ESM { struct Race; }  // lines 12-12
---

apps/opencs/model/tools/bodypartcheck.cpp should add these lines:

apps/opencs/model/tools/bodypartcheck.cpp should remove these lines:
- #include <string>  // lines 2-2
- #include <utility>  // lines 4-4
- #include "apps/opencs/model/tools/../doc/../world/universalid.hpp"  // lines 7-7
- #include "apps/opencs/model/tools/../doc/messages.hpp"  // lines 9-9
- #include "apps/opencs/model/tools/../world/idcollection.hpp"  // lines 11-11
- #include "apps/opencs/model/tools/../world/record.hpp"  // lines 13-13
- #include "apps/opencs/model/tools/../world/resources.hpp"  // lines 15-15
- #include "components/esm/loadbody.hpp"  // lines 18-18
- namespace ESM { struct Race; }  // lines 23-23

The full include-list for apps/opencs/model/tools/bodypartcheck.cpp:
#include "bodypartcheck.hpp"
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
#include "apps/opencs/model/tools/../world/resources.hpp"
#include "components/esm/loadbody.hpp"  // for BodyPart, etc
namespace ESM { struct Race; }  // lines 21-21
---

apps/opencs/model/filter/valuenode.hpp should add these lines:

apps/opencs/model/filter/valuenode.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 9-9
- #include "apps/opencs/model/filter/../world/idtablebase.hpp"  // lines 12-12

The full include-list for apps/opencs/model/filter/valuenode.hpp:
#include <map>                          // for map
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/opencs/model/filter/../world/idtablebase.hpp"
#include "leafnode.hpp"                 // for LeafNode
---

apps/opencs/model/filter/valuenode.cpp should add these lines:

apps/opencs/model/filter/valuenode.cpp should remove these lines:
- #include <QtCore>  // lines 3-3
- #include <utility>  // lines 7-7

The full include-list for apps/opencs/model/filter/valuenode.cpp:
#include "valuenode.hpp"
#include <QtCore>                       // for QVariant, QModelIndex, etc
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "../world/columns.hpp"         // for getName, ColumnId
#include "../world/idtablebase.hpp"     // for IdTableBase
---

apps/opencs/view/settings/resizeablestackedwidget.cpp should add these lines:

apps/opencs/view/settings/resizeablestackedwidget.cpp should remove these lines:
- #include <QLayoutIterator>  // lines 1-1
- #include <QLayoutIterator>  // lines 2-2
- #include "page.hpp"  // lines 4-4
- class QWidget;  // lines 6-6
- class QWidget;  // lines 8-8

The full include-list for apps/opencs/view/settings/resizeablestackedwidget.cpp:
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/widget/scenetoolrun.hpp should add these lines:
class QFrame;

apps/opencs/view/widget/scenetoolrun.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <vector>  // lines 9-9
- class QModelIndex;  // lines 17-17
- namespace CSVWidget { class SceneToolbar; }  // lines 20-20

The full include-list for apps/opencs/view/widget/scenetoolrun.hpp:
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
#include <set>                          // for set, set<>::iterator
#include <string>                       // for string
#include <vector>                       // for vector
#include "scenetool.hpp"                // for SceneTool
class QFrame;
class QTableWidget;  // lines 18-18
namespace CSVWidget { class SceneToolbar; }  // lines 14-14
---

apps/opencs/view/widget/scenetoolrun.cpp should add these lines:

apps/opencs/view/widget/scenetoolrun.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QFrame>  // lines 3-3
- #include <QHBoxLayout>  // lines 4-4
- #include <QHeaderView>  // lines 5-5
- #include <QtGui>  // lines 8-8
- #include "apps/opencs/view/widget/pushbutton.hpp"  // lines 12-12
- #include "apps/opencs/view/widget/scenetool.hpp"  // lines 14-14
- namespace CSVWidget { class SceneToolbar; }  // lines 20-20

The full include-list for apps/opencs/view/widget/scenetoolrun.cpp:
#include "scenetoolrun.hpp"
#include <QTableWidget>                 // for QTableWidget, etc
#include <QtGui>                        // for QFrame, QHeaderView, etc
#include <iterator>                     // for advance
#include "apps/opencs/view/widget/pushbutton.hpp"
#include "apps/opencs/view/widget/scenetool.hpp"  // for SceneTool
namespace CSVWidget { class SceneToolbar; }  // lines 18-18
---

apps/wizard/componentselectionpage.hpp should add these lines:

apps/wizard/componentselectionpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/componentselectionpage.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

(apps/wizard/componentselectionpage.cpp has correct #includes/fwd-decls)

apps/opencs/view/world/util.hpp should add these lines:
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QModelIndex; }

apps/opencs/view/world/util.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4
- #include <map>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../../model/doc/document.hpp"  // lines 12-12
- #include "../../model/world/columnbase.hpp"  // lines 13-13
- namespace CSMDoc { namespace CSMWorld { class TableMimeData; } }  // lines 26-26
- namespace CSMDoc { namespace CSMWorld { class UniversalId; } }  // lines 27-27

The full include-list for apps/opencs/view/world/util.hpp:
#include <QLineEdit>                    // for QLineEdit
#include <QStyleHintReturnMask>         // for QStyleOptionViewItem
#include <QStyledItemDelegate>          // for QStyledItemDelegate
#include <QtCore>                       // for QVariant, etc
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QDragEnterEvent; }  // lines 15-15
namespace CSMDoc { class QDragMoveEvent; }  // lines 16-16
namespace CSMDoc { class QDropEvent; }  // lines 17-17
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QUndoStack; }  // lines 18-18
namespace CSMDoc { class QWidget; }  // lines 19-19
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 21-21
namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 55-55
---

apps/opencs/view/world/util.cpp should add these lines:
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QModelIndex; }

apps/opencs/view/world/util.cpp should remove these lines:
- #include <QCheckBox>  // lines 2-2
- #include <QDoubleSpinBox>  // lines 3-3
- #include <QMetaProperty>  // lines 5-5
- #include <QUndoStack>  // lines 8-8
- #include <QtGui>  // lines 9-9
- #include <stdexcept>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../../model/world/commands.hpp"  // lines 15-15
- #include "../../model/world/tablemimedata.hpp"  // lines 16-16
- #include "apps/opencs/view/world/../../model/doc/document.hpp"  // lines 17-17
- #include "apps/opencs/view/world/../../model/world/columnbase.hpp"  // lines 18-18
- #include "apps/opencs/view/world/scripthighlighter.hpp"  // lines 19-19
- #include "scriptedit.hpp"  // lines 20-20

The full include-list for apps/opencs/view/world/util.cpp:
#include "util.hpp"
#include <QLineEdit>                    // for QLineEdit
#include <QPlainTextEdit>               // for QPlainTextEdit
#include <QStyledItemDelegate>          // for QStyledItemDelegate
#include <cfloat>                       // for FLT_MAX, FLT_MIN
#include <climits>                      // for INT_MAX, INT_MIN
class QWidget;
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QModelIndex; }
---

apps/opencs/view/world/physicssystem.hpp should add these lines:
#include "OgreQuaternion.h"             // for Quaternion
namespace Ogre { class Camera; }
namespace Ogre { class SceneManager; }
namespace Ogre { class Vector3; }

apps/opencs/view/world/physicssystem.hpp should remove these lines:
- #include <map>  // lines 4-4
- #include <utility>  // lines 7-7
- class Camera;  // lines 10-10
- class Quaternion;  // lines 11-11
- class SceneManager;  // lines 12-12
- class SceneWidget;  // lines 28-28

The full include-list for apps/opencs/view/world/physicssystem.hpp:
#include <string>                       // for string
#include <utility>                      // for pair
#include "OgreQuaternion.h"             // for Quaternion
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 23-23
namespace Ogre { class Camera; }
namespace Ogre { class SceneManager; }
namespace Ogre { class Vector3; }
---

apps/opencs/view/world/physicssystem.cpp should add these lines:
namespace Ogre { class SceneManager; }

apps/opencs/view/world/physicssystem.cpp should remove these lines:
- #include <OgreSceneManager.h>  // lines 3-3
- #include <stddef.h>  // lines 7-7
- #include <stdint.h>  // lines 9-9
- #include <QCharRef>  // lines 11-11
- #include <iostream>  // lines 12-12
- #include "LinearMath/btVector3.h"  // lines 17-17
- #include "OgreQuaternion.h"  // lines 19-19
- #include "OgreSceneNode.h"  // lines 20-20
- #include "OgreSceneNode.h"  // lines 21-21
- #include "OgreVector3.h"  // lines 23-23
- #include "OgreViewport.h"  // lines 25-25

The full include-list for apps/opencs/view/world/physicssystem.cpp:
#include "physicssystem.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreRay.h>                    // for Ray
#include <stddef.h>                     // for NULL
#include <stdint.h>                     // for uint32_t
#include <QCharRef>                     // for QString
#include <components/nifbullet/bulletnifloader.hpp>
#include <openengine/bullet/physic.hpp>  // for PhysicEngine
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "../render/elements.hpp"       // for Elements::Element_Reference, etc
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3
#include "OgreViewport.h"               // for Viewport
namespace Ogre { class SceneManager; }
---

apps/opencs/model/filter/andnode.hpp should add these lines:

apps/opencs/model/filter/andnode.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <vector>  // lines 7-7
- namespace CSMFilter { class Node; }  // lines 21-21
- namespace CSMWorld { class IdTableBase; }  // lines 24-24
- namespace boost { template <class Y> class shared_ptr; }  // lines 27-27

The full include-list for apps/opencs/model/filter/andnode.hpp:
#include <map>                          // for map
#include <vector>                       // for vector
#include "narynode.hpp"                 // for NAryNode
namespace CSMFilter { class Node; }  // lines 19-19
namespace CSMWorld { class IdTableBase; }  // lines 12-12
namespace boost { template <class Y> class shared_ptr; }  // lines 15-15
---

apps/opencs/model/filter/andnode.cpp should add these lines:

apps/opencs/model/filter/andnode.cpp should remove these lines:
- #include "apps/opencs/model/filter/narynode.hpp"  // lines 4-4
- namespace CSMWorld { class IdTableBase; }  // lines 14-14
- namespace boost { template <class Y> class shared_ptr; }  // lines 17-17

The full include-list for apps/opencs/model/filter/andnode.cpp:
#include "andnode.hpp"
#include "apps/opencs/model/filter/narynode.hpp"  // for NAryNode
#include "apps/opencs/model/filter/node.hpp"  // for Node
namespace CSMWorld { class IdTableBase; }  // lines 12-12
namespace boost { template <class Y> class shared_ptr; }  // lines 8-8
---

apps/opencs/model/world/commanddispatcher.hpp should add these lines:
#include "apps/opencs/model/world/refcollection.hpp"  // for UniversalId
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/model/world/commanddispatcher.hpp should remove these lines:
- #include <string>  // lines 6-6
- #include <vector>  // lines 7-7
- #include "apps/opencs/model/world/../doc/../world/universalid.hpp"  // lines 9-9
- #include "universalid.hpp"  // lines 10-10

The full include-list for apps/opencs/model/world/commanddispatcher.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <QObject>                      // for QObject
#include "apps/opencs/model/world/refcollection.hpp"  // for UniversalId
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 14-14
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/opencs/model/world/commanddispatcher.cpp should add these lines:
#include <string>                       // for string
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/model/world/commanddispatcher.cpp should remove these lines:
- #include <QtCore>  // lines 3-3
- #include <QtCore>  // lines 4-4
- #include <QtGui>  // lines 5-5
- #include <QtGui>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include <components/misc/stringops.hpp>  // lines 2-2
- #include "../doc/document.hpp"  // lines 9-9
- #include "apps/opencs/model/world/../doc/../world/data.hpp"  // lines 10-10
- #include "apps/opencs/model/world/../doc/../world/data.hpp"  // lines 11-11
- #include "apps/opencs/model/world/columns.hpp"  // lines 12-12
- #include "apps/opencs/model/world/columns.hpp"  // lines 13-13
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 14-14
- #include "apps/opencs/model/world/idtablebase.hpp"  // lines 15-15
- #include "apps/opencs/model/world/ref.hpp"  // lines 16-16
- #include "apps/opencs/model/world/ref.hpp"  // lines 17-17
- #include "apps/opencs/model/world/refcollection.hpp"  // lines 18-18
- #include "apps/opencs/model/world/refcollection.hpp"  // lines 19-19
- #include "commands.hpp"  // lines 21-21
- #include "components/esm/loaddial.hpp"  // lines 22-22
- #include "components/esm/loaddial.hpp"  // lines 23-23
- #include "idtable.hpp"  // lines 24-24
- #include "record.hpp"  // lines 25-25

The full include-list for apps/opencs/model/world/commanddispatcher.cpp:
#include "commanddispatcher.hpp"
#include <string>                       // for string
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---
In file included from apps/opencs/editor.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^

apps/opencs/view/settings/page.hpp should add these lines:
namespace CSVSettings { class IViewFactory; }

apps/opencs/view/settings/page.hpp should remove these lines:
- #include <QWidget>  // lines 4-4
- #include <QtCore>  // lines 6-6
- class IViewFactory;  // lines 16-16

The full include-list for apps/opencs/view/settings/page.hpp:
#include <QtCore>                       // for QString, QList, Q_OBJECT
#include "../../model/settings/support.hpp"  // for ViewType
#include "frame.hpp"                    // for Frame
namespace CSMSettings { class Setting; }  // lines 13-13
namespace CSVSettings { class IViewFactory; }
namespace CSVSettings { class SettingWindow; }  // lines 20-20
namespace CSVSettings { class View; }  // lines 21-21
---
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^

apps/opencs/view/settings/page.cpp should add these lines:

apps/opencs/view/settings/page.cpp should remove these lines:
- #include <QMap>  // lines 2-2
- #include <QMap>  // lines 3-3
- #include "apps/opencs/view/settings/../../model/settings/setting.hpp"  // lines 8-8
- #include "apps/opencs/view/settings/frame.hpp"  // lines 9-9
- #include "apps/opencs/view/settings/frame.hpp"  // lines 10-10

The full include-list for apps/opencs/view/settings/page.cpp:
#include "page.hpp"
#include <QLabel>                       // for QLabel
#include "../../model/settings/support.hpp"  // for ViewType, etc
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "apps/opencs/view/settings/../../model/settings/setting.hpp"
#include "booleanview.hpp"              // for BooleanViewFactory
#include "listview.hpp"                 // for ListViewFactory
#include "rangeview.hpp"                // for RangeViewFactory
#include "textview.hpp"                 // for TextViewFactory
#include "view.hpp"                     // for View, IViewFactory
---
In file included from apps/opencs/editor.cpp:9:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^
In file included from apps/opencs/editor.cpp:9:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/opencs/model/filter/unarynode.hpp should add these lines:

apps/opencs/model/filter/unarynode.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 9-9

The full include-list for apps/opencs/model/filter/unarynode.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <vector>                       // for vector
#include "node.hpp"                     // for Node
---

apps/opencs/model/filter/unarynode.cpp should add these lines:

apps/opencs/model/filter/unarynode.cpp should remove these lines:
- #include "apps/opencs/model/filter/node.hpp"  // lines 3-3

The full include-list for apps/opencs/model/filter/unarynode.cpp:
#include "unarynode.hpp"
#include "apps/opencs/model/filter/node.hpp"  // for Node
---

apps/wizard/importpage.hpp should add these lines:

apps/wizard/importpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/importpage.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

apps/wizard/importpage.cpp should add these lines:

apps/wizard/importpage.cpp should remove these lines:
- class QWidget;  // lines 6-6

The full include-list for apps/wizard/importpage.cpp:
#include "importpage.hpp"
#include "mainwizard.hpp"               // for MainWizard, etc
class QWidget;  // lines 4-4
---
In file included from 
apps/wizard/main.cpp should add these lines:
#include <QtCore>                       // for QTextCodec

apps/wizard/main.cpp should remove these lines:
- #include <QCoreApplication>  // lines 3-3

The full include-list for apps/wizard/main.cpp:
#include <QApplication>                 // for QApplication
#include <QCoreApplication>             // for QCoreApplication
#include <QDir>                         // for QDir
#include <QtCore>                       // for QTextCodec
#include "mainwizard.hpp"               // for MainWizard
---
apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/wizard/inisettings.cpp:1:
In file included from apps/wizard/inisettings.hpp:4:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^

apps/opencs/view/tools/reporttable.hpp should add these lines:
class QWidget;
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/tools/reporttable.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include <vector>  // lines 15-15
- #include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"  // lines 12-12
- namespace CSMDoc { class QContextMenuEvent; }  // lines 24-24
- namespace CSMDoc { class QMouseEvent; }  // lines 25-25
- namespace CSMDoc { class QWidget; }  // lines 18-18
- namespace CSMDoc { class QWidget; }  // lines 26-26
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 29-29

The full include-list for apps/opencs/view/tools/reporttable.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include <string>                       // for string
#include "../world/dragrecordtable.hpp"  // for DragRecordTable
class QWidget;
namespace CSMDoc { class QAction; }  // lines 23-23
namespace CSMDoc { class QContextMenuEvent; }  // lines 16-16
namespace CSMDoc { class QMouseEvent; }  // lines 17-17
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 20-20
namespace CSMDoc { namespace CSMTools { class ReportModel; } }  // lines 34-34
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 39-39
---

apps/opencs/view/tools/reporttable.cpp should add these lines:
#include "apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp"
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/tools/reporttable.cpp should remove these lines:
- #include <QAction>  // lines 2-2
- #include <QtGui>  // lines 6-6
- #include <algorithm>  // lines 7-7
- #include "../../model/tools/reportmodel.hpp"  // lines 9-9
- #include "../../view/world/idtypedelegate.hpp"  // lines 10-10
- #include "apps/opencs/view/tools/../world/../../model/doc/document.hpp"  // lines 12-12
- #include "apps/opencs/view/tools/../world/dragrecordtable.hpp"  // lines 14-14
- #include "apps/opencs/view/tools/../world/util.hpp"  // lines 16-16

The full include-list for apps/opencs/view/tools/reporttable.cpp:
#include "reporttable.hpp"
#include <QHeaderView>                  // for QHeaderView, etc
#include <QMenu>                        // for QMenu
#include <QtGui>                        // for QAbstractItemView, etc
#include "apps/opencs/view/tools/../../view/world/../../model/doc/../world/data.hpp"
#include "apps/opencs/view/tools/../world/../../model/doc/document.hpp"
#include "apps/opencs/view/tools/../world/dragrecordtable.hpp"
#include "apps/opencs/view/tools/../world/util.hpp"
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/world/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^

apps/opencs/model/doc/runner.hpp should add these lines:

apps/opencs/model/doc/runner.hpp should remove these lines:
- #include <QArgument>  // lines 7-7

The full include-list for apps/opencs/model/doc/runner.hpp:
#include <QArgument>                    // for Q_OBJECT, slots, signals
#include <QObject>                      // for QObject
#include <QProcess>                     // for QProcess, etc
#include <QTextDocument>                // for QTextDocument
#include <boost/filesystem/path.hpp>    // for path
#include <components/esm/debugprofile.hpp>  // for DebugProfile
#include <string>                       // for string
#include <vector>                       // for vector
class QTemporaryFile;  // lines 14-14
namespace CSMDoc { class Operation; }  // lines 65-65
---
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

apps/opencs/model/doc/runner.cpp should add these lines:

apps/opencs/model/doc/runner.cpp should remove these lines:
- #include <QTemporaryFile>  // lines 2-2
- #include <QTextStream>  // lines 3-3

The full include-list for apps/opencs/model/doc/runner.cpp:
#include "runner.hpp"
#include <QtCore>                       // for QString, QStringList, etc
#include "components/esm/debugprofile.hpp"  // for DebugProfile, etc
#include "operation.hpp"                // for Operation
---
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from libs/openengine/bullet/BulletShapeLoader.cpp:1:
libs/openengine/bullet/BulletShapeLoader.h:69:19: error: field has incomplete type 'Ogre::Vector3'
    Ogre::Vector3 mBoxTranslation;
                  ^
/usr/include/OGRE/OgrePrerequisites.h:290:11: note: forward declaration of 'Ogre::Vector3'
    class Vector3;
          ^
libs/openengine/bullet/BulletShapeLoader.cpp:42:5: error: cannot initialize object parameter of type 'Ogre::StringInterface' with an expression of type 'OEngine::Physic::BulletShape'
    createParamDictionary("BulletShape");
    ^~~~~~~~~~~~~~~~~~~~~
libs/openengine/bullet/BulletShapeLoader.cpp:54:27: error: cannot initialize a parameter of type 'Ogre::Resource *' with an rvalue of type 'OEngine::Physic::BulletShape *'
    mLoader->loadResource(this);
                          ^~~~
/usr/include/OGRE/OgreResource.h:532:39: note: passing argument to parameter 'resource' here
                virtual void loadResource(Resource* resource) = 0;
                                                    ^
libs/openengine/bullet/BulletShapeLoader.cpp:145:5: error: cannot initialize object parameter of type 'Ogre::Resource' with an expression of type 'OEngine::Physic::BulletShape'
    textf->load();
    ^~~~~
libs/openengine/bullet/BulletShapeLoader.cpp:158:12: error: cannot initialize return object of type 'Ogre::Resource *' with an lvalue of type 'OEngine::Physic::BulletShape *'
    return res;
           ^~~
In file included from apps/opencs/view/world/referencecreator.cpp:10:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:12:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/dialoguesubview.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:1:
In file included from /usr/include/qt4/QtGui/QPainter:1:
In file included from /usr/include/qt4/QtGui/qpainter.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:1:
In file included from /usr/include/qt4/QtGui/QPainter:1:
In file included from /usr/include/qt4/QtGui/qpainter.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:3:
In file included from apps/opencs/view/world/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
apps/opencs/model/filter/ornode.cpp:20:12: error: no member named 'OrNode' in namespace 'CSMFilter'; did you mean 'Node'?
CSMFilter::OrNode::OrNode (const std::vector<boost::shared_ptr<Node> >& nodes)
~~~~~~~~~~~^~~~~~
           Node
./apps/opencs/model/filter/node.hpp:22:11: note: 'Node' declared here
    class Node
          ^
apps/opencs/model/filter/ornode.cpp:20:20: error: C++ requires a type specifier for all declarations
CSMFilter::OrNode::OrNode (const std::vector<boost::shared_ptr<Node> >& nodes)
                   ^
apps/opencs/model/filter/ornode.cpp:21:1: error: only constructors take base initializers
: NAryNode (nodes, "or")
^
apps/opencs/model/filter/ornode.cpp:24:17: error: no member named 'OrNode' in namespace 'CSMFilter'; did you mean 'Node'?
bool CSMFilter::OrNode::test (const CSMWorld::IdTableBase& table, int row,
     ~~~~~~~~~~~^~~~~~
                Node
./apps/opencs/model/filter/node.hpp:22:11: note: 'Node' declared here
    class Node
          ^
apps/opencs/model/filter/ornode.cpp:27:16: error: use of undeclared identifier 'getSize'
    int size = getSize();
               ^
apps/opencs/model/filter/ornode.cpp:30:20: error: type 'const CSMFilter::Node' does not provide a subscript operator
        if ((*this)[i].test (table, row, columns))
            ~~~~~~~^~

apps/opencs/view/world/table.hpp should add these lines:
#include "apps/opencs/view/world/../../model/doc/../world/refcollection.hpp"
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/table.hpp should remove these lines:
- #include <QtGui/qevent.h>  // lines 4-4
- #include <map>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "../../model/filter/node.hpp"  // lines 10-10
- #include "../../model/world/columnbase.hpp"  // lines 11-11
- #include "../../model/world/universalid.hpp"  // lines 12-12
- #include "apps/opencs/view/world/../../model/doc/../world/universalid.hpp"  // lines 13-13
- namespace CSMDoc { class QUndoStack; }  // lines 20-20
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 36-36
- namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 43-43

The full include-list for apps/opencs/view/world/table.hpp:
#include <QtCore>                       // for slots, QString, QStringList, etc
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/doc/../world/refcollection.hpp"
#include "dragrecordtable.hpp"          // for DragRecordTable
namespace CSMDoc { class QAction; }  // lines 16-16
namespace CSMDoc { class QContextMenuEvent; }  // lines 17-17
namespace CSMDoc { class QDropEvent; }  // lines 18-18
namespace CSMDoc { class QMouseEvent; }  // lines 19-19
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 30-30
namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 22-22
namespace CSMDoc { namespace CSMWorld { class CommandDispatcher; } }  // lines 35-35
namespace CSMDoc { namespace CSMWorld { class IdTableBase; } }  // lines 37-37
namespace CSMDoc { namespace CSMWorld { class IdTableProxyModel; } }  // lines 38-38
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace boost { template <class Y> class shared_ptr; } }  // lines 25-25
---
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:4:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
./apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/view/render/textoverlay.hpp should add these lines:

apps/opencs/view/render/textoverlay.hpp should remove these lines:
- #include <OgreFont.h>  // lines 4-4
- #include <OgreString.h>  // lines 5-5
- namespace Ogre { class Font; }  // lines 18-18

The full include-list for apps/opencs/view/render/textoverlay.hpp:
#include <QRect>                        // for QRect
#include "GLX/../OgrePrerequisites.h"   // for String, Real
#include "OgreOverlayPrerequisites.h"   // for FontPtr
namespace Ogre { class Camera; }  // lines 17-17
namespace Ogre { class MovableObject; }  // lines 19-19
namespace Ogre { class Overlay; }  // lines 20-20
namespace Ogre { class OverlayContainer; }  // lines 21-21
namespace Ogre { class TextAreaOverlayElement; }  // lines 22-22
namespace Ogre { class Vector3; }  // lines 12-12
---

apps/opencs/view/world/table.cpp should add these lines:
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/table.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 4-4
- #include <qatomic_i386.h>  // lines 5-5
- #include <QAction>  // lines 6-6
- #include <QContextMenuEvent>  // lines 7-7
- #include <QString>  // lines 9-9
- #include <QtGui>  // lines 11-11
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 2-2
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include <memory>  // lines 12-12
- #include <stdexcept>  // lines 13-13
- #include <stdexcept>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <utility>  // lines 16-16
- #include "../../model/doc/document.hpp"  // lines 18-18
- #include "../../model/world/columns.hpp"  // lines 19-19
- #include "../../model/world/commands.hpp"  // lines 21-21
- #include "../../model/world/idtable.hpp"  // lines 23-23
- #include "../../model/world/idtableproxymodel.hpp"  // lines 25-25
- #include "apps/opencs/view/world/../../model/world/columnbase.hpp"  // lines 27-27
- #include "apps/opencs/view/world/../../model/world/columnbase.hpp"  // lines 28-28
- #include "apps/opencs/view/world/../../model/world/idcollection.hpp"  // lines 29-29
- #include "apps/opencs/view/world/dragrecordtable.hpp"  // lines 31-31
- namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 38-38

The full include-list for apps/opencs/view/world/table.cpp:
#include "table.hpp"
#include <QMenu>                        // for QMenu
#include <QtGui>                        // for QAbstractItemDelegate
#include "../../model/world/commanddispatcher.hpp"
#include "../../model/world/data.hpp"   // for QModelIndex
#include "../../model/world/idtablebase.hpp"  // for IdTableBase, etc
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/world/dragrecordtable.hpp"
#include "util.hpp"                     // for CommandDelegate
namespace CSMDoc { namespace CSMFilter { class Node; } }  // lines 36-36
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

(apps/opencs/view/render/textoverlay.cpp has correct #includes/fwd-decls)

apps/opencs/view/doc/operations.hpp should add these lines:

apps/opencs/view/doc/operations.hpp should remove these lines:
- #include <QArgument>  // lines 5-5

The full include-list for apps/opencs/view/doc/operations.hpp:
#include <QArgument>                    // for Q_OBJECT, signals
#include <QDockWidget>                  // for QDockWidget
#include <vector>                       // for vector
class QVBoxLayout;  // lines 9-9
namespace CSVDoc { class Operation; }  // lines 13-13
---

apps/opencs/view/doc/operations.cpp should add these lines:

apps/opencs/view/doc/operations.cpp should remove these lines:
- #include <QHBoxLayout>  // lines 1-1

The full include-list for apps/opencs/view/doc/operations.cpp:
#include "operations.hpp"
#include <QtGui>                        // for QVBoxLayout, QWidget, etc
#include "operation.hpp"                // for Operation
---
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:4:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from ./apps/opencs/view/world/../../model/world/refcollection.hpp:12:
./apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^

apps/opencs/model/filter/ornode.cpp should add these lines:
#include <map>                          // for map

apps/opencs/model/filter/ornode.cpp should remove these lines:
- #include "apps/opencs/model/filter/narynode.hpp"  // lines 2-2
- #include "apps/opencs/model/filter/narynode.hpp"  // lines 3-3
- #include "apps/opencs/model/filter/node.hpp"  // lines 5-5
- namespace CSMWorld { class IdTableBase; }  // lines 14-14
- namespace boost { template <class Y> class shared_ptr; }  // lines 8-8
- namespace boost { template <class Y> class shared_ptr; }  // lines 17-17

The full include-list for apps/opencs/model/filter/ornode.cpp:
#include <map>                          // for map
#include "apps/opencs/model/filter/node.hpp"  // for Node
namespace CSMWorld { class IdTableBase; }  // lines 12-12
---
In file included from apps/opencs/view/world/datadisplaydelegate.cpp:4:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
./apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^

apps/opencs/model/world/idtablebase.hpp should add these lines:

apps/opencs/model/world/idtablebase.hpp should remove these lines:
- #include <QArgument>  // lines 6-6
- #include <string>  // lines 8-8
- #include <utility>  // lines 10-10

The full include-list for apps/opencs/model/world/idtablebase.hpp:
#include <QAbstractItemModel>           // for QAbstractItemModel, etc
#include <QArgument>                    // for Q_OBJECT
#include <string>                       // for string
#include <utility>                      // for pair
#include "columns.hpp"                  // for ColumnId
namespace CSMWorld { class UniversalId; }  // lines 18-18
---

(apps/opencs/model/world/idtablebase.cpp has correct #includes/fwd-decls)
./apps/opencs/view/world/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
./apps/opencs/view/world/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
In file included from apps/opencs/view/world/regionmapsubview.cpp:2:
./apps/opencs/view/world/../doc/subview.hpp:17:5: error: expected '{'
    class Data;
    ^
./apps/opencs/view/world/../doc/subview.hpp:18:1: error: extraneous closing brace ('}')
}
^
./apps/opencs/view/world/../doc/subview.hpp:21:5: error: expected '{'
    class View;
    ^
./apps/opencs/view/world/../doc/subview.hpp:23:28: error: expected class name
    class SubView : public QDockWidget
                           ^
./apps/opencs/view/world/../doc/subview.hpp:73:1: error: extraneous closing brace ('}')
}
^

apps/opencs/view/render/navigationfree.hpp should add these lines:

apps/opencs/view/render/navigationfree.hpp should remove these lines:
- class QPoint;  // lines 11-11
- namespace Ogre { class Camera; }  // lines 13-13

The full include-list for apps/opencs/view/render/navigationfree.hpp:
#include "navigation.hpp"               // for Navigation
class QPoint;  // lines 6-6
namespace Ogre { class Camera; }  // lines 8-8
---

apps/opencs/view/render/navigationfree.cpp should add these lines:

apps/opencs/view/render/navigationfree.cpp should remove these lines:
- #include "OgreMath.h"  // lines 6-6
- #include "OgreVector3.h"  // lines 8-8

The full include-list for apps/opencs/view/render/navigationfree.cpp:
#include "navigationfree.hpp"
#include <OgreCamera.h>                 // for Camera
#include <QPoint>                       // for QPoint
#include "OgreMath.h"                   // for Degree
#include "OgreVector3.h"                // for Vector3, operator*
---
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
./apps/opencs/view/world/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
./apps/opencs/view/world/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
./apps/opencs/view/world/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^

apps/opencs/model/filter/narynode.hpp should add these lines:
#include <vector>                       // for vector

apps/opencs/model/filter/narynode.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6

The full include-list for apps/opencs/model/filter/narynode.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <vector>                       // for vector
#include "node.hpp"                     // for Node
---
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/wizard/conclusionpage.cpp:7:
apps/wizard/conclusionpage.hpp:8:10: fatal error: 'ui_conclusionpage.h' file not found
#include "ui_conclusionpage.h"
         ^

apps/opencs/model/filter/narynode.cpp should add these lines:

apps/opencs/model/filter/narynode.cpp should remove these lines:
- #include "apps/opencs/model/filter/node.hpp"  // lines 5-5

The full include-list for apps/opencs/model/filter/narynode.cpp:
#include "narynode.hpp"
#include <sstream>                      // for operator<<, ostringstream, etc
#include "apps/opencs/model/filter/node.hpp"  // for Node
---
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/launcher/settingspage.cpp:1:
In file included from ./components/config/gamesettings.hpp:4:
In file included from /usr/include/qt4/QtCore/QBool:1:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/settingspage.cpp:1:
In file included from ./components/config/gamesettings.hpp:4:
In file included from /usr/include/qt4/QtCore/QBool:1:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/launcher/settingspage.cpp:6:
In file included from ./apps/launcher/maindialog.hpp:9:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/launcher/settingspage.cpp:6:
./apps/launcher/maindialog.hpp:17:10: fatal error: 'ui_mainwindow.h' file not found
#include "ui_mainwindow.h"
         ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/editor.cpp:23:
In file included from ./apps/opencs/model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^

apps/opencs/view/settings/spinbox.hpp should add these lines:

apps/opencs/view/settings/spinbox.hpp should remove these lines:
- #include <QStringList>  // lines 5-5
- #include <QtCore>  // lines 7-7
- class QWidget;  // lines 11-11

The full include-list for apps/opencs/view/settings/spinbox.hpp:
#include <QSpinBox>                     // for QSpinBox
#include <QtCore>                       // for QString, QStringList, etc
class QWidget;  // lines 9-9
---

apps/opencs/view/settings/spinbox.cpp should add these lines:
#include <QStringList>                  // for QStringList

apps/opencs/view/settings/spinbox.cpp should remove these lines:
- class QWidget;  // lines 7-7

The full include-list for apps/opencs/view/settings/spinbox.cpp:
#include "spinbox.hpp"
#include <QLineEdit>                    // for QLineEdit
#include <QStringList>                  // for QStringList
class QWidget;  // lines 5-5
---
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/world/refcollection.hpp:12:
apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/editor.cpp:2:
In file included from /usr/include/OGRE/OgreRoot.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from In file included from apps/opencs/view/world/regionmapsubview.cpp:5:
apps/opencs/view/world/regionmapsubview.hpp:24:37: error: base class has incomplete type
    class RegionMapSubView : public CSVDoc::SubView
                             ~~~~~~~^~~~~~~~~~~~~~~
./apps/opencs/view/world/../doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/world/regionmapsubview.cpp:9:11: error: type 'CSVDoc::SubView' is not a direct or virtual base of 'CSVWorld::RegionMapSubView'
: CSVDoc::SubView (universalId)
          ^~~~~~~
apps/opencs/view/world/regionmapsubview.cpp:11:22: error: no matching constructor for initialization of 'CSVWorld::RegionMap'
    mRegionMap = new RegionMap (universalId, document, this);
                     ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~
apps/opencs/view/world/regionmap.hpp:74:13: note: candidate constructor not viable: no known conversion from 'CSVWorld::RegionMapSubView *' to 'QWidget *' for 3rd argument
            RegionMap (const CSMWorld::UniversalId& universalId, CSMDoc::Document& document,
            ^
apps/opencs/view/world/regionmap.hpp:37:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
    class RegionMap : public DragRecordTable
          ^
apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/world/regionmapsubview.cpp:13:5: error: use of undeclared identifier 'setWidget'
    setWidget (mRegionMap);
    ^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
apps/opencs/view/world/regionmapsubview.cpp:15:5: error: use of undeclared identifier 'connect'
    connect (mRegionMap, SIGNAL (editRequest (const CSMWorld::UniversalId&, const std::string&)),
    ^

apps/opencs/view/widget/modebutton.hpp should add these lines:

apps/opencs/view/widget/modebutton.hpp should remove these lines:
- #include <QIcon>  // lines 5-5
- #include <QtCore>  // lines 7-7
- class QWidget;  // lines 14-14

The full include-list for apps/opencs/view/widget/modebutton.hpp:
#include <QIcon>                        // for QIcon
#include <QtCore>                       // for QString, Q_OBJECT
#include "pushbutton.hpp"               // for PushButton
class QWidget;  // lines 12-12
namespace CSVWidget { class SceneToolbar; }  // lines 18-18
---

apps/opencs/view/widget/modebutton.cpp should add these lines:

apps/opencs/view/widget/modebutton.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2
- #include <QCharRef>  // lines 3-3
- #include "apps/opencs/view/widget/pushbutton.hpp"  // lines 6-6
- class QWidget;  // lines 11-11

The full include-list for apps/opencs/view/widget/modebutton.cpp:
#include "modebutton.hpp"
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc
class QWidget;  // lines 9-9
---
In file included from apps/opencs/editor.cpp:25:
./apps/opencs/view/doc/startup.hpp:24:13: error: unknown type name 'QGridLayout'
            QGridLayout *mLayout;
            ^
apps/opencs/view/world/regionmapsubview.cpp:27:5: error: use of undeclared identifier 'focusId'
    focusId (id, hint);
    ^
In file included from apps/opencs/editor.cpp:26:
./apps/opencs/view/doc/viewmanager.hpp:14:5: error: expected '{'
    class Document;
    ^
./apps/opencs/view/doc/viewmanager.hpp:15:1: error: expected unqualified-id
{
^
./apps/opencs/view/doc/viewmanager.hpp:21:5: error: expected '{'
    class CommandDelegateFactoryCollection;
    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/opencs/model/doc/stage.hpp should add these lines:

apps/opencs/model/doc/stage.hpp should remove these lines:
- #include <string>  // lines 4-4
- #include <vector>  // lines 5-5
- #include "../world/universalid.hpp"  // lines 7-7
- #include "messages.hpp"  // lines 8-8

The full include-list for apps/opencs/model/doc/stage.hpp:
namespace CSMDoc { class Messages; }  // lines 11-11
---

(apps/opencs/model/doc/stage.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/referencecreator.cpp:11:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^

apps/opencs/view/filter/filterbox.hpp should add these lines:

apps/opencs/view/filter/filterbox.hpp should remove these lines:
- #include <QtCore/qnamespace.h>  // lines 4-4
- #include "../../model/filter/node.hpp"  // lines 11-11
- #include "../../model/world/universalid.hpp"  // lines 12-12

The full include-list for apps/opencs/view/filter/filterbox.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for DropAction, Q_OBJECT, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
class QDragEnterEvent;  // lines 14-14
class QDragMoveEvent;  // lines 15-15
class QDropEvent;  // lines 16-16
namespace CSMFilter { class Node; }  // lines 18-18
namespace CSMWorld { class Data; }  // lines 29-29
namespace CSMWorld { class UniversalId; }  // lines 21-21
namespace CSVFilter { class RecordFilterBox; }  // lines 34-34
namespace boost { template <class Y> class shared_ptr; }  // lines 24-24
---
In file included from 
apps/opencs/view/filter/filterbox.cpp should add these lines:

apps/opencs/view/filter/filterbox.cpp should remove these lines:
- #include "apps/opencs/view/filter/../../model/world/universalid.hpp"  // lines 7-7

The full include-list for apps/opencs/view/filter/filterbox.cpp:
#include "filterbox.hpp"
#include <QDragEnterEvent>              // for QDragEnterEvent, QDropEvent, etc
#include <QHBoxLayout>                  // for QHBoxLayout
#include <apps/opencs/model/world/tablemimedata.hpp>  // for TableMimeData
#include "apps/opencs/view/filter/../../model/world/universalid.hpp"
#include "recordfilterbox.hpp"          // for RecordFilterBox
---
apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:30:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:30:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:30:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:30:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:32:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:16:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:32:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:32:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:32:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^

libs/openengine/bullet/BulletShapeLoader.h should add these lines:

libs/openengine/bullet/BulletShapeLoader.h should remove these lines:
- #include <btBulletCollisionCommon.h>  // lines 6-6
- #include <stddef.h>  // lines 8-8
- #include <algorithm>  // lines 10-10
- #include <map>  // lines 12-12
- #include <string>  // lines 14-14
- #include "OgreCommon.h"  // lines 17-17
- #include "OgrePrerequisites.h"  // lines 19-19
- #include "OgreQuaternion.h"  // lines 21-21
- #include "OgreResourceGroupManager.h"  // lines 23-23
- #include "OgreSharedPtr.h"  // lines 25-25
- class btCollisionShape;  // lines 29-29

The full include-list for libs/openengine/bullet/BulletShapeLoader.h:
#include <OgreResource.h>               // for Resource, ResourceHandle, etc
#include <OgreResourceManager.h>        // for ResourceManager
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for swap
#include <map>                          // for map
#include <string>                       // for string
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgrePrerequisites.h"          // for String, Vector3
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
class btCollisionShape;  // lines 27-27
---

libs/openengine/bullet/BulletShapeLoader.cpp should add these lines:

libs/openengine/bullet/BulletShapeLoader.cpp should remove these lines:
- #include <assert.h>  // lines 4-4
- #include "BulletCollision/CollisionShapes/btCollisionShape.h"  // lines 7-7
- #include "BulletCollision/CollisionShapes/btCompoundShape.h"  // lines 9-9
- #include "LinearMath/btScalar.h"  // lines 11-11
- #include "OgreResource.h"  // lines 13-13
- namespace Ogre { class ResourceManager; }  // lines 18-18

The full include-list for libs/openengine/bullet/BulletShapeLoader.cpp:
#include "BulletShapeLoader.h"
#include <assert.h>                     // for assert
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "LinearMath/btScalar.h"
#include "OgreResource.h"
namespace Ogre { class ResourceManager; }  // lines 16-16
---
apps/opencs/view/render/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
In file included from apps/opencs/view/settings/view.cpp:8:
./apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
./apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
apps/opencs/view/render/../../model/world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^
./apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
./apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/enumdelegate.cpp:13:
In file included from ./apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:36:
apps/opencs/view/tools/../doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/pagedworldspacewidget.cpp:22:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
apps/opencs/view/render/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/render/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/bsatool/bsatool.cpp should add these lines:

apps/bsatool/bsatool.cpp should remove these lines:
- #include <stddef.h>  // lines 22-22
- #include <boost/filesystem/operations.hpp>  // lines 3-3
- #include <boost/filesystem/path.hpp>  // lines 5-5
- #include <boost/filesystem/path_traits.hpp>  // lines 7-7
- #include <boost/program_options/options_description.hpp>  // lines 11-11
- #include <boost/program_options/parsers.hpp>  // lines 13-13
- #include <boost/program_options/positional_options.hpp>  // lines 15-15
- #include <boost/program_options/value_semantic.hpp>  // lines 17-17
- #include <boost/program_options/variables_map.hpp>  // lines 19-19
- #include <iomanip>  // lines 25-25
- #include <string>  // lines 28-28
- #include "OgreDataStream.h"  // lines 32-32
- #include "OgrePrerequisites.h"  // lines 34-34
- #include "OgreSharedPtr.h"  // lines 36-36

The full include-list for apps/bsatool/bsatool.cpp:
#include <stddef.h>                     // for size_t
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/operations.hpp>  // for create_directories, etc
#include <boost/filesystem/path.hpp>    // for path, operator<<, operator/
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <boost/lexical_cast.hpp>       // for bad_lexical_cast
#include <boost/program_options/errors.hpp>  // for program_options
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/parsers.hpp>
#include <boost/program_options/positional_options.hpp>
#include <boost/program_options/value_semantic.hpp>  // for value, etc
#include <boost/program_options/variables_map.hpp>  // for variables_map, etc
#include <components/bsa/bsa_file.hpp>  // for BSAFile, BSAFile::FileList, etc
#include <exception>                    // for exception
#include <iomanip>                      // for operator<<, setw
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <string>                       // for string, basic_string, etc
#include <vector>                       // for vector, vector<>::iterator
#include "OgreDataStream.h"             // for DataStream, DataStreamPtr
#include "OgrePrerequisites.h"          // for String
#include "OgreSharedPtr.h"              // for SharedPtr
---
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/tools/../doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/tools/../doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:42:
apps/opencs/view/tools/../doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/tools/../doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^

apps/wizard/inisettings.hpp should add these lines:

apps/wizard/inisettings.hpp should remove these lines:
- #include <qatomic_i386.h>  // lines 4-4
- #include <qatomic_i386.h>  // lines 5-5
- #include <QVariant>  // lines 7-7
- class QTextStream;  // lines 10-10

The full include-list for apps/wizard/inisettings.hpp:
#include <QHash>                        // for QHash
#include <QtCore>                       // for QString, QVariant, QList, etc
---
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^

(apps/wizard/inisettings.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/tools/../doc/../../model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/widget/scenetoolbar.hpp should add these lines:

apps/opencs/view/widget/scenetoolbar.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QFocusEvent;  // lines 11-11

The full include-list for apps/opencs/view/widget/scenetoolbar.hpp:
#include <QArgument>                    // for Q_OBJECT, signals
#include <QWidget>                      // for QWidget
class QFocusEvent;  // lines 9-9
class QVBoxLayout;  // lines 12-12
namespace CSVWidget { class SceneTool; }  // lines 17-17
---

apps/opencs/view/widget/scenetoolbar.cpp should add these lines:

apps/opencs/view/widget/scenetoolbar.cpp should remove these lines:
- #include <QLayoutItem>  // lines 3-3
- #include <QtCore>  // lines 7-7
- class QFocusEvent;  // lines 14-14

The full include-list for apps/opencs/view/widget/scenetoolbar.cpp:
#include "scenetoolbar.hpp"
#include <QLayoutItem>                  // for QWidgetItem, QLayoutItem
#include <QShortcut>                    // for QShortcut
#include <QVBoxLayout>                  // for QVBoxLayout
#include <QtCore>                       // for AlignmentFlag::AlignTop, etc
#include "scenetool.hpp"                // for SceneTool
class QFocusEvent;  // lines 12-12
---

apps/opencs/view/world/regionmapsubview.hpp should add these lines:

apps/opencs/view/world/regionmapsubview.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 7-7
- #include "../doc/subview.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"  // lines 11-11
- class QAction;  // lines 13-13

The full include-list for apps/opencs/view/world/regionmapsubview.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <string>                       // for string
#include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"
namespace CSMDoc { class Document; }  // lines 17-17
namespace CSVWorld { class RegionMap; }  // lines 22-22
---

apps/opencs/view/world/regionmapsubview.cpp should add these lines:

apps/opencs/view/world/regionmapsubview.cpp should remove these lines:
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 2-2
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 3-3

The full include-list for apps/opencs/view/world/regionmapsubview.cpp:
#include "regionmapsubview.hpp"
#include "regionmap.hpp"                // for RegionMap
---

apps/opencs/view/doc/adjusterwidget.hpp should add these lines:

apps/opencs/view/doc/adjusterwidget.hpp should remove these lines:
- #include <QtCore>  // lines 7-7

The full include-list for apps/opencs/view/doc/adjusterwidget.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
#include <boost/filesystem/path.hpp>    // for path
class QLabel;  // lines 9-9
---

apps/opencs/view/doc/adjusterwidget.cpp should add these lines:
#include <stdexcept>                    // for logic_error

apps/opencs/view/doc/adjusterwidget.cpp should remove these lines:
- #include <QStyle>  // lines 6-6
- #include <QtGui>  // lines 8-8
- #include <boost/filesystem/operations.hpp>  // lines 3-3

The full include-list for apps/opencs/view/doc/adjusterwidget.cpp:
#include "adjusterwidget.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QLabel>                       // for QLabel
#include <QtGui>                        // for QSizePolicy, QStyle, etc
#include <boost/filesystem/operations.hpp>  // for exists
#include <stdexcept>                    // for logic_error
#include <string>                       // for operator+, string, etc
---

apps/opencs/view/world/dialoguesubview.hpp should add these lines:
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
namespace CSMDoc { class Document; }

apps/opencs/view/world/dialoguesubview.hpp should remove these lines:
- #include <QStyleHintReturnMask>  // lines 7-7
- #include <QtCore>  // lines 9-9
- #include <map>  // lines 10-10
- #include <string>  // lines 13-13
- #include <vector>  // lines 14-14
- #include <vector>  // lines 15-15
- #include "../../model/world/commanddispatcher.hpp"  // lines 18-18
- #include "../doc/subview.hpp"  // lines 21-21
- #include "apps/opencs/model/world/universalid.hpp"  // lines 19-19
- class Document;  // lines 43-43
- class QEvent;  // lines 23-23
- class QPainter;  // lines 29-29
- class QSize;  // lines 30-30
- class QUndoStack;  // lines 31-31
- class QWidget;  // lines 34-34

The full include-list for apps/opencs/view/world/dialoguesubview.hpp:
#include <QAbstractItemDelegate>        // for QAbstractItemDelegate
#include <QScrollArea>                  // for QScrollArea
#include <QStyleHintReturnMask>         // for QStyleOptionViewItem
#include <QtCore>                       // for Q_OBJECT, signals, slots, etc
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "../../model/world/columnbase.hpp"  // for ColumnBase, etc
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
class QDataWidgetMapper;  // lines 22-22
class QLabel;  // lines 28-28
class QPainter;  // lines 24-24
class QUndoStack;  // lines 25-25
class QVBoxLayout;  // lines 33-33
class QWidget;  // lines 26-26
namespace CSMDoc { class Document; }
namespace CSMWorld { class IdTable; }  // lines 39-39
namespace CSVWorld { class CommandDelegate; }  // lines 48-48
namespace CSVWorld { class CreatorFactoryBase; }  // lines 49-49
namespace CSVWorld { class TableBottomBox; }  // lines 50-50
---

apps/opencs/view/render/lightingnight.hpp should add these lines:

apps/opencs/view/render/lightingnight.hpp should remove these lines:
- namespace Ogre { class ColourValue; }  // lines 10-10
- namespace Ogre { class SceneManager; }  // lines 11-11

The full include-list for apps/opencs/view/render/lightingnight.hpp:
#include "lighting.hpp"                 // for Lighting
namespace Ogre { class ColourValue; }  // lines 7-7
namespace Ogre { class Light; }  // lines 16-16
namespace Ogre { class SceneManager; }  // lines 8-8
---

apps/opencs/view/world/dialoguesubview.cpp should add these lines:
namespace CSMDoc { class Document; }

apps/opencs/view/world/dialoguesubview.cpp should remove these lines:
- #include <QAbstractItemModel>  // lines 2-2
- #include <QCheckBox>  // lines 3-3
- #include <QComboBox>  // lines 4-4
- #include <QDataWidgetMapper>  // lines 5-5
- #include <QGridLayout>  // lines 6-6
- #include <QLineEdit>  // lines 8-8
- #include <QPlainTextEdit>  // lines 9-9
- #include <QSize>  // lines 11-11
- #include <QToolButton>  // lines 12-12
- #include <memory>  // lines 14-14
- #include <utility>  // lines 15-15
- #include "../../model/doc/document.hpp"  // lines 17-17
- #include "../../model/world/columns.hpp"  // lines 19-19
- #include "../../model/world/commands.hpp"  // lines 20-20
- #include "../../model/world/idtable.hpp"  // lines 21-21
- #include "../../model/world/tablemimedata.hpp"  // lines 23-23
- #include "apps/opencs/view/world/../../model/world/commanddispatcher.hpp"  // lines 24-24
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp"  // lines 25-25
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/idtablebase.hpp"  // lines 26-26
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 27-27
- #include "util.hpp"  // lines 30-30
- class QPainter;  // lines 32-32

The full include-list for apps/opencs/view/world/dialoguesubview.cpp:
#include "dialoguesubview.hpp"
#include <stddef.h>                     // for NULL
#include <QLabel>                       // for QLabel
#include <QScrollArea>                  // for QScrollArea
#include <QtGui>                        // for QToolButton, QHBoxLayout, etc
#include "../../model/world/columnbase.hpp"  // for ColumnBase, etc
#include "../../model/world/record.hpp"  // for RecordBase, etc
#include "tablebottombox.hpp"           // for TableBottomBox
namespace CSMDoc { class Document; }
---

apps/opencs/view/render/lightingnight.cpp should add these lines:

apps/opencs/view/render/lightingnight.cpp should remove these lines:
- #include "OgreColourValue.h"  // lines 5-5
- #include "OgreLight.h"  // lines 7-7
- #include "OgreVector3.h"  // lines 9-9

The full include-list for apps/opencs/view/render/lightingnight.cpp:
#include "lightingnight.hpp"
#include <OgreSceneManager.h>           // for SceneManager
#include "OgreColourValue.h"            // for ColourValue
#include "OgreLight.h"                  // for Light, etc
#include "OgreVector3.h"                // for Vector3
---

apps/opencs/view/settings/view.hpp should add these lines:
class QItemSelectionModel;

apps/opencs/view/settings/view.hpp should remove these lines:
- #include <QWidget>  // lines 4-4
- #include <QtCore>  // lines 6-6
- class QGroupBox;  // lines 10-10
- class QShowEvent;  // lines 13-13
- class QStringList;  // lines 16-16

The full include-list for apps/opencs/view/settings/view.hpp:
#include <QtCore>                       // for QStringList, QString, QList, etc
#include "frame.hpp"                    // for Frame
class QItemSelection;  // lines 11-11
class QItemSelectionModel;
class QShowEvent;  // lines 12-12
class QStandardItem;  // lines 15-15
namespace CSMSettings { class Setting; }  // lines 19-19
namespace CSVSettings { class Page; }  // lines 25-25
---

apps/opencs/view/settings/view.cpp should add these lines:

apps/opencs/view/settings/view.cpp should remove these lines:
- class QShowEvent;  // lines 14-14

The full include-list for apps/opencs/view/settings/view.cpp:
#include "view.hpp"
#include <QApplication>                 // for QApplication
#include <QFontMetricsF>                // for QFontMetrics
#include <QItemSelectionModel>          // for QItemSelectionModel, etc
#include <QStandardItemModel>           // for QStandardItemModel, etc
#include <QStringListModel>             // for QStringListModel
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/frame.hpp"  // for Frame
#include "page.hpp"                     // for Page
class QShowEvent;  // lines 12-12
---
apps/opencs/view/doc/operation.cpp:17:6: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
void CSVDoc::Operation::updateLabel (int threads)
     ^~~~~~
     CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:17:14: error: no member named 'Operation' in namespace 'CSMDoc'
void CSVDoc::Operation::updateLabel (int threads)
     ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:44:1: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
CSVDoc::Operation::Operation (int type, QWidget* parent) : mType (type), mStalling (false)
^~~~~~
CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:44:9: error: no member named 'Operation' in namespace 'CSMDoc'
CSVDoc::Operation::Operation (int type, QWidget* parent) : mType (type), mStalling (false)
~~~~~~~~^
apps/opencs/view/doc/operation.cpp:54:1: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
CSVDoc::Operation::~Operation()
^~~~~~
CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:54:9: error: no member named 'Operation' in namespace 'CSMDoc'
CSVDoc::Operation::~Operation()
~~~~~~~~^
apps/opencs/view/doc/operation.cpp:61:6: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
void CSVDoc::Operation::initWidgets()
     ^~~~~~
     CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:61:14: error: no member named 'Operation' in namespace 'CSMDoc'
void CSVDoc::Operation::initWidgets()
     ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:73:6: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
void CSVDoc::Operation::setProgress (int current, int max, int threads)
     ^~~~~~
     CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:73:14: error: no member named 'Operation' in namespace 'CSMDoc'
void CSVDoc::Operation::setProgress (int current, int max, int threads)
     ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:80:5: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
int CSVDoc::Operation::getType() const
    ^~~~~~
    CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:80:13: error: no member named 'Operation' in namespace 'CSMDoc'
int CSVDoc::Operation::getType() const
    ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:85:6: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
void CSVDoc::Operation::setBarColor (int type)
     ^~~~~~
     CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:85:14: error: no member named 'Operation' in namespace 'CSMDoc'
void CSVDoc::Operation::setBarColor (int type)
     ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:149:14: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
QHBoxLayout *CSVDoc::Operation::getLayout() const
             ^~~~~~
             CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:149:22: error: no member named 'Operation' in namespace 'CSMDoc'
QHBoxLayout *CSVDoc::Operation::getLayout() const
             ~~~~~~~~^
apps/opencs/view/doc/operation.cpp:154:6: error: use of undeclared identifier 'CSVDoc'; did you mean 'CSMDoc'?
void CSVDoc::Operation::abortOperation()
     ^~~~~~
     CSMDoc
./apps/opencs/view/doc/../../model/doc/state.hpp:4:11: note: 'CSMDoc' declared here
namespace CSMDoc
          ^
apps/opencs/view/doc/operation.cpp:154:14: error: no member named 'Operation' in namespace 'CSMDoc'
void CSVDoc::Operation::abortOperation()
     ~~~~~~~~^

apps/launcher/settingspage.hpp should add these lines:
#include <QtCore>                       // for QString, Q_OBJECT, slots
namespace Launcher { class MainDialog; }
namespace Process { class ProcessInvoker; }

apps/launcher/settingspage.hpp should remove these lines:
- #include <components/process/processinvoker.hpp>  // lines 7-7
- #include "maindialog.hpp"  // lines 11-11

The full include-list for apps/launcher/settingspage.hpp:
#include <QProcess>                     // for QProcess, etc
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, Q_OBJECT, slots
namespace Config { class GameSettings; }  // lines 14-14
namespace Config { class LauncherSettings; }  // lines 15-15
namespace Files { struct ConfigurationManager; }  // lines 13-13
namespace Launcher { class MainDialog; }
namespace Launcher { class TextInputDialog; }  // lines 19-19
namespace Process { class ProcessInvoker; }
---

apps/launcher/settingspage.cpp should add these lines:
#include <boost/filesystem/path.hpp>    // for path
#include <string>                       // for string
#include "components/files/configurationmanager.hpp"

apps/launcher/settingspage.cpp should remove these lines:
- #include "apps/launcher/maindialog.hpp"  // lines 7-7
- #include "components/process/processinvoker.hpp"  // lines 10-10

The full include-list for apps/launcher/settingspage.cpp:
#include "settingspage.hpp"
#include <QDir>                         // for QDir
#include <QMessageBox>                  // for QMessageBox, etc
#include <boost/filesystem/path.hpp>    // for path
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include <string>                       // for string
#include "apps/launcher/maindialog.hpp"  // for MainDialog
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit
#include "components/files/configurationmanager.hpp"
#include "components/process/processinvoker.hpp"  // for ProcessInvoker
#include "utils/textinputdialog.hpp"    // for TextInputDialog
---

apps/opencs/view/world/referencecreator.hpp should add these lines:
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/referencecreator.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <memory>  // lines 7-7
- #include <string>  // lines 14-14
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 10-10
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 11-11
- namespace CSMDoc { class QUndoStack; }  // lines 22-22
- namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 24-24
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 25-25

The full include-list for apps/opencs/view/world/referencecreator.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "genericcreator.hpp"           // for GenericCreator
namespace CSMDoc { class QLineEdit; }  // lines 21-21
namespace CSMDoc { class QUndoStack; }  // lines 15-15
namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 17-17
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 18-18
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/opencs/view/world/referencecreator.cpp should add these lines:
namespace CSMDoc { class QLabel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/referencecreator.cpp should remove these lines:
- #include <QLabel>  // lines 2-2
- #include <QLineEdit>  // lines 3-3
- #include <QtCore>  // lines 4-4
- #include <QtCore>  // lines 5-5
- #include <QtGui>  // lines 6-6
- #include <QtGui>  // lines 7-7
- #include "../../model/world/columns.hpp"  // lines 9-9
- #include "../../model/world/commands.hpp"  // lines 10-10
- #include "../../model/world/idtable.hpp"  // lines 12-12
- #include "apps/opencs/view/world/../../model/world/idcollection.hpp"  // lines 13-13
- #include "apps/opencs/view/world/../../model/world/idcollection.hpp"  // lines 14-14
- #include "apps/opencs/view/world/../../model/world/refcollection.hpp"  // lines 15-15
- #include "apps/opencs/view/world/../../model/world/refcollection.hpp"  // lines 16-16
- #include "apps/opencs/view/world/genericcreator.hpp"  // lines 18-18

The full include-list for apps/opencs/view/world/referencecreator.cpp:
#include "referencecreator.hpp"
#include "../../model/world/data.hpp"   // for QModelIndex
#include "apps/opencs/view/world/genericcreator.hpp"
namespace CSMDoc { class QLabel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---
In file included from apps/opencs/view/filter/recordfilterbox.cpp:2:
apps/opencs/view/filter/recordfilterbox.hpp:38:36: error: base class has incomplete type
    class RecordFilterBox : public QWidget
                            ~~~~~~~^~~~~~~
/usr/include/qt4/QtCore/qobject.h:70:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
In file included from apps/opencs/view/filter/recordfilterbox.cpp:7:
In file included from apps/opencs/view/filter/editwidget.hpp:14:
apps/opencs/view/filter/../../model/filter/parser.hpp:30:37: error: implicit instantiation of undefined template 'CSMFilter::boost::shared_ptr<CSMFilter::Node>'
            boost::shared_ptr<Node> mFilter;
                                    ^
apps/opencs/view/filter/recordfilterbox.hpp:20:26: note: template is declared here
template <class Y> class shared_ptr;
                         ^
apps/opencs/view/filter/recordfilterbox.cpp:10:3: error: type 'QWidget' is not a direct or virtual base of 'CSVFilter::RecordFilterBox'
: QWidget (parent)
  ^~~~~~~
apps/opencs/view/filter/recordfilterbox.cpp:12:31: error: no matching constructor for initialization of 'QHBoxLayout'
    QHBoxLayout *layout = new QHBoxLayout (this);
                              ^            ~~~~
/usr/include/qt4/QtGui/qboxlayout.h:134:14: note: candidate constructor not viable: no known conversion from 'CSVFilter::RecordFilterBox *' to 'QWidget *' for 1st argument
    explicit QHBoxLayout(QWidget *parent);
             ^
/usr/include/qt4/QtGui/qboxlayout.h:146:20: note: candidate constructor not viable: no known conversion from 'CSVFilter::RecordFilterBox *' to 'const QHBoxLayout' for 1st argument
    Q_DISABLE_COPY(QHBoxLayout)
                   ^
/usr/include/qt4/QtCore/qglobal.h:2639:5: note: expanded from macro 'Q_DISABLE_COPY'
    Class(const Class &); \
    ^
/usr/include/qt4/QtGui/qboxlayout.h:133:5: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
    QHBoxLayout();
    ^
apps/opencs/view/filter/recordfilterbox.cpp:16:25: error: no matching constructor for initialization of 'QLabel'
    QLabel *label = new QLabel("Record Filter", this);
                        ^      ~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtGui/qlabel.h:73:14: note: candidate constructor not viable: no known conversion from 'CSVFilter::RecordFilterBox *' to 'QWidget *' for 2nd argument
    explicit QLabel(const QString &text, QWidget *parent=0, Qt::WindowFlags f=0);
             ^
/usr/include/qt4/QtGui/qlabel.h:72:14: note: candidate constructor not viable: no known conversion from 'const char [14]' to 'QWidget *' for 1st argument
    explicit QLabel(QWidget *parent=0, Qt::WindowFlags f=0);
             ^
/usr/include/qt4/QtGui/qlabel.h:165:20: note: candidate constructor not viable: requires 1 argument, but 2 were provided
    Q_DISABLE_COPY(QLabel)
                   ^
/usr/include/qt4/QtCore/qglobal.h:2639:5: note: expanded from macro 'Q_DISABLE_COPY'
    Class(const Class &); \
    ^
apps/opencs/view/filter/recordfilterbox.cpp:20:17: error: no matching constructor for initialization of 'CSVFilter::EditWidget'
    mEdit = new EditWidget (data, this);
                ^           ~~~~~~~~~~
apps/opencs/view/filter/editwidget.hpp:50:13: note: candidate constructor not viable: no known conversion from 'CSVFilter::RecordFilterBox *' to 'QWidget *' for 2nd argument
            EditWidget (CSMWorld::Data& data, QWidget *parent = 0);
            ^
apps/opencs/view/filter/editwidget.hpp:41:11: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
    class EditWidget : public QLineEdit
          ^
apps/opencs/view/filter/recordfilterbox.cpp:22:24: error: cannot initialize a parameter of type 'QWidget *' with an lvalue of type 'CSVFilter::EditWidget *'
    layout->addWidget (mEdit);
                       ^~~~~
/usr/include/qt4/QtGui/qboxlayout.h:85:29: note: passing argument to parameter here
    void addWidget(QWidget *, int stretch = 0, Qt::Alignment alignment = 0);
                            ^
apps/opencs/view/filter/recordfilterbox.cpp:24:5: error: use of undeclared identifier 'setLayout'
    setLayout (layout);
    ^
apps/opencs/view/filter/recordfilterbox.cpp:26:5: error: use of undeclared identifier 'connect'
    connect (
    ^
apps/opencs/view/filter/recordfilterbox.cpp:33:5: error: cannot initialize object parameter of type 'QLineEdit' with an expression of type 'CSVFilter::EditWidget'
    mEdit->clear();
    ^~~~~
apps/opencs/view/filter/recordfilterbox.cpp:34:5: error: cannot initialize object parameter of type 'QLineEdit' with an expression of type 'CSVFilter::EditWidget'
    mEdit->setText (QString::fromUtf8 (filter.c_str()));
    ^~~~~

apps/opencs/view/world/enumdelegate.hpp should add these lines:
class QObject;

apps/opencs/view/world/enumdelegate.hpp should remove these lines:
- #include <QStyleHintReturnMask>  // lines 7-7
- #include <components/esm/defs.hpp>  // lines 4-4
- #include <string>  // lines 8-8
- #include <string>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <vector>  // lines 11-11
- #include "apps/opencs/view/world/../../model/world/columnbase.hpp"  // lines 13-13
- #include "apps/opencs/view/world/../../model/world/columnbase.hpp"  // lines 14-14
- namespace CSMDoc { class QAbstractItemModel; }  // lines 26-26
- namespace CSMDoc { class QModelIndex; }  // lines 27-27
- namespace CSMDoc { class QObject; }  // lines 28-28
- namespace CSMDoc { class QPainter; }  // lines 29-29
- namespace CSMDoc { class QWidget; }  // lines 30-30
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 32-32

The full include-list for apps/opencs/view/world/enumdelegate.hpp:
#include <QString>                      // for QString
#include <QStyleHintReturnMask>         // for QStyleOptionViewItem
#include "util.hpp"                     // for CommandDelegate, etc
class QObject;
namespace CSMDoc { class QAbstractItemModel; }  // lines 17-17
namespace CSMDoc { class QModelIndex; }  // lines 18-18
namespace CSMDoc { class QObject; }  // lines 19-19
namespace CSMDoc { class QPainter; }  // lines 20-20
namespace CSMDoc { class QWidget; }  // lines 21-21
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 23-23
---
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^

apps/opencs/view/world/enumdelegate.cpp should add these lines:

apps/opencs/view/world/enumdelegate.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QUndoStack>  // lines 4-4
- #include <QtGui>  // lines 6-6
- #include <QtGui>  // lines 7-7
- #include <cstddef>  // lines 10-10
- #include "../../model/world/commands.hpp"  // lines 12-12
- #include "apps/opencs/view/world/util.hpp"  // lines 14-14
- namespace CSMDoc { class QPainter; }  // lines 22-22
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 24-24

The full include-list for apps/opencs/view/world/enumdelegate.cpp:
#include "enumdelegate.hpp"
#include <QComboBox>                    // for QComboBox
#include <QtCore>                       // for QVariant
#include <cassert>                      // for assert
#include <cstddef>                      // for size_t
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
namespace CSMDoc { class QPainter; }  // lines 17-17
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 19-19
---
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/view/doc/viewmanager.cpp:2:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/doc/viewmanager.cpp:2:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/doc/viewmanager.cpp:15:
In file included from apps/opencs/view/doc/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^

apps/opencs/view/doc/operation.cpp should add these lines:

apps/opencs/view/doc/operation.cpp should remove these lines:
- #include <QProgressBar>  // lines 1-1
- #include <QPushButton>  // lines 2-2
- #include <QVBoxLayout>  // lines 3-3
- #include <QtCore>  // lines 5-5
- #include <sstream>  // lines 6-6
- #include <string>  // lines 7-7
- #include <string>  // lines 8-8
- #include "apps/opencs/view/doc/../../model/doc/state.hpp"  // lines 10-10
- #include "apps/opencs/view/doc/../../model/doc/state.hpp"  // lines 11-11
- class QWidget;  // lines 13-13
- class QWidget;  // lines 15-15

The full include-list for apps/opencs/view/doc/operation.cpp:
#include <QtCore>                       // for SIGNAL, SLOT, emit
---

(apps/opencs/view/tools/subviews.hpp has correct #includes/fwd-decls)

apps/opencs/view/tools/subviews.cpp should add these lines:

apps/opencs/view/tools/subviews.cpp should remove these lines:
- #include "../doc/subviewfactoryimp.hpp"  // lines 2-2
- #include "apps/opencs/view/tools/../doc/../../model/world/universalid.hpp"  // lines 3-3
- #include "apps/opencs/view/tools/../doc/../../model/world/universalid.hpp"  // lines 4-4
- #include "apps/opencs/view/tools/../doc/subview.hpp"  // lines 5-5
- #include "apps/opencs/view/tools/../doc/subview.hpp"  // lines 6-6
- #include "apps/opencs/view/tools/../doc/subviewfactory.hpp"  // lines 7-7
- #include "apps/opencs/view/tools/../doc/subviewfactory.hpp"  // lines 8-8
- #include "reportsubview.hpp"  // lines 9-9

The full include-list for apps/opencs/view/tools/subviews.cpp:
#include "subviews.hpp"
---

apps/opencs/view/render/pagedworldspacewidget.hpp should add these lines:

apps/opencs/view/render/pagedworldspacewidget.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <vector>  // lines 8-8
- #include "../../model/world/cellselection.hpp"  // lines 10-10
- #include "apps/opencs/view/render/../../model/world/cellcoordinates.hpp"  // lines 11-11
- #include "cell.hpp"  // lines 12-12
- #include "worldspacewidget.hpp"  // lines 13-13
- namespace CSMWorld { class UniversalId; }  // lines 22-22
- namespace CSVRender { class Cell; }  // lines 25-25
- namespace CSVRender { class TextOverlay; }  // lines 41-41

The full include-list for apps/opencs/view/render/pagedworldspacewidget.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include <string>                       // for string
#include <utility>                      // for pair
class QModelIndex;  // lines 15-15
class QMouseEvent;  // lines 16-16
class QWidget;  // lines 17-17
namespace CSMDoc { class Document; }  // lines 19-19
namespace CSVRender { class OverlayMask; }  // lines 40-40
namespace CSVWidget { class SceneToolMode; }  // lines 28-28
namespace CSVWidget { class SceneToolToggle2; }  // lines 29-29
namespace CSVWidget { class SceneToolToggle; }  // lines 35-35
namespace CSVWidget { class SceneToolbar; }  // lines 30-30
---

apps/opencs/view/render/pagedworldspacewidget.cpp should add these lines:

apps/opencs/view/render/pagedworldspacewidget.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 2-2
- #include <OgreManualObject.h>  // lines 3-3
- #include <OgreSceneManager.h>  // lines 4-4
- #include <stdint.h>  // lines 7-7
- #include <QIcon>  // lines 8-8
- #include <components/esm/loadland.hpp>  // lines 5-5
- #include "../widget/scenetoolmode.hpp"  // lines 14-14
- #include "../widget/scenetooltoggle2.hpp"  // lines 16-16
- #include "OgreAxisAlignedBox.h"  // lines 17-17
- #include "OgreRenderOperation.h"  // lines 18-18
- #include "OgreSceneNode.h"  // lines 19-19
- #include "OgreViewport.h"  // lines 21-21
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 22-22
- #include "apps/opencs/model/doc/document.hpp"  // lines 23-23
- #include "apps/opencs/view/render/../../model/world/cell.hpp"  // lines 24-24
- #include "apps/opencs/view/render/../../model/world/cellselection.hpp"  // lines 25-25
- #include "apps/opencs/view/render/../../model/world/idcollection.hpp"  // lines 26-26
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 27-27
- #include "apps/opencs/view/render/../../model/world/universalid.hpp"  // lines 28-28
- #include "apps/opencs/view/render/cell.hpp"  // lines 29-29
- #include "apps/opencs/view/render/worldspacewidget.hpp"  // lines 30-30
- #include "editmode.hpp"  // lines 31-31
- #include "elements.hpp"  // lines 32-32
- #include "overlaymask.hpp"  // lines 33-33
- #include "textoverlay.hpp"  // lines 35-35

The full include-list for apps/opencs/view/render/pagedworldspacewidget.cpp:
#include "pagedworldspacewidget.hpp"
#include <stddef.h>                     // for NULL
#include <QMouseEvent>                  // for QMouseEvent
#include <QtCore>                       // for MouseButton::RightButton, etc
#include <iostream>                     // for istringstream, etc
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../widget/scenetooltoggle.hpp"  // for SceneToolToggle
#include "OgreVector3.h"                // for Vector3
class QWidget;  // lines 37-37
namespace CSVWidget { class SceneToolbar; }  // lines 39-39
---
In file included from apps/opencs/view/doc/viewmanager.cpp:17:
In file included from apps/opencs/view/doc/../world/enumdelegate.hpp:15:
In file included from apps/opencs/view/doc/../world/util.hpp:12:
In file included from apps/opencs/view/doc/../world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/doc/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/editor.hpp should add these lines:

apps/opencs/editor.hpp should remove these lines:
- #include <QLocalServer>  // lines 9-9
- #include <QLocalSocket>  // lines 10-10
- #include <components/files/multidircollection.hpp>  // lines 19-19
- #include <extern/shiny/Main/Factory.hpp>  // lines 7-7
- #include "view/doc/viewmanager.hpp"  // lines 27-27
- #include "view/render/overlaysystem.hpp"  // lines 28-28

The full include-list for apps/opencs/editor.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <QObject>                      // for QObject
#include <QString>                      // for QString
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/interprocess/sync/file_lock.hpp>  // for file_lock
#include <components/files/configurationmanager.hpp>
#include <components/nifcache/nifcache.hpp>  // for Cache
#include <memory>                       // for auto_ptr
#include "model/doc/documentmanager.hpp"  // for DocumentManager
#include "model/settings/usersettings.hpp"  // for PathContainer, etc
#include "view/doc/filedialog.hpp"      // for FileDialog
#include "view/doc/newgame.hpp"         // for NewGameDialogue
#include "view/doc/startup.hpp"         // for StartupDialogue
#include "view/settings/dialog.hpp"     // for Dialog
class QLocalServer;  // lines 31-31
class QLocalSocket;  // lines 32-32
namespace CSMDoc { class Document; }  // lines 34-34
namespace CSVRender { class OverlaySystem; }  // lines 37-37
namespace OgreInit { class OgreInit; }  // lines 45-45
namespace sh { class Factory; }  // lines 40-40
---

apps/opencs/view/world/datadisplaydelegate.hpp should add these lines:
class QObject;
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QObject; }
namespace CSMDoc { class QPainter; }
namespace CSMDoc { class QSize; }
namespace CSMDoc { class QString; }
namespace CSMDoc { class QStringList; }

apps/opencs/view/world/datadisplaydelegate.hpp should remove these lines:
- #include <QTextOption>  // lines 4-4
- #include <QtCore>  // lines 5-5
- #include <QtCore>  // lines 6-6
- #include <QtGui>  // lines 8-8
- #include <utility>  // lines 9-9
- #include <utility>  // lines 10-10
- #include <vector>  // lines 11-11
- #include <vector>  // lines 12-12
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 23-23
- namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 26-26

The full include-list for apps/opencs/view/world/datadisplaydelegate.hpp:
#include <QtGui>                        // for QStyleOptionViewItem, QSize, etc
#include "enumdelegate.hpp"             // for EnumDelegate, etc
class QObject;
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QObject; }
namespace CSMDoc { class QPainter; }
namespace CSMDoc { class QSize; }
namespace CSMDoc { class QString; }
namespace CSMDoc { class QStringList; }
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 21-21
namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 17-17
---

apps/opencs/view/world/datadisplaydelegate.cpp should add these lines:
class QObject;
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QObject; }
namespace CSMDoc { class QPainter; }
namespace CSMDoc { class QSize; }
namespace CSMDoc { class QString; }
namespace CSMDoc { class QStringList; }

apps/opencs/view/world/datadisplaydelegate.cpp should remove these lines:
- #include <QPainter>  // lines 1-1
- #include "../../model/settings/usersettings.hpp"  // lines 3-3
- #include "apps/opencs/view/world/enumdelegate.hpp"  // lines 4-4
- #include "apps/opencs/view/world/util.hpp"  // lines 6-6
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 12-12

The full include-list for apps/opencs/view/world/datadisplaydelegate.cpp:
#include "datadisplaydelegate.hpp"
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
class QObject;
namespace CSMDoc { class QModelIndex; }
namespace CSMDoc { class QObject; }
namespace CSMDoc { class QPainter; }
namespace CSMDoc { class QSize; }
namespace CSMDoc { class QString; }
namespace CSMDoc { class QStringList; }
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 10-10
---
In file included from apps/wizard/installationtargetpage.cpp:5:
apps/wizard/installationtargetpage.hpp:8:10: fatal error: 'ui_installationtargetpage.h' file not found
#include "ui_installationtargetpage.h"
         ^

apps/opencs/view/settings/frame.hpp should add these lines:
#include <QGridLayout>                  // for QGridLayout

apps/opencs/view/settings/frame.hpp should remove these lines:
- #include <QSizePolicy>  // lines 5-5
- #include "../../model/settings/support.hpp"  // lines 8-8
- class QWidget;  // lines 12-12

The full include-list for apps/opencs/view/settings/frame.hpp:
#include <QGridLayout>                  // for QGridLayout
#include <QGroupBox>                    // for QGroupBox
#include <QtCore>                       // for QString, operator|, etc
class QWidget;  // lines 10-10
---

apps/opencs/view/settings/frame.cpp should add these lines:

apps/opencs/view/settings/frame.cpp should remove these lines:
- #include <QLayoutIterator>  // lines 2-2
- #include <QSizePolicy>  // lines 4-4

The full include-list for apps/opencs/view/settings/frame.cpp:
#include "frame.hpp"
#include <QLayoutIterator>              // for QLayout
#include <QSizePolicy>                  // for QSizePolicy, etc
#include <QWidget>                      // for QWidget
---
In file included from apps/opencs/view/doc/viewmanager.cpp:17:
In file included from apps/opencs/view/doc/../world/enumdelegate.hpp:15:
In file included from apps/opencs/view/doc/../world/util.hpp:12:
In file included from apps/opencs/view/doc/../world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/doc/../../model/world/refcollection.hpp:12:
apps/opencs/view/doc/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/doc/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/doc/viewmanager.cpp:17:
In file included from apps/opencs/view/doc/../world/enumdelegate.hpp:15:
In file included from apps/opencs/view/doc/../world/util.hpp:12:
In file included from apps/opencs/view/doc/../world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/doc/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^

apps/opencs/editor.cpp should add these lines:

apps/opencs/editor.cpp should remove these lines:
- #include <components/ogreinit/ogreinit.hpp>  // lines 8-8
- #include "apps/opencs/view/doc/startup.hpp"  // lines 25-25
- #include "apps/opencs/view/doc/viewmanager.hpp"  // lines 26-26
- #include "components/files/configurationmanager.hpp"  // lines 27-27

The full include-list for apps/opencs/editor.cpp:
#include "editor.hpp"
#include <OgreRoot.h>                   // for Root
#include <openengine/bullet/BulletShapeLoader.h>
#include <stdio.h>                      // for NULL, remove
#include <QApplication>                 // for QApplication
#include <QLocalServer>                 // for QLocalServer
#include <QLocalSocket>                 // for QLocalSocket
#include <QMessageBox>                  // for QMessageBox, etc
#include <QtCore>                       // for QBool, QRegExp, etc
#include <boost/filesystem/operations.hpp>  // for exists, etc
#include <boost/move/core.hpp>
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/variables_map.hpp>  // for notify, etc
#include <components/nifogre/ogrenifloader.hpp>  // for Loader
#include <exception>                    // for exception
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <string>                       // for string
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "apps/opencs/model/doc/documentmanager.hpp"
#include "apps/opencs/model/settings/usersettings.hpp"
#include "apps/opencs/view/doc/newgame.hpp"  // for NewGameDialogue
#include "extern/shiny/Main/Language.hpp"  // for Language, etc
namespace CSMDoc { class Document; }  // lines 32-32
namespace Ogre { class RenderWindow; }  // lines 35-35
namespace sh { class OgrePlatform; }  // lines 38-38
---
apps/opencs/view/doc/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/doc/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
apps/opencs/view/doc/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/doc/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/doc/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/filter/recordfilterbox.hpp should add these lines:
class QWidget;

apps/opencs/view/filter/recordfilterbox.hpp should remove these lines:
- #include <QHBoxLayout>  // lines 5-5
- #include <QtCore>  // lines 7-7
- #include <boost/shared_ptr.hpp>  // lines 4-4
- #include <utility>  // lines 10-10
- #include "../../model/filter/node.hpp"  // lines 13-13
- namespace CSMFilter { namespace CSMFilter { class Node; } }  // lines 17-17
- namespace CSMFilter { namespace boost { template <class Y> class shared_ptr; } }  // lines 20-20

The full include-list for apps/opencs/view/filter/recordfilterbox.hpp:
#include <QtCore>                       // for DropAction, Q_OBJECT, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
class QWidget;
namespace CSMFilter { class Node; }  // lines 23-23
namespace CSMWorld { class Data; }  // lines 31-31
namespace CSVFilter { class EditWidget; }  // lines 36-36
namespace boost { template <class Y> class shared_ptr; }  // lines 26-26
---

apps/opencs/view/filter/recordfilterbox.cpp should add these lines:
class QWidget;

apps/opencs/view/filter/recordfilterbox.cpp should remove these lines:

The full include-list for apps/opencs/view/filter/recordfilterbox.cpp:
#include "recordfilterbox.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QLabel>                       // for QLabel
#include "editwidget.hpp"               // for EditWidget
class QWidget;
---
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/settings/booleanview.cpp:5:
./apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
./apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
./apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
./apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
In file included from apps/opencs/view/settings/booleanview.cpp:7:
./apps/opencs/view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/settings/booleanview.cpp:7:
./apps/opencs/view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
apps/opencs/view/settings/booleanview.cpp:30:34: error: unknown type name 'QCheckBox'
                    button = new QCheckBox (value, this);
                                 ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/world/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/wizard/mainwizard.cpp:15:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
./components/files/configurationmanager.hppIn file included from :72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
apps/opencs/view/render/overlaymask.cpp:11:
apps/opencs/view/render/overlaymask.hpp:15:5: error: expected '{'
    class CellCoordinates;
    ^
apps/opencs/view/render/overlaymask.hpp:16:1: error: extraneous closing brace ('}')
}
^
apps/opencs/view/render/overlaymask.hpp:19:5: error: expected '{'
    class TextOverlay;
    ^
apps/opencs/view/render/overlaymask.hpp:40:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/wizard/mainwizard.cpp:1:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/mainwizard.cpp:1:
In file included from /usr/include/boost/filesystem/path.hpp:18:
In file included from /usr/include/boost/config.hpp:40:
In file included from /usr/include/boost/config/select_stdlib_config.hpp:37:
In file included from /usr/include/boost/config/no_tr1/utility.hpp:21:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/wizard/mainwizard.cpp:15:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/mainwizard.cpp:15:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/mainwizard.cpp:15:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/wizard/mainwizard.cpp:15:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/mainwizard.cpp:15:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/wizard/mainwizard.cpp:19:
apps/wizard/componentselectionpage.hpp:8:10: fatal error: 'ui_componentselectionpage.h' file not found
#include "ui_componentselectionpage.h"
         ^
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^

apps/opencs/view/world/tablebottombox.hpp should add these lines:

apps/opencs/view/world/tablebottombox.hpp should remove these lines:
- #include <apps/opencs/model/world/universalid.hpp>  // lines 4-4
- #include <string>  // lines 13-13
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 12-12
- namespace CSMWorld { class UniversalId; }  // lines 23-23

The full include-list for apps/opencs/view/world/tablebottombox.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QWidget>                      // for QWidget
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
class QLabel;  // lines 15-15
class QStackedLayout;  // lines 16-16
class QStatusBar;  // lines 17-17
class QUndoStack;  // lines 18-18
namespace CSMWorld { class Data; }  // lines 22-22
namespace CSVWorld { class Creator; }  // lines 28-28
namespace CSVWorld { class CreatorFactoryBase; }  // lines 29-29
---
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/opencs/view/world/tablebottombox.cpp should add these lines:

apps/opencs/view/world/tablebottombox.cpp should remove these lines:
- #include <QtCore>  // lines 6-6

The full include-list for apps/opencs/view/world/tablebottombox.cpp:
#include "tablebottombox.hpp"
#include <QLabel>                       // for QLabel
#include <QStackedLayout>               // for QStackedLayout
#include <QStatusBar>                   // for QStatusBar
#include <QtCore>                       // for QString
#include <sstream>                      // for operator<<, ostringstream, etc
#include "creator.hpp"                  // for Creator, CreatorFactoryBase
---
In file included from apps/opencs/view/world/tablesubview.cpp:9:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
apps/opencs/view/render/overlaymask.cpp:18:14: error: cannot define or redeclare 'OverlayMask' here because namespace 'CSVRender' does not enclose namespace 'OverlayMask'
OverlayMask::OverlayMask(std::map<CSMWorld::CellCoordinates, TextOverlay *> &overlays, Ogre::Viewport* viewport)
~~~~~~~~~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/view/render/overlaymask.cpp:19:21: error: use of undeclared identifier 'overlays'
    : mTextOverlays(overlays), mViewport(viewport)
                    ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:36:
apps/opencs/view/doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
apps/opencs/view/render/overlaymask.cpp:19:42: error: use of undeclared identifier 'viewport'
    : mTextOverlays(overlays), mViewport(viewport)
                                         ^
apps/opencs/view/render/overlaymask.cpp:23:14: error: cannot define or redeclare '~OverlayMask' here because namespace 'CSVRender' does not enclose namespace 'OverlayMask'
OverlayMask::~OverlayMask()
~~~~~~~~~~~~~^
apps/opencs/view/render/overlaymask.cpp:27:19: error: cannot define or redeclare 'setViewport' here because namespace 'CSVRender' does not enclose namespace 'OverlayMask'
void OverlayMask::setViewport(Ogre::Viewport *viewport)
     ~~~~~~~~~~~~~^
apps/opencs/view/render/overlaymask.cpp:29:5: error: use of undeclared identifier 'mViewport'
    mViewport = viewport;
    ^
apps/opencs/view/render/overlaymask.cpp:29:17: error: use of undeclared identifier 'viewport'
    mViewport = viewport;
                ^
apps/opencs/view/render/overlaymask.cpp:32:19: error: cannot define or redeclare 'preViewportUpdate' here because namespace 'CSVRender' does not enclose namespace 'OverlayMask'
void OverlayMask::preViewportUpdate(const Ogre::RenderTargetViewportEvent &event)
     ~~~~~~~~~~~~~^
apps/opencs/view/render/overlaymask.cpp:34:8: error: use of undeclared identifier 'event'
    if(event.source == mViewport)
       ^
apps/opencs/view/render/overlaymask.cpp:34:24: error: use of undeclared identifier 'mViewport'
    if(event.source == mViewport)
                       ^
apps/opencs/view/render/overlaymask.cpp:49:70: error: redefinition of 'it' with a different type: 'std::map<CSMWorld::CellCoordinates, TextOverlay *>::iterator' (aka '_Rb_tree_iterator<value_type>') vs 'Ogre::Overlay::Overlay2DElementsIterator' (aka 'VectorIterator<OverlayContainerList>')
        std::map<CSMWorld::CellCoordinates, TextOverlay *>::iterator it = mTextOverlays.begin();
                                                                     ^
apps/opencs/view/render/overlaymask.cpp:41:58: note: previous definition is here
            for(Ogre::Overlay::Overlay2DElementsIterator it = item->get2DElementsIterator();
                                                         ^
apps/opencs/view/render/overlaymask.cpp:49:75: error: use of undeclared identifier 'mTextOverlays'
        std::map<CSMWorld::CellCoordinates, TextOverlay *>::iterator it = mTextOverlays.begin();
                                                                          ^
apps/opencs/view/render/overlaymask.cpp:50:21: error: use of undeclared identifier 'mTextOverlays'
        for(; it != mTextOverlays.end(); ++it)
                    ^
apps/opencs/view/render/overlaymask.cpp:50:42: error: cannot increment value of type 'Ogre::Overlay::Overlay2DElementsIterator' (aka 'VectorIterator<OverlayContainerList>')
        for(; it != mTextOverlays.end(); ++it)
                                         ^ ~~
apps/opencs/view/render/overlaymask.cpp:52:15: error: member reference type 'Ogre::Overlay::Overlay2DElementsIterator' (aka 'VectorIterator<OverlayContainerList>') is not a pointer; maybe you meant to use '.'?
            it->second->show(true);
            ~~^~
              .
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/vartypedelegate.cpp:13:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/doc/subview.cpp:2:
apps/opencs/view/doc/subview.hpp:17:5: error: expected '{'
    class Data;
    ^
apps/opencs/view/doc/subview.hpp:18:1: error: extraneous closing brace ('}')
}
^
apps/opencs/view/doc/subview.hpp:21:5: error: expected '{'
    class View;
    ^
apps/opencs/view/doc/subview.hpp:23:28: error: expected class name
    class SubView : public QDockWidget
                           ^
apps/opencs/view/doc/subview.hpp:73:1: error: extraneous closing brace ('}')
}
^
apps/opencs/view/doc/subview.cpp:6:9: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
CSVDoc::SubView::SubView (const CSMWorld::UniversalId& id)
~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:6:9: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
CSVDoc::SubView::SubView (const CSMWorld::UniversalId& id)
~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:15:31: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
CSMWorld::UniversalId CSVDoc::SubView::getUniversalId() const
                      ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:20:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::setStatusBar (bool show) {}
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:22:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::useHint (const std::string& hint) {}
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:24:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::updateUserSetting (const QString &, const QStringList &)
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:27:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::setUniversalId (const CSMWorld::UniversalId& id)
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:33:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::closeEvent (QCloseEvent *event)
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:38:21: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
std::string CSVDoc::SubView::getTitle() const
            ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^
apps/opencs/view/doc/subview.cpp:43:14: error: incomplete type 'CSVDoc::SubView' named in nested name specifier
void CSVDoc::SubView::closeRequest()
     ~~~~~~~~^~~~~~~~~
apps/opencs/view/doc/subviewfactory.hpp:15:11: note: forward declaration of 'CSVDoc::SubView'
    class SubView;
          ^

apps/opencs/view/settings/booleanview.hpp should add these lines:
#include <QtGui>                        // for QWidget

apps/opencs/view/settings/booleanview.hpp should remove these lines:
- #include <QAbstractButton>  // lines 4-4
- #include <QtCore>  // lines 6-6
- class QAbstractButton;  // lines 11-11
- class QAbstractButton;  // lines 19-19
- class QStringListModel;  // lines 20-20
- namespace CSMSettings { class Setting; }  // lines 22-22
- namespace CSVSettings { class Page; }  // lines 25-25

The full include-list for apps/opencs/view/settings/booleanview.hpp:
#include <QtCore>                       // for QObject, QString, Q_OBJECT, etc
#include <QtGui>                        // for QWidget
#include "../../model/settings/support.hpp"  // for SettingType
#include "view.hpp"                     // for IViewFactory, View
namespace CSMSettings { class Setting; }  // lines 13-13
namespace CSVSettings { class Page; }  // lines 16-16
---

apps/opencs/view/settings/booleanview.cpp should add these lines:
#include <QAbstractButton>              // for QAbstractButton

apps/opencs/view/settings/booleanview.cpp should remove these lines:
- #include "apps/opencs/view/settings/frame.hpp"  // lines 6-6
- #include "apps/opencs/view/settings/view.hpp"  // lines 8-8
- namespace CSVSettings { class Page; }  // lines 14-14

The full include-list for apps/opencs/view/settings/booleanview.cpp:
#include "booleanview.hpp"
#include <QAbstractButton>              // for QAbstractButton
#include <QRadioButton>                 // for QRadioButton
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/../../model/settings/support.hpp"
#include "apps/opencs/view/settings/frame.hpp"  // for Frame
#include "apps/opencs/view/settings/view.hpp"  // for View
namespace CSVSettings { class Page; }  // lines 12-12
---
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:42:
apps/opencs/view/doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/doc/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/doc/loader.cpp:20:
In file included from apps/opencs/view/doc/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/doc/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/doc/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/doc/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/model/doc/document.cpp:8:
./apps/opencs/model/doc/../tools/tools.hpp:30:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/document.cpp:8:
./apps/opencs/model/doc/../tools/tools.hpp:30:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
./apps/opencs/model/doc/../tools/tools.hpp:30:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
./apps/opencs/model/doc/../tools/tools.hpp:30:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
./apps/opencs/model/doc/../tools/tools.hpp:32:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/document.cpp:8:
./apps/opencs/model/doc/../tools/tools.hpp:32:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
./apps/opencs/model/doc/../tools/tools.hpp:32:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
./apps/opencs/model/doc/../tools/tools.hpp:32:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

apps/wizard/conclusionpage.hpp should add these lines:

apps/wizard/conclusionpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/conclusionpage.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

apps/wizard/conclusionpage.cpp should add these lines:

apps/wizard/conclusionpage.cpp should remove these lines:
- #include <QDebug>  // lines 1-1
- #include <QPixmap>  // lines 3-3
- #include <QtCore>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/conclusionpage.cpp:
#include "conclusionpage.hpp"
#include <QPixmap>                      // for QPixmap
#include <QtCore>                       // for QLatin1String, QVariant, etc
#include "mainwizard.hpp"               // for MainWizard
class QWidget;  // lines 10-10
---

apps/opencs/view/widget/scenetooltoggle2.hpp should add these lines:

apps/opencs/view/widget/scenetooltoggle2.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 8-8
- class QRect;  // lines 14-14
- class QWidget;  // lines 15-15

The full include-list for apps/opencs/view/widget/scenetooltoggle2.hpp:
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
#include <map>                          // for map
#include <string>                       // for string
#include "scenetool.hpp"                // for SceneTool
class QHBoxLayout;  // lines 13-13
class QWidget;  // lines 11-11
namespace CSVWidget { class PushButton; }  // lines 20-20
namespace CSVWidget { class SceneToolbar; }  // lines 21-21
---

apps/opencs/view/widget/scenetooltoggle2.cpp should add these lines:
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc

apps/opencs/view/widget/scenetooltoggle2.cpp should remove these lines:
- #include <QFrame>  // lines 2-2
- #include <QHBoxLayout>  // lines 3-3
- #include <QtGui>  // lines 5-5
- #include <utility>  // lines 8-8
- #include "apps/opencs/view/widget/scenetool.hpp"  // lines 11-11

The full include-list for apps/opencs/view/widget/scenetooltoggle2.cpp:
#include "scenetooltoggle2.hpp"
#include <QtGui>                        // for QHBoxLayout, QWidget, QIcon, etc
#include <sstream>                      // for ostringstream, etc
#include <utility>                      // for pair, make_pair
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc
#include "apps/opencs/view/widget/scenetool.hpp"  // for SceneTool
#include "scenetoolbar.hpp"             // for SceneToolbar
---
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:36:
./apps/opencs/model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/view/doc/subview.hpp should add these lines:

apps/opencs/view/doc/subview.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 7-7
- #include "subviewfactory.hpp"  // lines 10-10
- class Data;  // lines 17-17
- class QUndoStack;  // lines 14-14
- class View;  // lines 21-21

The full include-list for apps/opencs/view/doc/subview.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include <string>                       // for string
#include "../../model/world/universalid.hpp"  // for UniversalId
class QCloseEvent;  // lines 12-12
---

apps/opencs/view/doc/subview.cpp should add these lines:

apps/opencs/view/doc/subview.cpp should remove these lines:
- #include "apps/opencs/view/doc/../../model/world/universalid.hpp"  // lines 1-1
- class QCloseEvent;  // lines 4-4

The full include-list for apps/opencs/view/doc/subview.cpp:
#include "subview.hpp"
---
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from ./apps/opencs/model/doc/../world/refcollection.hpp:12:
./apps/opencs/model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
./apps/opencs/model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
./apps/opencs/model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/model/doc/document.cpp:9:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/model/doc/../world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/render/navigationorbit.hpp should add these lines:

apps/opencs/view/render/navigationorbit.hpp should remove these lines:
- class QPoint;  // lines 13-13
- namespace Ogre { class Camera; }  // lines 15-15

The full include-list for apps/opencs/view/render/navigationorbit.hpp:
#include <OgreVector3.h>                // for Vector3
#include "navigation.hpp"               // for Navigation
class QPoint;  // lines 8-8
namespace Ogre { class Camera; }  // lines 10-10
---

apps/opencs/view/render/navigationorbit.cpp should add these lines:

apps/opencs/view/render/navigationorbit.cpp should remove these lines:
- #include "OgreMath.h"  // lines 6-6
- #include "OgreVector3.h"  // lines 8-8

The full include-list for apps/opencs/view/render/navigationorbit.cpp:
#include "navigationorbit.hpp"
#include <OgreCamera.h>                 // for Camera
#include <QPoint>                       // for QPoint
#include "OgreMath.h"                   // for Degree
#include "OgreVector3.h"                // for Vector3, operator*
---

apps/opencs/view/render/overlaymask.hpp should add these lines:
namespace CSMWorld { class CellCoordinates; }

apps/opencs/view/render/overlaymask.hpp should remove these lines:
- #include <map>  // lines 6-6
- class CellCoordinates;  // lines 15-15

The full include-list for apps/opencs/view/render/overlaymask.hpp:
#include <OgreRenderTargetListener.h>   // for RenderTargetListener
#include <map>                          // for map
class TextOverlay;  // lines 19-19
namespace CSMWorld { class CellCoordinates; }
namespace Ogre { class Viewport; }  // lines 11-11
---

apps/opencs/view/render/overlaymask.cpp should add these lines:
namespace Ogre { class OverlayContainer; }

apps/opencs/view/render/overlaymask.cpp should remove these lines:
- #include <OgreOverlayContainer.h>  // lines 1-1
- #include <utility>  // lines 3-3
- #include <utility>  // lines 4-4
- #include "../../model/world/cellcoordinates.hpp"  // lines 6-6
- #include "OgreOverlay.h"  // lines 8-8
- #include "OgreRenderTargetListener.h"  // lines 9-9
- #include "OgreRenderTargetListener.h"  // lines 10-10
- #include "textoverlay.hpp"  // lines 12-12

The full include-list for apps/opencs/view/render/overlaymask.cpp:
#include "overlaymask.hpp"
#include <OgreOverlayManager.h>         // for OverlayManager, etc
#include "OgreOverlay.h"
namespace Ogre { class OverlayContainer; }
---

apps/opencs/view/widget/scenetool.hpp should add these lines:

apps/opencs/view/widget/scenetool.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QMouseEvent;  // lines 10-10
- class QPoint;  // lines 13-13

The full include-list for apps/opencs/view/widget/scenetool.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include "pushbutton.hpp"
class QMouseEvent;  // lines 9-9
class QPoint;  // lines 11-11
namespace CSVWidget { class SceneToolbar; }  // lines 17-17
---

apps/opencs/view/widget/scenetool.cpp should add these lines:

apps/opencs/view/widget/scenetool.cpp should remove these lines:
- #include <QMouseEvent>  // lines 2-2
- #include <QtCore>  // lines 4-4
- #include <QtGui>  // lines 6-6
- #include "apps/opencs/view/widget/pushbutton.hpp"  // lines 9-9

The full include-list for apps/opencs/view/widget/scenetool.cpp:
#include "scenetool.hpp"
#include <QtCore>                       // for MouseButton::RightButton, etc
#include <QtGui>                        // for QSizePolicy, etc
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc
#include "scenetoolbar.hpp"             // for SceneToolbar
---

apps/opencs/view/world/scripthighlighter.hpp should add these lines:

apps/opencs/view/world/scripthighlighter.hpp should remove these lines:
- #include <QCharRef>  // lines 8-8
- #include <QTextBlockFormat>  // lines 11-11
- #include <string>  // lines 14-14
- class QTextDocument;  // lines 27-27
- namespace CSMWorld { class Data; }  // lines 29-29
- namespace Compiler { class Scanner; }  // lines 32-32
- namespace Compiler { struct TokenLoc; }  // lines 33-33

The full include-list for apps/opencs/view/world/scripthighlighter.hpp:
#include <QCharRef>                     // for QString
#include <QSyntaxHighlighter>           // for QSyntaxHighlighter
#include <QTextBlockFormat>             // for QTextCharFormat
#include <components/compiler/extensions.hpp>  // for Extensions
#include <components/compiler/nullerrorhandler.hpp>
#include <components/compiler/parser.hpp>  // for Parser
#include <map>                          // for map
#include <string>                       // for string
#include "../../model/world/scriptcontext.hpp"  // for ScriptContext
class QTextDocument;  // lines 18-18
namespace CSMWorld { class Data; }  // lines 20-20
namespace Compiler { class Scanner; }  // lines 23-23
namespace Compiler { struct TokenLoc; }  // lines 24-24
---

apps/opencs/view/world/scripthighlighter.cpp should add these lines:

apps/opencs/view/world/scripthighlighter.cpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <utility>  // lines 8-8
- #include "apps/opencs/view/world/../../model/world/scriptcontext.hpp"  // lines 11-11
- #include "components/compiler/nullerrorhandler.hpp"  // lines 13-13
- #include "components/compiler/parser.hpp"  // lines 15-15
- #include "components/compiler/tokenloc.hpp"  // lines 17-17
- class QTextDocument;  // lines 25-25
- namespace CSMWorld { class Data; }  // lines 27-27

The full include-list for apps/opencs/view/world/scripthighlighter.cpp:
#include "scripthighlighter.hpp"
#include <QtCore>                       // for GlobalColor::blue, etc
#include <components/compiler/extensions0.hpp>  // for registerExtensions
#include <components/compiler/scanner.hpp>  // for Scanner, etc
#include <sstream>                      // for istringstream
#include <utility>                      // for make_pair
#include "apps/opencs/view/world/../../model/world/scriptcontext.hpp"
#include "components/compiler/nullerrorhandler.hpp"
#include "components/compiler/parser.hpp"  // for Parser
#include "components/compiler/tokenloc.hpp"  // for TokenLoc
class QTextDocument;  // lines 20-20
namespace CSMWorld { class Data; }  // lines 22-22
---
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^

apps/wizard/mainwizard.hpp should add these lines:
#include <stdbool.h>                    // for bool

apps/wizard/mainwizard.hpp should remove these lines:
- #include <QMap>  // lines 5-5
- #include <QProcess>  // lines 6-6
- #include <components/process/processinvoker.hpp>  // lines 4-4
- class QWidget;  // lines 15-15
- namespace Process { class ProcessInvoker; }  // lines 17-17

The full include-list for apps/wizard/mainwizard.hpp:
#include <stdbool.h>                    // for bool
#include <QWizard>                      // for QWizard
#include <QtCore>                       // for QString, slots, QMap, etc
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include <components/files/configurationmanager.hpp>
class QWidget;  // lines 10-10
namespace Process { class ProcessInvoker; }  // lines 12-12
---
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^

apps/opencs/view/world/creator.hpp should add these lines:

apps/opencs/view/world/creator.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 9-9

The full include-list for apps/opencs/view/world/creator.hpp:
#include <QArgument>                    // for Q_OBJECT, signals
#include <QWidget>                      // for QWidget
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "../../model/world/scope.hpp"  // for Scope::Scope_Content
#include "../../model/world/universalid.hpp"  // for UniversalId, etc
class QUndoStack;  // lines 14-14
namespace CSMWorld { class Data; }  // lines 18-18
---

apps/opencs/view/world/creator.cpp should add these lines:

apps/opencs/view/world/creator.cpp should remove these lines:
- #include "apps/opencs/view/world/../../model/world/scope.hpp"  // lines 5-5
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 7-7

The full include-list for apps/opencs/view/world/creator.cpp:
#include "creator.hpp"
#include <stdexcept>                    // for logic_error
#include "apps/opencs/view/world/../../model/world/scope.hpp"
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
---
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^

(apps/opencs/view/render/lighting.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lighting.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^

apps/wizard/mainwizard.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

apps/wizard/mainwizard.cpp should remove these lines:
- #include <stdbool.h>  // lines 4-4
- #include <QDateTime>  // lines 5-5
- #include <QDebug>  // lines 6-6
- #include <boost/filesystem/path.hpp>  // lines 1-1
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include <string>  // lines 8-8
- #include <string>  // lines 9-9
- #include "components/config/gamesettings.hpp"  // lines 12-12
- #include "components/config/launchersettings.hpp"  // lines 14-14
- #include "components/files/configurationmanager.hpp"  // lines 15-15
- #include "components/files/configurationmanager.hpp"  // lines 16-16
- #include "components/process/processinvoker.hpp"  // lines 18-18
- #include "componentselectionpage.hpp"  // lines 19-19
- #include "conclusionpage.hpp"  // lines 20-20
- #include "existinginstallationpage.hpp"  // lines 21-21
- #include "importpage.hpp"  // lines 22-22
- #include "installationpage.hpp"  // lines 34-34
- #include "installationtargetpage.hpp"  // lines 23-23
- #include "intropage.hpp"  // lines 24-24
- #include "languageselectionpage.hpp"  // lines 25-25
- #include "methodselectionpage.hpp"  // lines 27-27
- class QWidget;  // lines 31-31

The full include-list for apps/wizard/mainwizard.cpp:
#include "mainwizard.hpp"
#include <stdbool.h>                    // for false, true, bool
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include "components/config/gamesettings.hpp"  // for GameSettings
#include "components/config/launchersettings.hpp"  // for LauncherSettings, etc
#include "components/process/processinvoker.hpp"  // for ProcessInvoker
class QWidget;  // lines 29-29
---
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/opencs/view/world/tablesubview.cpp should add these lines:
#include <QArgument>                    // for SIGNAL, SLOT, emit

apps/opencs/view/world/tablesubview.cpp should remove these lines:
- #include <QEvent>  // lines 2-2
- #include <QVBoxLayout>  // lines 3-3
- #include <QtGui>  // lines 4-4
- #include <QtGui>  // lines 5-5
- #include <utility>  // lines 6-6
- #include <utility>  // lines 7-7
- #include "../../model/doc/document.hpp"  // lines 9-9
- #include "../../model/world/tablemimedata.hpp"  // lines 10-10
- #include "../filter/filterbox.hpp"  // lines 11-11
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 12-12
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 13-13
- #include "table.hpp"  // lines 14-14
- #include "tablebottombox.hpp"  // lines 15-15

The full include-list for apps/opencs/view/world/tablesubview.cpp:
#include <QArgument>                    // for SIGNAL, SLOT, emit
---
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/vartypedelegate.cpp:14:
In file included from ./apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/doc/loader.hpp should add these lines:

apps/opencs/view/doc/loader.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <QSignalMapper>  // lines 7-7
- #include <string>  // lines 10-10
- namespace CSMDoc { class QCloseEvent; }  // lines 14-14

The full include-list for apps/opencs/view/doc/loader.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include <QObject>                      // for QObject
#include <QWidget>                      // for QWidget
#include <string>                       // for string
namespace CSMDoc { class QCloseEvent; }  // lines 13-13
namespace CSMDoc { class QDialogButtonBox; }  // lines 15-15
namespace CSMDoc { class QLabel; }  // lines 16-16
namespace CSMDoc { class QListWidget; }  // lines 17-17
namespace CSMDoc { class QProgressBar; }  // lines 19-19
namespace CSMDoc { class QVBoxLayout; }  // lines 20-20
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 25-25
---

apps/opencs/view/doc/loader.cpp should add these lines:

apps/opencs/view/doc/loader.cpp should remove these lines:
- #include <QCloseEvent>  // lines 4-4
- #include <QDialogButtonBox>  // lines 6-6
- #include <QLabel>  // lines 7-7
- #include <QListWidget>  // lines 8-8
- #include <QProgressBar>  // lines 9-9
- #include <QVBoxLayout>  // lines 10-10
- #include <QtCore>  // lines 11-11
- #include <QtCore>  // lines 12-12
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <sstream>  // lines 14-14
- #include <utility>  // lines 15-15
- #include <utility>  // lines 16-16
- #include <vector>  // lines 17-17
- #include <vector>  // lines 18-18

The full include-list for apps/opencs/view/doc/loader.cpp:
#include "loader.hpp"
#include <QCursor>                      // for QCursor
#include <sstream>                      // for ostringstream
#include "../../model/doc/document.hpp"  // for Document
---

apps/opencs/view/doc/viewmanager.hpp should add these lines:
#include "apps/opencs/view/doc/../world/../../model/world/universalid.hpp"

apps/opencs/view/doc/viewmanager.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "loader.hpp"  // lines 11-11
- class UniversalId;  // lines 25-25
- namespace CSMDoc { class CommandDelegateFactoryCollection; }  // lines 21-21

The full include-list for apps/opencs/view/doc/viewmanager.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QObject>                      // for QObject
#include <string>                       // for string
#include "apps/opencs/view/doc/../world/../../model/world/universalid.hpp"
class View;  // lines 29-29
namespace CSMDoc { class Document; }  // lines 14-14
---

apps/opencs/view/doc/viewmanager.cpp should add these lines:

apps/opencs/view/doc/viewmanager.cpp should remove these lines:
- #include <QApplication>  // lines 4-4
- #include <QMessageBox>  // lines 5-5
- #include <QPushButton>  // lines 6-6
- #include <QtCore>  // lines 7-7
- #include <QtCore>  // lines 8-8
- #include <algorithm>  // lines 9-9
- #include <boost/filesystem/path.hpp>  // lines 2-2
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <cstddef>  // lines 10-10
- #include <cstddef>  // lines 11-11
- #include <map>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../../model/settings/usersettings.hpp"  // lines 15-15
- #include "../../model/world/columns.hpp"  // lines 16-16
- #include "../world/enumdelegate.hpp"  // lines 17-17
- #include "../world/idtypedelegate.hpp"  // lines 18-18
- #include "../world/recordstatusdelegate.hpp"  // lines 19-19
- #include "../world/util.hpp"  // lines 20-20
- #include "../world/vartypedelegate.hpp"  // lines 21-21
- #include "apps/opencs/view/doc/../../model/doc/state.hpp"  // lines 22-22
- #include "apps/opencs/view/doc/../../model/doc/state.hpp"  // lines 23-23
- #include "apps/opencs/view/doc/../world/../../model/doc/document.hpp"  // lines 24-24
- #include "apps/opencs/view/doc/../world/../../model/doc/document.hpp"  // lines 25-25
- #include "apps/opencs/view/doc/../world/../../model/world/columnbase.hpp"  // lines 26-26
- #include "apps/opencs/view/doc/../world/../../model/world/columnbase.hpp"  // lines 27-27
- #include "apps/opencs/view/doc/../world/../../model/world/universalid.hpp"  // lines 28-28
- #include "apps/opencs/view/doc/../world/../../model/world/universalid.hpp"  // lines 29-29
- #include "apps/opencs/view/doc/loader.hpp"  // lines 30-30
- #include "apps/opencs/view/doc/loader.hpp"  // lines 31-31
- #include "components/esm/variant.hpp"  // lines 32-32
- #include "components/esm/variant.hpp"  // lines 33-33

The full include-list for apps/opencs/view/doc/viewmanager.cpp:
#include "viewmanager.hpp"
---
In file included from apps/opencs/view/settings/textview.cpp:5:
In file included from ./apps/opencs/view/settings/view.hpp:8:
apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
In file included from apps/opencs/view/settings/textview.cpp:5:
./apps/opencs/view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/settings/textview.cpp:5:
./apps/opencs/view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:36:
./apps/opencs/view/world/../doc/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:42:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp:12:
./apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
./apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:42:
./apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
./apps/opencs/view/world/../doc/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/wizard/existinginstallationpage.cpp:6:
apps/wizard/existinginstallationpage.hpp:8:10: fatal error: 'ui_existinginstallationpage.h' file not found
#include "ui_existinginstallationpage.h"
         ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
./apps/opencs/view/world/../doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
./apps/opencs/view/world/../doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
./apps/opencs/view/world/../doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
./apps/opencs/view/world/../doc/../../model/doc/../world/columnbase.hpp:13:39: note: '::CSMWorld::Record' declared here
template <typename ESXRecordT> struct Record;
                                      ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
./apps/opencs/view/world/../doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/previewsubview.cpp:11:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp:43:
In file included from ./apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp:16:
./apps/opencs/view/world/../doc/../../model/doc/../world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
./apps/opencs/view/world/../doc/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/world/scenesubview.cpp:10:
In file included from apps/opencs/view/world/../render/pagedworldspacewidget.hpp:13:
apps/opencs/view/world/../render/worldspacewidget.hpp:74:24: error: no type named 'Navigation1st' in namespace 'CSVRender'; did you mean 'Navigation'?
            CSVRender::Navigation1st m1st;
            ~~~~~~~~~~~^~~~~~~~~~~~~
                       Navigation
apps/opencs/view/world/../render/scenewidget.hpp:52:11: note: 'Navigation' declared here
    class Navigation;
          ^
In file included from apps/opencs/view/world/scenesubview.cpp:10:
In file included from apps/opencs/view/world/../render/pagedworldspacewidget.hpp:13:
apps/opencs/view/world/../render/worldspacewidget.hpp:74:38: error: field type 'CSVRender::Navigation' is an abstract class
            CSVRender::Navigation1st m1st;
                                     ^
apps/opencs/view/world/../render/navigation.hpp:29:26: note: unimplemented pure virtual method 'activate' in 'Navigation'
            virtual bool activate (Ogre::Camera *camera) = 0;
                         ^
apps/opencs/view/world/../render/navigation.hpp:32:26: note: unimplemented pure virtual method 'wheelMoved' in 'Navigation'
            virtual bool wheelMoved (int delta) = 0;
                         ^
apps/opencs/view/world/../render/navigation.hpp:35:26: note: unimplemented pure virtual method 'mouseMoved' in 'Navigation'
            virtual bool mouseMoved (const QPoint& delta, int mode) = 0;
                         ^
apps/opencs/view/world/../render/navigation.hpp:39:26: note: unimplemented pure virtual method 'handleMovementKeys' in 'Navigation'
            virtual bool handleMovementKeys (int vertical, int horizontal) = 0;
                         ^
apps/opencs/view/world/../render/navigation.hpp:42:26: note: unimplemented pure virtual method 'handleRollKeys' in 'Navigation'
            virtual bool handleRollKeys (int delta) = 0;
                         ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:34:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:34:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/model/settings/usersettings.cpp:5:
In file included from ./extern/shiny/Main/Factory.hpp:11:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:7:
./extern/shiny/Main/PropertyBase.hpp:17:2: error: expected '{'
        class LinkedValue;
        ^
./extern/shiny/Main/PropertyBase.hpp:198:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:204:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:211:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
./extern/shiny/Main/PropertyBase.hpp:248:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/model/settings/usersettings.cpp:5:
./extern/shiny/Main/Factory.hpp:22:31: error: base class has incomplete type
        class Configuration : public PropertySetGet
                              ~~~~~~~^~~~~~~~~~~~~~
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/opencs/view/world/vartypedelegate.hpp should add these lines:
class QObject;

apps/opencs/view/world/vartypedelegate.hpp should remove these lines:
- #include <components/esm/variant.hpp>  // lines 4-4
- #include <utility>  // lines 5-5
- #include <utility>  // lines 6-6
- #include <vector>  // lines 7-7
- #include <vector>  // lines 8-8
- #include "apps/opencs/view/world/util.hpp"  // lines 11-11
- namespace CSMDoc { class QAbstractItemModel; }  // lines 22-22
- namespace CSMDoc { class QModelIndex; }  // lines 23-23
- namespace CSMDoc { class QObject; }  // lines 24-24
- namespace CSMDoc { class QString; }  // lines 17-17
- namespace CSMDoc { class QString; }  // lines 25-25
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 27-27

The full include-list for apps/opencs/view/world/vartypedelegate.hpp:
#include "apps/opencs/view/world/util.hpp"
#include "enumdelegate.hpp"             // for EnumDelegate
class QObject;
namespace CSMDoc { class QAbstractItemModel; }  // lines 14-14
namespace CSMDoc { class QModelIndex; }  // lines 15-15
namespace CSMDoc { class QObject; }  // lines 16-16
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 19-19
---

apps/opencs/view/world/vartypedelegate.cpp should add these lines:
#include "apps/opencs/view/world/../../model/doc/../world/data.hpp"

apps/opencs/view/world/vartypedelegate.cpp should remove these lines:
- #include <stddef.h>  // lines 2-2
- #include <stddef.h>  // lines 3-3
- #include <QUndoStack>  // lines 4-4
- #include <QtCore>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include <string>  // lines 9-9
- #include <string>  // lines 10-10
- #include "../../model/world/columns.hpp"  // lines 12-12
- #include "../../model/world/commands.hpp"  // lines 13-13
- #include "apps/opencs/view/world/enumdelegate.hpp"  // lines 14-14
- #include "apps/opencs/view/world/enumdelegate.hpp"  // lines 15-15
- #include "components/esm/variant.hpp"  // lines 16-16
- #include "components/esm/variant.hpp"  // lines 17-17
- namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 23-23

The full include-list for apps/opencs/view/world/vartypedelegate.cpp:
#include "vartypedelegate.hpp"
#include <QtCore>                       // for QVariant
#include "apps/opencs/view/world/../../model/doc/../world/data.hpp"
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 21-21
---
In file included from apps/opencs/model/settings/usersettings.cpp:5:
./extern/shiny/Main/Factory.hpp:254:18: error: field has incomplete type 'sh::PropertySetGet'
                PropertySetGet mGlobalSettings;
                               ^
./extern/shiny/Main/ShaderSet.hpp:17:8: note: forward declaration of 'sh::PropertySetGet'
        class PropertySetGet;
              ^

apps/opencs/view/render/lightingbright.hpp should add these lines:

apps/opencs/view/render/lightingbright.hpp should remove these lines:
- namespace Ogre { class ColourValue; }  // lines 10-10
- namespace Ogre { class SceneManager; }  // lines 11-11

The full include-list for apps/opencs/view/render/lightingbright.hpp:
#include "lighting.hpp"                 // for Lighting
namespace Ogre { class ColourValue; }  // lines 7-7
namespace Ogre { class Light; }  // lines 16-16
namespace Ogre { class SceneManager; }  // lines 8-8
---

apps/opencs/view/render/lightingbright.cpp should add these lines:

apps/opencs/view/render/lightingbright.cpp should remove these lines:
- #include "OgreColourValue.h"  // lines 5-5
- #include "OgreLight.h"  // lines 7-7
- #include "OgreVector3.h"  // lines 9-9

The full include-list for apps/opencs/view/render/lightingbright.cpp:
#include "lightingbright.hpp"
#include <OgreSceneManager.h>           // for SceneManager
#include "OgreColourValue.h"            // for ColourValue
#include "OgreLight.h"                  // for Light, etc
#include "OgreVector3.h"                // for Vector3
---
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/view/world/../filter/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../filter/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../filter/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../filter/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/view/world/../filter/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../filter/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../filter/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../filter/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/view/settings/settingwindow.cpp:2:
In file included from /usr/include/qt4/QtCore/QDebug:1:
In file included from /usr/include/qt4/QtCore/qdebug.h:45:
In file included from /usr/include/qt4/QtCore/qalgorithms.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/settingwindow.cpp:2:
In file included from /usr/include/qt4/QtCore/QDebug:1:
In file included from /usr/include/qt4/QtCore/qdebug.h:45:
In file included from /usr/include/qt4/QtCore/qalgorithms.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^

apps/wizard/installationtargetpage.hpp should add these lines:

apps/wizard/installationtargetpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/installationtargetpage.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Files { struct ConfigurationManager; }  // lines 17-17
namespace Wizard { class MainWizard; }  // lines 21-21
---
In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/settings/settingwindow.cpp:6:
In file included from apps/opencs/view/settings/../../model/settings/usersettings.hpp:17:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../filter/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

apps/wizard/installationtargetpage.cpp should add these lines:

apps/wizard/installationtargetpage.cpp should remove these lines:
- #include <QDebug>  // lines 1-1

The full include-list for apps/wizard/installationtargetpage.cpp:
#include "installationtargetpage.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include <QtCore>                       // for QDir, QFileInfo, QString, etc
#include "mainwizard.hpp"               // for MainWizard, etc
class QWidget;  // lines 8-8
---
In file included from apps/opencs/view/world/scenesubview.cpp:17:
In file included from ./apps/opencs/model/doc/document.hpp:17:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../filter/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../filter/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../filter/../../model/world/record.hpp:36:12: note: '::CSMWorld::Record' declared here
    struct Record : public RecordBase
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:36:
apps/opencs/view/render/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/render/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/settings/settingwindow.cpp:7:
In file included from apps/opencs/view/settings/page.hpp:9:
apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:42:
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^

apps/opencs/view/world/idvalidator.hpp should add these lines:

apps/opencs/view/world/idvalidator.hpp should remove these lines:
- #include <QChar>  // lines 5-5
- class QObject;  // lines 12-12
- class QString;  // lines 13-13

The full include-list for apps/opencs/view/world/idvalidator.hpp:
#include <QChar>                        // for QChar
#include <QValidator>                   // for QValidator, etc
#include <string>                       // for string
class QObject;  // lines 9-9
class QString;  // lines 10-10
---

apps/opencs/view/world/idvalidator.cpp should add these lines:

apps/opencs/view/world/idvalidator.cpp should remove these lines:
- #include <QtCore>  // lines 4-4

The full include-list for apps/opencs/view/world/idvalidator.cpp:
#include "idvalidator.hpp"
#include <QtCore>                       // for QString, QByteArray, etc
#include <components/misc/stringops.hpp>  // for StringUtils
---
In file included from apps/opencs/view/settings/settingwindow.cpp:9:
apps/opencs/view/settings/view.hpp:35:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *mSelectionModel;
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
In file included from apps/opencs/view/settings/settingwindow.cpp:9:
apps/opencs/view/settings/view.hpp:99:9: error: unknown type name 'QItemSelectionModel'; did you mean 'Qt::ItemSelectionMode'?
        QItemSelectionModel *selectionModel()       { return mSelectionModel;}
        ^~~~~~~~~~~~~~~~~~~
        Qt::ItemSelectionMode
/usr/include/qt4/QtCore/qnamespace.h:1503:10: note: 'Qt::ItemSelectionMode' declared here
    enum ItemSelectionMode {
         ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
apps/opencs/view/render/../../model/doc/../world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
apps/opencs/model/settings/usersettings.cpp:32:1: error: no type named 'UserSettings' in namespace 'CSMSettings'; did you mean 'QSettings'?
CSMSettings::UserSettings *CSMSettings::UserSettings::sUserSettingsInstance = 0;
^~~~~~~~~~~~~~~~~~~~~~~~~
QSettings
/usr/include/qt4/QtCore/qsettings.h:73:21: note: 'QSettings' declared here
class Q_CORE_EXPORT QSettings : public QObject
                    ^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
apps/opencs/model/settings/usersettings.cpp:32:41: error: no member named 'UserSettings' in namespace 'CSMSettings'
CSMSettings::UserSettings *CSMSettings::UserSettings::sUserSettingsInstance = 0;
                           ~~~~~~~~~~~~~^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
apps/opencs/model/settings/usersettings.cpp:34:18: error: no member named 'UserSettings' in namespace 'CSMSettings'
    CSMSettings::UserSettings::UserSettings (const Files::ConfigurationManager& configurationManager)
    ~~~~~~~~~~~~~^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
apps/opencs/model/settings/usersettings.cpp:44:19: error: no member named 'UserSettings' in namespace 'CSMSettings'
void CSMSettings::UserSettings::buildSettingModelDefaults()
     ~~~~~~~~~~~~~^
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/opencs/view/render/unpagedworldspacewidget.cpp:8:
In file included from apps/opencs/view/render/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/render/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/doc/../world/refidcollection.hpp:16:
apps/opencs/view/render/../../model/doc/../world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/render/../../model/doc/../world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/settings/textview.hpp should add these lines:

apps/opencs/view/settings/textview.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include "../../model/settings/setting.hpp"  // lines 8-8
- namespace CSMSettings { class Setting; }  // lines 18-18
- namespace CSVSettings { class Page; }  // lines 21-21

The full include-list for apps/opencs/view/settings/textview.hpp:
#include <QtCore>                       // for QString, QObject, Q_OBJECT, etc
#include <QtGui>                        // for QWidget
#include "view.hpp"                     // for IViewFactory, View
namespace CSMSettings { class Setting; }  // lines 16-16
namespace CSVSettings { class Page; }  // lines 12-12
---

apps/opencs/view/settings/textview.cpp should add these lines:

apps/opencs/view/settings/textview.cpp should remove these lines:
- #include <QLineEdit>  // lines 1-1
- #include <QTextEdit>  // lines 2-2
- #include "apps/opencs/view/settings/view.hpp"  // lines 6-6
- namespace CSVSettings { class Page; }  // lines 12-12

The full include-list for apps/opencs/view/settings/textview.cpp:
#include "textview.hpp"
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/view.hpp"  // for View
namespace CSVSettings { class Page; }  // lines 10-10
---
In file included from apps/wizard/intropage.cpp:6:
apps/wizard/intropage.hpp:8:10: fatal error: 'ui_intropage.h' file not found
#include "ui_intropage.h"
         ^

apps/opencs/view/world/previewsubview.hpp should add these lines:

apps/opencs/view/world/previewsubview.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 7-7
- #include "../doc/subview.hpp"  // lines 9-9
- #include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"  // lines 12-12

The full include-list for apps/opencs/view/world/previewsubview.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <string>                       // for string
#include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"
namespace CSMDoc { class Document; }  // lines 16-16
namespace CSVRender { class PreviewWidget; }  // lines 21-21
---

apps/opencs/view/world/previewsubview.cpp should add these lines:

apps/opencs/view/world/previewsubview.cpp should remove these lines:
- #include <QtCore>  // lines 4-4
- #include <QtGui>  // lines 6-6
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp"  // lines 11-11
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp"  // lines 12-12
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/record.hpp"  // lines 13-13
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/record.hpp"  // lines 14-14
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp"  // lines 15-15
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/ref.hpp"  // lines 16-16
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp"  // lines 17-17
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/refcollection.hpp"  // lines 18-18
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp"  // lines 19-19
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/refidcollection.hpp"  // lines 20-20
- #include "apps/opencs/view/world/../doc/../../model/doc/document.hpp"  // lines 21-21
- #include "apps/opencs/view/world/../doc/../../model/doc/document.hpp"  // lines 22-22
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 23-23
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 24-24

The full include-list for apps/opencs/view/world/previewsubview.cpp:
#include "previewsubview.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QtCore>                       // for QMargins
#include <QtGui>                        // for QWidget
#include "../render/previewwidget.hpp"  // for PreviewWidget
#include "../widget/scenetoolbar.hpp"   // for SceneToolbar
#include "../widget/scenetoolmode.hpp"  // for SceneToolMode
---
In file included from apps/opencs/view/world/dialoguecreator.cpp:7:
apps/opencs/view/world/../../model/world/commands.hpp:15:1: error: expected unqualified-id
{
^
In file included from apps/opencs/view/world/regionmap.cpp:2:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^

apps/opencs/view/settings/settingwindow.hpp should add these lines:

apps/opencs/view/settings/settingwindow.hpp should remove these lines:
- #include <QList>  // lines 4-4
- #include "../../model/settings/support.hpp"  // lines 8-8

The full include-list for apps/opencs/view/settings/settingwindow.hpp:
#include <QMainWindow>                  // for QMainWindow
#include <QtCore>                       // for QString, QList, etc
class QWidget;  // lines 10-10
namespace CSMSettings { class Setting; }  // lines 13-13
namespace CSMSettings { class UserSettings; }  // lines 14-14
namespace CSVSettings { class Page; }  // lines 19-19
namespace CSVSettings { class View; }  // lines 20-20
---

apps/opencs/view/settings/settingwindow.cpp should add these lines:
#include <QList>                        // for QList

apps/opencs/view/settings/settingwindow.cpp should remove these lines:
- #include <QDebug>  // lines 2-2
- class QWidget;  // lines 13-13

The full include-list for apps/opencs/view/settings/settingwindow.cpp:
#include "settingwindow.hpp"
#include <stddef.h>                     // for NULL
#include <QList>                        // for QList
#include "../../model/settings/connector.hpp"  // for Connector
#include "../../model/settings/setting.hpp"  // for ProxyValueMap, Setting
#include "../../model/settings/usersettings.hpp"  // for SettingPageMap, etc
#include "page.hpp"                     // for Page
#include "view.hpp"                     // for View
class QWidget;  // lines 11-11
---

apps/opencs/view/doc/startup.hpp should add these lines:
class QGridLayout;
class QPushButton;

apps/opencs/view/doc/startup.hpp should remove these lines:
- #include <QtCore>  // lines 6-6
- class QString;  // lines 10-10
- class QWidget;  // lines 12-12

The full include-list for apps/opencs/view/doc/startup.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, Q_OBJECT, signals
class QGridLayout;
class QIcon;  // lines 9-9
class QPushButton;
---

apps/opencs/model/settings/usersettings.cpp should add these lines:
#include <QtCore>                       // for foreach, emit

apps/opencs/model/settings/usersettings.cpp should remove these lines:
- #include <assert.h>  // lines 2-2
- #include <stddef.h>  // lines 7-7
- #include <QFile>  // lines 8-8
- #include <components/files/configurationmanager.hpp>  // lines 4-4
- #include <extern/shiny/Main/Factory.hpp>  // lines 5-5
- #include <string>  // lines 9-9
- #include <string>  // lines 10-10
- #include <utility>  // lines 11-11
- #include <utility>  // lines 12-12
- #include "setting.hpp"  // lines 14-14

The full include-list for apps/opencs/model/settings/usersettings.cpp:
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <QtCore>                       // for foreach, emit
#include <boost/version.hpp>            // for BOOST_VERSION
---

apps/opencs/view/doc/startup.cpp should add these lines:

apps/opencs/view/doc/startup.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QDesktopWidget>  // lines 3-3
- #include <QGridLayout>  // lines 4-4
- #include <QHBoxLayout>  // lines 5-5
- #include <QLabel>  // lines 6-6
- #include <QPushButton>  // lines 7-7
- #include <QRect>  // lines 8-8
- #include <QtGui>  // lines 10-10

The full include-list for apps/opencs/view/doc/startup.cpp:
#include "startup.hpp"
#include <QtGui>                        // for QPushButton, QGridLayout, etc
---
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^

apps/opencs/view/world/scenesubview.hpp should add these lines:
namespace CSVWidget { class SceneToolbar; }

apps/opencs/view/world/scenesubview.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "../doc/subview.hpp"  // lines 11-11
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 13-13
- class QHBoxLayout;  // lines 16-16
- class QModelIndex;  // lines 18-18
- namespace CSVWidget { namespace CSVWorld { class CreatorFactoryBase; } }  // lines 42-42
- namespace CSVWidget { namespace CSVWorld { class Table; } }  // lines 43-43

The full include-list for apps/opencs/view/world/scenesubview.hpp:
#include <QtCore>                       // for QString, QStringList, slots, etc
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
class QHBoxLayout;  // lines 15-15
namespace CSMDoc { class Document; }  // lines 28-28
namespace CSMWorld { class CellSelection; }  // lines 22-22
namespace CSVRender { class PagedWorldspaceWidget; }  // lines 33-33
namespace CSVRender { class UnpagedWorldspaceWidget; }  // lines 34-34
namespace CSVRender { class WorldspaceWidget; }  // lines 35-35
namespace CSVWidget { class SceneToolbar; }
namespace CSVWidget { namespace CSVWorld { class TableBottomBox; } }  // lines 44-44
---

apps/opencs/view/world/scenesubview.cpp should add these lines:
namespace CSVWidget { namespace CSMWorld { class UniversalId; } }

apps/opencs/view/world/scenesubview.cpp should remove these lines:
- #include <map>  // lines 6-6
- #include "../render/unpagedworldspacewidget.hpp"  // lines 11-11
- #include "apps/opencs/model/doc/document.hpp"  // lines 17-17
- #include "apps/opencs/view/world/../doc/../../model/doc/../world/cellcoordinates.hpp"  // lines 18-18
- #include "apps/opencs/view/world/../doc/subview.hpp"  // lines 19-19
- #include "apps/opencs/view/world/../render/../../model/world/cellselection.hpp"  // lines 20-20
- #include "creator.hpp"  // lines 22-22

The full include-list for apps/opencs/view/world/scenesubview.cpp:
#include "scenesubview.hpp"
#include <stddef.h>                     // for NULL
#include <QHBoxLayout>                  // for QHBoxLayout, QVBoxLayout
#include <QtGui>                        // for QWidget
#include <cassert>                      // for assert
#include <sstream>                      // for ostringstream
#include "../filter/filterbox.hpp"      // for FilterBox
#include "../render/pagedworldspacewidget.hpp"
#include "../widget/scenetoolbar.hpp"   // for SceneToolbar
#include "../widget/scenetoolmode.hpp"  // for SceneToolMode
#include "../widget/scenetoolrun.hpp"   // for SceneToolRun
#include "../widget/scenetooltoggle.hpp"  // for SceneToolToggle
#include "../widget/scenetooltoggle2.hpp"  // for SceneToolToggle2
#include "apps/opencs/view/world/../render/worldspacewidget.hpp"
#include "tablebottombox.hpp"           // for TableBottomBox
namespace CSVWidget { namespace CSMWorld { class UniversalId; } }
---

apps/opencs/model/doc/document.hpp should add these lines:
#include "apps/opencs/model/doc/../world/refcollection.hpp"
#include "apps/opencs/model/doc/runner.hpp"  // for Runner
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/model/doc/document.hpp should remove these lines:
- #include <QArgument>  // lines 9-9
- #include <QObject>  // lines 10-10
- #include <QTimer>  // lines 11-11
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include <components/to_utf8/to_utf8.hpp>  // lines 7-7
- #include <string>  // lines 12-12
- #include <vector>  // lines 13-13
- #include <vector>  // lines 14-14
- #include "../tools/tools.hpp"  // lines 16-16
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 18-18
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 19-19
- #include "state.hpp"  // lines 22-22
- namespace CSMDoc { class QAbstractItemModel; }  // lines 29-29
- namespace CSMDoc { namespace CSMTools { class ReportModel; } }  // lines 31-31
- namespace CSMDoc { namespace CSMWorld { class ResourcesManager; } }  // lines 51-51

The full include-list for apps/opencs/model/doc/document.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <boost/filesystem/path.hpp>    // for path
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include "../world/data.hpp"            // for Data
#include "apps/opencs/model/doc/../world/refcollection.hpp"
#include "apps/opencs/model/doc/runner.hpp"  // for Runner
#include "blacklist.hpp"                // for Blacklist
#include "saving.hpp"                   // for Saving
namespace CSMDoc { class QTextDocument; }  // lines 24-24
namespace CSMDoc { namespace CSMTools { class ReportModel; } }  // lines 26-26
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace CSVWorld { class PhysicsSystem; } }  // lines 57-57
namespace CSMDoc { namespace ESM { struct GameSetting; } }  // lines 37-37
namespace CSMDoc { namespace ESM { struct Global; } }  // lines 38-38
namespace CSMDoc { namespace ESM { struct MagicEffect; } }  // lines 39-39
namespace CSMDoc { namespace Files { class ConfigurationManager; } }  // lines 45-45
---

apps/opencs/model/doc/document.cpp should add these lines:

apps/opencs/model/doc/document.cpp should remove these lines:
- #include <boost/filesystem/operations.hpp>  // lines 1-1
- #include <boost/filesystem/operations.hpp>  // lines 2-2
- #include <components/files/configurationmanager.hpp>  // lines 42-42
- #include <fstream>  // lines 3-3
- #include <iostream>  // lines 4-4
- #include <stdexcept>  // lines 5-5
- #include <stdexcept>  // lines 6-6
- #include "../../view/world/physicssystem.hpp"  // lines 45-45
- #include "apps/opencs/model/doc/../tools/tools.hpp"  // lines 8-8
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 9-9
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 10-10
- #include "apps/opencs/model/doc/../world/idcollection.hpp"  // lines 11-11
- #include "apps/opencs/model/doc/../world/idcollection.hpp"  // lines 12-12
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 13-13
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 14-14
- #include "apps/opencs/model/doc/blacklist.hpp"  // lines 15-15
- #include "apps/opencs/model/doc/blacklist.hpp"  // lines 16-16
- #include "apps/opencs/model/doc/runner.hpp"  // lines 17-17
- #include "apps/opencs/model/doc/runner.hpp"  // lines 18-18
- #include "apps/opencs/model/doc/saving.hpp"  // lines 19-19
- #include "apps/opencs/model/doc/saving.hpp"  // lines 20-20
- #include "apps/opencs/model/doc/state.hpp"  // lines 21-21
- #include "apps/opencs/model/doc/state.hpp"  // lines 22-22
- #include "components/esm/debugprofile.hpp"  // lines 23-23
- #include "components/esm/debugprofile.hpp"  // lines 24-24
- #include "components/esm/loaddial.hpp"  // lines 25-25
- #include "components/esm/loaddial.hpp"  // lines 26-26
- #include "components/esm/loadglob.hpp"  // lines 27-27
- #include "components/esm/loadglob.hpp"  // lines 28-28
- #include "components/esm/loadgmst.hpp"  // lines 29-29
- #include "components/esm/loadgmst.hpp"  // lines 30-30
- #include "components/esm/loadmgef.hpp"  // lines 31-31
- #include "components/esm/loadmgef.hpp"  // lines 32-32
- #include "components/esm/loadskil.hpp"  // lines 33-33
- #include "components/esm/loadskil.hpp"  // lines 34-34
- #include "components/esm/variant.hpp"  // lines 35-35
- #include "components/esm/variant.hpp"  // lines 36-36
- #include "components/to_utf8/to_utf8.hpp"  // lines 37-37
- #include "components/to_utf8/to_utf8.hpp"  // lines 38-38
- class QTextDocument;  // lines 47-47
- class QTextDocument;  // lines 52-52
- namespace CSMTools { class ReportModel; }  // lines 49-49
- namespace CSMTools { class ReportModel; }  // lines 54-54

The full include-list for apps/opencs/model/doc/document.cpp:
#include "document.hpp"
---
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:85: error: 'codecForCStrings' is a private member of 'QString'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                                                    ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:157:60: error: cannot initialize return object of type 'CSMDoc::QTextCodec *' with an rvalue of type 'QTextCodec *'
inline QTextCodec* QTextCodec::codecForCStrings() { return validCodecs() ? QString::codecForCStrings : 0; }
                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qtextcodec.h:158:71: error: 'codecForCStrings' is a private member of 'QString'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                      ^
/usr/include/qt4/QtCore/qstring.h:621:24: note: declared private here
    static QTextCodec *codecForCStrings;
                       ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:3:
/usr/include/qt4/QtCore/qtextcodec.h:158:88: error: assigning to 'QTextCodec *' from incompatible type 'CSMDoc::QTextCodec *'
inline void QTextCodec::setCodecForCStrings(QTextCodec *c) { QString::codecForCStrings = c; }
                                                                                       ^ ~
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: class template specialization of 'QTypeInfo' must occur at global scope
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2277:7: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
class QTypeInfo<TYPE > \
      ^
/usr/include/qt4/QtCore/qglobal.h:2235:7: note: explicitly specialized declaration is here
class QTypeInfo
      ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
In file included from /usr/include/qt4/QtCore/qfactoryinterface.h:46:
In file included from /usr/include/qt4/QtCore/qstringlist.h:48:
/usr/include/qt4/QtCore/qregexp.h:156:1: error: invalid application of 'sizeof' to an incomplete type 'QRegExp'
Q_DECLARE_TYPEINFO(QRegExp, Q_MOVABLE_TYPE);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qglobal.h:2291:12: note: expanded from macro 'Q_DECLARE_TYPEINFO'
template<> \
           ^
/usr/include/qt4/QtCore/qglobal.h:2283:20: note: expanded from macro '\
Q_DECLARE_TYPEINFO_BODY'
        isLarge = (sizeof(TYPE)>sizeof(void*)), \
                   ^     ~~~~~~
/usr/include/qt4/QtCore/qstring.h:76:7: note: forward declaration of 'QRegExp'
class QRegExp;
      ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_interface_iid'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:398:36: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                                   ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: no function template matches function template specialization 'qobject_cast'
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: 'inline' can only appear on functions
/usr/include/qt4/QtCore/qobject.h:402:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: extraneous 'template<>' in declaration of variable 'qobject_cast'
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobject.h:402:5: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
    ^~~~~~~~~~~
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: redefinition of 'qobject_cast' as different kind of symbol
/usr/include/qt4/QtCore/qobject.h:402:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                              ^
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: note: previous definition is here
/usr/include/qt4/QtCore/qobject.h:400:31: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(QObject *object) \
                              ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected ';' at end of declaration
Q_DECLARE_INTERFACE(QFactoryInterface, "com.trolltech.Qt.QFactoryInterface")
^
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
In file included from /usr/include/qt4/QtCore/qtextcodecplugin.h:46:
/usr/include/qt4/QtCore/qfactoryinterface.h:61:1: error: expected unqualified-id
/usr/include/qt4/QtCore/qobject.h:402:43: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline IFace *qobject_cast<IFace *>(const QObject *object) \
                                          ^
In file included from apps/opencs/view/world/dialoguecreator.cpp:8:
In file included from apps/opencs/view/world/../../model/world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:4:
In file included from /usr/include/qt4/QtCore/QtCore:4:
/usr/include/qt4/QtCore/qtextcodecplugin.h:67:1: error: 'inline' can only appear on functions
Q_DECLARE_INTERFACE(QTextCodecFactoryInterface, QTextCodecFactoryInterface_iid)
^
/usr/include/qt4/QtCore/qobject.h:398:17: note: expanded from macro 'Q_DECLARE_INTERFACE'
    template <> inline const char *qobject_interface_iid<IFace *>() \
                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/render/unpagedworldspacewidget.hpp should add these lines:
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/render/unpagedworldspacewidget.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <memory>  // lines 6-6
- #include <string>  // lines 7-7
- #include <vector>  // lines 8-8
- #include <vector>  // lines 9-9
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 11-11
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 12-12
- #include "cell.hpp"  // lines 15-15
- namespace CSMDoc { class QWidget; }  // lines 22-22
- namespace CSMDoc { namespace CSVWidget { class SceneToolToggle2; } }  // lines 25-25

The full include-list for apps/opencs/view/render/unpagedworldspacewidget.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include "worldspacewidget.hpp"         // for WorldspaceWidget, etc
namespace CSMDoc { class QModelIndex; }  // lines 21-21
namespace CSMDoc { class QWidget; }  // lines 16-16
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 31-31
namespace CSMDoc { namespace CSMWorld { class IdTable; } }  // lines 36-36
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
namespace CSMDoc { namespace CSVWidget { class SceneToolToggle2; } }  // lines 18-18
---

apps/opencs/view/render/unpagedworldspacewidget.cpp should add these lines:
#include "apps/opencs/view/render/lighting.hpp"  // for ColourValue
#include "components/terrain/world.hpp"  // for Vector3

apps/opencs/view/render/unpagedworldspacewidget.cpp should remove these lines:
- #include <OgreCamera.h>  // lines 2-2
- #include <OgreColourValue.h>  // lines 3-3
- #include <QtCore>  // lines 4-4
- #include <QtCore>  // lines 5-5
- #include <sstream>  // lines 6-6
- #include "../../model/doc/document.hpp"  // lines 8-8
- #include "../widget/scenetooltoggle2.hpp"  // lines 10-10
- #include "OgreVector3.h"  // lines 11-11
- #include "OgreVector3.h"  // lines 12-12
- #include "apps/opencs/model/doc/../world/cell.hpp"  // lines 13-13
- #include "apps/opencs/model/doc/../world/cell.hpp"  // lines 14-14
- #include "apps/opencs/model/doc/../world/columns.hpp"  // lines 15-15
- #include "apps/opencs/model/doc/../world/columns.hpp"  // lines 16-16
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 17-17
- #include "apps/opencs/model/doc/../world/record.hpp"  // lines 18-18
- #include "apps/opencs/view/render/cell.hpp"  // lines 19-19
- #include "apps/opencs/view/render/worldspacewidget.hpp"  // lines 21-21
- #include "components/esm/loadcell.hpp"  // lines 22-22
- #include "elements.hpp"  // lines 23-23
- namespace CSMDoc { class QWidget; }  // lines 28-28

The full include-list for apps/opencs/view/render/unpagedworldspacewidget.cpp:
#include "unpagedworldspacewidget.hpp"
#include "../../model/world/data.hpp"   // for QModelIndex
#include "apps/opencs/view/render/lighting.hpp"  // for ColourValue
#include "apps/opencs/view/render/worldspacewidget.hpp"
#include "components/terrain/world.hpp"  // for Vector3
namespace CSMDoc { class QWidget; }  // lines 26-26
---

apps/opencs/view/widget/scenetoolmode.hpp should add these lines:

apps/opencs/view/widget/scenetoolmode.hpp should remove these lines:
- #include <QtCore>  // lines 5-5
- #include <string>  // lines 8-8
- class PushButton;  // lines 18-18
- class QWidget;  // lines 17-17

The full include-list for apps/opencs/view/widget/scenetoolmode.hpp:
#include <QtCore>                       // for QString, Q_OBJECT, signals, etc
#include <map>                          // for map
#include <string>                       // for string
#include "scenetool.hpp"                // for SceneTool
class QHBoxLayout;  // lines 16-16
class QWidget;  // lines 11-11
namespace CSVWidget { class ModeButton; }  // lines 24-24
namespace CSVWidget { class PushButton; }  // lines 13-13
namespace CSVWidget { class SceneToolbar; }  // lines 25-25
---

(apps/opencs/view/widget/scenetoolmode.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/settings/listview.cpp:5:
In file included from ./apps/opencs/view/settings/view.hpp:8:
apps/opencs/view/settings/frame.hpp:16:34: error: expected class name
    class SettingLayout : public QGridLayout
                                 ^
apps/opencs/view/settings/frame.hpp:20:15: error: member initializer 'QGridLayout' does not name a non-static data member or base class
            : QGridLayout (parent)
              ^~~~~~~~~~~~~~~~~~~~
apps/opencs/view/settings/frame.hpp:22:11: error: use of undeclared identifier 'setContentsMargins'
          setContentsMargins(0,0,0,0);
          ^
apps/opencs/view/settings/frame.hpp:23:11: error: use of undeclared identifier 'setAlignment'
          setAlignment(Qt::AlignLeft | Qt::AlignTop);
          ^
apps/opencs/view/settings/listview.cpp:18:1: error: no member named 'ListView' in namespace 'CSVSettings'; did you mean 'QListView'?
CSVSettings::ListView::ListView(CSMSettings::Setting *setting,
^~~~~~~~~~~~~~~~~~~~~
QListView
/usr/include/qt4/QtGui/qlistview.h:57:20: note: 'QListView' declared here
class Q_GUI_EXPORT QListView : public QAbstractItemView
                   ^
apps/opencs/view/settings/listview.cpp:18:24: error: missing return type for function 'ListView'; did you mean the constructor name 'QListView'?
CSVSettings::ListView::ListView(CSMSettings::Setting *setting,
                       ^~~~~~~~
                       QListView
apps/opencs/view/settings/listview.cpp:19:33: error: unknown type name 'Page'; did you mean 'CSVSettings::Page'?
                                Page *parent)
                                ^~~~
                                CSVSettings::Page
apps/opencs/view/settings/listview.cpp:15:7: note: 'CSVSettings::Page' declared here
class Page;
      ^
apps/opencs/view/settings/listview.cpp:18:24: error: out-of-line definition of 'QListView' does not match any declaration in 'QListView'
CSVSettings::ListView::ListView(CSMSettings::Setting *setting,
                       ^~~~~~~~
apps/opencs/view/settings/listview.cpp:20:7: error: member initializer 'mComboBox' does not name a non-static data member or base class
    : mComboBox (0), mAbstractItemView (0), View(setting, parent)
      ^~~~~~~~~~~~~
apps/opencs/view/settings/listview.cpp:20:22: error: initializer 'mAbstractItemView' does not name a non-static data member or base class; did you mean the base class 'QAbstractItemView'?
    : mComboBox (0), mAbstractItemView (0), View(setting, parent)
                     ^~~~~~~~~~~~~~~~~
                     QAbstractItemView
/usr/include/qt4/QtGui/qlistview.h:57:32: note: base class 'QAbstractItemView' specified here
class Q_GUI_EXPORT QListView : public QAbstractItemView
                               ^~~~~~~~~~~~~~~~~~~~~~~~
apps/opencs/view/settings/listview.cpp:20:45: error: member initializer 'View' does not name a non-static data member or base class
    : mComboBox (0), mAbstractItemView (0), View(setting, parent)
                                            ^~~~~~~~~~~~~~~~~~~~~
apps/opencs/view/settings/listview.cpp:23:21: error: use of undeclared identifier 'buildWidget'
                    buildWidget(setting->isMultiLine(), setting->widgetWidth());
                    ^
apps/opencs/view/settings/listview.cpp:25:5: error: use of undeclared identifier 'addWidget'
    addWidget (widget, setting->viewRow(), setting->viewColumn());
    ^
apps/opencs/view/settings/listview.cpp:27:9: error: unknown type name 'mComboBox'; did you mean 'QComboBox'?
    if (mComboBox)
        ^~~~~~~~~
        QComboBox
/usr/include/qt4/QtGui/qcombobox.h:62:20: note: 'QComboBox' declared here
class Q_GUI_EXPORT QComboBox : public QWidget
                   ^
apps/opencs/view/settings/listview.cpp:27:18: error: expected unqualified-id
    if (mComboBox)
                 ^
apps/opencs/view/settings/listview.cpp:27:18: error: variable declaration in condition must have an initializer
apps/opencs/view/settings/listview.cpp:28:9: error: use of undeclared identifier 'buildComboBoxModel'
        buildComboBoxModel();
        ^
apps/opencs/view/settings/listview.cpp:30:14: error: unknown type name 'mAbstractItemView'; did you mean 'QAbstractItemView'?
    else if (mAbstractItemView)
             ^~~~~~~~~~~~~~~~~
             QAbstractItemView
/usr/include/qt4/QtGui/qabstractitemview.h:63:20: note: 'QAbstractItemView' declared here
class Q_GUI_EXPORT QAbstractItemView : public QAbstractScrollArea
                   ^
apps/opencs/view/settings/listview.cpp:30:31: error: expected unqualified-id
    else if (mAbstractItemView)
                              ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/wizard/existinginstallationpage.hpp should add these lines:

apps/wizard/existinginstallationpage.hpp should remove these lines:
- #include <QtCore>  // lines 6-6
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/existinginstallationpage.hpp:
#include <QWizardPage>                  // for QWizardPage
#include <QtCore>                       // for QString, Q_OBJECT, slots
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

apps/wizard/existinginstallationpage.cpp should add these lines:

apps/wizard/existinginstallationpage.cpp should remove these lines:
- #include <QFile>  // lines 2-2
- #include <QFileInfo>  // lines 3-3

The full include-list for apps/wizard/existinginstallationpage.cpp:
#include "existinginstallationpage.hpp"
#include <stddef.h>                     // for NULL
#include <QMessageBox>                  // for QMessageBox, etc
#include "mainwizard.hpp"               // for MainWizard, etc
class QAbstractButton;  // lines 9-9
class QWidget;  // lines 10-10
---
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/world/refcollection.hpp:12:
apps/opencs/view/world/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/wizard/methodselectionpage.cpp:3:
In file included from apps/wizard/mainwizard.hpp:21:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/wizard/methodselectionpage.cpp:1:
In file included from /usr/include/qt4/QtCore/QtCore:3:
In file included from /usr/include/qt4/QtCore/qtextcodec.h:45:
In file included from /usr/include/qt4/QtCore/qstring.h:45:
In file included from /usr/include/qt4/QtCore/qchar.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/methodselectionpage.cpp:1:
In file included from /usr/include/qt4/QtCore/QtCore:3:
In file included from /usr/include/qt4/QtCore/qtextcodec.h:45:
In file included from /usr/include/qt4/QtCore/qstring.h:45:
In file included from /usr/include/qt4/QtCore/qchar.h:45:
In file included from /usr/include/qt4/QtCore/qglobal.h:68:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/wizard/methodselectionpage.cpp:3:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/methodselectionpage.cpp:3:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/methodselectionpage.cpp:3:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/wizard/methodselectionpage.cpp:3:
In file included from apps/wizard/mainwizard.hpp:21:
In file included from ./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
In file included from ./components/files/configurationmanager.hppapps/opencs/view/world/recordstatusdelegate.cpp::895::
32In file included from :./apps/opencs/view/world/datadisplaydelegate.hpp :note14: :
in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested hereIn file included from 
apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp        TokensMappingContainer mTokensMapping;:
17                               ^:

In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: In file included from '::ESM::NAME32' declared hereapps/wizard/methodselectionpage.cpp
:3:
In file included from apps/wizard/mainwizard.hpp:typedef NAME_T<32> NAME32;21
:
                   ^In file included from 
./components/files/configurationmanager.hpp:9:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/wizard/methodselectionpage.cpp:4:
apps/wizard/methodselectionpage.hpp:8:10: fatal error: 'ui_methodselectionpage.h' file not found
#include "ui_methodselectionpage.h"
         ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^

(apps/opencs/view/render/overlaysystem.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/overlaysystem.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'
        Position    mPos;
        ^
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^

apps/opencs/model/doc/operation.hpp should add these lines:

apps/opencs/model/doc/operation.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 8-8
- #include <utility>  // lines 10-10

The full include-list for apps/opencs/model/doc/operation.hpp:
#include <QArgument>                    // for slots, Q_OBJECT, signals
#include <QThread>                      // for QThread
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector, vector<>::iterator
namespace CSMDoc { class Stage; }  // lines 22-22
namespace CSMWorld { class UniversalId; }  // lines 16-16
---
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^

(apps/opencs/model/doc/operation.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:52:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index)= 0;
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:56:36: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual void insertRecord (RecordBase& record) = 0;
                                   ^~~~~~~~~~
                                   ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:70:21: error: no template named 'Record'; did you mean '::CSMWorld::Record'?
        std::vector<Record<RecordT> > mContainer;
                    ^~~~~~
                    ::CSMWorld::Record
apps/opencs/view/world/../../model/world/record.hpp:36:12: note: '::CSMWorld::Record' declared here
    struct Record : public RecordBase
           ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:74:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
In file included from apps/opencs/view/world/recordstatusdelegate.cpp:5:
In file included from ./apps/opencs/view/world/datadisplaydelegate.hpp:14:
In file included from apps/opencs/view/world/enumdelegate.hpp:15:
In file included from apps/opencs/view/world/util.hpp:12:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/world/refidcollection.hpp:16:
apps/opencs/view/world/../../model/world/refiddata.hpp:76:17: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual RecordBase& getRecord (int index);
                ^~~~~~~~~~
                ::CSMWorld::RecordBase
apps/opencs/view/world/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/view/widget/pushbutton.cpp:8:6: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
void CSVWidget::PushButton::setExtendedToolTip()
     ^~~~~~~~~
     QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:8:6: error: incomplete type 'QWidget' named in nested name specifier
void CSVWidget::PushButton::setExtendedToolTip()
     ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:50:6: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
void CSVWidget::PushButton::keyPressEvent (QKeyEvent *event)
     ^~~~~~~~~
     QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:50:6: error: incomplete type 'QWidget' named in nested name specifier
void CSVWidget::PushButton::keyPressEvent (QKeyEvent *event)
     ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:58:6: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
void CSVWidget::PushButton::keyReleaseEvent (QKeyEvent *event)
     ^~~~~~~~~
     QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:58:6: error: incomplete type 'QWidget' named in nested name specifier
void CSVWidget::PushButton::keyReleaseEvent (QKeyEvent *event)
     ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:66:6: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
void CSVWidget::PushButton::mouseReleaseEvent (QMouseEvent *event)
     ^~~~~~~~~
     QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:66:6: error: incomplete type 'QWidget' named in nested name specifier
void CSVWidget::PushButton::mouseReleaseEvent (QMouseEvent *event)
     ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:72:1: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
CSVWidget::PushButton::PushButton (const QIcon& icon, Type type, const QString& tooltip,
^~~~~~~~~
QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:72:1: error: incomplete type 'QWidget' named in nested name specifier
CSVWidget::PushButton::PushButton (const QIcon& icon, Type type, const QString& tooltip,
^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:72:55: error: unknown type name 'Type'
CSVWidget::PushButton::PushButton (const QIcon& icon, Type type, const QString& tooltip,
                                                      ^
apps/opencs/view/widget/pushbutton.cpp:85:1: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
CSVWidget::PushButton::PushButton (Type type, const QString& tooltip, QWidget *parent)
^~~~~~~~~
QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:85:1: error: incomplete type 'QWidget' named in nested name specifier
CSVWidget::PushButton::PushButton (Type type, const QString& tooltip, QWidget *parent)
^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:85:36: error: unknown type name 'Type'
CSVWidget::PushButton::PushButton (Type type, const QString& tooltip, QWidget *parent)
                                   ^
apps/opencs/view/widget/pushbutton.cpp:92:6: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
bool CSVWidget::PushButton::hasKeepOpen() const
     ^~~~~~~~~
     QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:92:6: error: incomplete type 'QWidget' named in nested name specifier
bool CSVWidget::PushButton::hasKeepOpen() const
     ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:97:9: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
QString CSVWidget::PushButton::getBaseToolTip() const
        ^~~~~~~~~
        QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:97:9: error: incomplete type 'QWidget' named in nested name specifier
QString CSVWidget::PushButton::getBaseToolTip() const
        ^~~~~~~~~~~
/usr/include/qt4/QtGui/qwindowdefs.h:56:7: note: forward declaration of 'QWidget'
class QWidget;
      ^
apps/opencs/view/widget/pushbutton.cpp:102:1: error: use of undeclared identifier 'CSVWidget'; did you mean 'QWidget'?
CSVWidget::PushButton::Type CSVWidget::PushButton::getType() const
^~~~~~~~~
QWidget
apps/opencs/view/widget/pushbutton.cpp:6:7: note: 'QWidget' declared here
class QWidget;
      ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/settings/listview.cpp should add these lines:
#include <QAbstractItemView>            // for QAbstractItemView
#include <QArgument>                    // for SIGNAL, SLOT
class QWidget;
namespace CSMSettings { class Setting; }

apps/opencs/view/settings/listview.cpp should remove these lines:
- #include <QComboBox>  // lines 1-1
- #include "../../model/settings/setting.hpp"  // lines 4-4
- #include "apps/opencs/view/settings/view.hpp"  // lines 5-5
- #include "apps/opencs/view/settings/view.hpp"  // lines 6-6
- class QShowEvent;  // lines 8-8
- class QShowEvent;  // lines 13-13
- namespace CSVSettings { class Page; }  // lines 15-15

The full include-list for apps/opencs/view/settings/listview.cpp:
#include <QAbstractItemView>            // for QAbstractItemView
#include <QArgument>                    // for SIGNAL, SLOT
#include <QListView>                    // for QListView
class QWidget;
namespace CSMSettings { class Setting; }
namespace CSVSettings { class Page; }  // lines 10-10
---

apps/opencs/view/world/dialoguecreator.hpp should add these lines:
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/dialoguecreator.hpp should remove these lines:
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 4-4
- #include "apps/opencs/view/world/../../model/world/../doc/../world/universalid.hpp"  // lines 5-5
- #include "apps/opencs/view/world/creator.hpp"  // lines 7-7
- namespace CSMDoc { class QUndoStack; }  // lines 16-16
- namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 18-18
- namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 19-19

The full include-list for apps/opencs/view/world/dialoguecreator.hpp:
#include "apps/opencs/view/world/creator.hpp"  // for Creator (ptr only), etc
#include "genericcreator.hpp"           // for GenericCreator
namespace CSMDoc { class QUndoStack; }  // lines 10-10
namespace CSMDoc { namespace CSMWorld { class CreateCommand; } }  // lines 12-12
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 13-13
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/opencs/view/world/dialoguecreator.cpp should add these lines:
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }

apps/opencs/view/world/dialoguecreator.cpp should remove these lines:
- #include <QAbstractItemModel>  // lines 3-3
- #include <QAbstractItemModel>  // lines 4-4
- #include <components/esm/loaddial.hpp>  // lines 2-2
- #include "../../model/world/columns.hpp"  // lines 6-6
- #include "../../model/world/commands.hpp"  // lines 7-7
- #include "../../model/world/data.hpp"  // lines 8-8
- #include "../../model/world/idtable.hpp"  // lines 9-9
- #include "apps/opencs/view/world/genericcreator.hpp"  // lines 11-11
- namespace CSMDoc { class QUndoStack; }  // lines 16-16

The full include-list for apps/opencs/view/world/dialoguecreator.cpp:
#include "dialoguecreator.hpp"
#include "apps/opencs/view/world/genericcreator.hpp"
namespace CSMDoc { class QUndoStack; }  // lines 14-14
namespace CSMDoc { namespace CSMWorld { struct UniversalId; } }
---

apps/opencs/view/widget/pushbutton.cpp should add these lines:
#include <QArgument>                    // for SIGNAL, SLOT

apps/opencs/view/widget/pushbutton.cpp should remove these lines:
- #include <QKeyEvent>  // lines 2-2
- class QWidget;  // lines 4-4
- class QWidget;  // lines 6-6

The full include-list for apps/opencs/view/widget/pushbutton.cpp:
#include <QArgument>                    // for SIGNAL, SLOT
---
In file included from apps/opencs/view/render/scenewidget.cpp:15:
In file included from apps/opencs/view/render/../../model/settings/usersettings.hpp:17:
./components/files/configurationmanager.hpp:70:24: error: no type named 'FixedPath' in namespace 'Files'
        typedef Files::FixedPath<> FixedPathType;
                ~~~~~~~^
./components/files/configurationmanager.hpp:70:33: error: expected member name or ';' after declaration specifiers
        typedef Files::FixedPath<> FixedPathType;
        ~~~~~~~~~~~~~~~~~~~~~~~~^
./components/files/configurationmanager.hpp:72:49: error: use of undeclared identifier 'FixedPathType'
        typedef const boost::filesystem::path& (FixedPathType::*path_type_f)() const;
                                                ^
./components/files/configurationmanager.hpp:85:9: error: unknown type name 'FixedPathType'
        FixedPathType mFixedPath;
        ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: data member instantiated with function type 'const boost::filesystem::path &() const'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_function.h:840:45: note: in instantiation of template class 'std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>' requested here
    : public unary_function<_Pair, typename _Pair::first_type>
                                            ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:708:20: note: in instantiation of template class 'std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >' requested here
      _ExtractKey  _M_extract;
                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:117:14: note: in instantiation of template class 'std::tr1::__detail::_Hash_code_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>' requested here
      public __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:112:56: error: reference to function type 'const boost::filesystem::path &() const' cannot have 'const' qualifier
      _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                                                       ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:36:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable_policy.h:512:18: error: reference to function type 'mapped_type' (aka 'const boost::filesystem::path &() const') cannot have 'const' qualifier
      mapped_type&
                 ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:119:14: note: in instantiation of template class 'std::tr1::__detail::_Map_base<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, true, std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true> >' requested here
      public __detail::_Map_base<_Key, _Value, _ExtractKey, __unique_keys,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:356:27: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                   typename _Hashtable::_Hash_code_type) const;
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:44:14: note: in instantiation of template class 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>' requested here
    : public _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:41:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/hashtable.h:360:31: error: no type named '_Hash_code_type' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
                       typename _Hashtable::_Hash_code_type);
                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:61:31: error: no type named 'hasher' in 'std::tr1::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, const boost::filesystem::path &() const>, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::_Select1st<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, std::equal_to<std::basic_string<char> >, std::tr1::hash<std::basic_string<char> >, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>'
      typedef typename _Base::hasher          hasher;
              ~~~~~~~~~~~~~~~~^~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:181:14: note: in instantiation of template class 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>' requested here
    : public __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
             ^
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^
In file included from apps/opencs/view/render/scenewidget.cpp:1:
In file included from /usr/include/OGRE/OgreCamera.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:55:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map:42:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/tr1/unordered_map.h:186:31: error: no type named 'value_type' in 'std::tr1::__unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> >, false>'
      typedef typename _Base::value_type      value_type;
              ~~~~~~~~~~~~~~~~^~~~~~~~~~
./components/files/configurationmanager.hpp:89:32: note: in instantiation of template class 'std::tr1::unordered_map<std::basic_string<char>, const boost::filesystem::path &() const, std::tr1::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, const boost::filesystem::path &() const> > >' requested here
        TokensMappingContainer mTokensMapping;
                               ^

apps/wizard/methodselectionpage.hpp should add these lines:

apps/wizard/methodselectionpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/methodselectionpage.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

(apps/wizard/methodselectionpage.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:36:
apps/opencs/view/world/../../model/doc/../world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:36:
apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/world/refcollection.hpp:12:
apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:12:
apps/opencs/view/world/../../model/doc/../world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/world/../../model/doc/../world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:42:
apps/opencs/view/world/../../model/doc/../world/refcollection.hpp:34:34: error: no template named 'Collection'; did you mean '::CSMWorld::Collection'?
    class RefCollection : public Collection<CellRef>
                                 ^~~~~~~~~~
                                 ::CSMWorld::Collection
apps/opencs/view/world/../../model/doc/../world/collection.hpp:44:11: note: '::CSMWorld::Collection' declared here
    class Collection : public CollectionBase
          ^
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/world/regionmap.cpp:17:
In file included from apps/opencs/view/world/../../model/doc/document.hpp:17:
In file included from apps/opencs/view/world/../../model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/world/../../model/doc/../world/refidcollection.hpp:16:
In file included from apps/opencs/view/world/../../model/doc/../world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/opencs/view/render/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
apps/opencs/view/render/../../model/world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^

apps/opencs/view/world/recordstatusdelegate.hpp should add these lines:
class QObject;

apps/opencs/view/world/recordstatusdelegate.hpp should remove these lines:
- #include <QFont>  // lines 4-4
- #include <QTextOption>  // lines 5-5
- #include "../../model/world/record.hpp"  // lines 7-7
- #include "util.hpp"  // lines 9-9
- namespace CSMDoc { class QFont; }  // lines 11-11
- namespace CSMDoc { class QIcon; }  // lines 12-12

The full include-list for apps/opencs/view/world/recordstatusdelegate.hpp:
#include "datadisplaydelegate.hpp"      // for DataDisplayDelegate, etc
class QObject;
namespace CSMDoc { class QObject; }  // lines 13-13
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 15-15
namespace CSMDoc { namespace CSVWorld { class CommandDelegate; } }  // lines 18-18
---

apps/opencs/view/world/recordstatusdelegate.cpp should add these lines:
class QObject;

apps/opencs/view/world/recordstatusdelegate.cpp should remove these lines:
- #include <string>  // lines 1-1
- #include <vector>  // lines 2-2
- #include "../../model/world/columns.hpp"  // lines 4-4

The full include-list for apps/opencs/view/world/recordstatusdelegate.cpp:
#include "recordstatusdelegate.hpp"
#include "apps/opencs/view/world/datadisplaydelegate.hpp"
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
class QObject;
namespace CSMDoc { class QObject; }  // lines 9-9
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 11-11
---
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/object.cpp:10:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
apps/opencs/view/render/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/render/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
apps/wizard/utils/componentlistwidget.cpp:7:1: error: use of undeclared identifier 'ComponentListWidget'
ComponentListWidget::ComponentListWidget(QWidget *parent) :
^
apps/wizard/utils/componentlistwidget.cpp:19:13: error: use of undeclared identifier 'ComponentListWidget'
QStringList ComponentListWidget::checkedItems()
            ^
apps/wizard/utils/componentlistwidget.cpp:25:6: error: use of undeclared identifier 'ComponentListWidget'
void ComponentListWidget::updateCheckedItems(const QModelIndex &index, int start, int end)
     ^
apps/wizard/utils/componentlistwidget.cpp:25:52: error: unknown type name 'QModelIndex'
void ComponentListWidget::updateCheckedItems(const QModelIndex &index, int start, int end)
                                                   ^
apps/wizard/utils/componentlistwidget.cpp:30:6: error: use of undeclared identifier 'ComponentListWidget'
void ComponentListWidget::updateCheckedItems(QListWidgetItem *item)
     ^
apps/wizard/utils/componentlistwidget.cpp:30:46: error: unknown type name 'QListWidgetItem'
void ComponentListWidget::updateCheckedItems(QListWidgetItem *item)
                                             ^

apps/wizard/utils/componentlistwidget.cpp should add these lines:
#include <QArgument>                    // for SIGNAL, SLOT, emit

apps/wizard/utils/componentlistwidget.cpp should remove these lines:
- #include <QStringList>  // lines 1-1
- class QWidget;  // lines 3-3
- class QWidget;  // lines 5-5

The full include-list for apps/wizard/utils/componentlistwidget.cpp:
#include <QArgument>                    // for SIGNAL, SLOT, emit
---

apps/wizard/intropage.hpp should add these lines:

apps/wizard/intropage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/intropage.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

apps/wizard/intropage.cpp should add these lines:

apps/wizard/intropage.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2
- #include <QPixmap>  // lines 4-4
- class QWidget;  // lines 11-11

The full include-list for apps/wizard/intropage.cpp:
#include "intropage.hpp"
#include <QCharRef>                     // for QLatin1String
#include <QPixmap>                      // for QPixmap
#include "mainwizard.hpp"               // for MainWizard, etc
class QWidget;  // lines 9-9
---

apps/opencs/view/settings/dialog.hpp should add these lines:

apps/opencs/view/settings/dialog.hpp should remove these lines:
- #include <QStandardItem>  // lines 5-5
- #include "resizeablestackedwidget.hpp"  // lines 7-7
- class QStackedWidget;  // lines 15-15
- namespace CSVSettings { class Page; }  // lines 20-20

The full include-list for apps/opencs/view/settings/dialog.hpp:
#include <QArgument>                    // for slots, Q_OBJECT
#include "settingwindow.hpp"            // for SettingWindow
class QCloseEvent;  // lines 10-10
class QListWidget;  // lines 11-11
class QListWidgetItem;  // lines 12-12
class QMainWindow;  // lines 13-13
class QSplitter;  // lines 14-14
class QStandardItemModel;  // lines 16-16
namespace CSVSettings { class ResizeableStackedWidget; }  // lines 21-21
---

(apps/opencs/view/settings/dialog.cpp has correct #includes/fwd-decls)

apps/opencs/view/render/scenewidget.hpp should add these lines:

apps/opencs/view/render/scenewidget.hpp should remove these lines:
- #include <QtCore>  // lines 7-7
- #include <string>  // lines 9-9
- class QFocusEvent;  // lines 23-23
- class QKeyEvent;  // lines 24-24
- class QMouseEvent;  // lines 25-25
- class QPaintEngine;  // lines 26-26
- class QPaintEvent;  // lines 27-27
- class QResizeEvent;  // lines 28-28
- class QWheelEvent;  // lines 29-29

The full include-list for apps/opencs/view/render/scenewidget.hpp:
#include <OgreColourValue.h>            // for ColourValue
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for slots, QPoint, QString, etc
#include <string>                       // for string
#include "lightingbright.hpp"           // for LightingBright
#include "lightingday.hpp"              // for LightingDay
#include "lightingnight.hpp"            // for LightingNight
class QFocusEvent;  // lines 15-15
class QKeyEvent;  // lines 16-16
class QMouseEvent;  // lines 17-17
class QPaintEngine;  // lines 18-18
class QPaintEvent;  // lines 19-19
class QResizeEvent;  // lines 20-20
class QWheelEvent;  // lines 21-21
namespace CSVRender { class Lighting; }  // lines 51-51
namespace CSVRender { class Navigation; }  // lines 52-52
namespace CSVWidget { class SceneToolMode; }  // lines 45-45
namespace CSVWidget { class SceneToolbar; }  // lines 46-46
namespace Ogre { class Camera; }  // lines 33-33
namespace Ogre { class OverlaySystem; }  // lines 34-34
namespace Ogre { class RenderTargetListener; }  // lines 35-35
namespace Ogre { class RenderWindow; }  // lines 37-37
namespace Ogre { class SceneManager; }  // lines 38-38
namespace Ogre { class Viewport; }  // lines 39-39
---

apps/opencs/view/world/regionmap.hpp should add these lines:
class QWidget;

apps/opencs/view/world/regionmap.hpp should remove these lines:
- #include <QTableView>  // lines 4-4
- #include <QtCore>  // lines 6-6
- #include <vector>  // lines 8-8
- namespace CSMDoc { class QContextMenuEvent; }  // lines 19-19
- namespace CSMDoc { class QDropEvent; }  // lines 20-20
- namespace CSMDoc { class QMouseEvent; }  // lines 21-21
- namespace CSMDoc { class QWidget; }  // lines 16-16
- namespace CSMDoc { class QWidget; }  // lines 23-23

The full include-list for apps/opencs/view/world/regionmap.hpp:
#include <QtCore>                       // for QModelIndexList, Q_OBJECT, etc
#include <string>                       // for string
#include "./dragrecordtable.hpp"        // for DragRecordTable
class QWidget;
namespace CSMDoc { class QAction; }  // lines 18-18
namespace CSMDoc { class QContextMenuEvent; }  // lines 13-13
namespace CSMDoc { class QDropEvent; }  // lines 14-14
namespace CSMDoc { class QMouseEvent; }  // lines 15-15
namespace CSMDoc { namespace CSMDoc { class Document; } }  // lines 27-27
namespace CSMDoc { namespace CSMWorld { class UniversalId; } }  // lines 32-32
---

apps/opencs/view/world/regionmap.cpp should add these lines:
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { class TableMimeData; } }

apps/opencs/view/world/regionmap.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 2-2
- #include <qatomic_i386.h>  // lines 3-3
- #include <QContextMenuEvent>  // lines 4-4
- #include <QTableView>  // lines 7-7
- #include <QTableView>  // lines 8-8
- #include <QtGui>  // lines 10-10
- #include <algorithm>  // lines 11-11
- #include <iterator>  // lines 12-12
- #include <iterator>  // lines 13-13
- #include <set>  // lines 14-14
- #include "../../model/doc/document.hpp"  // lines 17-17
- #include "../../model/world/columns.hpp"  // lines 18-18
- #include "../../model/world/commands.hpp"  // lines 19-19
- #include "../../model/world/idtable.hpp"  // lines 21-21
- #include "../../model/world/regionmap.hpp"  // lines 22-22
- #include "../../model/world/tablemimedata.hpp"  // lines 23-23
- #include "../../model/world/universalid.hpp"  // lines 24-24
- #include "apps/opencs/view/world/./dragrecordtable.hpp"  // lines 26-26

The full include-list for apps/opencs/view/world/regionmap.cpp:
#include "regionmap.hpp"
#include <QHeaderView>                  // for QHeaderView
#include <QMenu>                        // for QMenu
#include <QtGui>                        // for QAbstractItemView, etc
#include <sstream>                      // for ostringstream
#include "../../model/world/data.hpp"   // for QModelIndex
#include "apps/opencs/view/world/./dragrecordtable.hpp"
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
namespace CSMDoc { namespace CSMWorld { class TableMimeData; } }
---

apps/opencs/view/render/scenewidget.cpp should add these lines:

apps/opencs/view/render/scenewidget.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <QEvent>  // lines 8-8
- #include <ostream>  // lines 12-12
- #include "GLX/../OgrePrerequisites.h"  // lines 18-18
- #include "OgreColourValue.h"  // lines 20-20
- #include "OgreCommon.h"  // lines 22-22
- #include "OgreMath.h"  // lines 24-24
- #include "OgrePlatform.h"  // lines 26-26
- #include "OgreSceneManager.h"  // lines 28-28
- #include "apps/opencs/view/render/lightingbright.hpp"  // lines 30-30
- #include "apps/opencs/view/render/lightingday.hpp"  // lines 32-32
- #include "apps/opencs/view/render/lightingnight.hpp"  // lines 34-34
- class QPaintEngine;  // lines 42-42

The full include-list for apps/opencs/view/render/scenewidget.cpp:
#include "scenewidget.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreOverlaySystem.h>          // for OverlaySystem
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreRoot.h>                   // for Root
#include <OgreViewport.h>               // for Viewport
#include <stddef.h>                     // for NULL
#include <QResizeEvent>                 // for QMouseEvent, QKeyEvent, etc
#include <QShortcut>                    // for QShortcut
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <utility>                      // for make_pair
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "../widget/scenetoolmode.hpp"  // for SceneToolMode
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreColourValue.h"            // for ColourValue
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgreMath.h"                   // for Degree
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "OgreSceneManager.h"           // for SceneManager, etc
#include "apps/opencs/view/render/lightingbright.hpp"
#include "apps/opencs/view/render/lightingday.hpp"  // for LightingDay
#include "apps/opencs/view/render/lightingnight.hpp"  // for LightingNight
#include "lighting.hpp"                 // for Lighting
#include "navigation.hpp"               // for Navigation
#include "overlaysystem.hpp"            // for OverlaySystem
class QPaintEngine;  // lines 40-40
---

apps/opencs/view/render/object.hpp should add these lines:

apps/opencs/view/render/object.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <string>  // lines 7-7

The full include-list for apps/opencs/view/render/object.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/nifogre/ogrenifloader.hpp>  // for ObjectScenePtr
#include <string>                       // for string
class QModelIndex;  // lines 14-14
namespace CSMWorld { class CellRef; }  // lines 25-25
namespace CSMWorld { class Data; }  // lines 26-26
namespace CSVWorld { class PhysicsSystem; }  // lines 32-32
namespace Ogre { class SceneNode; }  // lines 19-19
---

apps/opencs/view/render/object.cpp should add these lines:

apps/opencs/view/render/object.cpp should remove these lines:
- #include <QtCore>  // lines 6-6
- #include <stdexcept>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include "../../model/world/data.hpp"  // lines 10-10
- #include "../../model/world/ref.hpp"  // lines 11-11
- #include "../../model/world/refidcollection.hpp"  // lines 12-12
- #include "../world/physicssystem.hpp"  // lines 13-13
- #include "OgreMath.h"  // lines 14-14
- #include "OgreMath.h"  // lines 15-15
- #include "OgreNode.h"  // lines 17-17
- #include "OgreQuaternion.h"  // lines 19-19
- #include "OgreSharedPtr.h"  // lines 20-20
- #include "OgreSharedPtr.h"  // lines 21-21
- #include "OgreVector3.h"  // lines 22-22
- #include "OgreVector3.h"  // lines 23-23
- #include "apps/opencs/view/render/../../model/world/columns.hpp"  // lines 24-24
- #include "apps/opencs/view/render/../../model/world/columns.hpp"  // lines 25-25
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 26-26
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 27-27
- #include "apps/opencs/view/render/../../model/world/refcollection.hpp"  // lines 28-28
- #include "apps/opencs/view/render/../../model/world/refcollection.hpp"  // lines 29-29
- #include "components/esm/defs.hpp"  // lines 30-30
- #include "components/esm/defs.hpp"  // lines 31-31
- #include "components/nifogre/ogrenifloader.hpp"  // lines 32-32
- #include "components/nifogre/ogrenifloader.hpp"  // lines 33-33
- namespace Ogre { class MovableObject; }  // lines 40-40

The full include-list for apps/opencs/view/render/object.cpp:
#include "object.hpp"
#include <OgreEntity.h>                 // for Entity
#include <OgreSceneManager.h>           // for SceneManager, etc
#include <OgreSceneNode.h>              // for SceneNode, etc
#include <QtCore>                       // for QModelIndex
#include "OgreNode.h"                   // for Node::ChildNodeIterator
#include "OgreQuaternion.h"             // for Quaternion
#include "elements.hpp"                 // for Elements::Element_Reference
namespace Ogre { class MovableObject; }  // lines 38-38
---
In file included from apps/wizard/languageselectionpage.cpp:3:
apps/wizard/languageselectionpage.hpp:8:10: fatal error: 'ui_languageselectionpage.h' file not found
#include "ui_languageselectionpage.h"
         ^
In file included from apps/wizard/installationpage.cpp:5:
apps/wizard/installationpage.hpp:10:10: fatal error: 'ui_installationpage.h' file not found
#include "ui_installationpage.h"
         ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:36:
apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/world/refcollection.hpp:12:
apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
apps/opencs/view/render/../../model/world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/previewwidget.cpp:6:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
apps/opencs/view/render/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/render/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/render/previewwidget.hpp should add these lines:

apps/opencs/view/render/previewwidget.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- #include <string>  // lines 6-6
- #include <string>  // lines 7-7
- namespace CSMDoc { class QWidget; }  // lines 16-16

The full include-list for apps/opencs/view/render/previewwidget.hpp:
#include <QArgument>                    // for Q_OBJECT, signals, slots
#include "navigationorbit.hpp"          // for NavigationOrbit
#include "object.hpp"                   // for Object
#include "scenewidget.hpp"              // for SceneWidget
namespace CSMDoc { class QModelIndex; }  // lines 15-15
namespace CSMDoc { class QWidget; }  // lines 13-13
namespace CSMDoc { namespace CSMWorld { class Data; } }  // lines 21-21
---
In file included from apps/opencs/view/render/mousestate.cpp:16:
apps/opencs/view/render/../world/physicssystem.hpp:10:5: error: expected '{'
    class Camera;
    ^
apps/opencs/view/render/../world/physicssystem.hpp:13:1: error: expected unqualified-id
{
^
apps/opencs/view/render/../world/physicssystem.hpp:28:5: error: expected '{'
    class SceneWidget;
    ^
apps/opencs/view/render/../world/physicssystem.hpp:29:1: error: extraneous closing brace ('}')
}
^
apps/opencs/view/render/../world/physicssystem.hpp:38:43: error: use of undeclared identifier 'CSVRender'
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> mSceneWidgets;
                                          ^
apps/opencs/view/render/../world/physicssystem.hpp:38:67: error: expected expression
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> mSceneWidgets;
                                                                  ^
apps/opencs/view/render/../world/physicssystem.hpp:47:64: error: use of undeclared identifier 'CSVRender'
            void addSceneManager(Ogre::SceneManager *sceneMgr, CSVRender::SceneWidget * scene);
                                                               ^

apps/opencs/view/render/previewwidget.cpp should add these lines:
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { namespace CSMWorld { class IdTable; } }

apps/opencs/view/render/previewwidget.cpp should remove these lines:
- #include <OgreSceneManager.h>  // lines 2-2
- #include <QtCore>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 3-3
- #include "../../model/world/idtable.hpp"  // lines 7-7
- #include "apps/opencs/view/render/../../model/world/columns.hpp"  // lines 8-8
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 9-9
- #include "apps/opencs/view/render/../../model/world/universalid.hpp"  // lines 10-10
- #include "apps/opencs/view/render/navigationorbit.hpp"  // lines 11-11
- #include "apps/opencs/view/render/object.hpp"  // lines 12-12
- namespace CSMDoc { namespace CSVWorld { class PhysicsSystem; } }  // lines 18-18

The full include-list for apps/opencs/view/render/previewwidget.cpp:
#include "previewwidget.hpp"
#include "../../model/world/data.hpp"   // for QModelIndex
#include "apps/opencs/view/render/scenewidget.hpp"  // for SceneWidget
namespace CSMDoc { class QAbstractItemModel; }
namespace CSMDoc { class QWidget; }  // lines 16-16
namespace CSMDoc { namespace CSMWorld { class IdTable; } }
---
apps/opencs/view/render/../world/physicssystem.hpp:82:43: error: use of undeclared identifier 'CSVRender'
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> sceneWidgets();
                                          ^
apps/opencs/view/render/../world/physicssystem.hpp:82:67: error: expected expression
            std::map<Ogre::SceneManager*, CSVRender::SceneWidget *> sceneWidgets();
                                                                  ^
In file included from apps/opencs/view/render/mousestate.cpp:32:
In file included from ./apps/opencs/model/doc/../world/data.hpp:36:
apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/mousestate.cpp:32:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/world/refcollection.hpp:12:
apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/render/mousestate.cpp:32:
In file included from ./apps/opencs/model/doc/../world/data.hpp:42:
apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
apps/opencs/view/render/../../model/world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^
In file included from apps/opencs/view/render/mousestate.cpp:32:
In file included from ./apps/opencs/model/doc/../world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/wizard/languageselectionpage.hpp should add these lines:

apps/wizard/languageselectionpage.hpp should remove these lines:
- #include <QArgument>  // lines 5-5
- class QWidget;  // lines 12-12

The full include-list for apps/wizard/languageselectionpage.hpp:
#include <QArgument>                    // for Q_OBJECT
#include <QWizardPage>                  // for QWizardPage
class QWidget;  // lines 10-10
namespace Wizard { class MainWizard; }  // lines 17-17
---

(apps/wizard/languageselectionpage.cpp has correct #includes/fwd-decls)

apps/wizard/installationpage.hpp should add these lines:
#include "apps/wizard/unshield/unshieldworker.hpp"  // for Component

apps/wizard/installationpage.hpp should remove these lines:
- #include <stdbool.h>  // lines 5-5
- #include <QtCore>  // lines 8-8
- class IniSettings;  // lines 18-18
- class QThread;  // lines 14-14
- class QWidget;  // lines 15-15

The full include-list for apps/wizard/installationpage.hpp:
#include <stdbool.h>                    // for bool
#include <QWizardPage>                  // for QWizardPage
#include <QtCore>                       // for QString, Q_OBJECT, slots
#include "apps/wizard/unshield/unshieldworker.hpp"  // for Component
class MainWizard;  // lines 19-19
class QWidget;  // lines 12-12
class UnshieldWorker;  // lines 20-20
---

apps/wizard/installationpage.cpp should add these lines:

apps/wizard/installationpage.cpp should remove these lines:
- #include <QMessageBox>  // lines 1-1
- #include <QTextCodec>  // lines 2-2
- #include "apps/wizard/unshield/unshieldworker.hpp"  // lines 4-4
- #include "mainwizard.hpp"  // lines 6-6
- class QWidget;  // lines 8-8

The full include-list for apps/wizard/installationpage.cpp:
#include "installationpage.hpp"
---
In file included from apps/opencs/view/render/editmode.cpp:8:
apps/opencs/view/render/worldspacewidget.hpp:74:24: error: no type named 'Navigation1st' in namespace 'CSVRender'; did you mean 'Navigation'?
            CSVRender::Navigation1st m1st;
            ~~~~~~~~~~~^~~~~~~~~~~~~
                       Navigation
apps/opencs/view/render/scenewidget.hpp:52:11: note: 'Navigation' declared here
    class Navigation;
          ^
In file included from apps/opencs/view/render/editmode.cpp:8:
apps/opencs/view/render/worldspacewidget.hpp:74:38: error: field type 'CSVRender::Navigation' is an abstract class
            CSVRender::Navigation1st m1st;
                                     ^
apps/opencs/view/render/navigation.hpp:29:26: note: unimplemented pure virtual method 'activate' in 'Navigation'
            virtual bool activate (Ogre::Camera *camera) = 0;
                         ^
apps/opencs/view/render/navigation.hpp:32:26: note: unimplemented pure virtual method 'wheelMoved' in 'Navigation'
            virtual bool wheelMoved (int delta) = 0;
                         ^
apps/opencs/view/render/navigation.hpp:35:26: note: unimplemented pure virtual method 'mouseMoved' in 'Navigation'
            virtual bool mouseMoved (const QPoint& delta, int mode) = 0;
                         ^
apps/opencs/view/render/navigation.hpp:39:26: note: unimplemented pure virtual method 'handleMovementKeys' in 'Navigation'
            virtual bool handleMovementKeys (int vertical, int horizontal) = 0;
                         ^
apps/opencs/view/render/navigation.hpp:42:26: note: unimplemented pure virtual method 'handleRollKeys' in 'Navigation'
            virtual bool handleRollKeys (int delta) = 0;
                         ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:36:
apps/opencs/view/render/../../model/world/cell.hpp:19:31: error: expected class name
    struct Cell : public ESM::Cell
                              ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
In file included from apps/opencs/view/render/../../model/world/refcollection.hpp:12:
apps/opencs/view/render/../../model/world/ref.hpp:9:5: error: expected '{'
    class Cell;
    ^
apps/opencs/view/render/../../model/world/ref.hpp:19:1: error: extraneous closing brace ('}')
}
^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:42:
apps/opencs/view/render/../../model/world/refcollection.hpp:34:34: error: unknown template name 'Collection'
    class RefCollection : public Collection<CellRef>
                                 ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:13: error: unknown type name 'Collection'
            Collection<Cell>& mCells;
            ^
apps/opencs/view/render/../../model/world/refcollection.hpp:36:23: error: expected member name or ';' after declaration specifiers
            Collection<Cell>& mCells;
            ~~~~~~~~~~^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:28: error: unknown type name 'Collection'
            RefCollection (Collection<Cell>& cells)
                           ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:38: error: expected ')'
            RefCollection (Collection<Cell>& cells)
                                     ^
apps/opencs/view/render/../../model/world/refcollection.hpp:41:27: note: to match this '('
            RefCollection (Collection<Cell>& cells)
                          ^
apps/opencs/view/render/../../model/world/refcollection.hpp:42:25: error: use of undeclared identifier 'cells'
              : mCells (cells), mNextId (0)
                        ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:4:
./components/esm/esmwriter.hpp:143:9: error: unknown type name 'Header'; did you mean '::ESM::Header'?
        Header mHeader;
        ^~~~~~
        ::ESM::Header
./components/esm/loadtes3.hpp:22:12: note: '::ESM::Header' declared here
    struct Header
           ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:6:
./components/esm/loadalch.hpp:31:5: error: unknown type name 'EffectList'; did you mean '::ESM::EffectList'?
    EffectList mEffects;
    ^~~~~~~~~~
    ::ESM::EffectList
./components/esm/effectlist.hpp:32:12: note: '::ESM::EffectList' declared here
    struct EffectList
           ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:11:
./components/esm/loadcont.hpp:22:5: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
    NAME32 mItem;
    ^~~~~~
    ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:48:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32  mId;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
In file included from ./components/esm/loadcrea.hpp:8:
./components/esm/aipackage.hpp:54:9: error: unknown type name 'NAME32'; did you mean '::ESM::NAME32'?
        NAME32 mName;
        ^~~~~~
        ::ESM::NAME32
./components/esm/esmcommon.hpp:52:20: note: '::ESM::NAME32' declared here
typedef NAME_T<32> NAME32;
                   ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:12:
./components/esm/loadcrea.hpp:89:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:84:31: error: use of undeclared identifier 'Skill'; did you mean '::ESM::Skill'?
        unsigned char mSkills[Skill::Length];
                              ^~~~~
                              ::ESM::Skill
./components/esm/loadskil.hpp:23:8: note: '::ESM::Skill' declared here
struct Skill
       ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:104:9: error: unknown type name 'Position'; did you mean '::ESM::Position'?
        Position    mPos;
        ^~~~~~~~
        ::ESM::Position
./components/esm/defs.hpp:36:8: note: '::ESM::Position' declared here
struct Position
       ^

apps/opencs/view/render/editmode.hpp should add these lines:

apps/opencs/view/render/editmode.hpp should remove these lines:
- #include <QIcon>  // lines 5-5
- #include <QtCore>  // lines 7-7
- class QWidget;  // lines 17-17
- namespace CSVWidget { class SceneToolbar; }  // lines 19-19

The full include-list for apps/opencs/view/render/editmode.hpp:
#include <QIcon>                        // for QIcon
#include <QtCore>                       // for QString, Q_OBJECT
#include "../widget/modebutton.hpp"     // for ModeButton
class QWidget;  // lines 12-12
namespace CSVRender { class WorldspaceWidget; }  // lines 24-24
namespace CSVWidget { class SceneToolbar; }  // lines 14-14
---

apps/opencs/view/render/editmode.cpp should add these lines:

apps/opencs/view/render/editmode.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2
- #include <QCharRef>  // lines 3-3
- #include "apps/opencs/view/render/../widget/modebutton.hpp"  // lines 6-6
- class QWidget;  // lines 15-15
- namespace CSVWidget { class SceneToolbar; }  // lines 17-17

The full include-list for apps/opencs/view/render/editmode.cpp:
#include "editmode.hpp"
#include "apps/opencs/view/render/../widget/modebutton.hpp"
#include "worldspacewidget.hpp"         // for WorldspaceWidget
class QWidget;  // lines 10-10
namespace CSVWidget { class SceneToolbar; }  // lines 12-12
---
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
In file included from apps/opencs/view/render/../../model/world/refiddata.hpp:19:
./components/esm/loadnpc.hpp:120:5: error: unknown type name 'SpellList'; did you mean '::ESM::SpellList'?
    SpellList mSpells;
    ^~~~~~~~~
    ::ESM::SpellList
./components/esm/spelllist.hpp:15:12: note: '::ESM::SpellList' declared here
    struct SpellList
           ^
In file included from apps/opencs/view/render/cell.cpp:16:
In file included from apps/opencs/view/render/../../model/world/data.hpp:43:
In file included from apps/opencs/view/render/../../model/world/refidcollection.hpp:16:
apps/opencs/view/render/../../model/world/refiddata.hpp:50:23: error: unknown type name 'RecordBase'; did you mean '::CSMWorld::RecordBase'?
        virtual const RecordBase& getRecord (int index) const = 0;
                      ^~~~~~~~~~
                      ::CSMWorld::RecordBase
apps/opencs/view/render/../../model/world/collectionbase.hpp:15:12: note: '::CSMWorld::RecordBase' declared here
    struct RecordBase;
           ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

apps/opencs/view/render/mousestate.hpp should add these lines:
namespace CSMDoc { namespace Ogre { class Camera; } }

apps/opencs/view/render/mousestate.hpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <map>  // lines 7-7
- #include <string>  // lines 12-12
- #include <utility>  // lines 9-9
- #include <utility>  // lines 13-13
- namespace CSMDoc { class Camera; }  // lines 18-18

The full include-list for apps/opencs/view/render/mousestate.hpp:
#include <QPoint>                       // for QPoint
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
namespace CSMDoc { class QElapsedTimer; }  // lines 15-15
namespace CSMDoc { class QMouseEvent; }  // lines 16-16
namespace CSMDoc { class QWheelEvent; }  // lines 17-17
namespace CSMDoc { namespace CSMWorld { class IdTable; } }  // lines 32-32
namespace CSMDoc { namespace CSVRender { class WorldspaceWidget; } }  // lines 36-36
namespace CSMDoc { namespace CSVWorld { class PhysicsSystem; } }  // lines 28-28
namespace CSMDoc { namespace Ogre { class Camera; } }
namespace CSMDoc { namespace Ogre { class Plane; } }  // lines 22-22
namespace CSMDoc { namespace Ogre { class SceneManager; } }  // lines 23-23
namespace CSMDoc { namespace Ogre { class Viewport; } }  // lines 24-24
---

apps/opencs/view/render/mousestate.cpp should add these lines:
#include <utility>                      // for pair
#include "apps/opencs/view/render/../../model/world/../doc/../world/data.hpp"
namespace CSMDoc { namespace CSMWorld { class RefCollection; } }
namespace CSMDoc { namespace Ogre { class Camera; } }

apps/opencs/view/render/mousestate.cpp should remove these lines:
- #include <OgreMeshManager.h>  // lines 1-1
- #include <OgreSceneManager.h>  // lines 2-2
- #include <OgreSceneNode.h>  // lines 3-3
- #include <stdint.h>  // lines 4-4
- #include <stdint.h>  // lines 5-5
- #include <QMouseEvent>  // lines 6-6
- #include <QObject>  // lines 7-7
- #include <QtCore>  // lines 9-9
- #include <QtGui>  // lines 10-10
- #include <QtGui>  // lines 11-11
- #include <map>  // lines 12-12
- #include <map>  // lines 13-13
- #include "../../model/world/idtable.hpp"  // lines 15-15
- #include "../world/physicssystem.hpp"  // lines 16-16
- #include "GLX/../OgrePrerequisites.h"  // lines 17-17
- #include "OgreCamera.h"  // lines 18-18
- #include "OgreCamera.h"  // lines 19-19
- #include "OgrePlane.h"  // lines 20-20
- #include "OgrePlane.h"  // lines 21-21
- #include "OgreRay.h"  // lines 22-22
- #include "OgreRay.h"  // lines 23-23
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "OgreResourceGroupManager.h"  // lines 25-25
- #include "OgreSharedPtr.h"  // lines 26-26
- #include "OgreSharedPtr.h"  // lines 27-27
- #include "OgreVector3.h"  // lines 28-28
- #include "OgreVector3.h"  // lines 29-29
- #include "OgreViewport.h"  // lines 30-30
- #include "OgreViewport.h"  // lines 31-31
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 32-32
- #include "apps/opencs/model/doc/../world/data.hpp"  // lines 33-33
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 34-34
- #include "apps/opencs/model/doc/../world/universalid.hpp"  // lines 35-35
- #include "apps/opencs/model/doc/document.hpp"  // lines 37-37
- #include "apps/opencs/view/render/../../model/world/columns.hpp"  // lines 38-38
- #include "apps/opencs/view/render/../../model/world/columns.hpp"  // lines 39-39
- #include "apps/opencs/view/render/../../model/world/refcollection.hpp"  // lines 40-40
- #include "apps/opencs/view/render/../../model/world/refcollection.hpp"  // lines 41-41
- #include "apps/opencs/view/render/scenewidget.hpp"  // lines 42-42
- #include "apps/opencs/view/render/scenewidget.hpp"  // lines 43-43
- #include "elements.hpp"  // lines 44-44

The full include-list for apps/opencs/view/render/mousestate.cpp:
#include "mousestate.hpp"
#include <QtCore>                       // for QString
#include <utility>                      // for pair
#include "apps/opencs/model/doc/document.hpp"  // for Document
#include "apps/opencs/view/render/../../model/world/../doc/../world/data.hpp"
#include "worldspacewidget.hpp"         // for WorldspaceWidget
namespace CSMDoc { namespace CSMWorld { class RefCollection; } }
namespace CSMDoc { namespace Ogre { class Camera; } }
---

apps/opencs/view/render/cell.hpp should add these lines:

apps/opencs/view/render/cell.hpp should remove these lines:
- #include <boost/shared_ptr.hpp>  // lines 5-5
- #include <components/terrain/terraingrid.hpp>  // lines 12-12
- #include <map>  // lines 7-7
- #include "object.hpp"  // lines 15-15
- namespace CSVRender { class Object; }  // lines 19-19

The full include-list for apps/opencs/view/render/cell.hpp:
#include <OgreVector3.h>                // for Vector3
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <memory>                       // for auto_ptr
#include <string>                       // for string
class QModelIndex;  // lines 17-17
namespace CSMWorld { class Data; }  // lines 33-33
namespace CSVWorld { class PhysicsSystem; }  // lines 38-38
namespace Ogre { class SceneManager; }  // lines 27-27
namespace Ogre { class SceneNode; }  // lines 28-28
namespace Terrain { class TerrainGrid; }  // lines 22-22
---

apps/opencs/view/render/cell.cpp should add these lines:

apps/opencs/view/render/cell.cpp should remove these lines:
- #include <stddef.h>  // lines 7-7
- #include <QtCore>  // lines 9-9
- #include <limits>  // lines 10-10
- #include <limits>  // lines 11-11
- #include <utility>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../../model/world/columns.hpp"  // lines 15-15
- #include "../../model/world/data.hpp"  // lines 16-16
- #include "../../model/world/idtable.hpp"  // lines 17-17
- #include "../world/physicssystem.hpp"  // lines 18-18
- #include "apps/opencs/view/render/../../model/world/../doc/../world/universalid.hpp"  // lines 19-19
- #include "apps/opencs/view/render/../../model/world/../doc/../world/universalid.hpp"  // lines 20-20
- #include "apps/opencs/view/render/../../model/world/idcollection.hpp"  // lines 21-21
- #include "apps/opencs/view/render/../../model/world/idcollection.hpp"  // lines 22-22
- #include "apps/opencs/view/render/../../model/world/land.hpp"  // lines 23-23
- #include "apps/opencs/view/render/../../model/world/land.hpp"  // lines 24-24
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 25-25
- #include "apps/opencs/view/render/../../model/world/record.hpp"  // lines 26-26
- #include "apps/opencs/view/render/object.hpp"  // lines 27-27
- #include "apps/opencs/view/render/object.hpp"  // lines 28-28
- #include "components/terrain/defs.hpp"  // lines 30-30
- #include "components/terrain/defs.hpp"  // lines 31-31
- #include "components/terrain/terraingrid.hpp"  // lines 32-32
- #include "components/terrain/terraingrid.hpp"  // lines 33-33
- #include "elements.hpp"  // lines 34-34
- #include "terrainstorage.hpp"  // lines 35-35
- namespace Ogre { class Vector3; }  // lines 40-40

The full include-list for apps/opencs/view/render/cell.cpp:
#include "cell.hpp"
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <stddef.h>                     // for NULL
#include <QtCore>                       // for QModelIndex
#include <components/esm/loadland.hpp>  // for Land, Land::LAND_SIZE, etc
#include <components/misc/stringops.hpp>  // for StringUtils
namespace Ogre { class Vector3; }  // lines 38-38
---
