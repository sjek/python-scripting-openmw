/home/showard/openmw/openmw/

(components/compiler/opcodes.hpp has correct #includes/fwd-decls)

(components/compiler/opcodes.cpp has correct #includes/fwd-decls)

(components/files/androidpath.hpp has correct #includes/fwd-decls)

(components/files/androidpath.cpp has correct #includes/fwd-decls)

(components/esm/attr.hpp has correct #includes/fwd-decls)

(components/esm/attr.cpp has correct #includes/fwd-decls)

(components/esm/loadgmst.hpp has correct #includes/fwd-decls)

(components/esm/loadgmst.cpp has correct #includes/fwd-decls)

(components/files/windowspath.hpp has correct #includes/fwd-decls)

(components/files/windowspath.cpp has correct #includes/fwd-decls)

(components/compiler/junkparser.hpp has correct #includes/fwd-decls)

(components/compiler/junkparser.cpp has correct #includes/fwd-decls)

(components/compiler/scriptparser.hpp has correct #includes/fwd-decls)

(components/compiler/scriptparser.cpp has correct #includes/fwd-decls)

(components/compiler/literals.hpp has correct #includes/fwd-decls)

(components/compiler/literals.cpp has correct #includes/fwd-decls)

(components/files/macospath.hpp has correct #includes/fwd-decls)

(components/files/macospath.cpp has correct #includes/fwd-decls)

(components/compiler/extensions0.hpp has correct #includes/fwd-decls)

(components/compiler/extensions0.cpp has correct #includes/fwd-decls)
In file included from components/esm/doorstate.cpp:1:
In file included from components/esm/objectstate.hpp:4:
In file included from components/esm/cellref.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/compiler/skipparser.hpp has correct #includes/fwd-decls)

(components/compiler/skipparser.cpp has correct #includes/fwd-decls)
In file included from components/esm/creaturestate.cpp:2:
In file included from components/esm/creaturestats.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:61:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/compiler/exprparser.hpp has correct #includes/fwd-decls)

(components/compiler/exprparser.cpp has correct #includes/fwd-decls)

(extern/oics/ICSChannel.h has correct #includes/fwd-decls)

(extern/oics/ICSChannel.cpp has correct #includes/fwd-decls)

(components/esm/cellstate.hpp has correct #includes/fwd-decls)

(components/esm/cellstate.cpp has correct #includes/fwd-decls)

(components/esm/locals.hpp has correct #includes/fwd-decls)

(components/esm/locals.cpp has correct #includes/fwd-decls)

(components/esm/loadligh.hpp has correct #includes/fwd-decls)

(components/esm/loadligh.cpp has correct #includes/fwd-decls)

(components/esm/doorstate.hpp has correct #includes/fwd-decls)

(components/esm/doorstate.cpp has correct #includes/fwd-decls)

(components/esm/custommarkerstate.hpp has correct #includes/fwd-decls)

(components/esm/custommarkerstate.cpp has correct #includes/fwd-decls)

(components/esm/cellref.hpp has correct #includes/fwd-decls)

(components/esm/quickkeys.hpp has correct #includes/fwd-decls)

(components/esm/loadregn.hpp has correct #includes/fwd-decls)

(components/esm/loadappa.hpp has correct #includes/fwd-decls)

(components/esm/quickkeys.cpp has correct #includes/fwd-decls)

(components/esm/cellref.cpp has correct #includes/fwd-decls)

(components/esm/loadregn.cpp has correct #includes/fwd-decls)

(components/esm/loadappa.cpp has correct #includes/fwd-decls)

(components/esm/loadspel.hpp has correct #includes/fwd-decls)

(components/esm/loadspel.cpp has correct #includes/fwd-decls)
components/esm/esmreader.cpp:14:17: error: expected namespace name
using namespace Misc;
                ^

(components/esm/effectlist.hpp has correct #includes/fwd-decls)

(components/esm/effectlist.cpp has correct #includes/fwd-decls)

(components/esm/loaddial.hpp has correct #includes/fwd-decls)

(components/esm/loaddial.cpp has correct #includes/fwd-decls)

(components/esm/loadcell.hpp has correct #includes/fwd-decls)

(components/esm/loadcell.cpp has correct #includes/fwd-decls)

(components/esm/creaturestate.hpp has correct #includes/fwd-decls)

(components/esm/creaturestate.cpp has correct #includes/fwd-decls)

(extern/oics/ICSInputControlSystem_joystick.cpp has correct #includes/fwd-decls)

(components/interpreter/installopcodes.hpp has correct #includes/fwd-decls)

(components/interpreter/installopcodes.cpp has correct #includes/fwd-decls)

(components/compiler/locals.hpp has correct #includes/fwd-decls)

(components/compiler/locals.cpp has correct #includes/fwd-decls)

(components/compiler/streamerrorhandler.hpp has correct #includes/fwd-decls)

(components/compiler/streamerrorhandler.cpp has correct #includes/fwd-decls)

(components/esm/loadinfo.hpp has correct #includes/fwd-decls)

(components/translation/translation.hpp has correct #includes/fwd-decls)

(components/compiler/declarationparser.hpp has correct #includes/fwd-decls)

(components/esm/loadinfo.cpp has correct #includes/fwd-decls)

(components/translation/translation.cpp has correct #includes/fwd-decls)

(components/compiler/declarationparser.cpp has correct #includes/fwd-decls)

components/esm/esmreader.hpp should add these lines:
#include <sys/types.h>                  // for int64_t

components/esm/esmreader.hpp should remove these lines:

The full include-list for components/esm/esmreader.hpp:
#include <OgreDataStream.h>             // for DataStream, DataStreamPtr
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint32_t, uint64_t
#include <sys/types.h>                  // for int64_t
#include <cassert>                      // for assert
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for string, char_traits
#include <vector>                       // for vector
#include "OgreSharedPtr.h"              // for SharedPtr
#include "esmcommon.hpp"                // for ESM_Context, NAME, NAME256, etc
#include "loadtes3.hpp"                 // for Header, Header::Data
namespace ToUTF8 { class Utf8Encoder; }  // lines 16-16
---

(components/compiler/extensions.hpp has correct #includes/fwd-decls)

(components/esm/esmreader.cpp has correct #includes/fwd-decls)

(components/compiler/extensions.cpp has correct #includes/fwd-decls)

(extern/oics/tinyxml.h has correct #includes/fwd-decls)

(extern/oics/tinyxml.cpp has correct #includes/fwd-decls)
components/interpreter/interpreter.cpp:124:28: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
        std::ostringstream error;
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^
components/interpreter/interpreter.cpp:133:28: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
        std::ostringstream error;
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^

components/contentselector/model/modelitem.hpp should add these lines:

components/contentselector/model/modelitem.hpp should remove these lines:
- #include <QList>  // lines 4-4
- #include <QMimeData>  // lines 5-5

The full include-list for components/contentselector/model/modelitem.hpp:
#include <QtCore>                       // for QList, QMimeData, QString, etc
---

components/contentselector/model/modelitem.cpp should add these lines:
#include <QList>                        // for QList
#include <QMimeData>                    // for QMimeData

components/contentselector/model/modelitem.cpp should remove these lines:

The full include-list for components/contentselector/model/modelitem.cpp:
#include "modelitem.hpp"
#include <QList>                        // for QList
#include <QMimeData>                    // for QMimeData
---

(extern/oics/tinyxmlparser.cpp has correct #includes/fwd-decls)

(components/compiler/quickfileparser.hpp has correct #includes/fwd-decls)

(components/compiler/quickfileparser.cpp has correct #includes/fwd-decls)

(components/interpreter/interpreter.hpp has correct #includes/fwd-decls)

components/interpreter/interpreter.cpp should add these lines:

components/interpreter/interpreter.cpp should remove these lines:
- #include <stdexcept>  // lines 4-4

The full include-list for components/interpreter/interpreter.cpp:
#include "interpreter.hpp"
#include <cassert>                      // for assert
#include <iostream>                     // for basic_ostringstream, etc
#include <utility>                      // for make_pair, pair
#include "components/interpreter/runtime.hpp"  // for Runtime
#include "components/interpreter/types.hpp"  // for Type_Code
#include "opcodes.hpp"                  // for Opcode1, Opcode2, Opcode0
namespace Interpreter { class Context; }  // lines 12-12
---

(components/compiler/fileparser.hpp has correct #includes/fwd-decls)

(components/compiler/fileparser.cpp has correct #includes/fwd-decls)

(extern/oics/ICSControl.h has correct #includes/fwd-decls)

(extern/oics/ICSControl.cpp has correct #includes/fwd-decls)

(components/compiler/output.hpp has correct #includes/fwd-decls)

(components/compiler/output.cpp has correct #includes/fwd-decls)

(components/files/multidircollection.hpp has correct #includes/fwd-decls)

(components/files/multidircollection.cpp has correct #includes/fwd-decls)
In file included from components/esm/globalscript.cpp:2:
In file included from components/esm/locals.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/esm/globalscript.hpp has correct #includes/fwd-decls)

(components/esm/globalscript.cpp has correct #includes/fwd-decls)

(components/esm/globalmap.hpp has correct #includes/fwd-decls)

(components/esm/globalmap.cpp has correct #includes/fwd-decls)

(extern/oics/tinyxmlerror.cpp has correct #includes/fwd-decls)

(components/esm/loadlock.hpp has correct #includes/fwd-decls)

(components/esm/loadlock.cpp has correct #includes/fwd-decls)

(components/esm/filter.hpp has correct #includes/fwd-decls)

(components/esm/filter.cpp has correct #includes/fwd-decls)

(components/esm/esmwriter.hpp has correct #includes/fwd-decls)

(components/esm/esmwriter.cpp has correct #includes/fwd-decls)

(components/compiler/stringparser.hpp has correct #includes/fwd-decls)

(components/compiler/stringparser.cpp has correct #includes/fwd-decls)

(components/esm/fogstate.hpp has correct #includes/fwd-decls)

(components/esm/loaddoor.hpp has correct #includes/fwd-decls)

(components/esm/loaddoor.cpp has correct #includes/fwd-decls)

(components/esm/loadsscr.hpp has correct #includes/fwd-decls)

(components/esm/fogstate.cpp has correct #includes/fwd-decls)

(components/esm/loadarmo.hpp has correct #includes/fwd-decls)

(components/esm/loadsscr.cpp has correct #includes/fwd-decls)

(components/esm/loadarmo.cpp has correct #includes/fwd-decls)

(components/esm/projectilestate.hpp has correct #includes/fwd-decls)

(components/esm/projectilestate.cpp has correct #includes/fwd-decls)

(components/esm/loadscpt.hpp has correct #includes/fwd-decls)

(components/esm/loadscpt.cpp has correct #includes/fwd-decls)

(components/esm/loadclas.hpp has correct #includes/fwd-decls)

(components/esm/loadclas.cpp has correct #includes/fwd-decls)

(components/esm/spelllist.hpp has correct #includes/fwd-decls)

(components/esm/spelllist.cpp has correct #includes/fwd-decls)

(components/compiler/discardparser.hpp has correct #includes/fwd-decls)

(components/compiler/discardparser.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/model/moc_modelitem.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(extern/oics/tinystr.h has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/model/moc_esmfile.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(extern/oics/tinystr.cpp has correct #includes/fwd-decls)

(components/esm/dialoguestate.hpp has correct #includes/fwd-decls)

(components/esm/dialoguestate.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/contentselector/view/moc_combobox.cxx'
error: no input files
error: no such file or directory: 'build-include/components/contentselector/model/moc_naturalsort.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/contentselector/view/moc_contentselector.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/contentselector/model/moc_contentmodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/interpreter/runtime.hpp has correct #includes/fwd-decls)

(components/interpreter/runtime.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/components/config/moc_gamesettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/contentselector/model/moc_loadordererror.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/process/moc_processinvoker.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/config/moc_launchersettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/components/config/moc_settingsbase.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from components/widgets/numericeditbox.cpp:10:
components/widgets/numericeditbox.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/compiler/nullerrorhandler.hpp has correct #includes/fwd-decls)

(components/compiler/nullerrorhandler.cpp has correct #includes/fwd-decls)

(components/esm/loadingr.hpp has correct #includes/fwd-decls)

(components/esm/loadingr.cpp has correct #includes/fwd-decls)

(components/compiler/generator.hpp has correct #includes/fwd-decls)

(components/compiler/generator.cpp has correct #includes/fwd-decls)

(components/compiler/parser.hpp has correct #includes/fwd-decls)

(components/compiler/parser.cpp has correct #includes/fwd-decls)
components/interpreter/defines.cpp:33:28: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
        std::ostringstream retval;
                           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^
In file included from components/nifogre/material.cpp:5:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
In file included from components/esm/inventorystate.cpp:2:
In file included from components/esm/cellref.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
./extern/shiny/Main/PropertyBase.hpp:198:34:                      - this->_M_impl._M_start); } 
warning                      ^: 
expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note:                 if (typeid(T).name() == typeid(*value).name())in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here

                                               ^
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
./extern/shiny/Main/PropertyBase.hppnamespace ESM { class Variant; }:
205                      ^:
14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from components/esm/player.cpp:2:
In file included from components/esm/cellid.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

components/widgets/numericeditbox.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

components/widgets/numericeditbox.hpp should remove these lines:

The full include-list for components/widgets/numericeditbox.hpp:
#include <MyGUI_EditBox.h>              // for EditBox
#include <limits>                       // for numeric_limits
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
namespace MyGUI { class Widget; }  // lines 11-11
---

components/widgets/numericeditbox.cpp should add these lines:

components/widgets/numericeditbox.cpp should remove these lines:
- #include <algorithm>  // lines 2-2
- #include <sstream>  // lines 3-3
- #include "MyGUI_EventPair.h"  // lines 6-6
- #include "MyGUI_StringUtility.h"  // lines 7-7
- #include "MyGUI_WidgetInput.h"  // lines 9-9

The full include-list for components/widgets/numericeditbox.cpp:
#include "numericeditbox.hpp"
#include <boost/lexical_cast.hpp>       // for bad_lexical_cast
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_UString.h"              // for UString
namespace MyGUI { class Widget; }  // lines 12-12
---

(components/esm/loadmgef.hpp has correct #includes/fwd-decls)

(components/interpreter/defines.hpp has correct #includes/fwd-decls)

(components/interpreter/defines.cpp has correct #includes/fwd-decls)

(components/esm/loadmgef.cpp has correct #includes/fwd-decls)

(components/esm/loadprob.hpp has correct #includes/fwd-decls)

(components/esm/loadprob.cpp has correct #includes/fwd-decls)

(components/esm/savedgame.hpp has correct #includes/fwd-decls)

(components/esm/savedgame.cpp has correct #includes/fwd-decls)

(components/esm/loadacti.hpp has correct #includes/fwd-decls)

(components/esm/loadacti.cpp has correct #includes/fwd-decls)
In file included from extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp:9:
In file included from extern/shiny/Platforms/Ogre/OgreGpuProgram.hpp:6:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:8:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
In file included from extern/shiny/Main/Factory.cpp:15:
In file included from extern/shiny/Main/Factory.hpp:10:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/esm/loadstat.hpp has correct #includes/fwd-decls)

(components/esm/loadstat.cpp has correct #includes/fwd-decls)

(components/esm/loadbody.hpp has correct #includes/fwd-decls)

(components/esm/loadbody.cpp has correct #includes/fwd-decls)

(components/esm/debugprofile.hpp has correct #includes/fwd-decls)

(extern/oics/ICSInputControlSystem.h has correct #includes/fwd-decls)

(components/esm/loadench.hpp has correct #includes/fwd-decls)

(components/esm/loadench.cpp has correct #includes/fwd-decls)

(components/esm/debugprofile.cpp has correct #includes/fwd-decls)

(components/esm/inventorystate.hpp has correct #includes/fwd-decls)

(components/esm/inventorystate.cpp has correct #includes/fwd-decls)

(components/esm/player.hpp has correct #includes/fwd-decls)

(components/esm/player.cpp has correct #includes/fwd-decls)

(extern/oics/ICSInputControlSystem.cpp has correct #includes/fwd-decls)

(components/contentselector/view/combobox.hpp has correct #includes/fwd-decls)

components/contentselector/view/combobox.cpp should add these lines:

components/contentselector/view/combobox.cpp should remove these lines:
- #include <QRegExp>  // lines 1-1
- #include <QString>  // lines 3-3

The full include-list for components/contentselector/view/combobox.cpp:
#include "combobox.hpp"
#include <QRegExpValidator>             // for QRegExpValidator
#include <QStylePainter>                // for QStylePainter
#include <QtGui>                        // for QStyleOptionComboBox, etc
---

components/esm/loadskil.hpp should add these lines:
#include <cstddef>                      // for size_t

components/esm/loadskil.hpp should remove these lines:

The full include-list for components/esm/loadskil.hpp:
#include <cstddef>                      // for size_t
#include <string>                       // for string
namespace ESM { class ESMReader; }  // lines 10-10
namespace ESM { class ESMWriter; }  // lines 11-11
namespace boost { template <class T, std::size_t N> class array; }  // lines 6-6
---

(components/esm/variant.hpp has correct #includes/fwd-decls)

(components/esm/loadclot.hpp has correct #includes/fwd-decls)

(components/esm/loadclot.cpp has correct #includes/fwd-decls)

(components/esm/loadskil.cpp has correct #includes/fwd-decls)

(components/esm/variant.cpp has correct #includes/fwd-decls)

(components/esm/spellstate.hpp has correct #includes/fwd-decls)

(components/esm/spellstate.cpp has correct #includes/fwd-decls)

(components/compiler/lineparser.hpp has correct #includes/fwd-decls)

(components/esm/npcstats.hpp has correct #includes/fwd-decls)

(components/esm/npcstats.cpp has correct #includes/fwd-decls)

(components/compiler/lineparser.cpp has correct #includes/fwd-decls)

(components/compiler/scanner.hpp has correct #includes/fwd-decls)

(components/compiler/scanner.cpp has correct #includes/fwd-decls)

components/contentselector/model/esmfile.hpp should add these lines:

components/contentselector/model/esmfile.hpp should remove these lines:
- #include <QDateTime>  // lines 4-4
- #include <QStringList>  // lines 5-5

The full include-list for components/contentselector/model/esmfile.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include "modelitem.hpp"                // for ModelItem
---

components/contentselector/model/esmfile.cpp should add these lines:
#include <QDateTime>                    // for QDateTime
#include <QStringList>                  // for QStringList, operator<<

components/contentselector/model/esmfile.cpp should remove these lines:
- #include <QDataStream>  // lines 1-1

The full include-list for components/contentselector/model/esmfile.cpp:
#include "esmfile.hpp"
#include <QDateTime>                    // for QDateTime
#include <QStringList>                  // for QStringList, operator<<
#include "components/contentselector/model/modelitem.hpp"
---

(components/files/collections.hpp has correct #includes/fwd-decls)

(components/files/collections.cpp has correct #includes/fwd-decls)

(components/esm/loadland.hpp has correct #includes/fwd-decls)
In file included from components/esm/containerstate.cpp:2:
In file included from components/esm/inventorystate.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:61:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/esm/loadland.cpp has correct #includes/fwd-decls)

(components/bsa/bsa_archive.hpp has correct #includes/fwd-decls)

(components/bsa/bsa_archive.cpp has correct #includes/fwd-decls)

(components/esm/containerstate.hpp has correct #includes/fwd-decls)

(components/esm/containerstate.cpp has correct #includes/fwd-decls)

(components/nif/niffile.hpp has correct #includes/fwd-decls)

(components/nif/niffile.cpp has correct #includes/fwd-decls)
In file included from components/esm/objectstate.cpp:2:
In file included from components/esm/cellref.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/esm/loadmisc.hpp has correct #includes/fwd-decls)

(components/esm/loadmisc.cpp has correct #includes/fwd-decls)

(components/nifogre/material.hpp has correct #includes/fwd-decls)

(components/nifogre/material.cpp has correct #includes/fwd-decls)

(components/esm/loadrepa.hpp has correct #includes/fwd-decls)

(components/esm/loadrepa.cpp has correct #includes/fwd-decls)

(components/files/configurationmanager.hpp has correct #includes/fwd-decls)
In file included from extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp:12:
In file included from extern/shiny/Platforms/Ogre/OgrePass.hpp:7:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:8:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/files/configurationmanager.cpp has correct #includes/fwd-decls)

(components/widgets/sharedstatebutton.hpp has correct #includes/fwd-decls)

(components/widgets/sharedstatebutton.cpp has correct #includes/fwd-decls)

(components/esm/loadalch.hpp has correct #includes/fwd-decls)

(components/esm/journalentry.hpp has correct #includes/fwd-decls)

(components/esm/loadalch.cpp has correct #includes/fwd-decls)

(components/esm/journalentry.cpp has correct #includes/fwd-decls)

(components/esm/loadweap.hpp has correct #includes/fwd-decls)

(components/esm/loadweap.cpp has correct #includes/fwd-decls)

(components/esm/loadbook.hpp has correct #includes/fwd-decls)

(components/esm/loadbook.cpp has correct #includes/fwd-decls)

(components/esm/loadfact.hpp has correct #includes/fwd-decls)

(components/esm/loadfact.cpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgreGpuProgram.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgreGpuProgram.cpp has correct #includes/fwd-decls)

(components/esm/objectstate.hpp has correct #includes/fwd-decls)

(components/esm/objectstate.cpp has correct #includes/fwd-decls)

(extern/oics/ICSInputControlSystem_keyboard.cpp has correct #includes/fwd-decls)

(components/esm/loadsndg.hpp has correct #includes/fwd-decls)

(components/esm/loadsndg.cpp has correct #includes/fwd-decls)

(components/esm/loadcont.hpp has correct #includes/fwd-decls)

(components/esm/loadcont.cpp has correct #includes/fwd-decls)

(components/esm/variantimp.hpp has correct #includes/fwd-decls)

(components/esm/aisequence.hpp has correct #includes/fwd-decls)

(components/esm/variantimp.cpp has correct #includes/fwd-decls)

(components/esm/aisequence.cpp has correct #includes/fwd-decls)

(extern/sdl4ogre/sdlinputwrapper.hpp has correct #includes/fwd-decls)

(extern/sdl4ogre/sdlinputwrapper.cpp has correct #includes/fwd-decls)

(components/esm/activespells.hpp has correct #includes/fwd-decls)

(components/esm/activespells.cpp has correct #includes/fwd-decls)

(components/terrain/terraingrid.hpp has correct #includes/fwd-decls)

(components/terrain/terraingrid.cpp has correct #includes/fwd-decls)

(components/ogreinit/ogreplugin.hpp has correct #includes/fwd-decls)
In file included from components/esm/npcstate.cpp:2:
In file included from components/esm/creaturestats.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:61:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/ogreinit/ogreplugin.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/Factory.hpp has correct #includes/fwd-decls)

(components/esm/creaturestats.hpp has correct #includes/fwd-decls)

(components/esm/creaturestats.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/Factory.cpp has correct #includes/fwd-decls)

(components/esm/loadlevlist.hpp has correct #includes/fwd-decls)

(components/esm/loadglob.hpp has correct #includes/fwd-decls)

(components/esm/loadglob.cpp has correct #includes/fwd-decls)

(components/esm/loadlevlist.cpp has correct #includes/fwd-decls)

(components/terrain/storage.cpp has correct #includes/fwd-decls)

(components/esm/npcstate.hpp has correct #includes/fwd-decls)

(components/esm/npcstate.cpp has correct #includes/fwd-decls)

(components/nif/nifstream.hpp has correct #includes/fwd-decls)

(components/nif/nifstream.cpp has correct #includes/fwd-decls)

(components/esm/loadnpc.hpp has correct #includes/fwd-decls)

(components/esm/loadnpc.cpp has correct #includes/fwd-decls)
In file included from extern/shiny/Main/MaterialInstance.cpp:9:
In file included from extern/shiny/Main/Factory.hpp:10:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/files/constrainedfiledatastream.hpp has correct #includes/fwd-decls)

(components/files/constrainedfiledatastream.cpp has correct #includes/fwd-decls)

(components/contentselector/model/naturalsort.hpp has correct #includes/fwd-decls)

(components/contentselector/model/naturalsort.cpp has correct #includes/fwd-decls)

(components/esm/loadltex.hpp has correct #includes/fwd-decls)

(components/esm/loadltex.cpp has correct #includes/fwd-decls)
In file included from components/esm/creaturelevliststate.cpp:1:
In file included from components/esm/objectstate.hpp:4:
In file included from components/esm/cellref.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(components/esm/queststate.hpp has correct #includes/fwd-decls)

(components/esm/queststate.cpp has correct #includes/fwd-decls)

(components/esm/aipackage.hpp has correct #includes/fwd-decls)

(components/esm/loadbsgn.hpp has correct #includes/fwd-decls)

(components/esm/aipackage.cpp has correct #includes/fwd-decls)

(components/esm/loadbsgn.cpp has correct #includes/fwd-decls)

(components/esm/cellid.hpp has correct #includes/fwd-decls)

(components/esm/cellid.cpp has correct #includes/fwd-decls)

(components/bsa/bsa_file.hpp has correct #includes/fwd-decls)
In file included from components/contentselector/model/contentmodel.cpp:1:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h
(components/bsa/bsa_file.cpp has correct #includes/fwd-decls)
:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^
In file included from apps/openmw/mwgui/windowbase.cpp:7:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(components/esm/loadsoun.hpp has correct #includes/fwd-decls)

(components/esm/loadsoun.cpp has correct #includes/fwd-decls)
In file included from libs/openengine/ogre/selectionbuffer.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/widgets/windowcaption.hpp has correct #includes/fwd-decls)

(components/widgets/windowcaption.cpp has correct #includes/fwd-decls)

(extern/oics/ICSInputControlSystem_mouse.cpp has correct #includes/fwd-decls)

(components/esm/loadcrea.hpp has correct #includes/fwd-decls)

(components/esm/magiceffects.hpp has correct #includes/fwd-decls)

(components/esm/magiceffects.cpp has correct #includes/fwd-decls)

(components/esm/loadcrea.cpp has correct #includes/fwd-decls)

(components/esm/loadtes3.hpp has correct #includes/fwd-decls)

(components/esm/loadtes3.cpp has correct #includes/fwd-decls)
In file included from components/contentselector/view/contentselector.cpp:7:
components/contentselector/view/contentselector.hpp:7:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^
In file included from apps/openmw/mwgui/windowbase.cpp:13:
apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/birth.cpp:9:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(components/esm/creaturelevliststate.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/birth.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(components/esm/creaturelevliststate.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(extern/shiny/Main/MaterialInstance.hpp has correct #includes/fwd-decls)

(extern/shiny/Main/MaterialInstance.cpp has correct #includes/fwd-decls)

(components/esm/weatherstate.hpp has correct #includes/fwd-decls)

(components/esm/weatherstate.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/birth.cpp:11:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/birth.cpp:11:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/birth.cpp:11:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/controllers.cpp:1:
In file included from apps/openmw/mwgui/controllers.hpp:4:
In file included from /usr/include/MYGUI/MyGUI_ControllerItem.h:11:
/usr/include/MYGUI/MyGUI_WidgetDefines.h:20:24: error: no member named 'string' in namespace 'std'
        typedef std::map<std::string, Widget*> MapWidgetPtr;
                         ~~~~~^

(components/files/lowlevelfile.hpp has correct #includes/fwd-decls)

(components/files/lowlevelfile.cpp has correct #includes/fwd-decls)

(components/esmterrain/storage.hpp has correct #includes/fwd-decls)

(components/widgets/box.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgreTextureUnitState.hpp has correct #includes/fwd-decls)

(components/esmterrain/storage.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/windowbase.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/windowbase.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/windowbase.hpp:
#include <openengine/gui/layout.hpp>    // for Layout
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
namespace MWGui { class DragAndDrop; }  // lines 17-17
namespace MyGUI { class Widget; }  // lines 9-9
---

(extern/shiny/Platforms/Ogre/OgreTextureUnitState.cpp has correct #includes/fwd-decls)

(components/widgets/box.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/windowbase.cpp should add these lines:

apps/openmw/mwgui/windowbase.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <stdexcept>  // lines 4-4
- #include "components/settings/settings.hpp"  // lines 10-10

The full include-list for apps/openmw/mwgui/windowbase.cpp:
#include "windowbase.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Types.h"                // for IntCoord, IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "draganddrop.hpp"              // for DragAndDrop
#include "openengine/gui/layout.hpp"    // for Layout
---
In file included from apps/openmw/mwgui/birth.cpp:23:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/nifcache/nifcache.hpp has correct #includes/fwd-decls)

(components/nifcache/nifcache.cpp has correct #includes/fwd-decls)
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:197:14: error: member access into incomplete type 'Ogre::SceneNode'
        mNode->attachObject(mLineDrawer);
             ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:228:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:235:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^

(components/terrain/quadtreenode.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/controllers.cpp:1:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/terrain/quadtreenode.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/sortfilteritemmodel.cpp:147:58: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
        if ((mFilter & Filter_OnlyUsableItems) && typeid(*base.getClass().use(base)) == typeid(MWWorld::NullAction)
                                                         ^
In file included from apps/openmw/mwdialogue/topic.cpp:5:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/tradewindow.cpp:4:
./components/widgets/numericeditbox.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(extern/shiny/Main/Preprocessor.hpp has correct #includes/fwd-decls)
In file included from extern/shiny/Main/MaterialInstancePass.cpp:3:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

extern/shiny/Main/Preprocessor.cpp should add these lines:

extern/shiny/Main/Preprocessor.cpp should remove these lines:
- #include <ostream>  // lines 27-27

The full include-list for extern/shiny/Main/Preprocessor.cpp:
#include "Preprocessor.hpp"
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <boost/spirit/home/classic/core/composite/actions.hpp>
#include <boost/spirit/home/classic/core/composite/alternative.hpp>
#include <boost/spirit/home/classic/core/composite/difference.hpp>
#include <boost/spirit/home/classic/core/composite/kleene_star.hpp>
#include <boost/spirit/home/classic/core/composite/optional.hpp>
#include <boost/spirit/home/classic/core/composite/sequence.hpp>
#include <boost/spirit/home/classic/core/parser.hpp>  // for parse
#include <boost/spirit/home/classic/core/scanner/skipper.hpp>
#include <boost/spirit/home/classic/iterator/multi_pass.hpp>
#include <boost/spirit/home/classic/tree/parse_tree_utils.hpp>
#include <boost/wave/cpp_context.hpp>   // for context<>::iterator_type, etc
#include <boost/wave/cpp_exceptions.hpp>  // for cpp_exception, etc
#include <boost/wave/cpp_throw.hpp>     // for BOOST_WAVE_THROW_CTX
#include <boost/wave/cpplexer/cpp_lex_iterator.hpp>  // for lex_iterator
#include <boost/wave/cpplexer/cpp_lex_token.hpp>  // for lex_token, etc
#include <boost/wave/cpplexer/cpplexer_exceptions.hpp>
#include <boost/wave/language_support.hpp>  // for language_support
#include <boost/wave/util/cpp_iterator.hpp>  // for pp_iterator_functor
#include <boost/wave/util/file_position.hpp>  // for file_position_type
#include <boost/wave/util/flex_string.hpp>  // for operator==, flex_string, etc
#include <boost/wave/util/functor_input.hpp>  // for functor_input
#include <exception>                    // for exception
#include <fstream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
---
In file included from apps/openmw/mwgui/trainingwindow.cpp:11:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwgui/birth.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/birth.hpp should remove these lines:
- #include <vector>  // lines 6-6

The full include-list for apps/openmw/mwgui/birth.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"
namespace MyGUI { class ImageBox; }  // lines 11-11
namespace MyGUI { class ListBox; }  // lines 12-12
namespace MyGUI { class Widget; }  // lines 13-13
---

apps/openmw/mwgui/birth.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/birth.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 5-5
- #include "../mwbase/windowmanager.hpp"  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 11-11
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_Button.h"  // lines 13-13
- #include "MyGUI_EventPair.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_StringUtility.h"  // lines 17-17
- #include "MyGUI_TextBox.h"  // lines 18-18
- #include "MyGUI_WidgetInput.h"  // lines 21-21
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23
- #include "components/esm/spelllist.hpp"  // lines 27-27

The full include-list for apps/openmw/mwgui/birth.cpp:
#include "birth.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ListBox.h>              // for ListBox
#include <components/misc/resourcehelpers.hpp>  // for correctTexturePath
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SpellType, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "widgets.hpp"                  // for MWSpellPtr
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }
---
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/topic.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(components/esm/loadpgrd.hpp has correct #includes/fwd-decls)

(components/esm/loadpgrd.cpp has correct #includes/fwd-decls)
In file included from components/widgets/widgets.cpp:6:
components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:12:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwrender/creatureanimation.cpp:15:
In file included from ./apps/openmw/mwrender/../mwworld/containerstore.hpp:10:
apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^

(apps/openmw/mwgui/sortfilteritemmodel.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/creatureanimation.cpp:16:
./apps/openmw/mwrender/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwrender/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
plugins/mygui_resource_plugin/plugin.cpp:26:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/sortfilteritemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwgui/sortfilteritemmodel.cpp should remove these lines:
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 25-25

The full include-list for apps/openmw/mwgui/sortfilteritemmodel.cpp:
#include "sortfilteritemmodel.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for find, sort
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadappa.hpp>  // for Apparatus
#include <components/esm/loadarmo.hpp>  // for Armor
#include <components/esm/loadbook.hpp>  // for Book, Book::BKDTstruct
#include <components/esm/loadclot.hpp>  // for Clothing
#include <components/esm/loadingr.hpp>  // for Ingredient
#include <components/esm/loadligh.hpp>  // for Light
#include <components/esm/loadlock.hpp>  // for Lockpick
#include <components/esm/loadmisc.hpp>  // for Miscellaneous
#include <components/esm/loadprob.hpp>  // for Probe
#include <components/esm/loadrepa.hpp>  // for Repair
#include <components/esm/loadweap.hpp>  // for Weapon
#include <components/misc/stringops.hpp>  // for StringUtils
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator==, etc
#include <typeinfo>                     // for type_info
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/nullaction.hpp"    // for NullAction
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/livecellref.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
---

(components/contentselector/view/contentselector.hpp has correct #includes/fwd-decls)

components/contentselector/view/contentselector.cpp should add these lines:

components/contentselector/view/contentselector.cpp should remove these lines:
- #include <QModelIndex>  // lines 1-1
- #include <QSortFilterProxyModel>  // lines 2-2

The full include-list for components/contentselector/view/contentselector.cpp:
#include "contentselector.hpp"
#include <QtGui>                        // for QSortFilterProxyModel, etc
#include "../model/esmfile.hpp"         // for EsmFile
#include "components/contentselector/view/../model/contentmodel.hpp"
---

(extern/shiny/Main/MaterialInstancePass.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/trainingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(extern/shiny/Main/MaterialInstancePass.cpp has correct #includes/fwd-decls)
apps/openmw/mwrender/creatureanimation.cpp:105:15: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
    if (it == inv.end())
              ^~~
apps/openmw/mwrender/creatureanimation.cpp:130:21: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
        if (ammo != inv.end() && ammo->get<ESM::Weapon>()->mBase->mData.mType == ESM::Weapon::Bolt)
                    ^~~

(components/misc/stringops.hpp has correct #includes/fwd-decls)

(components/misc/stringops.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/draganddrop.cpp:15:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/compiler/controlparser.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/merchantrepair.cpp:16:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:16:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/merchantrepair.cpp:16:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwgui/controllers.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate2

apps/openmw/mwgui/controllers.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/controllers.hpp:
#include <MyGUI_ControllerItem.h>       // for ControllerItem
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate2
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
namespace MyGUI { class Widget; }  // lines 12-12
---

apps/openmw/mwgui/controllers.cpp should add these lines:

apps/openmw/mwgui/controllers.cpp should remove these lines:
- #include <MyGUI_InputManager.h>  // lines 3-3
- #include <MyGUI_Widget.h>  // lines 4-4

The full include-list for apps/openmw/mwgui/controllers.cpp:
#include "controllers.hpp"
---

(components/compiler/controlparser.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/journalviewmodel.cpp:14:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadpgrd.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadpgrd.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwrender/debugging.cpp:18:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadpgrd.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/spellwindow.cpp:9:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(libs/openengine/ogre/selectionbuffer.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/spellwindow.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(libs/openengine/ogre/selectionbuffer.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(components/widgets/widgets.hpp has correct #includes/fwd-decls)

components/widgets/widgets.cpp should add these lines:

components/widgets/widgets.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include "MyGUI_RTTI.h"  // lines 3-3
- #include "box.hpp"  // lines 4-4
- #include "imagebutton.hpp"  // lines 5-5
- #include "list.hpp"  // lines 6-6
- #include "numericeditbox.hpp"  // lines 7-7
- #include "sharedstatebutton.hpp"  // lines 8-8
- #include "windowcaption.hpp"  // lines 10-10

The full include-list for components/widgets/widgets.cpp:
#include "widgets.hpp"
---
apps/openmw/mwgui/trainingwindow.cpp:18:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwgui/merchantrepair.cpp:18:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/itemwidget.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/itemwidget.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/statswindow.cpp:15:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/statswindow.cpp:16:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwrender/ripplesimulation.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/compiler/errorhandler.hpp has correct #includes/fwd-decls)

(components/compiler/errorhandler.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellwindow.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.cpp:1:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwgui/statswindow.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/statswindow.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/statswindow.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(components/widgets/imagebutton.hpp has correct #includes/fwd-decls)

(components/widgets/imagebutton.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/trainingwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/trainingwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Class; }
namespace ESM { struct GameSetting; }
namespace ESM { struct NPC; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/trainingwindow.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 2-2
- #include <string>  // lines 3-3
- #include <vector>  // lines 5-5
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_StringUtility.h"  // lines 20-20
- #include "MyGUI_TextBox.h"  // lines 21-21
- #include "MyGUI_Widget.h"  // lines 23-23
- #include "MyGUI_WidgetInput.h"  // lines 25-25
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 31-31
- #include "components/esm/loadclas.hpp"  // lines 32-32
- #include "components/esm/loadgmst.hpp"  // lines 33-33
- #include "components/esm/loadnpc.hpp"  // lines 34-34
- #include "tooltips.hpp"  // lines 36-36

The full include-list for apps/openmw/mwgui/trainingwindow.cpp:
#include "trainingwindow.hpp"
#include <utility>                      // for pair
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SKDTstruct, etc
namespace ESM { struct Class; }
namespace ESM { struct GameSetting; }
namespace ESM { struct NPC; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/mwgui/merchantrepair.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/merchantrepair.cpp should add these lines:

apps/openmw/mwgui/merchantrepair.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <components/esm/loadgmst.hpp>  // lines 4-4
- #include "../mwbase/soundmanager.hpp"  // lines 10-10
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "MyGUI_Align.h"  // lines 17-17
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_StringUtility.h"  // lines 20-20
- #include "MyGUI_TextBox.h"  // lines 21-21
- #include "MyGUI_Widget.h"  // lines 23-23
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/merchantrepair.cpp:
#include "merchantrepair.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
---
apps/openmw/mwgui/spellwindow.cpp:16:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(extern/shiny/Main/MaterialInstanceTextureUnit.hpp has correct #includes/fwd-decls)

(extern/shiny/Main/MaterialInstanceTextureUnit.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/review.cpp:13:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from extern/shiny/Platforms/Ogre/OgrePass.cpp:9:
In file included from extern/shiny/Platforms/Ogre/OgreMaterial.hpp:7:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:8:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwgui/review.cpp:14:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
extern/shiny/Platforms/Ogre/OgrePass.cpp:49:16: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (((typeid(*value) == typeid(StringValue)) || typeid(*value) == typeid(LinkedValue))
                             ^
extern/shiny/Platforms/Ogre/OgrePass.cpp:49:58: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (((typeid(*value) == typeid(StringValue)) || typeid(*value) == typeid(LinkedValue))
                                                                       ^

(libs/openengine/bullet/BtOgre.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/statswindow.cppIn file included from :22:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/review.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/review.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/review.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
apps/openmw/mwgui/itemview.cpp:14:
apps/openmw/mwgui/itemview.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/esm/loadrace.hpp has correct #includes/fwd-decls)

(components/esm/loadrace.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwdialogue/scripttest.cpp:13:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/review.cpp:24:
./apps/openmw/mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwrender/creatureanimation.hpp has correct #includes/fwd-decls)

apps/openmw/mwrender/creatureanimation.cpp should add these lines:
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwrender/creatureanimation.cpp should remove these lines:
- #include "OgrePrerequisites.h"  // lines 13-13
- #include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // lines 14-14

The full include-list for apps/openmw/mwrender/creatureanimation.cpp:
#include "creatureanimation.hpp"
#include <OgreBone.h>                   // for Bone
#include <OgreEntity.h>                 // for Entity
#include <OgreSkeletonInstance.h>       // for SkeletonInstance
#include <algorithm>                    // for swap
#include <components/esm/loadcrea.hpp>  // for Creature, etc
#include <typeinfo>                     // for type_info
#include <vector>                       // for vector, vector<>::iterator
#include "../mwworld/class.hpp"         // for Class
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreController.h"             // for Controller
#include "OgreMath.h"                   // for Degree
#include "OgreNode.h"                   // for Node
#include "apps/openmw/mwrender/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwrender/../mwworld/containerstore.hpp"
#include "apps/openmw/mwrender/../mwworld/inventorystore.hpp"
#include "apps/openmw/mwrender/../mwworld/livecellref.hpp"
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwrender/animation.hpp"
#include "apps/openmw/mwrender/weaponanimation.hpp"
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadweap.hpp"  // for Weapon, etc
#include "renderconst.hpp"
---

components/contentselector/model/contentmodel.hpp should add these lines:

components/contentselector/model/contentmodel.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4
- #include <QSet>  // lines 6-6
- #include <QStringList>  // lines 7-7

The full include-list for components/contentselector/model/contentmodel.hpp:
#include <QIcon>                        // for QIcon
#include <QtCore>                       // for QString, QModelIndex, etc
namespace ContentSelectorModel { class EsmFile; }  // lines 14-14
namespace ContentSelectorModel { class LoadOrderError; }  // lines 10-10
---

plugins/mygui_resource_plugin/plugin.hpp should add these lines:

plugins/mygui_resource_plugin/plugin.hpp should remove these lines:
- #include <map>  // lines 6-6

The full include-list for plugins/mygui_resource_plugin/plugin.hpp:
#include <MyGUI_Plugin.h>               // for IPlugin
#include <MyGUI_UString.h>              // for UString
#include <string>                       // for string
---

plugins/mygui_resource_plugin/plugin.cpp should add these lines:

plugins/mygui_resource_plugin/plugin.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <MyGUI_LanguageManager.h>  // lines 2-2
- #include <OgreTextureManager.h>  // lines 6-6
- #include <string.h>  // lines 20-20
- #include <boost/filesystem/path.hpp>  // lines 8-8
- #include <boost/lexical_cast.hpp>  // lines 9-9
- #include <boost/program_options/errors.hpp>  // lines 10-10
- #include <boost/program_options/value_semantic.hpp>  // lines 12-12
- #include <components/bsa/resources.hpp>  // lines 15-15
- #include <components/widgets/tags.hpp>  // lines 18-18
- #include <iostream>  // lines 21-21
- #include <sstream>  // lines 22-22
- #include <utility>  // lines 23-23
- #include <vector>  // lines 24-24
- #include "OgreHardwareBuffer.h"  // lines 29-29
- #include "OgrePixelFormat.h"  // lines 30-30
- #include "OgrePlatform.h"  // lines 31-31
- #include "OgreResourceGroupManager.h"  // lines 33-33

The full include-list for plugins/mygui_resource_plugin/plugin.cpp:
#include "plugin.hpp"
#include <MyGUI_LogManager.h>           // for MYGUI_LOGGING
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <boost/any.hpp>                // for any
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/variables_map.hpp>  // for notify, etc
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <components/fontloader/fontloader.hpp>  // for FontLoader
#include <components/widgets/widgets.hpp>  // for registerAllWidgets
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_UString.h"              // for UString
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "components/bsa/../files/multidircollection.hpp"
#include "components/files/collections.hpp"  // for Collections
#include "components/to_utf8/to_utf8.hpp"  // for calculateEncoding
---

components/contentselector/model/contentmodel.cpp should add these lines:
#include <QAbstractTableModel>          // for QModelIndex, etc
#include <QSet>                         // for QSet
#include <QStringList>                  // for QStringList, operator>>

components/contentselector/model/contentmodel.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 1-1
- #include <QDebug>  // lines 2-2
- #include <QDir>  // lines 3-3
- #include <QTextCodec>  // lines 4-4
- #include <vector>  // lines 7-7

The full include-list for components/contentselector/model/contentmodel.cpp:
#include "contentmodel.hpp"
#include <QAbstractTableModel>          // for QModelIndex, etc
#include <QSet>                         // for QSet
#include <QStringList>                  // for QStringList, operator>>
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "components/contentselector/model/loadordererror.hpp"
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/loadtes3.hpp"  // for Header, Header::MasterData
#include "components/to_utf8/to_utf8.hpp"  // for Utf8Encoder, etc
#include "esmfile.hpp"                  // for EsmFile, etc
---

(apps/openmw/mwdialogue/topic.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/topic.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/screenfader.cpp:4:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/itemview.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc

apps/openmw/mwgui/itemview.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/itemview.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "itemmodel.hpp"                // for ItemModel, etc
namespace MyGUI { class ScrollView; }  // lines 12-12
---

apps/openmw/mwgui/itemview.cpp should add these lines:

apps/openmw/mwgui/itemview.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <algorithm>  // lines 5-5
- #include <stdexcept>  // lines 7-7
- #include <utility>  // lines 8-8
- #include "MyGUI_WidgetInput.h"  // lines 12-12

The full include-list for apps/openmw/mwgui/itemview.cpp:
#include "itemview.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stddef.h>                     // for NULL
#include <cmath>                        // for ceil
#include "MyGUI_Align.h"                // for Align, operator|, etc
#include "MyGUI_Widget.h"               // for Widget
#include "itemmodel.hpp"                // for ItemModel, ItemStack, etc
#include "itemwidget.hpp"               // for ItemWidget, etc
---
In file included from components/terrain/material.cpp:19:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:16:
In file included from apps/openmw/mwdialogue/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:16:
In file included from apps/openmw/mwdialogue/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/scripttest.cpp:16:
In file included from apps/openmw/mwdialogue/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwdialogue/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from extern/shiny/Main/Platform.cpp:4:
In file included from extern/shiny/Main/Factory.hpp:10:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

apps/openmw/mwgui/statswindow.hpp should add these lines:
namespace MyGUI { class Widget; }
namespace MyGUI { class Window; }

apps/openmw/mwgui/statswindow.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <set>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "MyGUI_RTTI.h"  // lines 10-10
- #include "MyGUI_Widget.h"  // lines 12-12
- #include "MyGUI_Window.h"  // lines 13-13

The full include-list for apps/openmw/mwgui/statswindow.hpp:
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SkillEnum
#include <string>                       // for string
#include "MyGUI_Types.h"                // for IntCoord
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for NoDrop
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace MWGui { class DragAndDrop; }  // lines 18-18
namespace MyGUI { class ScrollView; }  // lines 19-19
namespace MyGUI { class TextBox; }  // lines 20-20
namespace MyGUI { class Widget; }
namespace MyGUI { class Window; }
---

apps/openmw/mwgui/statswindow.cpp should add these lines:
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Attribute; }
namespace ESM { struct Class; }
namespace ESM { struct NPC; }
namespace ESM { struct Race; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/statswindow.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 9-9
- #include <boost/array.hpp>  // lines 7-7
- #include <iterator>  // lines 10-10
- #include <utility>  // lines 12-12
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_Align.h"  // lines 21-21
- #include "MyGUI_EventPair.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_WidgetInput.h"  // lines 27-27
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 32-32
- #include "components/esm/attr.hpp"  // lines 33-33
- #include "components/esm/loadclas.hpp"  // lines 35-35
- #include "components/esm/loadfact.hpp"  // lines 36-36
- #include "components/esm/loadgmst.hpp"  // lines 37-37
- #include "components/esm/loadnpc.hpp"  // lines 38-38
- #include "components/esm/loadrace.hpp"  // lines 39-39

The full include-list for apps/openmw/mwgui/statswindow.cpp:
#include "statswindow.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <MyGUI_Window.h>               // for Window
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <sstream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/player.hpp"        // for Player
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "tooltips.hpp"                 // for ToolTips
namespace ESM { struct Attribute; }
namespace ESM { struct Class; }
namespace ESM { struct NPC; }
namespace ESM { struct Race; }
namespace MWGui { class DragAndDrop; }  // lines 44-44
namespace MWWorld { class ESMStore; }
---

(components/widgets/tags.hpp has correct #includes/fwd-decls)

(components/widgets/tags.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/cellextensions.cpp:11:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwrender/occlusionquery.hpp has correct #includes/fwd-decls)
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwrender/occlusionquery.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/formatting.hpp has correct #includes/fwd-decls)
In file included from components/nifogre/mesh.cpp:12:
In file included from ./components/nif/node.hpp:9:
In file included from ./components/nif/base.hpp:7:
./components/nif/recordptr.hpp:46:19: error: 'Nif::Property' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::Property>::post' requested here
            list[i].post(nif);
                    ^
./components/nif/node.hpp:76:15: note: in instantiation of member function 'Nif::RecordListT<Nif::Property>::post' requested here
        props.post(nif);
              ^
./components/nif/recordptr.hpp:117:7: note: forward declaration of 'Nif::Property'
class Property;
      ^

(apps/openmw/mwgui/formatting.cpp has correct #includes/fwd-decls)
./components/nif/recordptr.hpp:46:19: error: 'Nif::NiSourceTexture' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::NiSourceTexture>::post' requested here
            list[i].post(nif);
                    ^
./components/nif/controller.hpp:299:18: note: in instantiation of member function 'Nif::RecordListT<Nif::NiSourceTexture>::post' requested here
        mSources.post(nif);
                 ^
./components/nif/recordptr.hpp:131:7: note: forward declaration of 'Nif::NiSourceTexture'
class NiSourceTexture;
      ^
In file included from apps/openmw/mwinput/inputmanagerimp.cpp:20:
apps/openmw/mwinput/../mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/journalviewmodel.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/review.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
namespace MWMechanics { class AttributeValue; }
namespace MWMechanics { class SkillValue; }
namespace MWMechanics { template <typename T> class DynamicStat; }

apps/openmw/mwgui/review.hpp should remove these lines:
- #include <map>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"  // lines 12-12

The full include-list for apps/openmw/mwgui/review.hpp:
#include <components/esm/attr.hpp>      // for Attribute, etc
#include <components/esm/loadclas.hpp>  // for Class
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_Types.h"                // for IntCoord
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "widgets.hpp"                  // for MWDynamicStatPtr
#include "windowbase.hpp"
namespace MWMechanics { class AttributeValue; }
namespace MWMechanics { class SkillValue; }
namespace MWMechanics { template <typename T> class DynamicStat; }
namespace MyGUI { class ScrollView; }  // lines 17-17
namespace MyGUI { class TextBox; }  // lines 18-18
namespace MyGUI { class Widget; }  // lines 19-19
---

apps/openmw/mwgui/review.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwgui/review.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 6-6
- #include <boost/array.hpp>  // lines 5-5
- #include <cmath>  // lines 7-7
- #include <iterator>  // lines 8-8
- #include <set>  // lines 9-9
- #include <utility>  // lines 10-10
- #include "../mwbase/world.hpp"  // lines 14-14
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 18-18
- #include "MyGUI_StringUtility.h"  // lines 19-19
- #include "MyGUI_TCoord.h"  // lines 20-20
- #include "MyGUI_WidgetInput.h"  // lines 22-22
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 23-23
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 25-25

The full include-list for apps/openmw/mwgui/review.cpp:
#include "review.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <assert.h>                     // for assert
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_TextBox.h"              // for TextBox
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/widgets.hpp"  // for MWAttribute, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadrace.hpp"  // for Race
#include "tooltips.hpp"                 // for ToolTips
namespace MyGUI { class Widget; }  // lines 33-33
---

apps/openmw/mwgui/journalviewmodel.cpp should add these lines:

apps/openmw/mwgui/journalviewmodel.cpp should remove these lines:
- #include <memory>  // lines 6-6

The full include-list for apps/openmw/mwgui/journalviewmodel.cpp:
#include "journalviewmodel.hpp"
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <algorithm>                    // for replace
#include <boost/smart_ptr/make_shared_object.hpp>  // for make_shared
#include <deque>                        // for _Deque_iterator, operator!=, etc
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <set>                          // for set
#include <sstream>                      // for operator<<, tolower, etc
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwdialogue/journalentry.hpp"  // for Entry, etc
#include "../mwdialogue/keywordsearch.hpp"  // for KeywordSearch<>::Match, etc
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwdialogue/quest.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwdialogue/topic.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "components/translation/translation.hpp"  // for Storage
---

apps/openmw/mwgui/screenfader.hpp should add these lines:

apps/openmw/mwgui/screenfader.hpp should remove these lines:
- #include <deque>  // lines 5-5

The full include-list for apps/openmw/mwgui/screenfader.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ScreenFader; }  // lines 12-12
---

apps/openmw/mwgui/screenfader.cpp should add these lines:

apps/openmw/mwgui/screenfader.cpp should remove these lines:
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 4-4

The full include-list for apps/openmw/mwgui/screenfader.cpp:
#include "screenfader.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include "MyGUI_Widget.h"               // for Widget
---
In file included from apps/openmw/mwscript/cellextensions.cpp:12:
In file included from apps/openmw/mwscript/../mwworld/cellstore.hpp:11:
apps/openmw/mwscript/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwscript/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(extern/sdl4ogre/sdlcursormanager.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/repair.cpp:9:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(extern/sdl4ogre/sdlcursormanager.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/Platform.hpp has correct #includes/fwd-decls)

extern/shiny/Main/Platform.cpp should add these lines:
#include "extern/shiny/Main/Platform.hpp"

extern/shiny/Main/Platform.cpp should remove these lines:

The full include-list for extern/shiny/Main/Platform.cpp:
#include "extern/shiny/Main/Platform.hpp"
#include <stddef.h>                     // for NULL
#include <stdexcept>                    // for runtime_error
#include "Factory.hpp"                  // for Factory
#include "Platform.hpp"                 // for Platform, TextureUnitState
#include "extern/shiny/Main/PropertyBase.hpp"  // for StringValue, etc
---
In file included from apps/openmw/mwgui/mapwindow.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/cellstore.hpp:11:
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
In file included from apps/openmw/mwgui/repair.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwrender/ripplesimulation.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/repair.cpp:15:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwrender/ripplesimulation.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/mapwindow.cpp:22:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/mapwindow.cpp:22:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/mapwindow.cpp:22:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/filter.cpp:15:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(components/contentselector/model/loadordererror.hpp has correct #includes/fwd-decls)

(components/contentselector/model/loadordererror.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/travelwindow.cpp:18:
In file included from apps/openmw/mwgui/../mwworld/cellstore.hpp:11:
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwgui/draganddrop.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/draganddrop.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwgui/draganddrop.cpp should remove these lines:
- #include "../mwbase/soundmanager.hpp"  // lines 7-7
- #include "MyGUI_Align.h"  // lines 10-10
- #include "MyGUI_ControllerItem.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 12-12
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 13-13

The full include-list for apps/openmw/mwgui/draganddrop.cpp:
#include "draganddrop.hpp"
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_Gui.h>                  // for Gui
#include <stddef.h>                     // for NULL
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "controllers.hpp"              // for ControllerFollowMouse
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
---
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwworld/containerstore.hpp:10:
apps/openmw/mwgui/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwgui/tradeitemmodel.cpp:7:
apps/openmw/mwgui/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwgui/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwgui/travelwindow.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/travelwindow.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/travelwindow.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/mapwindow.cpp:43:
In file included from ./apps/openmw/mwgui/windowpinnablebase.hpp:6:
apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

/usr/include/OGRE/OgrePass.h should add these lines:
#include <stddef.h>                     // for NULL, size_t
#include <functional>                   // for less
#include "GLX/../OgrePrerequisites.h"   // for Real, String, GpuProgramPtr, etc
#include "OgreGpuProgramParams.h"
#include "OgreIteratorWrapper.h"        // for ConstVectorIterator, etc
#include "OgreMemoryAllocatorConfig.h"  // for PassAlloc
#include "OgreMemorySTLAllocator.h"     // for STLAllocator
#include "OgrePlatform.h"               // for uint32, _OgreExport, uint16
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_MUTEX, etc
namespace Ogre { class AutoParamDataSource; }
namespace Ogre { class GpuProgramUsage; }
namespace Ogre { class Technique; }

/usr/include/OGRE/OgrePass.h should remove these lines:
- #include "OgreGpuProgram.h"  // lines 32-32
- #include "OgrePrerequisites.h"  // lines 31-31

The full include-list for /usr/include/OGRE/OgrePass.h:
#include <stddef.h>                     // for NULL, size_t
#include <functional>                   // for less
#include "GLX/../OgrePrerequisites.h"   // for Real, String, GpuProgramPtr, etc
#include "OgreBlendMode.h"              // for SceneBlendFactor, etc
#include "OgreColourValue.h"            // for ColourValue, etc
#include "OgreCommon.h"                 // for CompareFunction, etc
#include "OgreGpuProgramParams.h"
#include "OgreIteratorWrapper.h"        // for ConstVectorIterator, etc
#include "OgreLight.h"                  // for Light, Light::LightTypes, etc
#include "OgreMemoryAllocatorConfig.h"  // for PassAlloc
#include "OgreMemorySTLAllocator.h"     // for STLAllocator
#include "OgrePlatform.h"               // for uint32, _OgreExport, uint16
#include "OgreTextureUnitState.h"       // for TextureUnitState, etc
#include "OgreUserObjectBindings.h"     // for UserObjectBindings
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_MUTEX, etc
namespace Ogre { class AutoParamDataSource; }
namespace Ogre { class GpuProgramUsage; }
namespace Ogre { class Technique; }
---

(extern/shiny/Platforms/Ogre/OgrePass.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgrePass.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwdialogue/filter.cpp:20:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwdialogue/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/filter.cpp:20:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwdialogue/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/filter.cpp:20:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwdialogue/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/repair.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:1:
/usr/include/MYGUI/MyGUI_ClipboardManager.h:51:3: error: use of undeclared identifier 'delegates'
                delegates::CMultiDelegate2<const std::string&, const std::string&> eventClipboardChanged;
                ^
/usr/include/MYGUI/MyGUI_ClipboardManager.h:51:29: error: expected member name or ';' after declaration specifiers
                delegates::CMultiDelegate2<const std::string&, const std::string&> eventClipboardChanged;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~^

(extern/ogre-ffmpeg-videoplayer/videoplayer.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/spellwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/repair.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/repair.cpp should remove these lines:
- #include <algorithm>  // lines 3-3
- #include <iomanip>  // lines 4-4
- #include <string>  // lines 6-6
- #include "MyGUI_Align.h"  // lines 13-13
- #include "MyGUI_Button.h"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_StringUtility.h"  // lines 17-17
- #include "MyGUI_WidgetInput.h"  // lines 23-23
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 29-29
- #include "components/esm/loadrepa.hpp"  // lines 30-30

The full include-list for apps/openmw/mwgui/repair.cpp:
#include "repair.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <ostream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwmechanics/repair.hpp"  // for Repair
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "itemwidget.hpp"               // for ItemWidget
#include "widgets.hpp"                  // for MWDynamicStat, etc
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
/usr/include/MYGUI/MyGUI_ClipboardManager.h:59:3: error: use of undeclared identifier 'delegates'
                delegates::CMultiDelegate2<const std::string&, std::string&> eventClipboardRequested;
                ^
/usr/include/MYGUI/MyGUI_ClipboardManager.h:59:29: error: expected member name or ';' after declaration specifiers
                delegates::CMultiDelegate2<const std::string&, std::string&> eventClipboardRequested;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~^

(extern/ogre-ffmpeg-videoplayer/videoplayer.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/spellwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwgui/spellwindow.cpp should remove these lines:
- #include <boost/format.hpp>  // lines 2-2
- #include <stdexcept>  // lines 4-4
- #include <utility>  // lines 5-5
- #include <vector>  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 17-17
- #include "MyGUI_Widget.h"  // lines 18-18
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/mode.hpp"  // lines 23-23
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 25-25
- #include "inventorywindow.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/spellwindow.cpp:
#include "spellwindow.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwmechanics/spellcasting.hpp"  // for getSpellSuccessChance
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/spellmodel.hpp"  // for SpellModel, Spell, etc
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
#include "spellicons.hpp"               // for SpellIcons
#include "spellview.hpp"                // for SpellView
namespace MWGui { class DragAndDrop; }  // lines 33-33
---

(plugins/mygui_resource_plugin/plugin_export.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/travelwindow.cpp:23:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/tradeitemmodel.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/tradeitemmodel.cpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/cellextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/cellextensions.cpp has correct #includes/fwd-decls)
In file included from components/widgets/list.cpp:14:
components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/messagebox.cpp:11:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/messagebox.cpp:19:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/tradewindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/tradewindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/tradewindow.cpp should remove these lines:
- #include <algorithm>  // lines 7-7
- #include <typeinfo>  // lines 9-9
- #include <vector>  // lines 10-10
- #include "../mwbase/mechanicsmanager.hpp"  // lines 14-14
- #include "../mwbase/soundmanager.hpp"  // lines 15-15
- #include "MyGUI_ControllerItem.h"  // lines 21-21
- #include "MyGUI_StringUtility.h"  // lines 24-24
- #include "MyGUI_TextBox.h"  // lines 25-25
- #include "MyGUI_Widget.h"  // lines 26-26
- #include "MyGUI_WidgetInput.h"  // lines 27-27
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwworld/esmstore.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/mode.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 36-36
- #include "components/esm/loadgmst.hpp"  // lines 38-38
- #include "components/esm/loadnpc.hpp"  // lines 39-39
- #include "components/misc/stringops.hpp"  // lines 41-41
- #include "containeritemmodel.hpp"  // lines 42-42
- #include "dialogue.hpp"  // lines 45-45

The full include-list for apps/openmw/mwgui/tradewindow.cpp:
#include "tradewindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_InputManager.h>         // for InputManager
#include <limits.h>                     // for INT_MIN, INT_MAX
#include <stdlib.h>                     // for abs, rand
#include <components/widgets/numericeditbox.hpp>  // for NumericEditBox
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_RTTI.h"
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "controllers.hpp"              // for ControllerRepeatEvent
#include "countdialog.hpp"              // for CountDialog, etc
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
#include "tradeitemmodel.hpp"           // for TradeItemModel
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---
In file included from apps/openmw/mwscript/statsextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/statsextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/statsextensions.cpp:21:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/loadingscreen.cpp:31:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/globalscripts.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/locals.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/globalscripts.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/locals.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/globalscripts.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/locals.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(components/terrain/material.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/debugwindow.cpp:17:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/inventorywindow.cpp:20:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwgui/soulgemdialog.cpp:5:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(components/terrain/material.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/soulgemdialog.cpp:6:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/nifogre/mesh.hpp has correct #includes/fwd-decls)

(components/nifogre/mesh.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:26:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from components/terrain/chunk.cpp:6:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwdialogue/dialoguemanagerimp.cpp:27:
apps/openmw/mwdialogue/../mwgui/dialogue.hpp:13:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwrender/debugging.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/debugging.cpp has correct #includes/fwd-decls)

components/widgets/list.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1, etc

components/widgets/list.hpp should remove these lines:

The full include-list for components/widgets/list.hpp:
#include <string>                       // for string
#include <vector>                       // for vector
#include "MyGUI_Delegate"               // for CMultiDelegate1, etc
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Widget.h"               // for Widget
namespace MyGUI { class ScrollView; }  // lines 11-11
---

(apps/openmw/mwgui/travelwindow.hpp has correct #includes/fwd-decls)

components/widgets/list.cpp should add these lines:

components/widgets/list.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 3-3
- #include <algorithm>  // lines 6-6
- #include "MyGUI_Align.h"  // lines 8-8
- #include "MyGUI_ISubWidgetText.h"  // lines 9-9
- #include "MyGUI_UString.h"  // lines 12-12
- #include "MyGUI_WidgetInput.h"  // lines 13-13

The full include-list for components/widgets/list.cpp:
#include "list.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include "MyGUI_ScrollView.h"           // for ScrollView
#include "MyGUI_Types.h"                // for IntPoint, IntSize
---

apps/openmw/mwgui/travelwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/travelwindow.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <vector>  // lines 8-8
- #include "../mwbase/soundmanager.hpp"  // lines 13-13
- #include "../mwworld/cellstore.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "MyGUI_Align.h"  // lines 22-22
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_Widget.h"  // lines 28-28
- #include "MyGUI_WidgetInput.h"  // lines 29-29
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 35-35
- #include "components/esm/loadgmst.hpp"  // lines 37-37
- #include "components/esm/loadnpc.hpp"  // lines 38-38

The full include-list for apps/openmw/mwgui/travelwindow.cpp:
#include "travelwindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <OgreVector3.h>                // for Vector3
#include <math.h>                       // for pow, sqrt
#include <istream>                      // for basic_istream::operator>>, etc
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/actionteleport.hpp"  // for ActionTeleport
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/defs.hpp"      // for Position
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---

(components/config/gamesettings.hpp has correct #includes/fwd-decls)

components/config/gamesettings.cpp should add these lines:

components/config/gamesettings.cpp should remove these lines:
- #include <QTextStream>  // lines 5-5
- #include "components/files/multidircollection.hpp"  // lines 9-9

The full include-list for components/config/gamesettings.cpp:
#include "gamesettings.hpp"
#include <QMap>                         // for QMap, QMapIterator
#include <QString>                      // for QString, QLatin1String
#include <QtCore>                       // for QTextStream, QByteArray, etc
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <string>                       // for string
#include "launchersettings.hpp"         // for LauncherSettings
---

apps/openmw/mwgui/messagebox.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/messagebox.hpp should remove these lines:
- #include <vector>  // lines 5-5
- namespace MyGUI { class Button; }  // lines 17-17

The full include-list for apps/openmw/mwgui/messagebox.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "openengine/gui/layout.hpp"    // for Layout
#include "windowbase.hpp"               // for WindowModal
namespace MWGui { class InteractiveMessageBox; }  // lines 24-24
namespace MWGui { class MessageBox; }  // lines 25-25
namespace MyGUI { class EditBox; }  // lines 18-18
namespace MyGUI { class Widget; }  // lines 19-19
---

apps/openmw/mwgui/messagebox.cpp should add these lines:

apps/openmw/mwgui/messagebox.cpp should remove these lines:
- #include <stdexcept>  // lines 7-7
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_RTTI.h"  // lines 13-13
- #include "MyGUI_WidgetInput.h"  // lines 17-17
- #include "MyGUI_WidgetStyle.h"  // lines 18-18
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 19-19

The full include-list for apps/openmw/mwgui/messagebox.cpp:
#include "messagebox.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <stddef.h>                     // for NULL
#include <components/misc/stringops.hpp>  // for StringUtils
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
---

(components/bsa/resources.hpp has correct #includes/fwd-decls)

(components/bsa/resources.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/debugwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/debugwindow.cpp should add these lines:
namespace MyGUI { class TabItem; }

apps/openmw/mwgui/debugwindow.cpp should remove these lines:
- #include <MyGUI_TabItem.h>  // lines 5-5
- #include <algorithm>  // lines 7-7
- #include "MyGUI_Align.h"  // lines 12-12
- #include "MyGUI_RTTI.h"  // lines 13-13
- #include "MyGUI_StringUtility.h"  // lines 14-14
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 17-17

The full include-list for apps/openmw/mwgui/debugwindow.cpp:
#include "debugwindow.hpp"
#include <LinearMath/btQuickprof.h>     // for CProfileIterator, etc
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_TabControl.h>           // for TabControl
#include <stddef.h>                     // for size_t
#include <ostream>                      // for stringstream, basic_ostream
#include <string>                       // for string
#include "LinearMath/btScalar.h"        // for SIMD_EPSILON
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
namespace MyGUI { class TabItem; }
---
In file included from extern/shiny/Main/PropertyBase.cpp:10:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
extern/shiny/Main/PropertyBase.cpp:297:16: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        if (typeid( *(it->second) ) == typeid(LinkedValue))
                                    ^
extern/shiny/Main/PropertyBase.cpp:298:12: error: invalid operands to binary expression ('std::ofstream' (aka 'basic_ofstream<char>') and 'const std::string' (aka 'const basic_string<char>'))
                                stream << indentation << it->first << " " << "$" + static_cast<LinkedValue*>(&*(it->second))->_getStringValue() << '\n';
                                ~~~~~~ ^  ~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:2772:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:471:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:476:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:482:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:488:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:493:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:513:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:530:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:543:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:548:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/ostream.tcc:321:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/complex:521:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
    ^
extern/shiny/Main/PropertyBase.cpp:300:12: error: invalid operands to binary expression ('std::ofstream' (aka 'basic_ofstream<char>') and 'const std::string' (aka 'const basic_string<char>'))
                                stream << indentation << it->first << " " << retrieveValue<StringValue>(it->second, this).get() << '\n';
                                ~~~~~~ ^  ~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:2772:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:471:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:476:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:482:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:488:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:493:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:513:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:530:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:543:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/ostream:548:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/ostream.tcc:321:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/complex:521:5: note: candidate template ignored: could not match 'basic_ostream' against 'basic_ofstream'
    operator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
    ^

(apps/openmw/mwdialogue/scripttest.hpp has correct #includes/fwd-decls)

apps/openmw/mwdialogue/scripttest.cpp should add these lines:
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwdialogue/scripttest.cpp should remove these lines:
- #include "apps/openmw/mwdialogue/../mwbase/../mwworld/ptr.hpp"  // lines 17-17

The full include-list for apps/openmw/mwdialogue/scripttest.cpp:
#include "scripttest.hpp"
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/locals.hpp>  // for Locals
#include <components/compiler/scanner.hpp>  // for Scanner
#include <components/compiler/scriptparser.hpp>  // for ScriptParser
#include <components/compiler/streamerrorhandler.hpp>
#include <exception>                    // for exception
#include <iostream>                     // for ostream, endl, etc
#include <string>                       // for allocator, string, etc
#include <vector>                       // for vector, vector<>::iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/world.hpp"          // for World
#include "../mwscript/compilercontext.hpp"  // for CompilerContext, etc
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwdialogue/../mwworld/esmstore.hpp"  // for ESMStore
#include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddial.hpp"  // for Dialogue
#include "components/esm/loadinfo.hpp"  // for DialInfo
#include "components/esm/loadnpc.hpp"   // for NPC
#include "filter.hpp"                   // for Filter
namespace Compiler { class Extensions; }  // lines 27-27
---
In file included from components/nifogre/ogrenifloader.cpp:47:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

apps/openmw/mwgui/mapwindow.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/mapwindow.hpp should remove these lines:
- #include <set>  // lines 7-7
- #include <vector>  // lines 10-10

The full include-list for apps/openmw/mwgui/mapwindow.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint32_t
#include <components/esm/custommarkerstate.hpp>  // for CustomMarker
#include <string>                       // for string
#include <utility>                      // for pair
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_Types.h"                // for IntPoint, IntCoord
#include "apps/openmw/mwgui/windowbase.hpp"  // for NoDrop, WindowModal
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace ESM { class ESMReader; }  // lines 32-32
namespace ESM { class ESMWriter; }  // lines 33-33
namespace Loading { class Listener; }  // lines 38-38
namespace MWGui { class DragAndDrop; }  // lines 18-18
namespace MWRender { class GlobalMap; }  // lines 27-27
namespace MyGUI { class Button; }  // lines 19-19
namespace MyGUI { class ImageBox; }  // lines 20-20
namespace MyGUI { class ScrollView; }  // lines 21-21
namespace MyGUI { class TextBox; }  // lines 22-22
namespace MyGUI { class Widget; }  // lines 23-23
---

apps/openmw/mwgui/mapwindow.cpp should add these lines:
namespace MyGUI { class ISubWidget; }

apps/openmw/mwgui/mapwindow.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <algorithm>  // lines 13-13
- #include <stdexcept>  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 22-22
- #include "MyGUI_Align.h"  // lines 24-24
- #include "MyGUI_EventPair.h"  // lines 27-27
- #include "MyGUI_ISubWidget.h"  // lines 28-28
- #include "MyGUI_StringUtility.h"  // lines 31-31
- #include "MyGUI_WidgetInput.h"  // lines 37-37
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 42-42
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 43-43
- #include "components/settings/settings.hpp"  // lines 50-50

The full include-list for apps/openmw/mwgui/mapwindow.cpp:
#include "mapwindow.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_RotatingSkin.h>         // for RotatingSkin
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreVector2.h>                // for Vector2
#include <stdlib.h>                     // for abs
#include <cmath>                        // for atan2
#include <components/esm/globalmap.hpp>  // for GlobalMap
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World, World::DoorMarker, etc
#include "../mwrender/globalmap.hpp"    // for GlobalMap
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/player.hpp"        // for Player
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_ISubWidgetRect.h"       // for ISubWidgetRect
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_TextIterator.h"         // for TextIterator
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/cellid.hpp"    // for CellId, CellId::CellIndex
#include "components/esm/custommarkerstate.hpp"  // for CustomMarker
#include "components/esm/defs.hpp"      // for Position, etc
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/misc/stringops.hpp"  // for StringUtils
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
namespace MWGui { class DragAndDrop; }  // lines 54-54
namespace MyGUI { class ISubWidget; }
---

(apps/openmw/mwscript/userextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/userextensions.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/soulgemdialog.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/soulgemdialog.cpp should add these lines:

apps/openmw/mwgui/soulgemdialog.cpp should remove these lines:
- #include <string>  // lines 1-1
- #include <vector>  // lines 2-2
- #include "messagebox.hpp"  // lines 9-9

The full include-list for apps/openmw/mwgui/soulgemdialog.cpp:
#include "soulgemdialog.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
---
In file included from apps/openmw/mwscript/miscextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwworld/cellstore.hpp:11:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwgui/savegamedialog.cpp:25:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:25:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/savegamedialog.cpp:25:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/miscextensions.cpp:24:
In file included from apps/openmw/mwscript/../mwworld/cellstore.hpp:14:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^

(apps/openmw/mwgui/companionitemmodel.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/companionitemmodel.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/miscextensions.cpp:27:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

apps/openmw/mwinput/inputmanagerimp.hpp should add these lines:

apps/openmw/mwinput/inputmanagerimp.hpp should remove these lines:
- #include <map>  // lines 49-49
- #include <vector>  // lines 51-51

The full include-list for apps/openmw/mwinput/inputmanagerimp.hpp:
#include <extern/oics/ICSChannelListener.h>  // for ChannelListener
#include <extern/oics/ICSInputControlSystem.h>  // for InputControlSystem, etc
#include <components/settings/settings.hpp>  // for CategorySettingVector
#include <string>                       // for string
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "SDL_events.h"                 // for SDL_KeyboardEvent, etc
#include "SDL_scancode.h"               // for SDL_Scancode
#include "SDL_stdinc.h"                 // for Uint8
#include "extern/oics/../sdl4ogre/events.h"  // for KeyListener, etc
#include "extern/oics/ICSControl.h"     // for Control, etc
namespace ICS { class Channel; }  // lines 13-13
namespace MWWorld { class Player; }  // lines 26-26
namespace MyGUI { class MouseButton; }  // lines 44-44
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 20-20
namespace OMW { class Engine; }  // lines 35-35
namespace SFO { class InputWrapper; }  // lines 14-14
---

apps/openmw/mwinput/inputmanagerimp.cpp should add these lines:
#include "extern/oics/../sdl4ogre/OISCompat.h"  // for KeyCode, etc
namespace MWWorld { class InventoryStore; }

apps/openmw/mwinput/inputmanagerimp.cpp should remove these lines:
- #include <MyGUI_Widget.h>  // lines 4-4
- #include <algorithm>  // lines 10-10
- #include <boost/lexical_cast.hpp>  // lines 6-6
- #include <sstream>  // lines 11-11
- #include <stdexcept>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../mwbase/soundmanager.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 23-23
- #include "../mwworld/inventorystore.hpp"  // lines 24-24
- #include "MyGUI_RTTI.h"  // lines 28-28
- #include "apps/openmw/mwinput/../mwbase/../mwmechanics/creaturestats.hpp"  // lines 34-34
- #include "apps/openmw/mwinput/../mwworld/containerstore.hpp"  // lines 38-38
- #include "apps/openmw/mwinput/../mwworld/store.hpp"  // lines 39-39
- #include "components/esm/loadgmst.hpp"  // lines 40-40
- #include "extern/sdl4ogre/OISCompat.h"  // lines 45-45

The full include-list for apps/openmw/mwinput/inputmanagerimp.cpp:
#include "inputmanagerimp.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <OgreRenderWindow.h>           // for RenderWindow
#include <ctype.h>                      // for isprint
#include <stddef.h>                     // for size_t, NULL
#include <openengine/ogre/renderer.hpp>  // for OgreRenderer
#include "../engine.hpp"                // for Engine
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/windowbase.hpp"      // for WindowModal
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/player.hpp"        // for Player
#include "MyGUI_KeyCode.h"              // for KeyCode, KeyCode::Enum
#include "MyGUI_MouseButton.h"          // for MouseButton, etc
#include "MyGUI_Types.h"                // for IntSize
#include "SDL_keyboard.h"               // for SDL_Keysym, etc
#include "SDL_keycode.h"                // for SDLK_SCANCODE_MASK
#include "SDL_mouse.h"                  // for SDL_BUTTON_RIGHT, etc
#include "apps/openmw/mwinput/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwinput/../mwbase/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwinput/../mwbase/environment.hpp"
#include "apps/openmw/mwinput/../mwdialogue/../mwworld/ptr.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "extern/oics/../sdl4ogre/OISCompat.h"  // for KeyCode, etc
#include "extern/oics/ICSChannel.h"     // for Channel, etc
#include "extern/oics/ICSInputControlSystem.h"  // for InputControlSystem, etc
#include "extern/oics/ICSPrerequisites.h"  // for ICS_MAX_DEVICE_BUTTONS
#include "extern/sdl4ogre/sdlinputwrapper.hpp"  // for InputWrapper
namespace MWWorld { class InventoryStore; }
---
apps/openmw/mwgui/savegamedialog.cpp:27:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/loadingscreen.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/loadingscreen.cpp should add these lines:

apps/openmw/mwgui/loadingscreen.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 10-10
- #include <iostream>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "components/settings/settings.hpp"  // lines 33-33

The full include-list for apps/openmw/mwgui/loadingscreen.cpp:
#include "loadingscreen.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <MyGUI_TextBox.h>              // for TextBox
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreSceneManager.h>           // for SceneManager, etc
#include <OgreTextureManager.h>         // for TextureManager
#include <stdlib.h>                     // for rand
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreImage.h"                  // for Image, Image::Box
#include "OgreRenderQueue.h"
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreStringVector.h"           // for StringVector, etc
#include "OgreTexture.h"                // for Texture
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
#include "backgroundimage.hpp"          // for BackgroundImage
---

(apps/openmw/mwdialogue/filter.hpp has correct #includes/fwd-decls)

apps/openmw/mwdialogue/filter.cpp should add these lines:
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/../mwmechanics/magiceffects.hpp"

apps/openmw/mwdialogue/filter.cpp should remove these lines:
- #include "../mwmechanics/magiceffects.hpp"  // lines 17-17

The full include-list for apps/openmw/mwdialogue/filter.cpp:
#include "filter.hpp"
#include <stddef.h>                     // for NULL
#include <components/compiler/locals.hpp>  // for Locals
#include <list>                         // for _List_const_iterator, etc
#include <map>                          // for map, etc
#include <stdexcept>                    // for runtime_error, logic_error
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwdialogue/../mwbase/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/stat.hpp"
#include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"
#include "apps/openmw/mwdialogue/../mwworld/containerstore.hpp"
#include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"
#include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // for Store
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadfact.hpp"  // for Faction, RankData, etc
#include "components/esm/loadinfo.hpp"  // for DialInfo, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Flags::Female
#include "components/misc/stringops.hpp"  // for StringUtils
#include "selectwrapper.hpp"            // for SelectWrapper, etc
---

(apps/openmw/mwscript/locals.hpp has correct #includes/fwd-decls)

(components/misc/resourcehelpers.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/locals.cpp has correct #includes/fwd-decls)

(components/misc/resourcehelpers.cpp has correct #includes/fwd-decls)
In file included from components/nif/node.cpp:7:
In file included from ./components/nif/property.hpp:27:
In file included from components/nif/base.hpp:7:
./components/nif/recordptr.hpp:46:19: error: 'Nif::NiSourceTexture' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/property.hpp:88:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::NiSourceTexture>::post' requested here
            texture.post(nif);
                    ^
./components/nif/recordptr.hpp:131:7: note: forward declaration of 'Nif::NiSourceTexture'
class NiSourceTexture;
      ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:12:
apps/openmw/mwsound/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwsound/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/inventorywindow.cpp:25:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/journalwindow.cpp:7:
./components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:13:
In file included from apps/openmw/mwsound/../mwworld/cellstore.hpp:11:
apps/openmw/mwsound/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwsound/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwgui/journalbooks.hpp has correct #includes/fwd-decls)

(components/terrain/chunk.hpp has correct #includes/fwd-decls)

(extern/shiny/Main/PropertyBase.hpp has correct #includes/fwd-decls)

(components/terrain/chunk.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/journalbooks.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/PropertyBase.cpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/globalscripts.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/globalscripts.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/globalscripts.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // lines 12-12

The full include-list for apps/openmw/mwscript/globalscripts.cpp:
#include "globalscripts.hpp"
#include <components/esm/globalscript.hpp>  // for GlobalScript
#include <components/misc/stringops.hpp>  // for StringUtils
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <utility>                      // for pair, make_pair
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_GSCR
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadscpt.hpp"  // for Script
#include "components/esm/loadsscr.hpp"  // for StartScript
#include "interpretercontext.hpp"       // for InterpreterContext
---
apps/openmw/mwgui/windowpinnablebase.cpp:5:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/exposedwindow.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:14:
In file included from apps/openmw/mwsound/../mwworld/esmstore.hpp:48:
apps/openmw/mwsound/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:14:
In file included from apps/openmw/mwsound/../mwworld/esmstore.hpp:48:
apps/openmw/mwsound/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwsound/soundmanagerimp.cpp:14:
In file included from apps/openmw/mwsound/../mwworld/esmstore.hpp:48:
apps/openmw/mwsound/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/exposedwindow.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/companionwindow.cpp:8:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwgui/pickpocketitemmodel.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/pickpocketitemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/pickpocketitemmodel.cpp should remove these lines:
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwgui/pickpocketitemmodel.cpp:
#include "pickpocketitemmodel.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <algorithm>                    // for find
#include <stdexcept>                    // for runtime_error
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
---

(components/nif/node.hpp has correct #includes/fwd-decls)

(components/nif/node.cpp has correct #includes/fwd-decls)

(components/fontloader/fontloader.hpp has correct #includes/fwd-decls)

apps/openmw/mwdialogue/dialoguemanagerimp.hpp should add these lines:
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwdialogue/dialoguemanagerimp.hpp should remove these lines:
- #include <map>  // lines 7-7
- #include <set>  // lines 8-8
- #include <vector>  // lines 10-10
- #include "apps/openmw/mwdialogue/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 14-14
- #include "components/esm/loaddial.hpp"  // lines 15-15
- #include "components/interpreter/types.hpp"  // lines 16-16

The full include-list for apps/openmw/mwdialogue/dialoguemanagerimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <components/compiler/streamerrorhandler.hpp>
#include <iosfwd>                       // for ostream
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwscript/compilercontext.hpp"  // for CompilerContext
#include "apps/openmw/mwdialogue/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace Compiler { class Extensions; }  // lines 18-18
namespace ESM { class ESMReader; }  // lines 19-19
namespace ESM { class ESMWriter; }  // lines 20-20
namespace Loading { class Listener; }  // lines 21-21
namespace Translation { class Storage; }  // lines 22-22
---

apps/openmw/mwdialogue/dialoguemanagerimp.cpp should add these lines:
namespace ESM { struct Faction; }
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwdialogue/dialoguemanagerimp.cpp should remove these lines:
- #include <algorithm>  // lines 12-12
- #include <components/interpreter/defines.hpp>  // lines 9-9
- #include <components/interpreter/interpreter.hpp>  // lines 10-10
- #include <cstdlib>  // lines 13-13
- #include <list>  // lines 16-16
- #include <typeinfo>  // lines 17-17
- #include <utility>  // lines 18-18
- #include "../mwscript/extensions.hpp"  // lines 30-30
- #include "../mwworld/esmstore.hpp"  // lines 34-34
- #include "apps/openmw/mwdialogue/../mwworld/../mwscript/locals.hpp"  // lines 37-37
- #include "apps/openmw/mwdialogue/../mwworld/livecellref.hpp"  // lines 38-38
- #include "apps/openmw/mwdialogue/../mwworld/refdata.hpp"  // lines 39-39
- #include "apps/openmw/mwdialogue/../mwworld/store.hpp"  // lines 40-40
- #include "components/esm/aipackage.hpp"  // lines 42-42
- #include "components/esm/loadcrea.hpp"  // lines 45-45
- #include "components/esm/loadfact.hpp"  // lines 46-46
- #include "components/esm/loadgmst.hpp"  // lines 47-47
- #include "components/translation/translation.hpp"  // lines 51-51
- #include "hypertextparser.hpp"  // lines 54-54

The full include-list for apps/openmw/mwdialogue/dialoguemanagerimp.cpp:
#include "dialoguemanagerimp.hpp"
#include <stddef.h>                     // for NULL
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/locals.hpp>  // for Locals
#include <components/compiler/scanner.hpp>  // for Scanner
#include <components/compiler/scriptparser.hpp>  // for ScriptParser
#include <components/esm/dialoguestate.hpp>  // for DialogueState
#include <components/esm/loaddial.hpp>  // for Dialogue, etc
#include <components/esm/loadinfo.hpp>  // for DialInfo
#include <exception>                    // for exception
#include <iostream>                     // for cout
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/dialogue.hpp"        // for DialogueWindow, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwscript/compilercontext.hpp"  // for CompilerContext, etc
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "apps/openmw/mwdialogue/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwdialogue/../mwbase/../mwmechanics/creaturestats.hpp"
#include "components/compiler/streamerrorhandler.hpp"
#include "components/esm/defs.hpp"      // for RecNameInts::REC_DIAS
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "filter.hpp"                   // for Filter
namespace Compiler { class Extensions; }  // lines 56-56
namespace ESM { class ESMReader; }  // lines 57-57
namespace ESM { struct Faction; }
namespace ESM { struct GameSetting; }
namespace Loading { class Listener; }  // lines 58-58
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---

(components/fontloader/fontloader.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/companionwindow.cpp:12:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwscript/statsextensions.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/scriptmanagerimp.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadscpt.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/scriptmanagerimp.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadscpt.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwscript/scriptmanagerimp.cpp:14:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadscpt.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

(apps/openmw/mwgui/windowpinnablebase.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/windowpinnablebase.cpp should add these lines:
namespace MWGui { class ExposedWindow; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/windowpinnablebase.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include "MyGUI_RTTI.h"  // lines 6-6
- #include "MyGUI_WidgetInput.h"  // lines 9-9
- #include "exposedwindow.hpp"  // lines 11-11

The full include-list for apps/openmw/mwgui/windowpinnablebase.cpp:
#include "windowpinnablebase.hpp"
#include <stddef.h>                     // for NULL
#include <vector>                       // for vector, vector<>::iterator
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetDefines.h"        // for VectorWidgetPtr
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
namespace MWGui { class ExposedWindow; }
namespace MyGUI { class Button; }
---
In file included from apps/openmw/mwgui/itemmodel.cpp:5:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

apps/openmw/mwscript/statsextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/statsextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 28-28

The full include-list for apps/openmw/mwscript/statsextensions.cpp:
#include "statsextensions.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for min
#include <components/compiler/opcodes.hpp>  // for numberOfAttributes, etc
#include <components/esm/loadnpc.hpp>   // for NPC
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0, Opcode1
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <map>                          // for map, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator!=, etc
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/player.hpp"        // for Player
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/spells.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/../mwworld/livecellref.hpp"
#include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadfact.hpp"  // for Faction
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/interpreter/types.hpp"  // for Data, Type_Integer, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwdialogue/selectwrapper.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/selectwrapper.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/textinput.cpp:5:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
apps/openmw/mwgui/textinput.cpp:6:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/savegamedialog.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/savegamedialog.cpp should add these lines:

apps/openmw/mwgui/savegamedialog.cpp should remove these lines:
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <OgreTextureManager.h>  // lines 6-6
- #include <algorithm>  // lines 13-13
- #include <components/misc/stringops.hpp>  // lines 9-9
- #include <components/settings/settings.hpp>  // lines 10-10
- #include <list>  // lines 14-14
- #include <stdexcept>  // lines 16-16
- #include <vector>  // lines 18-18
- #include "../mwbase/world.hpp"  // lines 23-23
- #include "../mwworld/esmstore.hpp"  // lines 25-25
- #include "MyGUI_EventPair.h"  // lines 29-29
- #include "MyGUI_RTTI.h"  // lines 31-31
- #include "MyGUI_Widget.h"  // lines 33-33
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "OgrePixelFormat.h"  // lines 36-36
- #include "OgreResourceGroupManager.h"  // lines 38-38
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 42-42
- #include "components/esm/loadclas.hpp"  // lines 44-44

The full include-list for apps/openmw/mwgui/savegamedialog.cpp:
#include "savegamedialog.hpp"
#include <MyGUI_ComboBox.h>             // for ComboBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_ListBox.h>              // for ListBox
#include <OgreImage.h>                  // for Image
#include <assert.h>                     // for assert
#include <locale.h>                     // for setlocale, LC_TIME
#include <time.h>                       // for localtime, time_t
#include <boost/filesystem/path.hpp>    // for path
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwstate/character.hpp"     // for Slot, Character, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_UString.h"              // for UString
#include "OgreDataStream.h"             // for DataStreamPtr
#include "OgrePrerequisites.h"          // for TexturePtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "components/esm/savedgame.hpp"  // for SavedGame, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
---
In file included from apps/openmw/mwgui/levelupdialog.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/itemmodel.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/itemmodel.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/itemmodel.cpp:8:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwgui/inventorywindow.hpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class InventoryPreview; }

apps/openmw/mwgui/inventorywindow.hpp should remove these lines:
- #include "apps/openmw/mwgui/../mwrender/../mwworld/ptr.hpp"  // lines 7-7
- #include "apps/openmw/mwgui/../mwrender/characterpreview.hpp"  // lines 8-8

The full include-list for apps/openmw/mwgui/inventorywindow.hpp:
#include <memory>                       // for auto_ptr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // for GuiMode
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr
#include "windowpinnablebase.hpp"       // for WindowPinnableBase
namespace MWGui { class DragAndDrop; }  // lines 28-28
namespace MWGui { class ItemModel; }  // lines 29-29
namespace MWGui { class ItemView; }  // lines 30-30
namespace MWGui { class SortFilterItemModel; }  // lines 31-31
namespace MWGui { class TradeItemModel; }  // lines 32-32
namespace MWGui { namespace Widgets { class MWDynamicStat; } }  // lines 25-25
namespace MWRender { class InventoryPreview; }
namespace MyGUI { class Button; }  // lines 11-11
namespace MyGUI { class ImageBox; }  // lines 12-12
namespace MyGUI { class TextBox; }  // lines 13-13
namespace MyGUI { class Widget; }  // lines 14-14
namespace MyGUI { class Window; }  // lines 15-15
---

apps/openmw/mwgui/inventorywindow.cpp should add these lines:

apps/openmw/mwgui/inventorywindow.cpp should remove these lines:
- #include <algorithm>  // lines 8-8
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 6-6
- #include <stdexcept>  // lines 9-9
- #include <typeinfo>  // lines 11-11
- #include <utility>  // lines 12-12
- #include <vector>  // lines 13-13
- #include "../mwbase/soundmanager.hpp"  // lines 18-18
- #include "../mwrender/characterpreview.hpp"  // lines 21-21
- #include "MyGUI_EventPair.h"  // lines 26-26
- #include "MyGUI_RTTI.h"  // lines 28-28
- #include "MyGUI_StringUtility.h"  // lines 29-29
- #include "MyGUI_WidgetInput.h"  // lines 34-34
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/action.hpp"  // lines 35-35
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/windowpinnablebase.hpp"  // lines 41-41
- #include "bookwindow.hpp"  // lines 42-42
- #include "components/esm/loadalch.hpp"  // lines 43-43
- #include "components/esm/loadappa.hpp"  // lines 44-44
- #include "components/esm/loadarmo.hpp"  // lines 45-45
- #include "components/esm/loadbook.hpp"  // lines 46-46
- #include "components/esm/loadclot.hpp"  // lines 47-47
- #include "components/esm/loadingr.hpp"  // lines 48-48
- #include "components/esm/loadligh.hpp"  // lines 49-49
- #include "components/esm/loadlock.hpp"  // lines 50-50
- #include "components/esm/loadmisc.hpp"  // lines 51-51
- #include "components/esm/loadprob.hpp"  // lines 52-52
- #include "components/esm/loadrepa.hpp"  // lines 53-53
- #include "components/esm/loadweap.hpp"  // lines 54-54
- #include "components/settings/settings.hpp"  // lines 56-56
- #include "inventoryitemmodel.hpp"  // lines 59-59
- #include "scrollwindow.hpp"  // lines 62-62

The full include-list for apps/openmw/mwgui/inventorywindow.cpp:
#include "inventorywindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_Window.h>               // for Window
#include <stddef.h>                     // for NULL, size_t
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "MyGUI_MouseButton.h"          // for MouseButton, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "countdialog.hpp"              // for CountDialog, etc
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
#include "spellwindow.hpp"              // for SpellWindow
#include "tradeitemmodel.hpp"           // for TradeItemModel
#include "tradewindow.hpp"              // for TradeWindow
#include "widgets.hpp"                  // for MWDynamicStat
namespace MyGUI { class ITexture; }  // lines 69-69
---

(apps/openmw/mwgui/companionwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/companionwindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwgui/companionwindow.cpp should remove these lines:
- #include <string>  // lines 3-3
- #include <typeinfo>  // lines 4-4
- #include <vector>  // lines 5-5
- #include "../mwmechanics/npcstats.hpp"  // lines 9-9
- #include "MyGUI_Button.h"  // lines 11-11
- #include "MyGUI_RTTI.h"  // lines 13-13
- #include "MyGUI_StringUtility.h"  // lines 14-14
- #include "MyGUI_TextBox.h"  // lines 15-15
- #include "MyGUI_WidgetInput.h"  // lines 16-16
- #include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 20-20
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 24-24
- #include "components/esm/loadnpc.hpp"  // lines 27-27
- #include "messagebox.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/companionwindow.cpp:
#include "companionwindow.hpp"
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "apps/openmw/mwgui/widgets.hpp"  // for MWDynamicStat
#include "companionitemmodel.hpp"       // for CompanionItemModel
#include "countdialog.hpp"              // for CountDialog, etc
#include "draganddrop.hpp"              // for DragAndDrop
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
namespace MyGUI { class Widget; }  // lines 34-34
---
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/levelupdialog.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/textinput.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/textinput.cpp should add these lines:
namespace MyGUI { class Button; }

apps/openmw/mwgui/textinput.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include "MyGUI_EventPair.h"  // lines 7-7
- #include "MyGUI_RTTI.h"  // lines 8-8
- #include "MyGUI_WidgetInput.h"  // lines 10-10
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 11-11

The full include-list for apps/openmw/mwgui/textinput.cpp:
#include "textinput.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_UString.h"              // for UString
namespace MyGUI { class Button; }
namespace MyGUI { class Widget; }  // lines 14-14
---
In file included from apps/openmw/mwscript/dialogueextensions.cpp:14:
./apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(components/nifogre/ogrenifloader.hpp has correct #includes/fwd-decls)

(libs/openengine/ogre/imagerotate.hpp has correct #includes/fwd-decls)

(libs/openengine/ogre/imagerotate.cpp has correct #includes/fwd-decls)
In file included from extern/shiny/Platforms/Ogre/OgrePlatform.cpp:11:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Platforms/Ogre/../../Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwdialogue/journalimp.cpp:14:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:5:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:121:49: warning: 'destruct' is deprecated [-Wdeprecated-declarations]
    if(pkt->data != flush_pkt.data && pkt1->pkt.destruct == NULL)
                                                ^
/usr/include/libavcodec/avcodec.h:994:13: note: 'destruct' has been explicitly marked deprecated here
    void  (*destruct)(struct AVPacket *);
            ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:375:15: warning: 'avcodec_default_get_buffer' is deprecated [-Wdeprecated-declarations]
    int ret = avcodec_default_get_buffer(c, pic);
              ^
/usr/include/libavcodec/avcodec.h:3493:26: note: 'avcodec_default_get_buffer' has been explicitly marked deprecated here
attribute_deprecated int avcodec_default_get_buffer(AVCodecContext *s, AVFrame *pic);
                         ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:384:5: warning: 'avcodec_default_release_buffer' is deprecated [-Wdeprecated-declarations]
    avcodec_default_release_buffer(c, pic);
    ^
/usr/include/libavcodec/avcodec.h:3494:27: note: 'avcodec_default_release_buffer' has been explicitly marked deprecated here
attribute_deprecated void avcodec_default_release_buffer(AVCodecContext *s, AVFrame *pic);
                          ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:605:19: warning: 'get_buffer' is deprecated [-Wdeprecated-declarations]
        codecCtx->get_buffer = our_get_buffer;
                  ^
/usr/include/libavcodec/avcodec.h:1939:11: note: 'get_buffer' has been explicitly marked deprecated here
    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);
          ^
extern/ogre-ffmpeg-videoplayer/videostate.cpp:606:19: warning: 'release_buffer' is deprecated [-Wdeprecated-declarations]
        codecCtx->release_buffer = our_release_buffer;
                  ^
/usr/include/libavcodec/avcodec.h:1953:12: note: 'release_buffer' has been explicitly marked deprecated here
    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);
           ^

(components/nifogre/ogrenifloader.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/water.cpp:12:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
apps/openmw/mwgui/levelupdialog.cpp:16:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/spellmodel.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwscript/miscextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/dialogueextensions.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/mainmenu.cpp:20:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwscript/dialogueextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/dialogueextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 13-13

The full include-list for apps/openmw/mwscript/dialogueextensions.cpp:
#include "dialogueextensions.hpp"
#include <components/compiler/opcodes.hpp>  // for opcodeAddTopic, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0, Opcode1
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/hypertextparser.cpp:6:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwscript/miscextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwscript/miscextensions.cpp should remove these lines:
- #include "../mwmechanics/creaturestats.hpp"  // lines 21-21
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 34-34

The full include-list for apps/openmw/mwscript/miscextensions.cpp:
#include "miscextensions.hpp"
#include <stddef.h>                     // for size_t
#include <cmath>                        // for sqrt
#include <components/compiler/locals.hpp>  // for Locals
#include <components/compiler/opcodes.hpp>  // for opcodeActivate, etc
#include <components/esm/loadcrea.hpp>  // for Creature
#include <components/esm/loadmgef.hpp>  // for MagicEffect
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0, Opcode1
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <cstdlib>                      // for strtol
#include <ostream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, operator<<, etc
#include <typeinfo>                     // for type_info
#include <vector>                       // for vector, vector<>::iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/player.hpp"        // for Player
#include "OgreVector3.h"                // for Vector3, operator<<
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/activespells.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World, etc
#include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"
#include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store
#include "components/esm/cellref.hpp"   // for RefNum
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadlevlist.hpp"
#include "components/interpreter/context.hpp"  // for Context
#include "components/interpreter/types.hpp"  // for Data, Type_Float, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "interpretercontext.hpp"       // for InterpreterContext
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---

(components/terrain/world.hpp has correct #includes/fwd-decls)

(components/terrain/world.cpp has correct #includes/fwd-decls)

(components/files/linuxpath.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/refraction.cpp:10:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/files/linuxpath.cpp has correct #includes/fwd-decls)
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:154:15: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        if (typeid(*value) == typeid(Vector4))
                                   ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:156:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(Vector3))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:158:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(Vector2))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:160:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(FloatValue))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:162:20: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        else if (typeid(*value) == typeid(IntValue))
                                        ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:173:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value) == typeid(Vector4))
                           ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:181:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(Vector3))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:188:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(Vector2))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:194:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(FloatValue))
                                ^
extern/shiny/Platforms/Ogre/OgrePlatform.cpp:196:19: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                else if (typeid(*value) == typeid(IntValue))
                                ^

(apps/openmw/mwgui/journalwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/journalwindow.cpp should add these lines:

apps/openmw/mwgui/journalwindow.cpp should remove these lines:
- #include <MyGUI_TextBox.h>  // lines 1-1
- #include <boost/bind.hpp>  // lines 3-3
- #include <boost/cstdint.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <set>  // lines 9-9
- #include <stack>  // lines 10-10
- #include <utility>  // lines 12-12
- #include "../mwbase/soundmanager.hpp"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 21-21
- #include "components/misc/stringops.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/journalwindow.cpp:
#include "journalwindow.hpp"
#include <assert.h>                     // for assert
#include <stdint.h>                     // for intptr_t
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include <components/widgets/list.hpp>  // for MWList
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/journal.hpp"        // for Journal, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetInput.h"          // for EventHandle_WidgetVoid
#include "bookpage.hpp"                 // for BookPage, etc
#include "journalbooks.hpp"             // for JournalBooks::Book, etc
#include "journalviewmodel.hpp"         // for JournalViewModel, etc
#include "windowbase.hpp"               // for WindowBase
---
In file included from In file included from components/nif/data.cppapps/openmw/mwgui/tooltips.cpp::217:
:
In file included from apps/openmw/mwgui/../mwbase/windowmanager.hppcomponents/nif/data.hpp::31338::
62components/nif/recordptr.hpp:: 46error:: 19unknown type name 'uint32_t':
 error: 'Nif::Property' is an incomplete type
            ptr = dynamic_cast<X*>(r);
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;                  ^           ~~~~

                                                             ^
components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::Property>::post' requested here
            list[i].post(nif);
                    ^
components/nif/node.hpp:76:15: note: in instantiation of member function 'Nif::RecordListT<Nif::Property>::post' requested here
        props.post(nif);
              ^
components/nif/recordptr.hpp:117:7: note: forward declaration of 'Nif::Property'
class Property;
      ^

(apps/openmw/mwrender/activatoranimation.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/activatoranimation.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/cursor.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/cursor.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/tooltips.cpp:18:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(components/config/launchersettings.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(components/config/launchersettings.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwworld/cellstore.hpp:11:
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwgui/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwgui/spellmodel.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellmodel.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellmodel.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:28:
In file included from apps/openmw/mwgui/../mwworld/cellstore.hpp:14:
apps/openmw/mwgui/../mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:30:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadskil.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:30:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadskil.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/windowmanagerimp.cpp:30:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadskil.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

(extern/shiny/Main/ScriptLoader.hpp has correct #includes/fwd-decls)

(extern/shiny/Main/ScriptLoader.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/levelupdialog.hpp should add these lines:

apps/openmw/mwgui/levelupdialog.hpp should remove these lines:
- #include <vector>  // lines 4-4

The full include-list for apps/openmw/mwgui/levelupdialog.hpp:
#include "windowbase.hpp"               // for WindowBase
namespace MyGUI { class Button; }  // lines 8-8
namespace MyGUI { class EditBox; }  // lines 9-9
namespace MyGUI { class ImageBox; }  // lines 10-10
namespace MyGUI { class TextBox; }  // lines 11-11
namespace MyGUI { class Widget; }  // lines 12-12
---

apps/openmw/mwgui/levelupdialog.cpp should add these lines:
namespace ESM { struct Class; }
namespace ESM { struct NPC; }

apps/openmw/mwgui/levelupdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <algorithm>  // lines 4-4
- #include "../mwbase/soundmanager.hpp"  // lines 8-8
- #include "../mwbase/windowmanager.hpp"  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 13-13
- #include "../mwworld/fallback.hpp"  // lines 14-14
- #include "MyGUI_Align.h"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 17-17
- #include "MyGUI_StringUtility.h"  // lines 18-18
- #include "MyGUI_TPoint.h"  // lines 19-19
- #include "MyGUI_UString.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 31-31
- #include "components/esm/loadclas.hpp"  // lines 32-32
- #include "components/esm/loadnpc.hpp"  // lines 33-33

The full include-list for apps/openmw/mwgui/levelupdialog.cpp:
#include "levelupdialog.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace ESM { struct Class; }
namespace ESM { struct NPC; }
---
In file included from apps/openmw/mwgui/tooltips.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/tooltips.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/tooltips.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/animationextensions.cpp:15:
In file included from apps/openmw/mwscript/ref.hpp:9:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(components/nif/data.hpp has correct #includes/fwd-decls)

(components/nif/data.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/container.cpp:11:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/widgets.cpp:13:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwworld/actionteleport.cpp:7:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/widgets.cpp:14:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwscript/containerextensions.cpp:14:
apps/openmw/mwscript/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwscript/containerextensions.cpp:17:
In file included from apps/openmw/mwscript/../mwworld/containerstore.hpp:10:
apps/openmw/mwscript/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
apps/openmw/mwgui/windowmanagerimp.cpp:34:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwgui/container.cpp:15:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/containerextensions.cpp:18:
apps/openmw/mwscript/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwgui/tooltips.cpp:32:
./apps/openmw/mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/containerextensions.cpp:21:
./apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwscript/containerextensions.cpp:166:58: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    MWWorld::ContainerStoreIterator it = invStore.begin();
                                                         ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:167:34: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    for (; it != invStore.end(); ++it)
                                 ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:172:31: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    if (it == invStore.end())
                              ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:238:31: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    if (it == invStore.end() || it->getTypeName () != typeid(ESM::Armor).name())
                              ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:272:35: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                        if (it != invStore.end() && ::Misc::StringUtils::ciEqual(it->getCellRef().getRefId(), item))
                                  ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:296:63: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    for (MWWorld::ContainerStoreIterator it = invStore.begin(MWWorld::ContainerStore::Type_Miscellaneous);
                                                              ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:297:32: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                         it != invStore.end(); ++it)
                               ^~~~~~~~
apps/openmw/mwscript/containerextensions.cpp:317:31: error: cannot initialize object parameter of type 'MWWorld::ContainerStore' with an expression of type 'MWWorld::InventoryStore'
                    if (it == invStore.end() || it->getTypeName () != typeid(ESM::Weapon).name())
                              ^~~~~~~~
In file included from apps/openmw/mwgui/widgets.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/widgets.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/widgets.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwscript/animationextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/animationextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/animationextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 12-12

The full include-list for apps/openmw/mwscript/animationextensions.cpp:
#include "animationextensions.hpp"
#include <components/compiler/opcodes.hpp>  // for opcodeLoopAnim, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode1, Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/environment.hpp"
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---

apps/openmw/mwscript/scriptmanagerimp.hpp should add these lines:
namespace Interpreter { class Context; }

apps/openmw/mwscript/scriptmanagerimp.hpp should remove these lines:

The full include-list for apps/openmw/mwscript/scriptmanagerimp.hpp:
#include <components/compiler/fileparser.hpp>  // for FileParser
#include <components/compiler/streamerrorhandler.hpp>
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/types.hpp>  // for Type_Code
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "components/compiler/locals.hpp"  // for Locals
#include "globalscripts.hpp"            // for GlobalScripts
namespace Compiler { class Context; }  // lines 24-24
namespace Interpreter { class Context; }
namespace MWWorld { struct ESMStore; }  // lines 19-19
---
In file included from apps/openmw/mwscript/guiextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwscript/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/guiextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwscript/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/guiextensions.cpp:11:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwscript/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwscript/scriptmanagerimp.cpp should add these lines:
namespace Interpreter { class Context; }

apps/openmw/mwscript/scriptmanagerimp.cpp should remove these lines:

The full include-list for apps/openmw/mwscript/scriptmanagerimp.cpp:
#include "scriptmanagerimp.hpp"
#include <algorithm>                    // for binary_search, sort, etc
#include <cassert>                      // for assert
#include <components/compiler/context.hpp>  // for Context
#include <components/compiler/exception.hpp>  // for SourceException
#include <components/compiler/quickfileparser.hpp>  // for QuickFileParser
#include <components/compiler/scanner.hpp>  // for Scanner
#include <components/esm/loadscpt.hpp>  // for Script
#include <components/misc/stringops.hpp>  // for StringUtils
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwscript/globalscripts.hpp"  // for GlobalScripts
#include "components/compiler/fileparser.hpp"  // for FileParser
#include "components/compiler/streamerrorhandler.hpp"
#include "components/interpreter/interpreter.hpp"  // for Interpreter
#include "components/interpreter/types.hpp"  // for Type_Code
#include "extensions.hpp"               // for installOpcodes
namespace Interpreter { class Context; }
---
In file included from apps/openmw/mwgui/charactercreation.cpp:12:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwgui/mainmenu.hpp should add these lines:

apps/openmw/mwgui/mainmenu.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <string>  // lines 6-6
- namespace Gui { class ImageButton; }  // lines 14-14

The full include-list for apps/openmw/mwgui/mainmenu.hpp:
#include <openengine/gui/layout.hpp>    // for Layout
namespace MWGui { class BackgroundImage; }  // lines 20-20
namespace MWGui { class SaveGameDialog; }  // lines 21-21
namespace MWGui { class VideoWidget; }  // lines 22-22
namespace MyGUI { class ImageBox; }  // lines 8-8
namespace MyGUI { class TextBox; }  // lines 9-9
namespace MyGUI { class Widget; }  // lines 10-10
---

apps/openmw/mwgui/mainmenu.cpp should add these lines:
#include <string>                       // for string

apps/openmw/mwgui/mainmenu.cpp should remove these lines:
- #include <OgreResourceGroupManager.h>  // lines 4-4
- #include <list>  // lines 9-9
- #include <utility>  // lines 11-11
- #include <vector>  // lines 12-12
- #include "../mwbase/soundmanager.hpp"  // lines 15-15
- #include "../mwbase/world.hpp"  // lines 18-18
- #include "MyGUI_Align.h"  // lines 19-19
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 25-25
- #include "components/settings/settings.hpp"  // lines 28-28
- #include "confirmationdialog.hpp"  // lines 29-29
- #include "openengine/gui/layout.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/mainmenu.cpp:
#include "mainmenu.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_TextBox.h>              // for TextBox
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/version/version.hpp>  // for OPENMW_VERSION, etc
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_ImageBox.h"             // for ImageBox
#include "MyGUI_Types.h"                // for IntSize, IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "backgroundimage.hpp"          // for BackgroundImage
#include "savegamedialog.hpp"           // for SaveGameDialog
#include "videowidget.hpp"              // for VideoWidget
---
apps/openmw/mwscript/containerextensions.cpp:166:53: error: no matching constructor for initialization of 'MWWorld::ContainerStoreIterator'
                    MWWorld::ContainerStoreIterator it = invStore.begin();
                                                    ^
apps/openmw/mwscript/containerextensions.cpp:336:81: note: in instantiation of member function 'MWScript::Container::OpEquip<MWScript::ImplicitRef>::execute' requested here
             interpreter.installSegment5 (Compiler::Container::opcodeEquip, new OpEquip<ImplicitRef>);
                                                                                ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:211:13: note: candidate constructor not viable: requires single argument 'container', but no arguments were provided
            ContainerStoreIterator (ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:249:13: note: candidate constructor not viable: requires single argument 'src', but no arguments were provided
            ContainerStoreIterator(const ContainerStoreIterator& src);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:214:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (int mask, ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:218:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Potion>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:219:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Apparatus>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:220:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Armor>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:221:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Book>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:222:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Clothing>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:223:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Ingredient>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:224:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Light>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:225:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Lockpick>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:226:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Miscellaneous>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:227:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Probe>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:228:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Repair>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:229:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Weapon>::List::iterator);
            ^
apps/openmw/mwscript/containerextensions.cpp:166:53: error: no matching constructor for initialization of 'MWWorld::ContainerStoreIterator'
                    MWWorld::ContainerStoreIterator it = invStore.begin();
                                                    ^
apps/openmw/mwscript/containerextensions.cpp:337:89: note: in instantiation of member function 'MWScript::Container::OpEquip<MWScript::ExplicitRef>::execute' requested here
             interpreter.installSegment5 (Compiler::Container::opcodeEquipExplicit, new OpEquip<ExplicitRef>);
                                                                                        ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:211:13: note: candidate constructor not viable: requires single argument 'container', but no arguments were provided
            ContainerStoreIterator (ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:249:13: note: candidate constructor not viable: requires single argument 'src', but no arguments were provided
            ContainerStoreIterator(const ContainerStoreIterator& src);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:214:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (int mask, ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:218:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Potion>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:219:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Apparatus>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:220:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Armor>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:221:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Book>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:222:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Clothing>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:223:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Ingredient>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:224:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Light>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:225:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Lockpick>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:226:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Miscellaneous>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:227:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Probe>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:228:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Repair>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:229:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Weapon>::List::iterator);
            ^
apps/openmw/mwscript/containerextensions.cpp:296:58: error: no matching constructor for initialization of 'MWWorld::ContainerStoreIterator'
                    for (MWWorld::ContainerStoreIterator it = invStore.begin(MWWorld::ContainerStore::Type_Miscellaneous);
                                                         ^
apps/openmw/mwscript/containerextensions.cpp:342:86: note: in instantiation of member function 'MWScript::Container::OpHasSoulGem<MWScript::ImplicitRef>::execute' requested here
             interpreter.installSegment5 (Compiler::Container::opcodeHasSoulGem, new OpHasSoulGem<ImplicitRef>);
                                                                                     ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:211:13: note: candidate constructor not viable: requires single argument 'container', but no arguments were provided
            ContainerStoreIterator (ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:249:13: note: candidate constructor not viable: requires single argument 'src', but no arguments were provided
            ContainerStoreIterator(const ContainerStoreIterator& src);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:214:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (int mask, ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:218:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Potion>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:219:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Apparatus>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:220:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Armor>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:221:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Book>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:222:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Clothing>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:223:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Ingredient>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:224:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Light>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:225:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Lockpick>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:226:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Miscellaneous>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:227:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Probe>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:228:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
In file included from apps/openmw/mwgui/recharge.cpp:9:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Repair>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:229:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Weapon>::List::iterator);
            ^
apps/openmw/mwscript/containerextensions.cpp:296:58: error: no matching constructor for initialization of 'MWWorld::ContainerStoreIterator'
                    for (MWWorld::ContainerStoreIterator it = invStore.begin(MWWorld::ContainerStore::Type_Miscellaneous);
                                                         ^
apps/openmw/mwscript/containerextensions.cpp:343:94: note: in instantiation of member function 'MWScript::Container::OpHasSoulGem<MWScript::ExplicitRef>::execute' requested here
             interpreter.installSegment5 (Compiler::Container::opcodeHasSoulGemExplicit, new OpHasSoulGem<ExplicitRef>);
                                                                                             ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:211:13: note: candidate constructor not viable: requires single argument 'container', but no arguments were provided
            ContainerStoreIterator (ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:249:13: note: candidate constructor not viable: requires single argument 'src', but no arguments were provided
            ContainerStoreIterator(const ContainerStoreIterator& src);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:214:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (int mask, ContainerStore *container);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:218:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Potion>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:219:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Apparatus>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:220:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Armor>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:221:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Book>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:222:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Clothing>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:223:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Ingredient>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:224:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Light>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:225:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Lockpick>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:226:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Miscellaneous>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:227:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Probe>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:228:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Repair>::List::iterator);
            ^
apps/openmw/mwscript/../mwworld/containerstore.hpp:229:13: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
            ContainerStoreIterator (ContainerStore *container, MWWorld::CellRefList<ESM::Weapon>::List::iterator);
            ^

(extern/ogre-ffmpeg-videoplayer/videostate.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/recharge.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/failedaction.cpp:2:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/charactercreation.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/charactercreation.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/charactercreation.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/widgets.cpp:32:
apps/openmw/mwgui/controllers.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/itemmodel.hpp has correct #includes/fwd-decls)

(extern/ogre-ffmpeg-videoplayer/videostate.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/itemmodel.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/guiextensions.cpp:14:
./apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/recharge.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/recharge.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellicons.cpp:10:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/spellicons.cpp:11:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwworld/actionteleport.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/actionteleport.cpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr, operator==, operator<

apps/openmw/mwworld/actionteleport.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwworld/actionteleport.cpp:
#include "actionteleport.hpp"
#include <list>                         // for list, _List_iterator, etc
#include <set>                          // for set, etc
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr, operator==, operator<
#include "components/esm/defs.hpp"      // for Position
#include "player.hpp"                   // for Player
---

(libs/openengine/gui/loglistener.hpp has correct #includes/fwd-decls)

(libs/openengine/gui/loglistener.cpp has correct #includes/fwd-decls)

(extern/sdl4ogre/sdlwindowhelper.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgrePlatform.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgrePlatform.cpp has correct #includes/fwd-decls)

(extern/sdl4ogre/sdlwindowhelper.cpp has correct #includes/fwd-decls)

(components/terrain/buffercache.hpp has correct #includes/fwd-decls)

(extern/ogre-ffmpeg-videoplayer/libavwrapper.cpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/refraction.hpp has correct #includes/fwd-decls)

(components/terrain/buffercache.cpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/refraction.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/recharge.cpp:17:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/compilercontext.cpp:7:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwgui/spellicons.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

(apps/openmw/mwrender/water.hpp has correct #includes/fwd-decls)
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwworld/failedaction.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/failedaction.cpp has correct #includes/fwd-decls)

apps/openmw/mwrender/water.cpp should add these lines:
namespace Ogre { struct RenderTargetEvent; }

apps/openmw/mwrender/water.cpp should remove these lines:

The full include-list for apps/openmw/mwrender/water.cpp:
#include "water.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreEntity.h>                 // for Entity
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreMaterialManager.h>        // for MaterialManager
#include <OgreMeshManager.h>            // for MeshManager
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRoot.h>                   // for Root
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTechnique.h>              // for Technique
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <extern/shiny/Platforms/Ogre/OgreMaterial.hpp>
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "OgreBlendMode.h"
#include "OgreCommon.h"                 // for PolygonMode::PM_SOLID
#include "OgreMatrix4.h"                // for Matrix4
#include "OgrePass.h"                   // for Pass
#include "OgrePixelFormat.h"            // for PixelFormat::PF_R8G8B8
#include "OgrePlane.h"                  // for Plane
#include "OgreRenderSystem.h"           // for RenderSystem
#include "OgreRenderTarget.h"           // for RenderTarget
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneManager.h"           // for SceneManager
#include "OgreStringConverter.h"        // for StringConverter
#include "OgreTexture.h"                // for Texture, etc
#include "OgreTextureUnitState.h"       // for TextureUnitState
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_Z, etc
#include "apps/openmw/mwrender/renderconst.hpp"
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/settings/settings.hpp"  // for Manager, etc
#include "extern/shiny/Main/MaterialInstance.hpp"  // for MaterialInstance
#include "extern/shiny/Main/PropertyBase.hpp"  // for makeProperty, etc
#include "refraction.hpp"               // for Refraction
#include "renderingmanager.hpp"         // for RenderingManager
#include "ripplesimulation.hpp"         // for RippleSimulation
#include "sky.hpp"                      // for SkyManager
namespace MWWorld { class Ptr; }  // lines 43-43
namespace Ogre { struct RenderTargetEvent; }
---
apps/openmw/mwgui/charactercreation.cpp:17:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from libs/openengine/gui/manager.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_ConsoleLogListener.h:11:
In file included from /usr/include/MYGUI/MyGUI_ILogListener.h:11:
/usr/include/MYGUI/MyGUI_LogLevel.h:36:31: error: use of undeclared identifier 'std'
                static LogLevel parse(const std::string& _value)
                                            ^
/usr/include/MYGUI/MyGUI_LogLevel.h:81:10: error: use of undeclared identifier 'std'
                friend std::ostream& operator << (std::ostream& _stream, const LogLevel&  _value)
                       ^
/usr/include/MYGUI/MyGUI_LogLevel.h:81:37: error: use of undeclared identifier 'std'
                friend std::ostream& operator << (std::ostream& _stream, const LogLevel&  _value)
                                                  ^
/usr/include/MYGUI/MyGUI_LogLevel.h:87:10: error: use of undeclared identifier 'std'
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                       ^
/usr/include/MYGUI/MyGUI_LogLevel.h:87:37: error: use of undeclared identifier 'std'
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                  ^
/usr/include/MYGUI/MyGUI_LogLevel.h:95:3: error: use of undeclared identifier 'std'
                std::string print() const
                ^
/usr/include/MYGUI/MyGUI_LogLevel.h:43:9: error: use of undeclared identifier 'strcmp'
                                if (strcmp(name, "") == 0 || name == _value)
                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:89:4: error: use of undeclared identifier 'std'
                        std::string value;
                        ^
/usr/include/MYGUI/MyGUI_LogLevel.h:89:16: error: use of undeclared identifier 'value'; did you mean '_value'?
                        std::string value;
                                    ^~~~~
                                    _value
/usr/include/MYGUI/MyGUI_LogLevel.h:87:71: note: '_value' declared here
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:90:15: error: use of undeclared identifier 'value'; did you mean '_value'?
                        _stream >> value;
                                   ^~~~~
                                   _value
/usr/include/MYGUI/MyGUI_LogLevel.h:87:71: note: '_value' declared here
                friend std::istream& operator >> (std::istream& _stream, LogLevel&  _value)
                                                                                    ^
/usr/include/MYGUI/MyGUI_LogLevel.h:97:11: error: cannot initialize return object of type 'int' with an rvalue of type 'const char *'
                        return getValueName(mValue);
                               ^~~~~~~~~~~~~~~~~~~~
In file included from libs/openengine/gui/manager.cpp:1:
In file included from /usr/include/MYGUI/MyGUI_ConsoleLogListener.h:11:
/usr/include/MYGUI/MyGUI_ILogListener.h:28:26: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line) { }
                                       ^
/usr/include/MYGUI/MyGUI_ILogListener.h:28:96: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line) { }
                                                                                                             ^
In file included from libs/openengine/gui/manager.cpp:1:
/usr/include/MYGUI/MyGUI_ConsoleLogListener.h:24:26: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line);
                                       ^
/usr/include/MYGUI/MyGUI_ConsoleLogListener.h:24:96: error: use of undeclared identifier 'std'
                virtual void log(const std::string& _section, LogLevel _level, const struct tm* _time, const std::string& _message, const char* _file, int _line);
                                                                                                             ^
In file included from apps/openmw/mwgui/waitdialog.cpp:10:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwscript/containerextensions.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwscript/containerextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/containerextensions.cpp should remove these lines:
- #include <typeinfo>  // lines 11-11
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 20-20
- #include "components/esm/loadarmo.hpp"  // lines 26-26

The full include-list for apps/openmw/mwscript/containerextensions.cpp:
#include "containerextensions.hpp"
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <boost/format.hpp>
#include <components/compiler/opcodes.hpp>  // for opcodeAddItem, etc
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <stdexcept>                    // for runtime_error
#include <string>                       // for string, allocator, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"
#include "../mwworld/actionequip.hpp"   // for ActionEquip
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/../mwscript/locals.hpp"
#include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwscript/../mwworld/livecellref.hpp"
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct
#include "components/interpreter/types.hpp"  // for Data, Type_Integer
#include "components/misc/stringops.hpp"  // for StringUtils
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---

apps/openmw/mwgui/widgets.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/widgets.hpp should remove these lines:
- #include <vector>  // lines 8-8

The full include-list for apps/openmw/mwgui/widgets.hpp:
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <components/esm/effectlist.hpp>  // for ENAMstruct
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SkillEnum
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_MouseButton.h"          // for MouseButton
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace MyGUI { class ControllerItem; }  // lines 22-22
namespace MyGUI { class ImageBox; }  // lines 23-23
namespace MyGUI { class ProgressBar; }  // lines 17-17
namespace MyGUI { class TextBox; }  // lines 18-18
---

apps/openmw/mwgui/widgets.cpp should add these lines:
namespace ESM { struct EffectList; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/widgets.cpp should remove these lines:
- #include <algorithm>  // lines 7-7
- #include <iomanip>  // lines 8-8
- #include <stdexcept>  // lines 10-10
- #include "../mwbase/windowmanager.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_ControllerItem.h"  // lines 18-18
- #include "MyGUI_LogStream.h"  // lines 20-20
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/attr.hpp"  // lines 26-26
- #include "components/esm/defs.hpp"  // lines 27-27
- #include "components/esm/effectlist.hpp"  // lines 28-28

The full include-list for apps/openmw/mwgui/widgets.cpp:
#include "widgets.hpp"
#include <MyGUI_ControllerManager.h>    // for ControllerManager
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <sstream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Diagnostic.h"           // for MYGUI_ASSERT
#include "MyGUI_ScrollBar.h"
#include "MyGUI_TextBox.h"              // for TextBox
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell
#include "controllers.hpp"              // for ControllerRepeatEvent
namespace ESM { struct EffectList; }
namespace MWWorld { class ESMStore; }
---
In file included from apps/openmw/mwscript/compilercontext.cpp:9:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/compilercontext.cpp:9:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/compilercontext.cpp:9:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwdialogue/hypertextparser.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/hypertextparser.cpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/journalimp.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/waitdialog.cpp:12:
In file included from apps/openmw/mwgui/../mwworld/cellstore.hpp:11:
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwgui/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwdialogue/journalimp.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/containeritemmodel.cpp:6:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:69:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:85:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:98:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:111:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_relops.h:124:5: error: templates must have C++ linkage
    template <class _Tp>
    ^~~~~~~~~~~~~~~~~~~~
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:166:3: error: functions that differ only in their return type cannot be overloaded
  abs(long __i) { return __builtin_labs(__i); }
  ^
/usr/include/stdlib.h:775:12: note: previous declaration is here
extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
       ~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:169:3: error: functions that differ only in their return type cannot be overloaded
  div(long __i, long __j) { return ldiv(__i, __j); }
  ^
/usr/include/stdlib.h:789:14: note: previous declaration is here
extern div_t div (int __numer, int __denom)
       ~~~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:174:3: error: functions that differ only in their return type cannot be overloaded
  abs(long long __x) { return __builtin_llabs (__x); }
  ^
/usr/include/stdlib.h:775:12: note: previous declaration is here
extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
       ~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:214:3: error: functions that differ only in their return type cannot be overloaded
  div(long long __n, long long __d)
  ^
/usr/include/stdlib.h:789:14: note: previous declaration is here
extern div_t div (int __numer, int __denom)
       ~~~~~ ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:59:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/cstdlib:246:9: error: no member named 'div' in namespace '__gnu_cxx'; did you mean '::div'?
  using ::__gnu_cxx::div;
        ^~~~~~~~~~~~~
/usr/include/stdlib.h:789:14: note: '::div' declared here
extern div_t div (int __numer, int __denom)
             ^
In file included from extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:16:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:203:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:207:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp, typename _Compare>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:211:3: error: templates must have C++ linkage
  template<typename _IIter, typename _OIter>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:215:3: error: templates must have C++ linkage
  template<typename _BIter1, typename _BIter2>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:232:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:236:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp, typename _Compare>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:240:3: error: templates must have C++ linkage
  template<typename _FIter, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:244:3: error: templates must have C++ linkage
  template<typename _OIter, typename _Size, typename _Tp>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:250:3: error: templates must have C++ linkage
  template<typename _FIter1, typename _FIter2>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:254:3: error: templates must have C++ linkage
  template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
In file included from apps/openmw/mwgui/spellicons.cpp:29:
In file included from apps/openmw/mwgui/tooltips.hpp:11:
apps/openmw/mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/waitdialog.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/waitdialog.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/waitdialog.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/sky.cpp:16:
In file included from ./extern/shiny/Platforms/Ogre/OgreMaterial.hpp:7:
In file included from ./extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:8:
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(apps/openmw/mwdialogue/keywordsearch.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/sky.cpp:42:
./apps/openmw/mwrender/../mwworld/weather.hpp:207:17: error: no type named 'SoundPtr' in namespace 'MWBase'
        MWBase::SoundPtr mAmbientSound;
        ~~~~~~~~^

(components/nifogre/particles.hpp has correct #includes/fwd-decls)

(components/nifogre/particles.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/terrainstorage.cpp:4:
apps/openmw/mwrender/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwrender/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:11:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(libs/openengine/ogre/renderer.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(libs/openengine/ogre/renderer.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/waitdialog.cpp:16:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/recharge.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/containeritemmodel.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/recharge.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwgui/recharge.cpp should remove these lines:
- #include <algorithm>  // lines 5-5
- #include <boost/format.hpp>  // lines 3-3
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "MyGUI_Align.h"  // lines 15-15
- #include "MyGUI_Button.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 18-18
- #include "MyGUI_StringUtility.h"  // lines 19-19
- #include "MyGUI_WidgetInput.h"  // lines 25-25
- #include "apps/openmw/mwgui/../mwbase/../mwworld/livecellref.hpp"  // lines 30-30
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 38-38
- #include "components/esm/loadmisc.hpp"  // lines 39-39
- #include "components/misc/stringops.hpp"  // lines 41-41

The full include-list for apps/openmw/mwgui/recharge.cpp:
#include "recharge.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stdlib.h>                     // for rand, RAND_MAX
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStoreIterator, etc
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "itemwidget.hpp"               // for ItemWidget
#include "widgets.hpp"                  // for MWDynamicStat, etc
---

(apps/openmw/mwgui/containeritemmodel.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/terrainstorage.cpp:5:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:5:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/terrainstorage.cpp:5:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/spellicons.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/spellicons.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/spellicons.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include <components/misc/resourcehelpers.hpp>  // lines 3-3
- #include <iomanip>  // lines 5-5
- #include <utility>  // lines 7-7
- #include "../mwbase/windowmanager.hpp"  // lines 10-10
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 17-17
- #include "MyGUI_StringUtility.h"  // lines 18-18
- #include "MyGUI_Types.h"  // lines 19-19
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 21-21
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 24-24
- #include "components/esm/attr.hpp"  // lines 25-25
- #include "components/esm/loadgmst.hpp"  // lines 26-26
- #include "components/esm/loadskil.hpp"  // lines 27-27

The full include-list for apps/openmw/mwgui/spellicons.cpp:
#include "spellicons.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include <sstream>                      // for stringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwmechanics/activespells.hpp"
#include "apps/openmw/mwgui/../mwmechanics/spells.hpp"  // for Spells
#include "tooltips.hpp"                 // for ToolTipInfo
---
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwworld/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/aiextensions.cpp:13:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/settingswindow.cpp:28:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:9:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/cells.cpp:10:
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwscript/guiextensions.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/guiextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/guiextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 13-13

The full include-list for apps/openmw/mwscript/guiextensions.cpp:
#include "guiextensions.hpp"
#include <components/compiler/opcodes.hpp>  // for opcodeEnableBirthMenu, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0, Opcode1
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string, operator!=, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwscript/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/store.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/interpreter/context.hpp"  // for Context
#include "components/interpreter/types.hpp"  // for Data
#include "components/misc/stringops.hpp"  // for StringUtils
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---
In file included from libs/openengine/gui/manager.cpp:6:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/journalentry.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/journalentry.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/journalentry.cpp:11:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/journalentry.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/spellmodel.hpp has correct #includes/fwd-decls)

components/process/processinvoker.hpp should add these lines:

components/process/processinvoker.hpp should remove these lines:
- #include <QProcess>  // lines 4-4
- #include <QString>  // lines 5-5
- #include <QStringList>  // lines 6-6

The full include-list for components/process/processinvoker.hpp:
#include <QtCore>                       // for QString, QStringList, etc
---

components/process/processinvoker.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

components/process/processinvoker.cpp should remove these lines:
- #include <QArgument>  // lines 1-1
- #include <QFileInfo>  // lines 2-2

The full include-list for components/process/processinvoker.cpp:
#include "processinvoker.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <QString>                      // for QString, QLatin1String
#include <QStringList>                  // for QStringList
---

(apps/openmw/mwgui/spellmodel.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/waitdialog.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/containerstore.cpp:12:
In file included from apps/openmw/mwworld/../mwmechanics/levelledlist.hpp:7:
apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

apps/openmw/mwgui/waitdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/waitdialog.cpp should remove these lines:
- #include <stdexcept>  // lines 4-4
- #include "../mwbase/statemanager.hpp"  // lines 8-8
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "MyGUI_RTTI.h"  // lines 17-17
- #include "MyGUI_ScrollBar.h"  // lines 18-18
- #include "MyGUI_StringUtility.h"  // lines 19-19
- #include "MyGUI_WidgetInput.h"  // lines 22-22
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwmechanics/stat.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 29-29
- #include "components/esm/loadgmst.hpp"  // lines 31-31
- #include "components/settings/settings.hpp"  // lines 33-33
- #include "widgets.hpp"  // lines 35-35

The full include-list for apps/openmw/mwgui/waitdialog.cpp:
#include "waitdialog.hpp"
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <stdlib.h>                     // for rand, RAND_MAX
#include <components/widgets/box.hpp>   // for Box
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadregn.hpp"  // for Region
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---
apps/openmw/mwworld/../mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/race.cpp:11:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/race.cpp:12:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(libs/openengine/bullet/physic.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actionalchemy.cpp:2:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwgui/bookpage.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/bookpage.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/tooltips.hpp has correct #includes/fwd-decls)

(libs/openengine/bullet/physic.cpp has correct #includes/fwd-decls)
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"

apps/openmw/mwgui/tooltips.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
namespace ESM { struct Enchantment; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/tooltips.cpp should remove these lines:
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <stddef.h>  // lines 7-7
- #include <algorithm>  // lines 8-8
- #include <iomanip>  // lines 9-9
- #include <map>  // lines 10-10
- #include <stdexcept>  // lines 12-12
- #include <utility>  // lines 13-13
- #include <vector>  // lines 14-14
- #include "../mwmechanics/spellcasting.hpp"  // lines 19-19
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_TextBox.h"  // lines 27-27
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/mode.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 32-32
- #include "components/esm/effectlist.hpp"  // lines 34-34
- #include "components/esm/loadench.hpp"  // lines 37-37
- #include "components/esm/loadrace.hpp"  // lines 39-39
- #include "components/esm/spelllist.hpp"  // lines 42-42
- #include "components/settings/settings.hpp"  // lines 43-43
- #include "inventorywindow.hpp"  // lines 44-44
- #include "itemmodel.hpp"  // lines 45-45
- #include "mapwindow.hpp"  // lines 46-46
- #include "openengine/gui/layout.hpp"  // lines 47-47

The full include-list for apps/openmw/mwgui/tooltips.cpp:
#include "tooltips.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <assert.h>                     // for assert
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <ostream>                      // for ostringstream
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Align.h"                // for Align, operator|, etc
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwworld/store.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadskil.hpp"  // for Skill, Skill::sSkillNameIds
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SpellType, etc
namespace ESM { struct Enchantment; }
namespace MWWorld { class ESMStore; }
---
Aborted (core dumped)

(apps/openmw/mwgui/container.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/container.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/container.cpp should remove these lines:
- #include <typeinfo>  // lines 5-5
- #include "../mwbase/soundmanager.hpp"  // lines 9-9
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_WidgetInput.h"  // lines 17-17
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 18-18
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/mode.hpp"  // lines 21-21
- #include "components/esm/loadcont.hpp"  // lines 24-24
- #include "components/esm/loadnpc.hpp"  // lines 25-25
- #include "inventoryitemmodel.hpp"  // lines 30-30

The full include-list for apps/openmw/mwgui/container.cpp:
#include "container.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_InputManager.h>         // for InputManager
#include <stddef.h>                     // for NULL, size_t
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwmechanics/pickpocket.hpp"  // for Pickpocket
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, ItemModel, etc
#include "apps/openmw/mwgui/referenceinterface.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowBase
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "countdialog.hpp"              // for CountDialog, etc
#include "draganddrop.hpp"              // for DragAndDrop
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "pickpocketitemmodel.hpp"      // for PickpocketItemModel
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
---
apps/openmw/mwworld/cells.cpp:119:37: error: no viable conversion from 'pair<pair<[2 * ...]>, [...]>' to 'const pair<const pair<[2 * ...]>, [...]>'
        result = mExteriors.insert (std::make_pair (
                                    ^~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:118:2: note: candidate constructor [with _U1 = std::pair<int, int>, _U2 = MWWorld::CellStore]
        pair(const pair<_U1, _U2>& __p)
        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:96:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'pair<std::pair<int, int>, MWWorld::CellStore>' to 'const std::pair<const std::pair<int, int>, MWWorld::CellStore> &' for 1st argument
    struct pair
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:629:32: note: passing argument to parameter '__x' here
      insert(const value_type& __x)
                               ^
apps/openmw/mwworld/cells.cpp:141:37: error: no viable conversion from 'pair<basic_string<[3 * ...]>, [...]>' to 'const pair<const basic_string<[3 * ...]>, [...]>'
        result = mInteriors.insert (std::make_pair (lowerName, CellStore (cell))).first;
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:118:2: note: candidate constructor [with _U1 = std::basic_string<char>, _U2 = MWWorld::CellStore]
        pair(const pair<_U1, _U2>& __p)
        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:96:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'pair<std::basic_string<char>, MWWorld::CellStore>' to 'const std::pair<const std::basic_string<char>, MWWorld::CellStore> &' for 1st argument
    struct pair
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:629:32: note: passing argument to parameter '__x' here
      insert(const value_type& __x)
                               ^
In file included from apps/openmw/mwworld/actionalchemy.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwsound/loudness.hpp has correct #includes/fwd-decls)

(apps/openmw/mwsound/loudness.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:6:
In file included from apps/openmw/mwgui/../mwworld/containerstore.hpp:10:
apps/openmw/mwgui/../mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwgui/inventoryitemmodel.cpp:7:
apps/openmw/mwgui/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwgui/../mwmechanics/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^

apps/openmw/mwgui/windowmanagerimp.hpp should add these lines:

apps/openmw/mwgui/windowmanagerimp.hpp should remove these lines:
- #include <map>  // lines 16-16
- #include <stack>  // lines 17-17
- #include <vector>  // lines 20-20

The full include-list for apps/openmw/mwgui/windowmanagerimp.hpp:
#include <MyGUI_KeyCode.h>              // for KeyCode
#include <MyGUI_Types.h>                // for Char
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwbase/windowmanager.hpp"  // for WindowManager::SkillList, etc
#include "apps/openmw/mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwgui/bookwindow.hpp"  // for BookWindow
#include "apps/openmw/mwgui/confirmationdialog.hpp"
#include "apps/openmw/mwgui/console.hpp"  // for Console
#include "apps/openmw/mwgui/container.hpp"  // for ContainerWindow
#include "apps/openmw/mwgui/countdialog.hpp"  // for CountDialog
#include "apps/openmw/mwgui/dialogue.hpp"  // for DialogueWindow
#include "apps/openmw/mwgui/inventorywindow.hpp"  // for InventoryWindow
#include "apps/openmw/mwgui/mode.hpp"   // for GuiWindow, GuiMode, etc
#include "apps/openmw/mwgui/scrollwindow.hpp"  // for ScrollWindow
#include "apps/openmw/mwgui/spellbuyingwindow.hpp"
#include "apps/openmw/mwgui/spellwindow.hpp"  // for SpellWindow
#include "apps/openmw/mwgui/tradewindow.hpp"  // for TradeWindow
#include "apps/openmw/mwgui/travelwindow.hpp"  // for TravelWindow
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "components/to_utf8/to_utf8.hpp"  // for FromType
#include "components/translation/translation.hpp"  // for Storage
#include "mapwindow.hpp"                // for CustomMarkerCollection
namespace Compiler { class Extensions; }  // lines 61-61
namespace ESM { class ESMReader; }  // lines 44-44
namespace ESM { class ESMWriter; }  // lines 45-45
namespace ESM { struct Class; }  // lines 46-46
namespace MWGui { class AlchemyWindow; }  // lines 89-89
namespace MWGui { class CharacterCreation; }  // lines 90-90
namespace MWGui { class CompanionWindow; }  // lines 91-91
namespace MWGui { class DebugWindow; }  // lines 92-92
namespace MWGui { class DragAndDrop; }  // lines 93-93
namespace MWGui { class EnchantingDialog; }  // lines 94-94
namespace MWGui { class HUD; }  // lines 95-95
namespace MWGui { class JournalWindow; }  // lines 96-96
namespace MWGui { class LevelupDialog; }  // lines 97-97
namespace MWGui { class LoadingScreen; }  // lines 98-98
namespace MWGui { class MainMenu; }  // lines 99-99
namespace MWGui { class MerchantRepair; }  // lines 100-100
namespace MWGui { class MessageBoxManager; }  // lines 101-101
namespace MWGui { class QuickKeysMenu; }  // lines 102-102
namespace MWGui { class Recharge; }  // lines 103-103
namespace MWGui { class Repair; }  // lines 104-104
namespace MWGui { class ScreenFader; }  // lines 105-105
namespace MWGui { class SettingsWindow; }  // lines 106-106
namespace MWGui { class SoulgemDialog; }  // lines 107-107
namespace MWGui { class SpellCreationDialog; }  // lines 108-108
namespace MWGui { class StatsWindow; }  // lines 109-109
namespace MWGui { class ToolTips; }  // lines 110-110
namespace MWGui { class TrainingWindow; }  // lines 111-111
namespace MWGui { class VideoWidget; }  // lines 112-112
namespace MWGui { class WaitDialog; }  // lines 113-113
namespace MWWorld { class CellStore; }  // lines 47-47
namespace MWWorld { class Ptr; }  // lines 48-48
namespace MyGUI { class Gui; }  // lines 52-52
namespace MyGUI { class ImageBox; }  // lines 53-53
namespace MyGUI { class UString; }  // lines 54-54
namespace MyGUI { class Widget; }  // lines 55-55
namespace MyGUI { class Window; }  // lines 56-56
namespace OEngine { namespace GUI { class Layout; } }  // lines 72-72
namespace OEngine { namespace GUI { class MyGUIManager; } }  // lines 73-73
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 78-78
namespace SFO { class CursorManager; }  // lines 84-84
---

apps/openmw/mwgui/windowmanagerimp.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/windowmanagerimp.cpp should remove these lines:
- #include <MyGUI_ClipboardManager.h>  // lines 1-1
- #include <MyGUI_FactoryManager.h>  // lines 2-2
- #include <MyGUI_Gui.h>  // lines 3-3
- #include <algorithm>  // lines 21-21
- #include <boost/array.hpp>  // lines 13-13
- #include <components/widgets/tags.hpp>  // lines 15-15
- #include <stdexcept>  // lines 23-23
- #include "../mwworld/esmstore.hpp"  // lines 30-30
- #include "MyGUI_Align.h"  // lines 33-33
- #include "MyGUI_EditBox.h"  // lines 35-35
- #include "MyGUI_EventPair.h"  // lines 36-36
- #include "MyGUI_RTTI.h"  // lines 40-40
- #include "MyGUI_ResourceManager.h"  // lines 42-42
- #include "OgreResourceGroupManager.h"  // lines 49-49
- #include "SDL_keyboard.h"  // lines 53-53
- #include "apps/openmw/mwgui/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 61-61
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 63-63
- #include "apps/openmw/mwgui/widgets.hpp"  // lines 66-66
- #include "backgroundimage.hpp"  // lines 67-67
- #include "components/esm/loadclas.hpp"  // lines 78-78
- #include "controllers.hpp"  // lines 87-87
- #include "exposedwindow.hpp"  // lines 94-94
- #include "journalviewmodel.hpp"  // lines 100-100

The full include-list for apps/openmw/mwgui/windowmanagerimp.cpp:
#include "windowmanagerimp.hpp"
#include <MyGUI_IPointer.h>             // for IPointer
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_LanguageManager.h>      // for LanguageManager
#include <MyGUI_PointerManager.h>       // for PointerManager
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_UString.h>              // for UString
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreSceneManager.h>           // for SceneManager, etc
#include <OgreTextureManager.h>         // for TextureManager
#include <stddef.h>                     // for NULL, size_t
#include <cassert>                      // for assert
#include <components/fontloader/fontloader.hpp>  // for FontLoader
#include <components/widgets/widgets.hpp>  // for registerAllWidgets
#include <extern/sdl4ogre/sdlcursormanager.hpp>  // for SDLCursorManager
#include <openengine/gui/manager.hpp>   // for MyGUIManager
#include <openengine/ogre/renderer.hpp>  // for OgreRenderer
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/player.hpp"        // for Player
#include "GLX/../OgrePrerequisites.h"   // for TexturePtr
#include "MyGUI_ImageBox.h"             // for ImageBox
#include "MyGUI_ImageInfo.h"            // for ImageIndexInfo
#include "MyGUI_KeyCode.h"              // for KeyCode, operator==, etc
#include "MyGUI_ResourceImageSet.h"     // for ResourceImageSet
#include "MyGUI_TextIterator.h"         // for TextIterator
#include "MyGUI_Types.h"                // for IntSize, IntPoint, Char
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetInput.h"
#include "MyGUI_Window.h"               // for Window
#include "OgreRenderQueue.h"
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3
#include "SDL_clipboard.h"              // for SDL_GetClipboardText
#include "SDL_stdinc.h"                 // for Uint8, SDL_free
#include "alchemywindow.hpp"            // for AlchemyWindow
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwgui/../mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/mapwindow.hpp"  // for MapWindow
#include "apps/openmw/mwgui/spellcreationdialog.hpp"
#include "bookpage.hpp"                 // for BookPage
#include "bookwindow.hpp"               // for BookWindow
#include "charactercreation.hpp"        // for CharacterCreation
#include "companionwindow.hpp"          // for CompanionWindow
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/custommarkerstate.hpp"  // for CustomMarker
#include "components/esm/defs.hpp"      // for RecNameInts::REC_ASPL, etc
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum, etc
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/variant.hpp"   // for Variant, VarType::VT_String
#include "confirmationdialog.hpp"       // for ConfirmationDialog
#include "console.hpp"                  // for Console
#include "container.hpp"                // for ContainerWindow
#include "countdialog.hpp"              // for CountDialog
#include "cursor.hpp"                   // for ResourceImageSetPointerFix
#include "debugwindow.hpp"              // for DebugWindow
#include "dialogue.hpp"                 // for DialogueWindow
#include "draganddrop.hpp"              // for DragAndDrop
#include "enchantingdialog.hpp"         // for EnchantingDialog
#include "extern/sdl4ogre/cursormanager.hpp"  // for CursorManager
#include "hud.hpp"                      // for HUD
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "journalwindow.hpp"            // for JournalWindow
#include "levelupdialog.hpp"            // for LevelupDialog
#include "loadingscreen.hpp"            // for LoadingScreen
#include "mainmenu.hpp"                 // for MainMenu
#include "merchantrepair.hpp"           // for MerchantRepair
#include "messagebox.hpp"               // for MessageBoxManager
#include "openengine/gui/layout.hpp"    // for Layout
#include "quickkeysmenu.hpp"            // for QuickKeysMenu
#include "recharge.hpp"                 // for Recharge
#include "repair.hpp"                   // for Repair
#include "screenfader.hpp"              // for ScreenFader
#include "scrollwindow.hpp"             // for ScrollWindow
#include "settingswindow.hpp"           // for SettingsWindow
#include "soulgemdialog.hpp"            // for SoulgemDialog
#include "spellbuyingwindow.hpp"        // for SpellBuyingWindow
#include "spellview.hpp"                // for SpellView
#include "spellwindow.hpp"              // for SpellWindow
#include "statswindow.hpp"              // for StatsWindow
#include "tooltips.hpp"                 // for ToolTips
#include "tradewindow.hpp"              // for TradeWindow
#include "trainingwindow.hpp"           // for TrainingWindow
#include "travelwindow.hpp"             // for TravelWindow
#include "videowidget.hpp"              // for VideoWidget
#include "waitdialog.hpp"               // for WaitDialog
---
In file included from apps/openmw/mwscript/soundextensions.cpp:14:
In file included from apps/openmw/mwscript/ref.hpp:9:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from 
(apps/openmw/mwscript/aiextensions.hpp has correct #includes/fwd-decls)
apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:518:16: error: static_cast from '_Base_ptr' (aka 'std::_Rb_tree_node_base *') to '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *'), which are not related by inheritance, is not allowed
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:37: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_begin' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                                    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:25:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1262:21: error: no matching function for call to '_S_left'
          __y = __x, __x = _S_left(__x);
                           ^~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:25:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:544:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:548:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Const_Base_ptr' (aka 'const std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:190:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1265:14: note: in instantiation of member function 'std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >::_Rb_tree_iterator' requested here
      return iterator(__y);
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:25:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:741:16: error: no matching conversion for functional-style cast from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1914:22: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
      return (__j == end()
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:25:72: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::find' requested here
        std::map<std::string, CellStore>::iterator result = mInteriors.find (lowerName);
                                                                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to 'const std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:185:7: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
      ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:61:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:16: error: no viable conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return _M_t.end(); }
               ^~~~~~~~~~
apps/openmw/mwworld/cells.cpp:27:32: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
        if (result==mInteriors.end())
                               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'const std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > &' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:262:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'const std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka 'const _Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:746:9: note: in instantiation of member function 'std::_Rb_tree_const_iterator<std::pair<const std::basic_string<char>, MWWorld::CellStore> >::_Rb_tree_const_iterator' requested here
        return const_iterator(static_cast<_Const_Link_type>
               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:21: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
      { return _M_t.end(); }
                    ^
apps/openmw/mwworld/cells.cpp:27:32: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::end' requested here
        if (result==mInteriors.end())
                               ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:518:16: error: static_cast from '_Base_ptr' (aka 'std::_Rb_tree_node_base *') to '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *'), which are not related by inheritance, is not allowed
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:37: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::_M_begin' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                                    ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:37:24: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
            mExteriors.find (std::make_pair (cell->getGridX(), cell->getGridY()));
                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1262:21: error: no matching function for call to '_S_left'
          __y = __x, __x = _S_left(__x);
                           ^~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:37:24: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
            mExteriors.find (std::make_pair (cell->getGridX(), cell->getGridY()));
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:544:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *') to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:548:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *') to '_Const_Base_ptr' (aka 'const std::_Rb_tree_node_base *') for 1st argument
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:190:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1265:14: note: in instantiation of member function 'std::_Rb_tree_iterator<std::pair<const std::pair<int, int>, MWWorld::CellStore> >::_Rb_tree_iterator' requested here
      return iterator(__y);
             ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1913:22: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::_M_lower_bound' requested here
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:37:24: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
            mExteriors.find (std::make_pair (cell->getGridX(), cell->getGridY()));
                       ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:741:16: error: no matching conversion for functional-style cast from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1914:22: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::end' requested here
      return (__j == end()
                     ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:860:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
      { return _M_t.find(__x); }
                    ^
apps/openmw/mwworld/cells.cpp:37:24: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::find' requested here
            mExteriors.find (std::make_pair (cell->getGridX(), cell->getGridY()));
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *') to 'const std::_Rb_tree_iterator<std::pair<const std::pair<int, int>, MWWorld::CellStore> >' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:185:7: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
      ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:61:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:16: error: no viable conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'iterator' (aka '_Rb_tree_iterator<value_type>')
      { return _M_t.end(); }
               ^~~~~~~~~~
apps/openmw/mwworld/cells.cpp:39:32: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::end' requested here
        if (result==mExteriors.end())
                               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:172:12: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator' (aka '_Rb_tree_const_iterator<value_type>') to 'const std::_Rb_tree_iterator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > &' for 1st argument
    struct _Rb_tree_iterator
           ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:262:9: error: cannot initialize a member subobject of type '_Base_ptr' (aka 'const std::_Rb_tree_node_base *') with an lvalue of type '_Link_type' (aka 'const _Rb_tree_node<std::pair<const std::pair<int, int>, MWWorld::CellStore> > *')
      : _M_node(__x) { }
        ^       ~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:746:9: note: in instantiation of member function 'std::_Rb_tree_const_iterator<std::pair<const std::pair<int, int>, MWWorld::CellStore> >::_Rb_tree_const_iterator' requested here
        return const_iterator(static_cast<_Const_Link_type>
               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:374:21: note: in instantiation of member function 'std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::pair<int, int>, MWWorld::CellStore> >, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::end' requested here
      { return _M_t.end(); }
                    ^
apps/openmw/mwworld/cells.cpp:39:32: note: in instantiation of member function 'std::map<std::pair<int, int>, MWWorld::CellStore, std::less<std::pair<int, int> >, std::allocator<std::pair<const std::pair<int, int>, MWWorld::CellStore> > >::end' requested here
        if (result==mExteriors.end())
                               ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:909:23: error: assigning to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') from incompatible type '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
        _M_leftmost() = _M_end();
                      ^ ~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:827:14: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::clear' requested here
      { _M_t.clear(); }
             ^
apps/openmw/mwworld/cells.cpp:52:16: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::clear' requested here
    mInteriors.clear();
               ^
In file included from apps/openmw/mwworld/cells.cpp:3:
In file included from ./components/esm/esmreader.hpp:4:
In file included from /usr/include/OGRE/OgreDataStream.h:31:
In file included from /usr/include/OGRE/OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:32:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/map:60:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:911:24: error: assigning to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') from incompatible type '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *')
        _M_rightmost() = _M_end();
                       ^ ~~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1245:13: error: no matching function for call to '_S_right'
          _M_erase(_S_right(__x));
                   ^~~~~~~~
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:908:9: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::_M_erase' requested here
        _M_erase(_M_begin());
        ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_map.h:827:14: note: in instantiation of member function 'std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, MWWorld::CellStore>, std::_Select1st<std::pair<const std::basic_string<char>, MWWorld::CellStore> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::clear' requested here
      { _M_t.clear(); }
             ^
apps/openmw/mwworld/cells.cpp:52:16: note: in instantiation of member function 'std::map<std::basic_string<char>, MWWorld::CellStore, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, MWWorld::CellStore> > >::clear' requested here
    mInteriors.clear();
               ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:552:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Base_ptr' (aka 'std::_Rb_tree_node_base *') for 1st argument
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:556:7: note: candidate function not viable: no known conversion from '_Link_type' (aka '_Rb_tree_node<std::pair<const std::basic_string<char>, MWWorld::CellStore> > *') to '_Const_Base_ptr' (aka 'const std::_Rb_tree_node_base *') for 1st argument
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
      ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/openmw/mwsound/libavwrapper.cpp has correct #includes/fwd-decls)

apps/openmw/mwscript/aiextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr, operator!=

apps/openmw/mwscript/aiextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 22-22

The full include-list for apps/openmw/mwscript/aiextensions.cpp:
#include "aiextensions.hpp"
#include <algorithm>                    // for max, min
#include <components/compiler/opcodes.hpp>  // for opcodeAIActivate, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0, Opcode1
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <string>                       // for string, operator<<, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/aiactivate.hpp"  // for AiActivate
#include "../mwmechanics/aiescort.hpp"  // for AiEscort
#include "../mwmechanics/aifollow.hpp"  // for AiFollow
#include "../mwmechanics/aitravel.hpp"  // for AiTravel
#include "../mwmechanics/aiwander.hpp"  // for AiWander
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwscript/../mwmechanics/stat.hpp"  // for Stat
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr, operator!=
#include "apps/openmw/mwscript/../mwworld/refdata.hpp"  // for RefData
#include "components/interpreter/types.hpp"  // for Data, Type_Float, etc
#include "interpretercontext.hpp"       // for InterpreterContext
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---

(apps/openmw/mwscript/compilercontext.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/compilercontext.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actiondoor.cpp:2:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwgui/inventoryitemmodel.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/inventoryitemmodel.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/containerstore.hpp"

apps/openmw/mwgui/inventoryitemmodel.cpp should remove these lines:
- #include "../mwworld/containerstore.hpp"  // lines 6-6

The full include-list for apps/openmw/mwgui/inventoryitemmodel.cpp:
#include "inventoryitemmodel.hpp"
#include <stdexcept>                    // for runtime_error
#include <string>                       // for operator==, basic_string
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack, etc
#include "components/misc/stringops.hpp"  // for StringUtils
---
In file included from apps/openmw/mwworld/physicssystem.cpp:21:
In file included from apps/openmw/mwworld/../mwworld/cellstore.hpp:11:
apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwgui/quickkeysmenu.cpp:12:
In file included from apps/openmw/mwgui/../mwgui/inventorywindow.hpp:9:
In file included from apps/openmw/mwgui/windowpinnablebase.hpp:6:
apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwscript/soundextensions.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionalchemy.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionalchemy.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/physicssystem.cpp:22:
In file included from apps/openmw/mwworld/../mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/physicssystem.cpp:22:
In file included from apps/openmw/mwworld/../mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/physicssystem.cpp:22:
In file included from apps/openmw/mwworld/../mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/store.cpp:5:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/store.cpp:5:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/store.cpp:5:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwworld/actiondoor.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actiondoor.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/spellcreationdialog.cpp:4:
./components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwrender/sky.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/spellview.cpp:17:
apps/openmw/mwgui/spellview.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwworld/cells.hpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwworld/cells.hpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 11-11

The full include-list for apps/openmw/mwworld/cells.hpp:
#include <stdint.h>                     // for uint32_t
#include <cstddef>                      // for size_t
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "apps/openmw/mwworld/cellstore.hpp"  // for CellStore
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
namespace ESM { class ESMReader; }  // lines 16-16
namespace ESM { class ESMWriter; }  // lines 17-17
namespace ESM { struct Cell; }  // lines 18-18
namespace ESM { struct CellId; }  // lines 19-19
namespace Loading { class Listener; }  // lines 24-24
namespace MWWorld { class ESMStore; }  // lines 29-29
---
In file included from components/nifogre/skeleton.cpp:6:
In file included from ./components/nif/node.hpp:9:
In file included from ./components/nif/base.hpp:7:
./components/nif/recordptr.hpp:46:19: error: 'Nif::Property' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::Property>::post' requested here
            list[i].post(nif);
                    ^
./components/nif/node.hpp:76:15: note: in instantiation of member function 'Nif::RecordListT<Nif::Property>::post' requested here
        props.post(nif);
              ^
./components/nif/recordptr.hpp:117:7: note: forward declaration of 'Nif::Property'
class Property;
      ^

(apps/openmw/mwrender/sky.cpp has correct #includes/fwd-decls)

apps/openmw/mwworld/cells.cpp should add these lines:

apps/openmw/mwworld/cells.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 10-10
- #include "components/loadinglistener/loadinglistener.hpp"  // lines 16-16

The full include-list for apps/openmw/mwworld/cells.cpp:
#include "cells.hpp"
#include <algorithm>                    // for fill
#include <components/esm/cellstate.hpp>  // for CellState
#include <components/esm/defs.hpp>      // for RecNameInts::REC_CSTA
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <iterator>                     // for operator!=, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/store.hpp"  // for Store, Store<>::iterator, etc
#include "cellstore.hpp"                // for CellStore, etc
#include "components/esm/cellid.hpp"    // for CellId, CellId::CellIndex
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "esmstore.hpp"                 // for ESMStore
---

(apps/openmw/mwgui/videowidget.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/videowidget.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/settingswindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/charactercreation.hpp should add these lines:

apps/openmw/mwgui/charactercreation.hpp should remove these lines:
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwgui/charactercreation.hpp:
#include <components/esm/loadclas.hpp>  // for Class
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SkillEnum
#include <string>                       // for string
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/stat.hpp"
namespace MWGui { class BirthDialog; }  // lines 13-13
namespace MWGui { class ClassChoiceDialog; }  // lines 14-14
namespace MWGui { class CreateClassDialog; }  // lines 15-15
namespace MWGui { class GenerateClassResultDialog; }  // lines 16-16
namespace MWGui { class InfoBoxDialog; }  // lines 17-17
namespace MWGui { class PickClassDialog; }  // lines 18-18
namespace MWGui { class RaceDialog; }  // lines 19-19
namespace MWGui { class ReviewDialog; }  // lines 20-20
namespace MWGui { class TextInputDialog; }  // lines 21-21
namespace MWGui { class WindowBase; }  // lines 22-22
---

apps/openmw/mwgui/settingswindow.cpp should add these lines:

apps/openmw/mwgui/settingswindow.cpp should remove these lines:
- #include <MyGUI_Window.h>  // lines 6-6
- #include <OgreRoot.h>  // lines 7-7
- #include <algorithm>  // lines 15-15
- #include <boost/algorithm/string/classification.hpp>  // lines 10-10
- #include <boost/algorithm/string/split.hpp>  // lines 11-11
- #include <boost/algorithm/string/trim.hpp>  // lines 12-12
- #include <boost/math/common_factor_rt.hpp>  // lines 13-13
- #include <vector>  // lines 18-18
- #include "GLX/../OgrePrerequisites.h"  // lines 25-25
- #include "MyGUI_EventPair.h"  // lines 29-29
- #include "MyGUI_RTTI.h"  // lines 31-31
- #include "MyGUI_StringUtility.h"  // lines 32-32
- #include "MyGUI_Widget.h"  // lines 36-36
- #include "MyGUI_WidgetInput.h"  // lines 38-38
- #include "OgreRenderSystem.h"  // lines 39-39
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 41-41
- #include "components/misc/stringops.hpp"  // lines 42-42

The full include-list for apps/openmw/mwgui/settingswindow.cpp:
#include "settingswindow.hpp"
#include <MyGUI_ComboBox.h>             // for ComboBox
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ListBox.h>              // for ListBox
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <SDL_video.h>                  // for SDL_GetDisplayMode, etc
#include <assert.h>                     // for assert
#include <components/widgets/sharedstatebutton.hpp>
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Align.h"                // for Align, Align::Enum::Right
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "components/settings/settings.hpp"  // for CategorySettingVector, etc
#include "confirmationdialog.hpp"       // for ConfirmationDialog, etc
---

apps/openmw/mwgui/charactercreation.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class Fallback; }

apps/openmw/mwgui/charactercreation.cpp should remove these lines:
- #include <iostream>  // lines 4-4
- #include <map>  // lines 5-5
- #include <utility>  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "../mwworld/fallback.hpp"  // lines 16-16
- #include "MyGUI_StringUtility.h"  // lines 18-18
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 21-21
- #include "apps/openmw/mwgui/mode.hpp"  // lines 22-22
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23
- #include "components/esm/attr.hpp"  // lines 27-27

The full include-list for apps/openmw/mwgui/charactercreation.cpp:
#include "charactercreation.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <boost/array.hpp>              // for array
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "birth.hpp"                    // for BirthDialog
#include "class.hpp"                    // for ClassChoiceDialog, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "inventorywindow.hpp"          // for InventoryWindow
#include "race.hpp"                     // for RaceDialog
#include "review.hpp"                   // for ReviewDialog, etc
#include "textinput.hpp"                // for TextInputDialog
namespace MWWorld { class Fallback; }
---

(apps/openmw/mwsound/soundmanagerimp.hpp has correct #includes/fwd-decls)

apps/openmw/mwsound/soundmanagerimp.cpp should add these lines:
#include "apps/openmw/mwsound/soundmanagerimp.hpp"

apps/openmw/mwsound/soundmanagerimp.cpp should remove these lines:

The full include-list for apps/openmw/mwsound/soundmanagerimp.cpp:
#include "apps/openmw/mwsound/soundmanagerimp.hpp"
#include <math.h>                       // for pow
#include <stddef.h>                     // for size_t
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <algorithm>                    // for max, min
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <map>                          // for _Rb_tree_iterator, etc
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwsound/../mwbase/../mwworld/cellref.hpp"
#include "apps/openmw/mwsound/../mwbase/../mwworld/refdata.hpp"
#include "apps/openmw/mwsound/../mwbase/../mwworld/store.hpp"
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"  // for SoundPtr, etc
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/esmcommon.hpp"  // for NAME32
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadregn.hpp"  // for Region, Region::SoundRef
#include "components/esm/loadsoun.hpp"  // for Sound, SOUNstruct
#include "components/settings/settings.hpp"  // for Manager, etc
#include "ffmpeg_decoder.hpp"           // for FFmpeg_Decoder, etc
#include "openal_output.hpp"            // for DEFAULT_OUTPUT, etc
#include "sound.hpp"                    // for Sound
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType, etc
#include "sound_output.hpp"             // for Sound_Output
#include "soundmanagerimp.hpp"          // for SoundManager, etc
---
In file included from apps/openmw/mwworld/actionopen.cpp:1:
In file included from apps/openmw/mwworld/../mwgui/container.hpp:7:
apps/openmw/mwworld/../mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(extern/ogre-ffmpeg-videoplayer/audiodecoder.hpp has correct #includes/fwd-decls)

extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp should add these lines:

extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp should remove these lines:
- #include <algorithm>  // lines 16-16
- #include <stdexcept>  // lines 17-17
- #include <string>  // lines 18-18

The full include-list for extern/ogre-ffmpeg-videoplayer/audiodecoder.cpp:
#include "audiodecoder.hpp"
#include <libavcodec/avcodec.h>         // for AVPacket, AVCodecContext, etc
#include <libavcodec/version.h>         // for LIBAVCODEC_VERSION_INT
#include <libavresample/avresample.h>   // for AVAudioResampleContext
#include <libavutil/avutil.h>           // for AV_NOPTS_VALUE
#include <libavutil/channel_layout.h>
#include <libavutil/mem.h>              // for av_freep
#include <libavutil/rational.h>         // for av_q2d
#include <math.h>                       // for exp, fabs, log
#include <string.h>                     // for memcpy, memmove, memset
#include "extern/ogre-ffmpeg-videoplayer/videodefs.hpp"
#include "videostate.hpp"               // for VideoState, PacketQueue
---
In file included from apps/openmw/mwgui/scrollwindow.cpp:8:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/scrollwindow.cpp:11:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwscript/controlextensions.cpp:12:
./apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/hud.cpp:16:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

apps/openmw/mwgui/spellview.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/spellview.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/spellview.hpp:
#include <MyGUI_Widget.h>               // for Widget
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "MyGUI_RTTI.h"                 // for MYGUI_RTTI_DERIVED
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "spellmodel.hpp"               // for SpellModel, etc
namespace MyGUI { class ScrollView; }  // lines 17-17
---

apps/openmw/mwgui/spellview.cpp should add these lines:
namespace MyGUI { class Widget; }

apps/openmw/mwgui/spellview.cpp should remove these lines:
- #include <MyGUI_FactoryManager.h>  // lines 1-1
- #include <algorithm>  // lines 7-7
- #include <stdexcept>  // lines 8-8
- #include "MyGUI_StringUtility.h"  // lines 11-11
- #include "MyGUI_Widget.h"  // lines 13-13
- #include "MyGUI_WidgetInput.h"  // lines 14-14
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 15-15

The full include-list for apps/openmw/mwgui/spellview.cpp:
#include "spellview.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <stddef.h>                     // for NULL
#include <components/widgets/sharedstatebutton.hpp>
#include "MyGUI_Align.h"                // for Align, Align::Enum::Left, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "apps/openmw/mwgui/spellmodel.hpp"  // for Spell, SpellModel, etc
namespace MyGUI { class Widget; }
---

(components/esm/journalentry.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/journalentry.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/interpretercontext.cpp:15:
apps/openmw/mwscript/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwdialogue/journalentry.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/interpretercontext.cpp:16:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwrender/terrainstorage.hpp should add these lines:
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadltex.hpp"  // for LandTexture

apps/openmw/mwrender/terrainstorage.hpp should remove these lines:
- namespace ESM { struct Land; }  // lines 6-6
- namespace ESM { struct LandTexture; }  // lines 7-7

The full include-list for apps/openmw/mwrender/terrainstorage.hpp:
#include <components/esmterrain/storage.hpp>  // for Storage
#include "components/esm/loadland.hpp"  // for Land
#include "components/esm/loadltex.hpp"  // for LandTexture
---

(apps/openmw/mwrender/terrainstorage.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwscript/skyextensions.cpp:11:
apps/openmw/mwscript/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwscript/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwrender/actors.cpp:18:
In file included from apps/openmw/mwrender/creatureanimation.hpp:6:
In file included from apps/openmw/mwrender/../mwworld/inventorystore.hpp:10:
In file included from ./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/containerstore.hpp:10:
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwgui/race.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/race.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/race.cpp:14:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/actors.cpp:18:
In file included from apps/openmw/mwrender/creatureanimation.hpp:6:
apps/openmw/mwrender/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
./apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
In file included from apps/openmw/mwclass/armor.cpp:10:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwworld/localscripts.cpp:5:
./apps/openmw/mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwscript/interpretercontext.cpp:18:
In file included from apps/openmw/mwscript/../mwworld/cellstore.hpp:11:
apps/openmw/mwscript/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwscript/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from extern/shiny/Main/ShaderInstance.cpp:17:
In file included from extern/shiny/Main/Factory.hpp:10:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/hud.cpp:21:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/transformationextensions.cpp:13:
In file included from apps/openmw/mwscript/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellid.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellid.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwscript/interpretercontext.cpp:20:
In file included from apps/openmw/mwscript/../mwworld/esmstore.hpp:48:
apps/openmw/mwscript/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellid.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwgui/scrollwindow.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/scrollwindow.cpp should add these lines:
namespace ESM { struct Book; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/scrollwindow.cpp should remove these lines:
- #include <components/esm/loadbook.hpp>  // lines 2-2
- #include "../mwbase/soundmanager.hpp"  // lines 6-6
- #include "MyGUI_RTTI.h"  // lines 12-12
- #include "MyGUI_WidgetInput.h"  // lines 17-17
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 20-20

The full include-list for apps/openmw/mwgui/scrollwindow.cpp:
#include "scrollwindow.hpp"
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <components/widgets/imagebutton.hpp>  // for ImageButton
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/actiontake.hpp"    // for ActionTake
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "formatting.hpp"               // for BookFormatter
namespace ESM { struct Book; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/mwscript/skyextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/skyextensions.cpp has correct #includes/fwd-decls)

(components/settings/settings.hpp has correct #includes/fwd-decls)

(components/settings/settings.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/localscripts.cpp:8:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/localscripts.cpp:8:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/localscripts.cpp:8:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwclass/armor.cpp:11:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwclass/classes.cpp:4:
In file included from apps/openmw/mwclass/activator.hpp:9:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
./apps/openmw/mwclass/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwscript/controlextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionopen.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionopen.cpp has correct #includes/fwd-decls)

apps/openmw/mwscript/controlextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwscript/controlextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 11-11

The full include-list for apps/openmw/mwscript/controlextensions.cpp:
#include "controlextensions.hpp"
#include <components/compiler/opcodes.hpp>  // for controls, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwscript/../mwworld/ptr.hpp"  // for Ptr
#include "interpretercontext.hpp"       // for InterpreterContext
#include "ref.hpp"                      // for ExplicitRef, ImplicitRef
---
In file included from apps/openmw/mwgui/race.cpp:26:
./apps/openmw/mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/quickkeysmenu.hpp should add these lines:

apps/openmw/mwgui/quickkeysmenu.hpp should remove these lines:
- #include <vector>  // lines 6-6

The full include-list for apps/openmw/mwgui/quickkeysmenu.hpp:
#include <stdint.h>                     // for uint32_t
#include <string>                       // for string
#include "spellmodel.hpp"               // for SpellModel, etc
#include "windowbase.hpp"               // for WindowModal, WindowBase
namespace ESM { class ESMReader; }  // lines 11-11
namespace ESM { class ESMWriter; }  // lines 12-12
namespace MWGui { class ItemSelectionDialog; }  // lines 22-22
namespace MWGui { class ItemWidget; }  // lines 23-23
namespace MWGui { class MagicSelectionDialog; }  // lines 24-24
namespace MWGui { class QuickKeysMenuAssign; }  // lines 25-25
namespace MWGui { class SpellView; }  // lines 26-26
namespace MWWorld { class Ptr; }  // lines 13-13
namespace MyGUI { class Button; }  // lines 14-14
namespace MyGUI { class EditBox; }  // lines 15-15
namespace MyGUI { class TextBox; }  // lines 16-16
namespace MyGUI { class Widget; }  // lines 17-17
---

apps/openmw/mwgui/quickkeysmenu.cpp should add these lines:
#include <vector>                       // for vector
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
namespace ESM { struct Spell; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/quickkeysmenu.cpp should remove these lines:
- #include <algorithm>  // lines 7-7
- #include <utility>  // lines 8-8
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 21-21
- #include "MyGUI_StringUtility.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 26-26
- #include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 35-35
- #include "components/esm/effectlist.hpp"  // lines 39-39
- #include "components/esm/loadspel.hpp"  // lines 42-42

The full include-list for apps/openmw/mwgui/quickkeysmenu.cpp:
#include "quickkeysmenu.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include <MyGUI_Gui.h>                  // for Gui
#include <assert.h>                     // for assert
#include <components/esm/quickkeys.hpp>  // for QuickKeys, etc
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/inventorywindow.hpp"  // for InventoryWindow
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwmechanics/spellcasting.hpp"  // for getSpellSuccessChance
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/player.hpp"        // for Player
#include "MyGUI_Align.h"                // for Align, Align::Enum::Center
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/spells.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/containerstore.hpp"
#include "apps/openmw/mwgui/spellmodel.hpp"  // for Spell, SpellModel, etc
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "components/esm/defs.hpp"      // for RecNameInts::REC_KEYS
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/misc/stringops.hpp"  // for StringUtils
#include "itemselection.hpp"            // for ItemSelectionDialog
#include "itemwidget.hpp"               // for ItemWidget, etc
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
#include "spellview.hpp"                // for SpellView
namespace ESM { class ESMReader; }  // lines 50-50
namespace ESM { struct Spell; }
namespace MWWorld { class ESMStore; }
---

(apps/openmw/mwworld/containerstore.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/store.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/store.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/hud.cpp:23:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwgui/spellcreationdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate1

apps/openmw/mwgui/spellcreationdialog.hpp should remove these lines:
- #include <map>  // lines 6-6
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwgui/spellcreationdialog.hpp:
#include <stddef.h>                     // for size_t
#include <components/esm/loadspel.hpp>  // for Spell
#include "MyGUI_Delegate"               // for CMultiDelegate1
#include "components/esm/effectlist.hpp"  // for ENAMstruct
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase, WindowModal
namespace ESM { struct MagicEffect; }  // lines 14-14
namespace Gui { class MWList; }  // lines 26-26
namespace MWGui { class SelectAttributeDialog; }  // lines 32-32
namespace MWGui { class SelectSkillDialog; }  // lines 33-33
namespace MWWorld { class Ptr; }  // lines 15-15
namespace MyGUI { class Button; }  // lines 16-16
namespace MyGUI { class EditBox; }  // lines 17-17
namespace MyGUI { class ImageBox; }  // lines 18-18
namespace MyGUI { class ScrollBar; }  // lines 19-19
namespace MyGUI { class ScrollView; }  // lines 20-20
namespace MyGUI { class TextBox; }  // lines 21-21
namespace MyGUI { class Widget; }  // lines 22-22
---

(apps/openmw/mwworld/containerstore.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/spellcreationdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/spellcreationdialog.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <algorithm>  // lines 6-6
- #include <utility>  // lines 8-8
- #include "../mwbase/soundmanager.hpp"  // lines 12-12
- #include "../mwmechanics/spellcasting.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_Align.h"  // lines 20-20
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_WidgetInput.h"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 34-34
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 37-37
- #include "components/esm/loadgmst.hpp"  // lines 40-40
- #include "tooltips.hpp"  // lines 44-44

The full include-list for apps/openmw/mwgui/spellcreationdialog.cpp:
#include "spellcreationdialog.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <stdlib.h>                     // for abs
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include <components/widgets/list.hpp>  // for MWList
#include <string>                       // for string
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_ScrollView.h"           // for ScrollView
#include "MyGUI_StringUtility.h"        // for parseInt
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
#include "MyGUI_WidgetDefines.h"        // for EnumeratorWidgetPtr
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"
#include "apps/openmw/mwgui/../mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "class.hpp"                    // for SelectAttributeDialog, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Self, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "widgets.hpp"                  // for MWSpellEffect, etc
namespace ESM { struct GameSetting; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
---
In file included from apps/openmw/mwworld/cellstore.cpp:19:
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
./apps/openmw/mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwdialogue/quest.cpp:8:
apps/openmw/mwdialogue/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwdialogue/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/container.cpp:12:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwscript/extensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/extensions.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/confirmationdialog.cpp:8:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

components/nifogre/skeleton.hpp should add these lines:
#include "OgreSkeleton.h"               // for Skeleton (ptr only), etc

components/nifogre/skeleton.hpp should remove these lines:
- #include "OgrePrerequisites.h"  // lines 10-10
- namespace Ogre { class Skeleton; }  // lines 13-13

The full include-list for components/nifogre/skeleton.hpp:
#include <OgreResource.h>               // for ManualResourceLoader
#include <stdlib.h>                     // for abort, NULL
#include <iostream>                     // for basic_ostream, operator<<, etc
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string, operator<, etc
#include "OgreSkeleton.h"               // for Skeleton (ptr only), etc
namespace Nif { class Node; }  // lines 17-17
namespace Ogre { class Bone; }  // lines 12-12
---
In file included from apps/openmw/mwgui/console.cpp:17:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(components/nifogre/skeleton.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/armor.cpp:12:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwdialogue/quest.cpp:9:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/queststate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/quest.cpp:9:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/queststate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwdialogue/quest.cpp:9:
In file included from apps/openmw/mwdialogue/../mwworld/esmstore.hpp:48:
apps/openmw/mwdialogue/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/queststate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/console.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/console.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/console.cpp:19:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/actionread.cpp:2:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwclass/container.cpp:13:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwclass/classes.hpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/classes.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/esmloader.cpp:5:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/esmloader.cpp:5:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/esmloader.cpp:5:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
apps/openmw/mwgui/console.cpp
apps/openmw/mwgui/confirmationdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/confirmationdialog.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/confirmationdialog.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"               // for WindowModal
namespace MyGUI { class Button; }  // lines 9-9
namespace MyGUI { class EditBox; }  // lines 10-10
namespace MyGUI { class Widget; }  // lines 11-11
---

apps/openmw/mwgui/confirmationdialog.cpp should add these lines:

apps/openmw/mwgui/confirmationdialog.cpp should remove these lines:
- #include "MyGUI_RTTI.h"  // lines 4-4
- #include "MyGUI_WidgetInput.h"  // lines 7-7
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 8-8

The full include-list for apps/openmw/mwgui/confirmationdialog.cpp:
#include "confirmationdialog.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_EditBox.h>              // for EditBox
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
---
:20:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/actionread.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/light.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwgui/backgroundimage.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/backgroundimage.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/magiceffects.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/magiceffects.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actiontalk.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actiontalk.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/shadows.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(components/terrain/defaultworld.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/static.cpp:10:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:11:
./apps/openmw/mwrender/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
./apps/openmw/mwrender/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwclass/static.cpp:10:
In file included from apps/openmw/mwclass/../mwworld/cellstore.hpp:14:
./apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^

components/terrain/defaultworld.cpp should add these lines:
namespace Ogre { class Camera; }

components/terrain/defaultworld.cpp should remove these lines:

The full include-list for components/terrain/defaultworld.cpp:
#include "defaultworld.hpp"
#include <OgreAxisAlignedBox.h>         // for AxisAlignedBox, etc
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRoot.h>                   // for Root
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for max
#include <boost/date_time/time_duration.hpp>  // for subsecond_duration
#include "OgreAny.h"                    // for any_cast, Any
#include "OgreMemoryAllocatorConfig.h"  // for OGRE_NEW
#include "OgrePixelFormat.h"            // for PixelFormat::PF_A8B8G8R8
#include "OgreRenderTarget.h"           // for RenderTarget
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSceneManager.h"           // for SceneManager, etc
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector2.h"                // for Vector2, operator+, etc
#include "OgreVector3.h"                // for Vector3
#include "OgreWorkQueue.h"              // for WorkQueue, etc
#include "Threading/OgreThreadDefinesBoost.h"  // for OGRE_THREAD_SLEEP
#include "components/terrain/world.hpp"  // for World
#include "quadtreenode.hpp"             // for QuadTreeNode, etc
#include "storage.hpp"                  // for Storage
namespace Ogre { class Camera; }
---
In file included from components/nifbullet/bulletnifloader.cpp:34:
In file included from components/nifbullet/../nif/controller.hpp:27:
In file included from ./components/nif/base.hpp:7:
./components/nif/recordptr.hpp:46:19: error: 'Nif::NiSourceTexture' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::NiSourceTexture>::post' requested here
            list[i].post(nif);
                    ^
components/nifbullet/../nif/controller.hpp:299:18: note: in instantiation of member function 'Nif::RecordListT<Nif::NiSourceTexture>::post' requested here
        mSources.post(nif);
                 ^
./components/nif/recordptr.hpp:131:7: note: forward declaration of 'Nif::NiSourceTexture'
class NiSourceTexture;
      ^
In file included from apps/openmw/mwgui/bookwindow.cpp:7:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwgui/bookwindow.cpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwworld/actionread.cpp:4:
In file included from apps/openmw/mwworld/../mwgui/bookwindow.hpp:8:
apps/openmw/mwworld/../mwbase/../mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from components/nifoverrides/nifoverrides.cpp:4:
In file included from libs/../extern/shiny/Main/MaterialInstance.hpp:9:
In file included from libs/../extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from libs/../extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
libs/../extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
libs/../extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
libs/../extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

apps/openmw/mwgui/race.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0
namespace MWRender { class RaceSelectionPreview; }

apps/openmw/mwgui/race.hpp should remove these lines:
- #include <vector>  // lines 7-7
- #include "apps/openmw/mwgui/../mwrender/characterpreview.hpp"  // lines 10-10

The full include-list for apps/openmw/mwgui/race.hpp:
#include <stddef.h>                     // for size_t
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "windowbase.hpp"
namespace ESM { struct NPC; }  // lines 29-29
namespace MWRender { class RaceSelectionPreview; }
namespace MyGUI { class ImageBox; }  // lines 13-13
namespace MyGUI { class ListBox; }  // lines 14-14
namespace MyGUI { class ScrollBar; }  // lines 15-15
namespace MyGUI { class Widget; }  // lines 16-16
---

apps/openmw/mwgui/race.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/race.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <MyGUI_RenderManager.h>  // lines 4-4
- #include <algorithm>  // lines 5-5
- #include <iostream>  // lines 7-7
- #include "../mwbase/windowmanager.hpp"  // lines 11-11
- #include "../mwrender/characterpreview.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 14-14
- #include "MyGUI_Align.h"  // lines 15-15
- #include "MyGUI_Button.h"  // lines 16-16
- #include "MyGUI_EventPair.h"  // lines 17-17
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_StringUtility.h"  // lines 21-21
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 27-27
- #include "components/esm/spelllist.hpp"  // lines 32-32

The full include-list for apps/openmw/mwgui/race.cpp:
#include "race.hpp"
#include <MyGUI_ListBox.h>              // for ListBox
#include <exception>                    // for exception
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwgui/widgets.hpp"  // for MWSkill, etc
#include "components/esm/loadbody.hpp"  // for BodyPart, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadrace.hpp"  // for Race::SkillBonus, Race, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "tooltips.hpp"                 // for ToolTips
namespace MWWorld { class ESMStore; }
namespace MyGUI { class Button; }
---
In file included from apps/openmw/mwgui/itemselection.cpp:8:
./apps/openmw/mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
./components/nif/recordptr.hpp:46:19: error: 'Nif::Property' is an incomplete type
            ptr = dynamic_cast<X*>(r);
                  ^           ~~~~
./components/nif/recordptr.hpp:102:21: note: in instantiation of member function 'Nif::RecordPtrT<Nif::Property>::post' requested here
            list[i].post(nif);
                    ^
components/nifbullet/../nif/node.hpp:76:15: note: in instantiation of member function 'Nif::RecordListT<Nif::Property>::post' requested here
        props.post(nif);
              ^
./components/nif/recordptr.hpp:117:7: note: forward declaration of 'Nif::Property'
class Property;
      ^
In file included from apps/openmw/mwgui/enchantingdialog.cpp:3:
./components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwrender/actors.hpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc

apps/openmw/mwrender/actors.hpp should remove these lines:
- #include "apps/openmw/mwrender/../mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 8-8

The full include-list for apps/openmw/mwrender/actors.hpp:
#include <stddef.h>                     // for NULL
#include <map>                          // for map, map<>::value_compare
#include <string>                       // for string
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
namespace MWRender { class Animation; }  // lines 21-21
namespace MWRender { class RenderingManager; }  // lines 22-22
namespace MWWorld { class CellStore; }  // lines 16-16
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 10-10
namespace Ogre { class Camera; }  // lines 11-11
namespace Ogre { class SceneNode; }  // lines 12-12
---

(apps/openmw/mwrender/actors.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/console.hpp should add these lines:

apps/openmw/mwgui/console.hpp should remove these lines:
- #include <list>  // lines 6-6
- #include <vector>  // lines 8-8

The full include-list for apps/openmw/mwgui/console.hpp:
#include <components/compiler/errorhandler.hpp>  // for ErrorHandler::Type, etc
#include <components/compiler/extensions.hpp>  // for Extensions
#include <string>                       // for string
#include "../mwscript/compilercontext.hpp"  // for CompilerContext
#include "MyGUI_KeyCode.h"              // for KeyCode
#include "MyGUI_Types.h"                // for Char
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace Compiler { class Output; }  // lines 16-16
namespace Compiler { struct TokenLoc; }  // lines 17-17
namespace MWWorld { class Ptr; }  // lines 18-18
namespace MyGUI { class EditBox; }  // lines 19-19
namespace MyGUI { class Widget; }  // lines 20-20
---

apps/openmw/mwgui/console.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwgui/console.cpp should remove these lines:
- #include <algorithm>  // lines 9-9
- #include <boost/filesystem/path.hpp>  // lines 3-3
- #include <components/compiler/extensions0.hpp>  // lines 6-6
- #include <map>  // lines 12-12
- #include <utility>  // lines 13-13
- #include "../mwbase/world.hpp"  // lines 17-17
- #include "../mwscript/extensions.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 19-19
- #include "MyGUI_EventPair.h"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 24-24
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 26-26
- #include "apps/openmw/mwgui/../mwscript/../mwworld/cellref.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwscript/../mwworld/refdata.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/../mwscript/../mwworld/store.hpp"  // lines 29-29
- #include "apps/openmw/mwgui/referenceinterface.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 33-33
- #include "components/compiler/tokenloc.hpp"  // lines 39-39
- #include "components/esm/loadcell.hpp"  // lines 40-40
- #include "components/interpreter/interpreter.hpp"  // lines 41-41
- #include "components/interpreter/types.hpp"  // lines 42-42

The full include-list for apps/openmw/mwgui/console.cpp:
#include "console.hpp"
#include <MyGUI_EditBox.h>              // for EditBox
#include <ctype.h>                      // for tolower
#include <stddef.h>                     // for NULL
#include <boost/filesystem/fstream.hpp>  // for ifstream
#include <boost/filesystem/path_traits.hpp>  // for filesystem
#include <components/compiler/exception.hpp>  // for SourceException
#include <exception>                    // for exception
#include <istream>                      // for istringstream, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwscript/compilercontext.hpp"
#include "apps/openmw/mwgui/../mwscript/interpretercontext.hpp"
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "components/compiler/errorhandler.hpp"  // for ErrorHandler::Type
#include "components/compiler/lineparser.hpp"  // for LineParser
#include "components/compiler/locals.hpp"  // for Locals
#include "components/compiler/output.hpp"  // for Output
#include "components/compiler/scanner.hpp"  // for Scanner
namespace MyGUI { class Widget; }  // lines 45-45
---
In file included from apps/openmw/mwclass/activator.cpp:10:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

apps/openmw/mwclass/armor.hpp should add these lines:

apps/openmw/mwclass/armor.hpp should remove these lines:
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/armor.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwclass/armor.cpp should add these lines:
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/armor.cpp should remove these lines:
- #include <components/esm/loadgmst.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include "../mwworld/actionequip.hpp"  // lines 15-15
- #include "../mwworld/cellstore.hpp"  // lines 16-16
- #include "../mwworld/containerstore.hpp"  // lines 17-17
- #include "../mwworld/esmstore.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 27-27
- #include "components/esm/loadweap.hpp"  // lines 31-31

The full include-list for apps/openmw/mwclass/armor.cpp:
#include "armor.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadarmo.hpp>  // for Armor, Armor::Type::Boots, etc
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Armor, etc
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwclass/light.hpp should add these lines:

apps/openmw/mwclass/light.hpp should remove these lines:
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/light.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---

apps/openmw/mwclass/light.cpp should add these lines:
namespace ESM { struct Light; }
namespace MWRender { class Actors; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/light.cpp should remove these lines:
- #include <components/esm/loadligh.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwbase/soundmanager.hpp"  // lines 9-9
- #include "../mwrender/actors.hpp"  // lines 12-12
- #include "../mwworld/actionequip.hpp"  // lines 14-14
- #include "../mwworld/cellstore.hpp"  // lines 15-15
- #include "../mwworld/failedaction.hpp"  // lines 16-16
- #include "../mwworld/nullaction.hpp"  // lines 18-18
- #include "../mwworld/physicssystem.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 27-27
- #include "components/esm/loadweap.hpp"  // lines 29-29

The full include-list for apps/openmw/mwclass/light.cpp:
#include "light.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Lights
namespace ESM { struct Light; }
namespace MWRender { class Actors; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/mwclass/container.hpp has correct #includes/fwd-decls)

apps/openmw/mwgui/bookwindow.hpp should add these lines:

apps/openmw/mwgui/bookwindow.hpp should remove these lines:
- #include <vector>  // lines 5-5

The full include-list for apps/openmw/mwgui/bookwindow.hpp:
#include <utility>                      // for pair
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "windowbase.hpp"               // for WindowBase
namespace Gui { class ImageButton; }  // lines 10-10
namespace MyGUI { class TextBox; }  // lines 11-11
namespace MyGUI { class Widget; }  // lines 12-12
---

(apps/openmw/mwclass/static.hpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/static.cpp has correct #includes/fwd-decls)

apps/openmw/mwclass/container.cpp should add these lines:
namespace ESM { struct Container; }
namespace ESM { struct InventoryList; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/container.cpp should remove these lines:
- #include <components/esm/loadcont.hpp>  // lines 4-4
- #include <typeinfo>  // lines 7-7
- #include "../mwworld/actionopen.hpp"  // lines 17-17
- #include "../mwworld/actiontrap.hpp"  // lines 18-18
- #include "../mwworld/cellstore.hpp"  // lines 19-19
- #include "../mwworld/esmstore.hpp"  // lines 22-22
- #include "../mwworld/failedaction.hpp"  // lines 23-23
- #include "../mwworld/inventorystore.hpp"  // lines 24-24
- #include "../mwworld/nullaction.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwbase/../mwgui/mode.hpp"  // lines 27-27
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 30-30
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 32-32
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 34-34
- #include "components/esm/loadsoun.hpp"  // lines 35-35

The full include-list for apps/openmw/mwclass/container.cpp:
#include "container.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for abs, NULL
#include <components/esm/containerstate.hpp>  // for ContainerState
#include <memory>                       // for auto_ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/objectstate.hpp"  // for ObjectState
#include "components/misc/stringops.hpp"  // for StringUtils
namespace ESM { struct Container; }
namespace ESM { struct InventoryList; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { class InventoryStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwgui/bookwindow.cpp should add these lines:
namespace ESM { struct Book; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwgui/bookwindow.cpp should remove these lines:
- #include <MyGUI_TextBox.h>  // lines 1-1
- #include <components/esm/loadbook.hpp>  // lines 2-2
- #include "../mwbase/soundmanager.hpp"  // lines 5-5
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_StringUtility.h"  // lines 12-12
- #include "MyGUI_WidgetInput.h"  // lines 17-17
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 19-19
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 20-20

The full include-list for apps/openmw/mwgui/bookwindow.cpp:
#include "bookwindow.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/actiontake.hpp"    // for ActionTake
#include "MyGUI_Align.h"                // for Align
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TSize.h"                // for TSize
#include "MyGUI_Types.h"                // for IntSize, IntCoord, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "components/widgets/imagebutton.hpp"  // for ImageButton
#include "formatting.hpp"               // for BookFormatter
namespace ESM { struct Book; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwworld/actiontake.cpp:4:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwgui/itemselection.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
namespace MWWorld { class Ptr; }

apps/openmw/mwgui/itemselection.hpp should remove these lines:
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwgui/itemselection.hpp:
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "windowbase.hpp"               // for WindowModal
namespace MWGui { class InventoryItemModel; }  // lines 18-18
namespace MWGui { class ItemView; }  // lines 19-19
namespace MWGui { class SortFilterItemModel; }  // lines 20-20
namespace MWWorld { class Ptr; }
namespace MyGUI { class Widget; }  // lines 10-10
---

apps/openmw/mwgui/itemselection.cpp should add these lines:
namespace MWWorld { class Ptr; }
namespace MyGUI { class Button; }

apps/openmw/mwgui/itemselection.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include "MyGUI_RTTI.h"  // lines 5-5
- #include "MyGUI_WidgetInput.h"  // lines 6-6
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 8-8

The full include-list for apps/openmw/mwgui/itemselection.cpp:
#include "itemselection.hpp"
#include <MyGUI_TextBox.h>              // for TextBox
#include <stddef.h>                     // for NULL
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack
#include "inventoryitemmodel.hpp"       // for InventoryItemModel
#include "itemview.hpp"                 // for ItemView
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel
namespace MWWorld { class Ptr; }
namespace MyGUI { class Button; }
namespace MyGUI { class Widget; }  // lines 14-14
---

(extern/shiny/Platforms/Ogre/OgreMaterialSerializer.hpp has correct #includes/fwd-decls)

(extern/shiny/Platforms/Ogre/OgreMaterialSerializer.cpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/interpretercontext.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/interpretercontext.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/activator.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwworld/localscripts.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/localscripts.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/potion.cpp:9:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwclass/lockpick.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwworld/actionread.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/enchantingdialog.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/actionread.cpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
namespace ESM { struct Book; }
namespace MWMechanics { class NpcStats; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwworld/actionread.cpp should remove these lines:
- #include "../mwbase/windowmanager.hpp"  // lines 2-2
- #include "../mwgui/bookwindow.hpp"  // lines 4-4
- #include "../mwgui/scrollwindow.hpp"  // lines 5-5
- #include "../mwmechanics/npcstats.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/../mwbase/../mwgui/../mwworld/ptr.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 9-9
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/store.hpp"  // lines 12-12
- #include "components/esm/loadbook.hpp"  // lines 14-14
- #include "components/esm/loadclas.hpp"  // lines 15-15
- #include "components/esm/loadnpc.hpp"  // lines 16-16
- #include "components/esm/loadskil.hpp"  // lines 17-17
- #include "esmstore.hpp"  // lines 18-18

The full include-list for apps/openmw/mwworld/actionread.cpp:
#include "actionread.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
#include "class.hpp"                    // for Class
#include "player.hpp"                   // for Player
namespace ESM { struct Book; }
namespace MWMechanics { class NpcStats; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwgui/enchantingdialog.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator!=

apps/openmw/mwgui/enchantingdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ScrollView.h>  // lines 2-2
- #include <components/widgets/list.hpp>  // lines 3-3
- #include <iomanip>  // lines 5-5
- #include <vector>  // lines 8-8
- #include "../mwbase/soundmanager.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 17-17
- #include "MyGUI_RTTI.h"  // lines 19-19
- #include "MyGUI_StringUtility.h"  // lines 20-20
- #include "MyGUI_WidgetInput.h"  // lines 23-23
- #include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/../mwmechanics/enchanting.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 29-29
- #include "components/esm/loadench.hpp"  // lines 31-31
- #include "components/esm/loadgmst.hpp"  // lines 32-32
- #include "sortfilteritemmodel.hpp"  // lines 37-37

The full include-list for apps/openmw/mwgui/enchantingdialog.cpp:
#include "enchantingdialog.hpp"
#include <stddef.h>                     // for NULL
#include <ostream>                      // for stringstream
#include <string>                       // for string
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_UString.h"              // for UString
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // for Ptr, operator!=
#include "apps/openmw/mwgui/spellcreationdialog.hpp"
#include "components/misc/stringops.hpp"  // for StringUtils
#include "itemselection.hpp"            // for ItemSelectionDialog
#include "itemwidget.hpp"               // for ItemWidget
namespace MyGUI { class Widget; }  // lines 39-39
---

(apps/openmw/mwworld/actiontake.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/actiontake.cpp should add these lines:
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actiontake.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwworld/actiontake.cpp:
#include "actiontake.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "class.hpp"                    // for Class
#include "containerstore.hpp"           // for ContainerStore
---

(apps/openmw/mwdialogue/quest.hpp has correct #includes/fwd-decls)

(apps/openmw/mwdialogue/quest.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/potion.cpp:10:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(libs/openengine/ogre/lights.hpp has correct #includes/fwd-decls)

(libs/openengine/ogre/lights.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pathgrid.cpp:8:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/class.cpp:8:
apps/openmw/mwgui/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwgui/class.cpp:9:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:9:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwclass/door.cpp:14:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwgui/hud.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/physicssystem.hpp should add these lines:
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwworld/physicssystem.hpp should remove these lines:
- #include "../apps/openmw/mwrender/../mwworld/ptr.hpp"  // lines 12-12

The full include-list for apps/openmw/mwworld/physicssystem.hpp:
#include <OgreVector3.h>                // for Vector3
#include <stddef.h>                     // for NULL
#include <map>                          // for map
#include <memory>                       // for allocator, auto_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "OgreQuaternion.h"             // for Quaternion
#include "apps/openmw/mwworld/ptr.hpp"  // for Ptr
class btCollisionObject;  // lines 15-15
class btCollisionShape;  // lines 16-16
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 27-27
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 23-23
---

apps/openmw/mwgui/hud.cpp should add these lines:
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwgui/hud.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <MyGUI_ScrollView.h>  // lines 6-6
- #include <algorithm>  // lines 11-11
- #include <stdexcept>  // lines 12-12
- #include <vector>  // lines 13-13
- #include "../mwmechanics/creaturestats.hpp"  // lines 18-18
- #include "../mwworld/esmstore.hpp"  // lines 21-21
- #include "MyGUI_RTTI.h"  // lines 24-24
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_WidgetInput.h"  // lines 30-30
- #include "apps/openmw/mwgui/../mwbase/../mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 31-31
- #include "apps/openmw/mwgui/../mwbase/../mwworld/cellref.hpp"  // lines 32-32
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/mode.hpp"  // lines 35-35
- #include "components/esm/effectlist.hpp"  // lines 36-36
- #include "components/esm/loadgmst.hpp"  // lines 37-37
- #include "components/settings/settings.hpp"  // lines 40-40

The full include-list for apps/openmw/mwgui/hud.cpp:
#include "hud.hpp"
#include <MyGUI_ImageBox.h>             // for ImageBox
#include <MyGUI_InputManager.h>         // for InputManager
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <OgreMath.h>                   // for Math, Math::TWO_PI
#include <math.h>                       // for cos
#include <stddef.h>                     // for NULL, size_t
#include <components/misc/resourcehelpers.hpp>  // for correctIconPath
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_TPoint.h"               // for TPoint
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize, IntPoint
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/mapwindow.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadmgef.hpp"  // for MagicEffect
#include "components/esm/loadspel.hpp"  // for Spell
#include "console.hpp"                  // for Console
#include "draganddrop.hpp"              // for DragAndDrop
#include "inventorywindow.hpp"          // for InventoryWindow
#include "itemmodel.hpp"                // for ItemStack, etc
#include "itemwidget.hpp"               // for ItemWidget
#include "spellicons.hpp"               // for SpellIcons
---

(apps/openmw/mwworld/physicssystem.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/class.cpp:10:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/class.cpp:10:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/class.cpp:10:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/actionequip.cpp:7:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwrender/shadows.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/shadows.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pathgrid.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pathgrid.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(components/nifbullet/bulletnifloader.hpp has correct #includes/fwd-decls)

(components/ogreinit/ogreinit.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/lockpick.cpp:9:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(components/ogreinit/ogreinit.cpp has correct #includes/fwd-decls)

components/nifbullet/bulletnifloader.cpp should add these lines:

components/nifbullet/bulletnifloader.cpp should remove these lines:
- #include <cstdio>  // lines 29-29

The full include-list for components/nifbullet/bulletnifloader.cpp:
#include "bulletnifloader.hpp"
#include <stddef.h>                     // for size_t
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <cassert>                      // for assert
#include <components/misc/stringops.hpp>  // for StringUtils
#include <components/nifcache/nifcache.hpp>  // for Cache, NIFFilePtr
#include <map>                          // for map
#include <utility>                      // for make_pair
#include <vector>                       // for vector
#include "../nif/controller.hpp"        // for NiKeyframeController
#include "../nif/data.hpp"              // for NiTriShapeData
#include "../nif/extra.hpp"             // for NiStringExtraData
#include "../nif/niffile.hpp"           // for NIFFile
#include "../nif/node.hpp"              // for Node, NiNode, NiTriShape, etc
#include "BulletCollision/CollisionShapes/btBoxShape.h"  // for btBoxShape
#include "BulletCollision/CollisionShapes/btCollisionShape.h"
#include "BulletCollision/CollisionShapes/btCompoundShape.h"
#include "BulletCollision/CollisionShapes/btTriangleMesh.h"
#include "LinearMath/btQuaternion.h"    // for btQuaternion
#include "LinearMath/btTransform.h"     // for btTransform
#include "OgreQuaternion.h"             // for Quaternion, etc
#include "OgreResource.h"               // for ResourcePtr, etc
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager
#include "OgreVector3.h"                // for Vector3
#include "components/nif/base.hpp"      // for Extra, Controller, etc
#include "components/nif/niftypes.hpp"  // for Transformation
#include "components/nif/record.hpp"    // for Record, etc
#include "components/nif/recordptr.hpp"  // for ExtraPtr, NodeList, etc
#include "openengine/bullet/BulletShapeLoader.h"  // for BulletShape, etc
---
In file included from apps/openmw/mwclass/potion.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwworld/esmloader.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/esmloader.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/ShaderInstance.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/weather.cpp:13:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwclass/activator.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/dialogue.cpp:6:
./components/widgets/list.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/openmw/mwclass/activator.cpp should add these lines:
namespace ESM { struct Activator; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/activator.cpp should remove these lines:
- #include <components/esm/loadacti.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/action.hpp"  // lines 15-15
- #include "../mwworld/cellstore.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 17-17
- #include "../mwworld/failedaction.hpp"  // lines 18-18
- #include "../mwworld/nullaction.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 26-26
- #include "components/esm/loadsoun.hpp"  // lines 27-27

The full include-list for apps/openmw/mwclass/activator.cpp:
#include "activator.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
namespace ESM { struct Activator; }
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(extern/shiny/Main/ShaderInstance.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actionequip.cpp:8:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwgui/class.cpp:22:
./apps/openmw/mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwbase/environment.cpp:6:
apps/openmw/mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwmechanics/aiactivate.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/aiactivate.cpp should add these lines:

apps/openmw/mwmechanics/aiactivate.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 13-13

The full include-list for apps/openmw/mwmechanics/aiactivate.cpp:
#include "aiactivate.hpp"
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for distance
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "movement.hpp"                 // for Movement
---
In file included from apps/openmw/mwclass/door.cpp:15:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:11:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwmechanics/actor.hpp has correct #includes/fwd-decls)

(libs/openengine/bullet/BulletShapeLoader.h has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/actor.cpp has correct #includes/fwd-decls)

(libs/openengine/bullet/BulletShapeLoader.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/spellbuyingwindow.cpp:15:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwgui/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(components/nifoverrides/nifoverrides.hpp has correct #includes/fwd-decls)

(components/nifoverrides/nifoverrides.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/cellstore.hpp has correct #includes/fwd-decls)

apps/openmw/mwscript/transformationextensions.cpp should add these lines:
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwscript/transformationextensions.cpp should remove these lines:
- #include "apps/openmw/mwscript/../mwbase/../mwworld/ptr.hpp"  // lines 18-18

The full include-list for apps/openmw/mwscript/transformationextensions.cpp:
#include <OgreSceneNode.h>              // for SceneNode
#include <stddef.h>                     // for NULL
#include <components/compiler/opcodes.hpp>  // for opcodeGetAngle, etc
#include <components/interpreter/interpreter.hpp>  // for Interpreter
#include <components/interpreter/opcodes.hpp>  // for Opcode0
#include <components/interpreter/runtime.hpp>  // for Runtime
#include <exception>                    // for exception
#include <stdexcept>                    // for runtime_error
#include <string>                       // for operator==, allocator, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "../mwworld/player.hpp"        // for Player
#include "OgreMath.h"                   // for Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, operator*, etc
#include "apps/openmw/mwscript/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwscript/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwscript/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwscript/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwscript/../mwworld/cellstore.hpp"  // for CellStore
#include "components/esm/defs.hpp"      // for Position
#include "components/interpreter/context.hpp"  // for Context
#include "components/interpreter/types.hpp"  // for Data, Type_Float, etc
#include "interpretercontext.hpp"       // for InterpreterContext
#include "ref.hpp"                      // for ImplicitRef, ExplicitRef
namespace ESM { struct Cell; }  // lines 29-29
---

(apps/openmw/mwmechanics/steering.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/steering.cpp has correct #includes/fwd-decls)

apps/openmw/mwworld/cellstore.cpp should add these lines:

apps/openmw/mwworld/cellstore.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwmechanics/pathgrid.hpp"  // lines 19-19

The full include-list for apps/openmw/mwworld/cellstore.cpp:
#include "cellstore.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for size_t
#include <algorithm>                    // for find, binary_search, sort
#include <components/esm/cellid.hpp>    // for CellId, operator==
#include <components/esm/cellstate.hpp>  // for CellState
#include <components/esm/containerstate.hpp>  // for ContainerState
#include <components/esm/creaturelevliststate.hpp>
#include <components/esm/creaturestate.hpp>  // for CreatureState
#include <components/esm/doorstate.hpp>  // for DoorState
#include <components/esm/fogstate.hpp>  // for FogState
#include <components/esm/npcstate.hpp>  // for NpcState
#include <components/esm/objectstate.hpp>  // for ObjectState
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "apps/openmw/mwworld/cellreflist.hpp"  // for CellRefList, etc
#include "apps/openmw/mwworld/livecellref.hpp"  // for LiveCellRef, etc
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwworld/store.hpp"  // for Store
#include "class.hpp"                    // for Class
#include "components/esm/cellref.hpp"   // for operator==, CellRef, RefNum, etc
#include "components/esm/defs.hpp"      // for RecNameInts::REC_ACTI, etc
#include "components/esm/esmcommon.hpp"  // for ESM_Context
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadcell.hpp"  // for Cell, MovedCellRefTracker, etc
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/misc/stringops.hpp"  // for StringUtils
#include "containerstore.hpp"           // for ContainerStore
#include "esmstore.hpp"                 // for ESMStore
#include "ptr.hpp"                      // for Ptr
namespace ESM { class ESMWriter; }  // lines 56-56
---
In file included from apps/openmw/mwgui/alchemywindow.cpp:9:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwworld/actionequip.hpp has correct #includes/fwd-decls)
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwworld/actionequip.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actionequip.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwworld/actionequip.cpp:
#include "actionequip.hpp"
#include <assert.h>                     // for assert
#include <string>                       // for string, basic_string
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "apps/openmw/mwworld/containerstore.hpp"
#include "class.hpp"                    // for Class
#include "inventorystore.hpp"           // for InventoryStore
---

(apps/openmw/mwbase/environment.hpp has correct #includes/fwd-decls)

(apps/openmw/mwbase/environment.cpp has correct #includes/fwd-decls)
apps/openmw/mwgui/spellbuyingwindow.cpp:17:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwgui/alchemywindow.cpp:13:
In file included from apps/openmw/mwgui/../mwworld/esmstore.hpp:48:
apps/openmw/mwgui/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwgui/class.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc

apps/openmw/mwgui/class.hpp should remove these lines:
- #include <vector>  // lines 8-8
- namespace MyGUI { class Button; }  // lines 17-17

The full include-list for apps/openmw/mwgui/class.hpp:
#include <stddef.h>                     // for size_t
#include <components/esm/attr.hpp>      // for Attribute, etc
#include <components/esm/loadclas.hpp>  // for Class, etc
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate0, etc
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_UString.h"              // for UString
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum
#include "widgets.hpp"                  // for MWSkillPtr, MWAttributePtr
#include "windowbase.hpp"               // for WindowModal, etc
namespace MyGUI { class ImageBox; }  // lines 18-18
namespace MyGUI { class ListBox; }  // lines 19-19
namespace MyGUI { class TextBox; }  // lines 20-20
namespace MyGUI { class Widget; }  // lines 21-21
---

(apps/openmw/mwsound/movieaudiofactory.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/consoleextensions.hpp has correct #includes/fwd-decls)

(apps/openmw/mwscript/consoleextensions.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/class.cpp should add these lines:
namespace MWGui { class WindowBase; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/class.cpp should remove these lines:
- #include <MyGUI_Gui.h>  // lines 1-1
- #include <MyGUI_ImageBox.h>  // lines 2-2
- #include <algorithm>  // lines 4-4
- #include "../mwworld/esmstore.hpp"  // lines 10-10
- #include "MyGUI_Align.h"  // lines 11-11
- #include "MyGUI_EventPair.h"  // lines 13-13
- #include "MyGUI_RTTI.h"  // lines 16-16
- #include "MyGUI_WidgetInput.h"  // lines 20-20
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 23-23

The full include-list for apps/openmw/mwgui/class.cpp:
#include "class.hpp"
#include <MyGUI_ListBox.h>              // for ListBox
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_ISubWidgetText.h"       // for ISubWidgetText
#include "MyGUI_Macros.h"               // for ITEM_NONE
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntCoord, IntSize
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwgui/widgets.hpp"  // for MWSkillPtr, MWSkill, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "tooltips.hpp"                 // for ToolTips
namespace MWGui { class WindowBase; }
namespace MWWorld { class ESMStore; }
---
In file included from apps/openmw/mwrender/camera.cpp:16:
In file included from apps/openmw/mwrender/npcanimation.hpp:9:
In file included from apps/openmw/mwrender/../mwworld/inventorystore.hpp:10:
In file included from apps/openmw/mwrender/../mwworld/containerstore.hpp:10:
apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
error: no such file or directory: 'build-include/apps/launcher/moc_datafilespage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/moc_settingspage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/openmw/mwclass/lockpick.hpp should add these lines:

apps/openmw/mwclass/lockpick.hpp should remove these lines:
- #include <utility>  // lines 6-6
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/lockpick.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---
error: no such file or directory: 'build-include/apps/launcher/moc_graphicspage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/openmw/mwclass/lockpick.cpp should add these lines:
namespace ESM { struct Lockpick; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/lockpick.cpp should remove these lines:
- #include <components/esm/loadlock.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actionequip.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "../mwworld/inventorystore.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 19-19

The full include-list for apps/openmw/mwclass/lockpick.cpp:
#include "lockpick.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Picks
namespace ESM { struct Lockpick; }
namespace MWWorld { class Class; }  // lines 23-23
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/mwsound/movieaudiofactory.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/launcher/utils/moc_textinputdialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/moc_maindialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/utils/moc_profilescombobox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwrender/camera.cpp:16:
In file included from apps/openmw/mwrender/npcanimation.hpp:9:
apps/openmw/mwrender/../mwworld/inventorystore.hpp:134:37: error: return type of virtual function 'clone' is not covariant with the return type of the function it overrides ('MWWorld::InventoryStore *' is not derived from 'MWWorld::ContainerStore *')
            virtual InventoryStore* clone() { return new InventoryStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
apps/openmw/mwrender/../mwworld/containerstore.hpp:107:37: note: overridden virtual function is here
            virtual ContainerStore* clone() { return new ContainerStore(*this); }
                    ~~~~~~~~~~~~~~~ ^
error: no such file or directory: 'build-include/apps/launcher/moc_playpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/launcher/utils/moc_lineedit.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(components/to_utf8/to_utf8.hpp has correct #includes/fwd-decls)

(components/to_utf8/to_utf8.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/launcher/moc_textslotmsgbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwgui/countdialog.cpp:4:
./components/widgets/numericeditbox.hpp:8:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/openmw/mwgui/alchemywindow.cpp:16:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwclass/potion.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/potion.cpp should add these lines:
namespace ESM { struct Potion; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/potion.cpp should remove these lines:
- #include <components/esm/loadalch.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include <vector>  // lines 6-6
- #include "../mwworld/actionapply.hpp"  // lines 15-15
- #include "../mwworld/cellstore.hpp"  // lines 16-16
- #include "../mwworld/esmstore.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 25-25
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 26-26
- #include "components/esm/loadgmst.hpp"  // lines 27-27

The full include-list for apps/openmw/mwclass/potion.cpp:
#include "potion.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Potions
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace ESM { struct Potion; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwclass/door.hpp should add these lines:
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/door.hpp should remove these lines:
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 10-10

The full include-list for apps/openmw/mwclass/door.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace ESM { struct Door; }  // lines 12-12
namespace ESM { struct ObjectState; }  // lines 13-13
namespace MWRender { class RenderingInterface; }  // lines 14-14
namespace MWWorld { class Action; }  // lines 15-15
namespace MWWorld { class CellStore; }  // lines 16-16
namespace MWWorld { class PhysicsSystem; }  // lines 17-17
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

apps/openmw/mwclass/door.cpp should add these lines:
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/door.cpp should remove these lines:
- #include <components/esm/loaddoor.hpp>  // lines 4-4
- #include <stdexcept>  // lines 7-7
- #include <typeinfo>  // lines 8-8
- #include "../mwworld/actiondoor.hpp"  // lines 18-18
- #include "../mwworld/actionteleport.hpp"  // lines 19-19
- #include "../mwworld/actiontrap.hpp"  // lines 20-20
- #include "../mwworld/cellstore.hpp"  // lines 21-21
- #include "../mwworld/esmstore.hpp"  // lines 23-23
- #include "../mwworld/failedaction.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 26-26
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 28-28
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 32-32
- #include "components/esm/defs.hpp"  // lines 33-33
- #include "components/esm/loadcell.hpp"  // lines 34-34
- #include "components/esm/loadregn.hpp"  // lines 35-35

The full include-list for apps/openmw/mwclass/door.cpp:
#include "door.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for abs, NULL
#include <components/esm/doorstate.hpp>  // for DoorState
#include <memory>                       // for auto_ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData, etc
#include "components/esm/objectstate.hpp"  // for ObjectState
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(libs/openengine/gui/manager.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/timestamp.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/timestamp.cpp has correct #includes/fwd-decls)

(libs/openengine/gui/manager.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/fallback.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actionapply.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwworld/fallback.cpp has correct #includes/fwd-decls)

apps/openmw/mwgui/spellbuyingwindow.hpp should add these lines:

apps/openmw/mwgui/spellbuyingwindow.hpp should remove these lines:
- #include <map>  // lines 4-4

The full include-list for apps/openmw/mwgui/spellbuyingwindow.hpp:
#include <string>                       // for string
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase
namespace MWWorld { class Ptr; }  // lines 10-10
namespace MyGUI { class Button; }  // lines 11-11
namespace MyGUI { class ScrollView; }  // lines 12-12
namespace MyGUI { class TextBox; }  // lines 13-13
namespace MyGUI { class Widget; }  // lines 17-17
---

apps/openmw/mwgui/spellbuyingwindow.cpp should add these lines:
#include <map>                          // for _Rb_tree_const_iterator
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWWorld { class ESMStore; }

apps/openmw/mwgui/spellbuyingwindow.cpp should remove these lines:
- #include <algorithm>  // lines 4-4
- #include "../mwbase/soundmanager.hpp"  // lines 9-9
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "MyGUI_Align.h"  // lines 16-16
- #include "MyGUI_RTTI.h"  // lines 18-18
- #include "MyGUI_StringUtility.h"  // lines 19-19
- #include "MyGUI_Widget.h"  // lines 22-22
- #include "MyGUI_WidgetInput.h"  // lines 23-23
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 25-25
- #include "apps/openmw/mwgui/../mwworld/livecellref.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 28-28
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 29-29
- #include "components/esm/loadgmst.hpp"  // lines 30-30
- #include "components/esm/loadnpc.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/spellbuyingwindow.cpp:
#include "spellbuyingwindow.hpp"
#include <MyGUI_Button.h>               // for Button
#include <MyGUI_Gui.h>                  // for Gui
#include <MyGUI_ScrollView.h>           // for ScrollView
#include <map>                          // for _Rb_tree_const_iterator
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntPoint, IntSize
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/spells.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
#include "components/misc/stringops.hpp"  // for StringUtils
namespace MWWorld { class ESMStore; }
---
In file included from apps/openmw/mwmechanics/aicombat.cpp:14:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
./apps/openmw/mwrender/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
./apps/openmw/mwrender/../mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwmechanics/aicombat.cpp:14:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:14:
./apps/openmw/mwrender/../mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^

apps/openmw/mwgui/countdialog.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate2

apps/openmw/mwgui/countdialog.hpp should remove these lines:

The full include-list for apps/openmw/mwgui/countdialog.hpp:
#include <stddef.h>                     // for size_t
#include <string>                       // for string
#include "MyGUI_Delegate"               // for CMultiDelegate2
#include "windowbase.hpp"               // for WindowModal
namespace Gui { class NumericEditBox; }  // lines 18-18
namespace MyGUI { class Button; }  // lines 10-10
namespace MyGUI { class EditBox; }  // lines 11-11
namespace MyGUI { class ScrollBar; }  // lines 12-12
namespace MyGUI { class TextBox; }  // lines 13-13
namespace MyGUI { class Widget; }  // lines 14-14
---

apps/openmw/mwgui/countdialog.cpp should add these lines:

apps/openmw/mwgui/countdialog.cpp should remove these lines:
- #include <MyGUI_Button.h>  // lines 1-1
- #include <algorithm>  // lines 5-5
- #include "MyGUI_EditBox.h"  // lines 9-9
- #include "MyGUI_EventPair.h"  // lines 10-10
- #include "MyGUI_RTTI.h"  // lines 11-11
- #include "MyGUI_WidgetInput.h"  // lines 15-15
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 16-16

The full include-list for apps/openmw/mwgui/countdialog.cpp:
#include "countdialog.hpp"
#include <MyGUI_RenderManager.h>        // for RenderManager
#include <MyGUI_ScrollBar.h>            // for ScrollBar
#include <components/widgets/numericeditbox.hpp>  // for NumericEditBox
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "MyGUI_TextBox.h"              // for TextBox
#include "MyGUI_Types.h"                // for IntSize
#include "MyGUI_Widget.h"               // for Widget
---

(apps/openmw/mwworld/actiontrap.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actiontrap.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/apparatus.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwclass/ingredient.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwsound/openal_output.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/aicombat.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
./apps/openmw/mwrender/../mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
./apps/openmw/mwrender/../mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aicombat.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
./apps/openmw/mwrender/../mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:5:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwclass/creature.cpp:19:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwmechanics/obstacle.cpp:5:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:14:
apps/openmw/mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwmechanics/summoning.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/summoning.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/summoning.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"
Aborted (core dumped)

(apps/openmw/mwworld/actionapply.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/actionapply.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actionapply.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwworld/actionapply.cpp:
#include "actionapply.hpp"
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "class.hpp"                    // for Class
---
In file included from 
apps/openmw/mwgui/alchemywindow.hpp should add these lines:
namespace MWMechanics { class Alchemy; }

apps/openmw/mwgui/alchemywindow.hpp should remove these lines:
- #include <vector>  // lines 6-6
- #include "apps/openmw/mwgui/../mwmechanics/alchemy.hpp"  // lines 8-8
- namespace MWGui { class ItemWidget; }  // lines 22-22

The full include-list for apps/openmw/mwgui/alchemywindow.hpp:
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include "windowbase.hpp"               // for WindowBase
namespace MWGui { class ItemView; }  // lines 21-21
namespace MWGui { class SortFilterItemModel; }  // lines 23-23
namespace MWMechanics { class Alchemy; }
namespace MyGUI { class Button; }  // lines 11-11
namespace MyGUI { class EditBox; }  // lines 12-12
namespace MyGUI { class Widget; }  // lines 13-13
---
apps/openmw/mwworld/actionrepair.cpp:2:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

apps/openmw/mwgui/alchemywindow.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { struct MagicEffect; }

apps/openmw/mwgui/alchemywindow.cpp should remove these lines:
- #include <boost/algorithm/string/trim.hpp>  // lines 2-2
- #include <set>  // lines 4-4
- #include "../mwbase/soundmanager.hpp"  // lines 7-7
- #include "../mwmechanics/magiceffects.hpp"  // lines 11-11
- #include "../mwworld/esmstore.hpp"  // lines 13-13
- #include "MyGUI_Align.h"  // lines 14-14
- #include "MyGUI_Button.h"  // lines 15-15
- #include "MyGUI_RTTI.h"  // lines 18-18
- #include "MyGUI_WidgetInput.h"  // lines 22-22
- #include "apps/openmw/mwgui/../mwbase/../mwworld/store.hpp"  // lines 26-26
- #include "apps/openmw/mwgui/../mwworld/ptr.hpp"  // lines 27-27
- #include "apps/openmw/mwgui/windowbase.hpp"  // lines 30-30
- #include "components/esm/loadmgef.hpp"  // lines 31-31

The full include-list for apps/openmw/mwgui/alchemywindow.cpp:
#include "alchemywindow.hpp"
#include <MyGUI_Gui.h>                  // for Gui
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/alchemy.hpp"   // for Alchemy, Alchemy::Result, etc
#include "../mwworld/class.hpp"         // for Class
#include "MyGUI_EditBox.h"              // for EditBox
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_UString.h"              // for UString
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/refdata.hpp"
#include "apps/openmw/mwgui/../mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwgui/itemmodel.hpp"  // for ItemStack
#include "apps/openmw/mwgui/widgets.hpp"  // for MWEffectList, etc
#include "inventoryitemmodel.hpp"       // for InventoryItemModel
#include "itemview.hpp"                 // for ItemView
#include "itemwidget.hpp"               // for ItemWidget
#include "sortfilteritemmodel.hpp"      // for SortFilterItemModel, etc
namespace ESM { struct MagicEffect; }
---
In file included from apps/openmw/mwclass/ingredient.cpp:9:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwmechanics/npcstats.hpp should add these lines:
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue

apps/openmw/mwmechanics/npcstats.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 9-9

The full include-list for apps/openmw/mwmechanics/npcstats.hpp:
#include <map>                          // for map
#include <set>                          // for set
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "creaturestats.hpp"            // for CreatureStats
namespace ESM { struct Class; }  // lines 15-15
namespace ESM { struct NpcStats; }  // lines 16-16
---
In file included from apps/openmw/mwmechanics/aiwander.cpp:14:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^

(apps/openmw/mwsound/openal_output.cpp has correct #includes/fwd-decls)
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwworld/actionrepair.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(apps/openmw/mwmechanics/npcstats.cpp has correct #includes/fwd-decls)
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwgui/dialogue.hpp should add these lines:
#include "MyGUI_Delegate"               // for CMultiDelegate0

apps/openmw/mwgui/dialogue.hpp should remove these lines:
- #include <list>  // lines 6-6
- #include <map>  // lines 7-7
- #include <utility>  // lines 9-9
- #include <vector>  // lines 10-10

The full include-list for apps/openmw/mwgui/dialogue.hpp:
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for intptr_t
#include <string>                       // for string
#include "../mwdialogue/keywordsearch.hpp"  // for KeywordSearch
#include "MyGUI_Delegate"               // for CMultiDelegate0
#include "bookpage.hpp"                 // for BookTypesetter, etc
#include "referenceinterface.hpp"       // for ReferenceInterface
#include "windowbase.hpp"               // for WindowBase, WindowModal
namespace Gui { class MWList; }  // lines 29-29
namespace MWWorld { class Ptr; }  // lines 18-18
namespace MyGUI { class Button; }  // lines 19-19
namespace MyGUI { class EditBox; }  // lines 20-20
namespace MyGUI { class ProgressBar; }  // lines 21-21
namespace MyGUI { class ScrollBar; }  // lines 22-22
namespace MyGUI { class TextBox; }  // lines 23-23
namespace MyGUI { class Widget; }  // lines 24-24
namespace MyGUI { class Window; }  // lines 25-25
---

apps/openmw/mwgui/dialogue.cpp should add these lines:
#include <utility>                      // for pair
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }

apps/openmw/mwgui/dialogue.cpp should remove these lines:
- #include <MyGUI_LanguageManager.h>  // lines 1-1
- #include <MyGUI_Window.h>  // lines 3-3
- #include <algorithm>  // lines 7-7
- #include <boost/bind.hpp>  // lines 4-4
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 5-5
- #include <limits>  // lines 8-8
- #include <typeinfo>  // lines 9-9
- #include "../mwbase/soundmanager.hpp"  // lines 13-13
- #include "../mwworld/esmstore.hpp"  // lines 18-18
- #include "MyGUI_EditBox.h"  // lines 21-21
- #include "MyGUI_EventPair.h"  // lines 22-22
- #include "MyGUI_RTTI.h"  // lines 23-23
- #include "MyGUI_StringUtility.h"  // lines 25-25
- #include "MyGUI_TSize.h"  // lines 26-26
- #include "MyGUI_TextBox.h"  // lines 27-27
- #include "MyGUI_UString.h"  // lines 29-29
- #include "MyGUI_WidgetInput.h"  // lines 31-31
- #include "apps/openmw/mwgui/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"  // lines 33-33
- #include "apps/openmw/mwgui/../mwdialogue/../mwworld/ptr.hpp"  // lines 36-36
- #include "apps/openmw/mwgui/../mwdialogue/keywordsearch.hpp"  // lines 37-37
- #include "apps/openmw/mwgui/../mwworld/../mwscript/locals.hpp"  // lines 38-38
- #include "apps/openmw/mwgui/../mwworld/refdata.hpp"  // lines 39-39
- #include "apps/openmw/mwgui/../mwworld/store.hpp"  // lines 40-40
- #include "components/esm/loadgmst.hpp"  // lines 43-43
- #include "components/esm/loadnpc.hpp"  // lines 44-44
- #include "journalbooks.hpp"  // lines 48-48
- #include "spellbuyingwindow.hpp"  // lines 49-49
- #include "tradewindow.hpp"  // lines 50-50
- #include "travelwindow.hpp"  // lines 51-51

The full include-list for apps/openmw/mwgui/dialogue.cpp:
#include "dialogue.hpp"
#include <MyGUI_ProgressBar.h>          // for ProgressBar
#include <components/widgets/list.hpp>  // for MWList
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "MyGUI_Button.h"               // for Button
#include "MyGUI_Colour.h"               // for Colour
#include "MyGUI_ScrollBar.h"            // for ScrollBar
#include "MyGUI_Types.h"                // for IntCoord
#include "MyGUI_Widget.h"               // for Widget
#include "apps/openmw/mwgui/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwgui/../mwbase/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwgui/../mwdialogue/../mwbase/dialoguemanager.hpp"
#include "apps/openmw/mwgui/windowbase.hpp"  // for WindowModal
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "bookpage.hpp"                 // for BookTypesetter, BookPage, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "components/translation/translation.hpp"  // for Storage
namespace ESM { struct GameSetting; }
namespace MWWorld { template <class T> class Store; }
---
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aiwander.cpp:16:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/aisequence.hpp:14:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwmechanics/obstacle.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/obstacle.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/apparatus.cpp:9:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
apps/mwiniimporter/importer.cpp:659:23: error: implicit instantiation of undefined template 'std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::stringstream str;
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:105:11: note: template is declared here
    class basic_stringstream;
          ^

(libs/openengine/bullet/trace.h has correct #includes/fwd-decls)

(libs/openengine/bullet/trace.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/actors.cpp:32:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/actors.cpp:32:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/actors.cpp:32:
In file included from ./apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadcont.hpp:13:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwclass/ingredient.cpp:10:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/essimporter/importcrec.hpp has correct #includes/fwd-decls)

(apps/essimporter/importcrec.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/actioneat.cpp:5:
In file included from apps/openmw/mwworld/../mwworld/containerstore.hpp:10:
apps/openmw/mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from In file included from apps/openmw/mwgui/referenceinterface.cpp:2:
apps/openmw/mwgui/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/security.cpp:5:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwgui/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

apps/openmw/mwrender/camera.hpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwrender/camera.hpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwrender/camera.hpp:
#include <string>                       // for string
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
namespace MWRender { class NpcAnimation; }  // lines 17-17
namespace Ogre { class Camera; }  // lines 11-11
namespace Ogre { class SceneNode; }  // lines 12-12
namespace Ogre { class Vector3; }  // lines 10-10
---

apps/openmw/mwrender/camera.cpp should add these lines:

apps/openmw/mwrender/camera.cpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 9-9

The full include-list for apps/openmw/mwrender/camera.cpp:
#include "camera.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTagPoint.h>               // for TagPoint
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwworld/refdata.hpp"       // for RefData
#include "OgreMath.h"                   // for Math, Degree, Radian, etc
#include "OgreNode.h"                   // for Node
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_X, etc
#include "npcanimation.hpp"             // for NpcAnimation, etc
---

apps/openmw/mwclass/creature.hpp should add these lines:
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"

apps/openmw/mwclass/creature.hpp should remove these lines:
- namespace MWMechanics { class CreatureStats; }  // lines 15-15
- namespace MWMechanics { struct Movement; }  // lines 16-16

The full include-list for apps/openmw/mwclass/creature.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"
namespace ESM { struct GameSetting; }  // lines 24-24
namespace ESM { struct ObjectState; }  // lines 14-14
namespace MWRender { class RenderingInterface; }  // lines 17-17
namespace MWWorld { class Action; }  // lines 18-18
namespace MWWorld { class CellStore; }  // lines 19-19
namespace MWWorld { class PhysicsSystem; }  // lines 20-20
---

(apps/essimporter/importcntc.hpp has correct #includes/fwd-decls)

(apps/essimporter/importcntc.cpp has correct #includes/fwd-decls)

apps/openmw/mwclass/creature.cpp should add these lines:
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
namespace ESM { struct Creature; }
namespace ESM { struct Sound; }
namespace ESM { struct SoundGenerator; }
namespace MWBase { class SoundManager; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/creature.cpp should remove these lines:
- #include <algorithm>  // lines 6-6
- #include <components/esm/loadcrea.hpp>  // lines 4-4
- #include <iostream>  // lines 7-7
- #include <stdexcept>  // lines 9-9
- #include <typeinfo>  // lines 10-10
- #include <vector>  // lines 12-12
- #include "../mwbase/environment.hpp"  // lines 14-14
- #include "../mwbase/soundmanager.hpp"  // lines 16-16
- #include "../mwbase/windowmanager.hpp"  // lines 17-17
- #include "../mwbase/world.hpp"  // lines 18-18
- #include "../mwrender/actors.hpp"  // lines 26-26
- #include "../mwworld/actionopen.hpp"  // lines 28-28
- #include "../mwworld/actiontalk.hpp"  // lines 29-29
- #include "../mwworld/cellstore.hpp"  // lines 30-30
- #include "../mwworld/failedaction.hpp"  // lines 33-33
- #include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/spells.hpp"  // lines 38-38
- #include "apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp"  // lines 39-39
- #include "apps/openmw/mwclass/../mwworld/../mwscript/locals.hpp"  // lines 43-43
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 44-44
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 45-45
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 46-46
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 47-47
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 49-49
- #include "components/esm/aipackage.hpp"  // lines 50-50
- #include "components/esm/defs.hpp"  // lines 52-52
- #include "components/esm/loadsndg.hpp"  // lines 58-58
- #include "components/esm/loadsoun.hpp"  // lines 59-59
- #include "components/esm/loadspel.hpp"  // lines 60-60
- #include "components/esm/loadweap.hpp"  // lines 61-61
- #include "components/esm/spelllist.hpp"  // lines 63-63
- #include "components/misc/stringops.hpp"  // lines 64-64

The full include-list for apps/openmw/mwclass/creature.cpp:
#include "creature.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, NULL, RAND_MAX
#include <components/esm/creaturestate.hpp>  // for CreatureState
#include <memory>                       // for auto_ptr
#include <utility>                      // for pair
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/combat.hpp"    // for reduceWeaponCondition, etc
#include "../mwmechanics/difficultyscaling.hpp"  // for scaleDamage
#include "../mwmechanics/disease.hpp"   // for diseaseContact
#include "../mwmechanics/movement.hpp"  // for Movement
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwclass/../mwmechanics/drawstate.hpp"
#include "apps/openmw/mwclass/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SKDTstruct, etc
#include "components/esm/objectstate.hpp"  // for ObjectState
namespace ESM { struct Creature; }
namespace ESM { struct InventoryList; }  // lines 67-67
namespace ESM { struct Sound; }
namespace ESM { struct SoundGenerator; }
namespace MWBase { class SoundManager; }
namespace MWRender { class Actors; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/essimporter/convertscri.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertscri.cpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/referenceinterface.hpp has correct #includes/fwd-decls)

(apps/openmw/mwgui/referenceinterface.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionrepair.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionrepair.cpp has correct #includes/fwd-decls)

(apps/essimporter/importjour.hpp has correct #includes/fwd-decls)

(apps/essimporter/importjour.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/security.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/security.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/security.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/launcher/main.cpp:17:
apps/launcher/maindialog.hpp:16:10: fatal error: 'ui_mainwindow.h' file not found
#include "ui_mainwindow.h"
         ^

(apps/launcher/settings/graphicssettings.hpp has correct #includes/fwd-decls)

(apps/mwiniimporter/importer.hpp has correct #includes/fwd-decls)

(apps/launcher/settings/graphicssettings.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/player.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:19:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:19:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwmechanics/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:19:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/dialoguemanager.hpp:16:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(libs/openengine/gui/layout.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/effectmanager.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actioneat.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/actioneat.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/actioneat.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwworld/actioneat.cpp:
#include "actioneat.hpp"
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <string>                       // for string
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/action.hpp"  // for Action
#include "class.hpp"                    // for Class
---
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:9:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

(libs/openengine/gui/layout.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/player.cpp has correct #includes/fwd-decls)
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwrender/effectmanager.cpp has correct #includes/fwd-decls)

(apps/mwiniimporter/importer.cpp has correct #includes/fwd-decls)
In file included from extern/shiny/Platforms/Ogre/OgreMaterial.cpp:8:
In file included from extern/shiny/Platforms/Ogre/OgreMaterial.hpp:7:
In file included from extern/shiny/Platforms/Ogre/../../Main/Platform.hpp:8:
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Platforms/Ogre/../../Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(apps/essimporter/convertacdt.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertacdt.cpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/apparatus.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/apparatus.cpp should add these lines:
namespace ESM { struct Apparatus; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/apparatus.cpp should remove these lines:
- #include <components/esm/loadappa.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actionalchemy.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 18-18

The full include-list for apps/openmw/mwclass/apparatus.cpp:
#include "apparatus.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, etc
namespace ESM { struct Apparatus; }
namespace MWWorld { class Action; }  // lines 21-21
namespace MWWorld { class Class; }  // lines 22-22
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/autocalcspell.cpp:10:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aipackage.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:11:
apps/openmw/mwrender/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwrender/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwrender/objects.cpp:9:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:14:
apps/openmw/mwrender/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwworld/weather.cpp:21:
In file included from ./apps/openmw/mwworld/../mwrender/sky.hpp:12:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwworld/actionsoulgem.cpp:2:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwworld/weather.cpp:24:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/weatherstate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/weather.cpp:24:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/weatherstate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/weather.cpp:24:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/weatherstate.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from extern/shiny/Main/ShaderSet.cpp:11:
In file included from extern/shiny/Main/Factory.hpp:10:
In file included from extern/shiny/Main/MaterialInstance.hpp:9:
In file included from extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(apps/openmw/mwclass/ingredient.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/ingredient.cpp should add these lines:
namespace ESM { struct Ingredient; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/ingredient.cpp should remove these lines:
- #include <components/esm/loadingr.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actioneat.hpp"  // lines 14-14
- #include "../mwworld/cellstore.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/loadgmst.hpp"  // lines 26-26

The full include-list for apps/openmw/mwclass/ingredient.cpp:
#include "ingredient.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp"
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace ESM { struct Ingredient; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwworld/actionsoulgem.cpp:3:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/essimporter/convertscpt.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertscpt.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/book.cpp:7:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/openmw/mwmechanics/aipackage.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aipackage.cpp has correct #includes/fwd-decls)

(apps/essimporter/importcellref.hpp has correct #includes/fwd-decls)

(apps/essimporter/importcellref.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/misc.cpp:11:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/book.cpp:8:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/launcher/main.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/aicombat.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/aicombat.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"  // lines 5-5

The full include-list for apps/openmw/mwmechanics/aicombat.hpp:
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiCombat; } }  // lines 14-14
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 8-8
---

(apps/openmw/mwmechanics/aicombat.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/scene.cpp:25:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwworld/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/scene.cpp:25:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwworld/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/scene.cpp:25:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwworld/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/essimporter/importgame.hpp has correct #includes/fwd-decls)

(apps/essimporter/importgame.cpp has correct #includes/fwd-decls)
In file included from apps/essimporter/convertnpcc.cpp:1:
In file included from ./apps/essimporter/importnpcc.hpp:4:
In file included from apps/essimporter/importinventory.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/vector:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
./components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
./components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^
In file included from apps/openmw/mwclass/npc.cpp:19:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwclass/misc.cpp:12:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/essimporter/importscri.hpp has correct #includes/fwd-decls)

(apps/essimporter/importscri.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionsoulgem.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/actionsoulgem.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/book.cpp:9:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwmechanics/summoning.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/summoning.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwmechanics/summoning.cpp should remove these lines:
- #include "../mwworld/esmstore.hpp"  // lines 10-10

The full include-list for apps/openmw/mwmechanics/summoning.cpp:
#include "summoning.hpp"
#include <OgreVector3.h>                // for Vector3, operator*, etc
#include <map>                          // for map, map<>::mapped_type, etc
#include <vector>                       // for vector, vector<>::iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/spellcasting.hpp"  // for isSummoningEffect
#include "../mwrender/animation.hpp"    // for Animation
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "OgreMath.h"                   // for Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "aifollow.hpp"                 // for AiFollow
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/activespells.hpp"  // for ActiveSpells
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadstat.hpp"  // for Static
#include "creaturestats.hpp"            // for CreatureStats, etc
namespace MWWorld { class CellStore; }  // lines 28-28
---

extern/shiny/Platforms/Ogre/OgreMaterial.hpp should add these lines:
#include "GLX/../OgrePrerequisites.h"   // for MaterialPtr

extern/shiny/Platforms/Ogre/OgreMaterial.hpp should remove these lines:
- #include "OgrePrerequisites.h"  // lines 8-8

The full include-list for extern/shiny/Platforms/Ogre/OgreMaterial.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../../Main/Platform.hpp"      // for Material
#include "GLX/../OgrePrerequisites.h"   // for MaterialPtr
#include "OgreSharedPtr.h"              // for SharedPtr
namespace Ogre { class Technique; }  // lines 11-11
---

(extern/shiny/Platforms/Ogre/OgreMaterial.cpp has correct #includes/fwd-decls)

(extern/shiny/Main/ShaderSet.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/creaturelevlist.cpp:8:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwclass/../mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:8:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwclass/../mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwclass/creaturelevlist.cpp:8:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:5:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwclass/../mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwclass/../mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(extern/shiny/Main/ShaderSet.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/doc/savingstate.cpp:6:
In file included from apps/opencs/model/doc/document.hpp:13:
apps/opencs/model/doc/../tools/tools.hpp:31:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:6:
In file included from apps/opencs/model/doc/document.hpp:13:
apps/opencs/model/doc/../tools/tools.hpp:31:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/model/doc/../tools/tools.hpp:31:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/model/doc/../tools/tools.hpp:31:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/model/doc/../tools/tools.hpp:33:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/savingstate.cpp:6:
In file included from apps/opencs/model/doc/document.hpp:13:
apps/opencs/model/doc/../tools/tools.hpp:33:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/model/doc/../tools/tools.hpp:33:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/model/doc/../tools/tools.hpp:33:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

(libs/openengine/bullet/trace.h has correct #includes/fwd-decls)

(libs/openengine/bullet/trace.cpp has correct #includes/fwd-decls)

(apps/essimporter/convertnpcc.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertnpcc.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/esmstore.cpp:8:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/esmstore.cpp:8:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/esmstore.cpp:8:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadtes3.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwmechanics/security.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/security.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwmechanics/security.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 12-12

The full include-list for apps/openmw/mwmechanics/security.cpp:
#include "security.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadlock.hpp"  // for Lockpick, Lockpick::Data
#include "components/esm/loadprob.hpp"  // for Probe, Probe::Data
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct
#include "creaturestats.hpp"            // for CreatureStats
#include "npcstats.hpp"                 // for NpcStats
---
In file included from apps/openmw/mwclass/creaturelevlist.cpp:8:
In file included from apps/openmw/mwclass/../mwmechanics/levelledlist.hpp:7:
apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwworld/livecellref.cpp:7:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwmechanics/autocalcspell.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/autocalcspell.cpp should add these lines:

apps/openmw/mwmechanics/autocalcspell.cpp should remove these lines:
- #include <set>  // lines 6-6

The full include-list for apps/openmw/mwmechanics/autocalcspell.cpp:
#include "autocalcspell.hpp"
#include <assert.h>                     // for assert
#include <algorithm>                    // for find, max
#include <cfloat>                       // for FLT_MAX
#include <climits>                      // for INT_MAX
#include <map>                          // for map, _Rb_tree_iterator, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Target
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadrace.hpp"  // for Race
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
---

(apps/openmw/mwrender/objects.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/objects.cpp has correct #includes/fwd-decls)

apps/openmw/mwclass/npc.hpp should add these lines:
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwmechanics/npcstats.hpp"

apps/openmw/mwclass/npc.hpp should remove these lines:
- namespace MWMechanics { class CreatureStats; }  // lines 15-15
- namespace MWMechanics { class NpcStats; }  // lines 16-16
- namespace MWMechanics { struct Movement; }  // lines 17-17

The full include-list for apps/openmw/mwclass/npc.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
#include "apps/openmw/mwclass/../mwmechanics/movement.hpp"
#include "apps/openmw/mwclass/../mwmechanics/npcstats.hpp"
#include "apps/openmw/mwclass/../mwworld/containerstore.hpp"
#include "apps/openmw/mwclass/../mwworld/inventorystore.hpp"
namespace ESM { class GameSetting; }  // lines 25-25
namespace ESM { struct ObjectState; }  // lines 14-14
namespace MWRender { class RenderingInterface; }  // lines 18-18
namespace MWWorld { class Action; }  // lines 19-19
namespace MWWorld { class CellStore; }  // lines 20-20
namespace MWWorld { class PhysicsSystem; }  // lines 21-21
---
In file included from apps/openmw/mwworld/livecellref.cpp:11:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/livecellref.cpp:11:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/livecellref.cpp:11:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwclass/npc.cpp should add these lines:
namespace ESM { struct Sound; }
namespace ESM { struct Spell; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/npc.cpp should remove these lines:
- #include <algorithm>  // lines 7-7
- #include <iostream>  // lines 9-9
- #include <stdexcept>  // lines 11-11
- #include <typeinfo>  // lines 12-12
- #include <vector>  // lines 14-14
- #include "../mwbase/dialoguemanager.hpp"  // lines 16-16
- #include "../mwbase/soundmanager.hpp"  // lines 18-18
- #include "../mwmechanics/autocalcspell.hpp"  // lines 20-20
- #include "../mwmechanics/character.hpp"  // lines 21-21
- #include "../mwworld/actionopen.hpp"  // lines 30-30
- #include "../mwworld/actiontalk.hpp"  // lines 31-31
- #include "../mwworld/cellstore.hpp"  // lines 32-32
- #include "../mwworld/failedaction.hpp"  // lines 34-34
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/spells.hpp"  // lines 42-42
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwworld/esmstore.hpp"  // lines 43-43
- #include "apps/openmw/mwclass/../mwbase/../mwmechanics/drawstate.hpp"  // lines 45-45
- #include "apps/openmw/mwclass/../mwworld/../mwscript/locals.hpp"  // lines 47-47
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 48-48
- #include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // lines 49-49
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 50-50
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 51-51
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 53-53
- #include "components/esm/aipackage.hpp"  // lines 54-54
- #include "components/esm/defs.hpp"  // lines 56-56
- #include "components/esm/loadarmo.hpp"  // lines 57-57
- #include "components/esm/loadsoun.hpp"  // lines 63-63
- #include "components/esm/loadspel.hpp"  // lines 64-64
- #include "components/esm/loadweap.hpp"  // lines 65-65
- #include "components/esm/spelllist.hpp"  // lines 67-67
- #include "components/misc/stringops.hpp"  // lines 68-68

The full include-list for apps/openmw/mwclass/npc.cpp:
#include "npc.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, RAND_MAX, NULL
#include <cmath>                        // for floor, modf, pow
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include <components/esm/loadnpc.hpp>   // for NPC, NPC::Flags::Female
#include <components/esm/npcstate.hpp>  // for NpcState
#include <memory>                       // for auto_ptr
#include <utility>                      // for pair
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/combat.hpp"    // for reduceWeaponCondition, etc
#include "../mwmechanics/difficultyscaling.hpp"  // for scaleDamage
#include "../mwmechanics/disease.hpp"   // for diseaseContact
#include "../mwmechanics/movement.hpp"  // for Movement
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwrender/actors.hpp"       // for Actors
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/customdata.hpp"    // for CustomData
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwmechanics/stat.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwclass/../mwbase/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwclass/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadrace.hpp"  // for Race, Race::SkillBonus, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/objectstate.hpp"  // for ObjectState
namespace ESM { struct InventoryList; }  // lines 71-71
namespace ESM { struct Sound; }
namespace ESM { struct Spell; }
namespace MWBase { class SoundManager; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <class T> class Store; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/esmtool/esmtool.cpp has correct #includes/fwd-decls)

(apps/essimporter/importacdt.hpp has correct #includes/fwd-decls)

(apps/essimporter/importacdt.cpp has correct #includes/fwd-decls)
In file included from apps/essimporter/convertinventory.cpp:1:
In file included from ./components/misc/stringops.hpp:5:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/utility:70:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
./components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
./components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(apps/openmw/mwmechanics/aiwander.hpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/book.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/book.cpp should add these lines:
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/book.cpp should remove these lines:
- #include <typeinfo>  // lines 4-4
- #include "../mwworld/actionread.hpp"  // lines 13-13
- #include "../mwworld/cellstore.hpp"  // lines 14-14
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "../mwworld/failedaction.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 23-23
- #include "components/esm/loadsoun.hpp"  // lines 26-26

The full include-list for apps/openmw/mwclass/book.cpp:
#include "book.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadbook.hpp>  // for Book, Book::BKDTstruct
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Books, etc
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(components/esm/aisequence.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aisequence.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aiwander.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/repair.cpp:9:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^

apps/openmw/mwmechanics/aisequence.cpp should add these lines:

apps/openmw/mwmechanics/aisequence.cpp should remove these lines:
- #include "aistate.hpp"  // lines 19-19

The full include-list for apps/openmw/mwmechanics/aisequence.cpp:
#include "aisequence.hpp"
#include <components/esm/aisequence.hpp>
#include <algorithm>                    // for find
#include <limits>                       // for numeric_limits
#include <stdexcept>                    // for runtime_error
#include <string>                       // for allocator, string
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "OgreVector3.h"                // for Vector3
#include "aiactivate.hpp"               // for AiActivate
#include "aicombat.hpp"                 // for AiCombat
#include "aiescort.hpp"                 // for AiEscort
#include "aifollow.hpp"                 // for AiFollow
#include "aipackage.hpp"                // for AiPackage, etc
#include "aipursue.hpp"                 // for AiPursue
#include "aitravel.hpp"                 // for AiTravel
#include "aiwander.hpp"                 // for AiWander
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr, etc
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "components/esm/aipackage.hpp"  // for AITarget, AIPackage, etc
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/esmcommon.hpp"  // for NAME32
---
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/essimporter/importinfo.hpp has correct #includes/fwd-decls)

(apps/essimporter/importinfo.cpp has correct #includes/fwd-decls)

(apps/openmw/mwclass/misc.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertinventory.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertinventory.cpp has correct #includes/fwd-decls)

apps/openmw/mwclass/misc.cpp should add these lines:
namespace ESM { struct Miscellaneous; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/misc.cpp should remove these lines:
- #include <boost/lexical_cast.hpp>  // lines 3-3
- #include <components/esm/loadmisc.hpp>  // lines 4-4
- #include <sstream>  // lines 6-6
- #include <typeinfo>  // lines 7-7
- #include "../mwworld/actionsoulgem.hpp"  // lines 15-15
- #include "../mwworld/cellstore.hpp"  // lines 16-16
- #include "../mwworld/nullaction.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/esmstore.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/loadcrea.hpp"  // lines 26-26
- #include "components/esm/loadnpc.hpp"  // lines 27-27
- #include "components/misc/stringops.hpp"  // lines 28-28

The full include-list for apps/openmw/mwclass/misc.cpp:
#include "misc.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/manualref.hpp"     // for ManualRef
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // for RefData
namespace ESM { struct Miscellaneous; }
namespace MWWorld { class Action; }  // lines 31-31
namespace MWWorld { class Class; }  // lines 32-32
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---
In file included from apps/openmw/mwmechanics/repair.cpp:13:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/repair.cpp:13:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/repair.cpp:13:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/essimporter/importscpt.hpp has correct #includes/fwd-decls)

(apps/essimporter/importscpt.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:4:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/weapon.cpp:9:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

apps/openmw/mwmechanics/actors.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/actors.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 10-10

The full include-list for apps/openmw/mwmechanics/actors.hpp:
#include <stdint.h>                     // for uint32_t
#include <list>                         // for list
#include <map>                          // for map, map<>::const_iterator, etc
#include <string>                       // for string
#include <vector>                       // for vector
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"
namespace ESM { class ESMReader; }  // lines 12-12
namespace ESM { class ESMWriter; }  // lines 13-13
namespace Loading { class Listener; }  // lines 14-14
namespace MWMechanics { class Actor; }  // lines 28-28
namespace MWWorld { class CellStore; }  // lines 23-23
namespace Ogre { class Vector3; }  // lines 18-18
---

(apps/essimporter/importercontext.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/weapon.cpp:10:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:5:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:5:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/difficultyscaling.cpp:5:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwclass/clothing.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

apps/openmw/mwmechanics/actors.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"

apps/openmw/mwmechanics/actors.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/magiceffects.hpp"  // lines 39-39
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 41-41

The full include-list for apps/openmw/mwmechanics/actors.cpp:
#include "actors.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreVector3.h>                // for Vector3
#include <stddef.h>                     // for NULL
#include <algorithm>                    // for max, min, find
#include <cmath>                        // for abs, ceil
#include <components/esm/loadnpc.hpp>   // for NPC
#include <limits>                       // for numeric_limits
#include <set>                          // for set
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair, make_pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager, etc
#include "../mwbase/soundmanager.hpp"   // for SoundManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/actionequip.hpp"   // for ActionEquip
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/player.hpp"        // for Player
#include "OgreMath.h"                   // for Degree, Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "actor.hpp"                    // for Actor
#include "aifollow.hpp"                 // for AiFollow
#include "aipursue.hpp"                 // for AiPursue
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/cellref.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/esmstore.hpp"
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwmechanics/activespells.hpp"  // for ActiveSpells, etc
#include "apps/openmw/mwmechanics/aipackage.hpp"  // for AiPackage, etc
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "apps/openmw/mwmechanics/spells.hpp"  // for Spells, etc
#include "character.hpp"                // for CharacterController
#include "combat.hpp"                   // for isEnvironmentCompatible
#include "components/esm/activespells.hpp"  // for ActiveEffect
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for Position, etc
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadcell.hpp"  // for Cell, Cell::DATAstruct, etc
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadmisc.hpp"  // for Miscellaneous, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadstat.hpp"  // for Static
#include "components/misc/stringops.hpp"  // for StringUtils
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "npcstats.hpp"                 // for NpcStats
#include "summoning.hpp"                // for UpdateSummonedCreatures
namespace Loading { class Listener; }  // lines 62-62
namespace MWRender { class Animation; }  // lines 63-63
---
In file included from apps/openmw/mwclass/probe.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^
In file included from apps/openmw/mwclass/clothing.cpp:9:
apps/openmw/mwclass/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwclass/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwworld/refdata.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/refdata.cpp has correct #includes/fwd-decls)

(apps/mwiniimporter/main.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/spellcasting.cpp:16:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwstate/statemanagerimp.cpp:32:
In file included from apps/openmw/mwstate/../mwworld/cellstore.hpp:11:
apps/openmw/mwstate/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwstate/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwrender/characterpreview.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwclass/weapon.cpp:11:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwrender/characterpreview.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/mechanicsmanagerimp.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/projectilemanager.cpp:19:
In file included from apps/openmw/mwworld/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:19:
In file included from apps/openmw/mwworld/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/projectilemanager.cpp:19:
In file included from apps/openmw/mwworld/../mwworld/manualref.hpp:6:
In file included from apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aitravel.cpp:9:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

apps/openmw/mwmechanics/mechanicsmanagerimp.cpp should add these lines:
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for MagicEffects, etc
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue, etc

apps/openmw/mwmechanics/mechanicsmanagerimp.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 25-25
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/drawstate.hpp"  // lines 27-27
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 28-28

The full include-list for apps/openmw/mwmechanics/mechanicsmanagerimp.cpp:
#include "mechanicsmanagerimp.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <limits.h>                     // for INT_MAX
#include <stdlib.h>                     // for abs, rand, NULL, RAND_MAX
#include <algorithm>                    // for max, min, find
#include <cmath>                        // for abs
#include <map>                          // for _Rb_tree_const_iterator, etc
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <typeinfo>                     // for type_info
#include <utility>                      // for pair
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager, etc
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/aicombat.hpp"  // for AiCombat
#include "../mwmechanics/aipursue.hpp"  // for AiPursue
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "../mwworld/player.hpp"        // for Player
#include "OgreMath.h"                   // for Radian, Degree
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store, etc
#include "apps/openmw/mwmechanics/actors.hpp"  // for Actors, etc
#include "apps/openmw/mwmechanics/aipackage.hpp"  // for AiPackage, etc
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiSequence
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for MagicEffects, etc
#include "apps/openmw/mwmechanics/objects.hpp"  // for Objects
#include "apps/openmw/mwmechanics/spells.hpp"  // for Spells
#include "apps/openmw/mwmechanics/stat.hpp"  // for SkillValue, etc
#include "autocalcspell.hpp"            // for attrSkillCheck, etc
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadbsgn.hpp"  // for BirthSign
#include "components/esm/loadclas.hpp"  // for Class, Class::CLDTstruct
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::NPDTstruct52, etc
#include "components/esm/loadrace.hpp"  // for Race, Race::SkillBonus, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/spelllist.hpp"  // for SpellList
#include "components/misc/stringops.hpp"  // for StringUtils
#include "npcstats.hpp"                 // for NpcStats
#include "spellcasting.hpp"             // for getSpellSuccessChance
namespace ESM { class ESMReader; }  // lines 58-58
namespace ESM { class ESMWriter; }  // lines 59-59
namespace Loading { class Listener; }  // lines 60-60
---
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"
Aborted (core dumped)
In file included from apps/openmw/mwclass/clothing.cpp:10:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/openmw/mwclass/creaturelevlist.hpp has correct #includes/fwd-decls)
In file included from apps/launcher/maindialog.cpp:19:
apps/launcher/datafilespage.hpp:8:10: fatal error: 'ui_datafilespage.h' file not found
#include "ui_datafilespage.h"
         ^

(apps/openmw/mwclass/creaturelevlist.cpp has correct #includes/fwd-decls)
apps/openmw/mwmechanics/aipursue.cpp:66:55: error: member access into incomplete type 'element_type' (aka 'MWWorld::Action')
        target.getClass().activate(target,actor).get()->execute(actor); //Arrest player
                                                      ^
apps/openmw/mwmechanics/../mwworld/class.hpp:46:11: note: forward declaration of 'MWWorld::Action'
    class Action;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:19:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/essimporter/convertcrec.cpp:1:
In file included from ./apps/essimporter/importcrec.hpp:4:
In file included from apps/essimporter/importinventory.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/vector:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
./components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
./components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^
In file included from apps/openmw/mwclass/probe.cpp:9:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/essimporter/importinventory.hpp has correct #includes/fwd-decls)

(apps/essimporter/importinventory.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/resourcetable.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/resourcetable.cpp has correct #includes/fwd-decls)

(apps/essimporter/importdial.hpp has correct #includes/fwd-decls)

(apps/essimporter/importdial.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/spellcasting.cpp:22:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/opencs/model/world/idtableproxymodel.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/idtableproxymodel.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/livecellref.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/livecellref.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/savingstate.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/savingstate.cpp has correct #includes/fwd-decls)

apps/openmw/mwsound/ffmpeg_decoder.hpp should add these lines:
#include <boost/cstdint.hpp>            // for __STDC_CONSTANT_MACROS

apps/openmw/mwsound/ffmpeg_decoder.hpp should remove these lines:

The full include-list for apps/openmw/mwsound/ffmpeg_decoder.hpp:
#include <libavcodec/avcodec.h>         // for AVPacket
#include <libavcodec/version.h>         // for LIBAVCODEC_VERSION_INT
#include <libavformat/avformat.h>       // for AVFormatContext, AVStream
#include <libavresample/avresample.h>   // for AVAudioResampleContext
#include <libavutil/frame.h>            // for AVFrame
#include <libavutil/samplefmt.h>        // for AVSampleFormat
#include <libavutil/version.h>          // for AV_VERSION_INT, etc
#include <stddef.h>                     // for size_t
#include <stdint.h>                     // for uint8_t, int64_t
#include <boost/cstdint.hpp>            // for __STDC_CONSTANT_MACROS
#include <string>                       // for string
#include <vector>                       // for vector
#include "OgreDataStream.h"             // for DataStreamPtr
#include "sound_decoder.hpp"            // for ChannelConfig, SampleType, etc
---
In file included from apps/openmw/mwrender/renderingmanager.cpp:17:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(apps/openmw/mwsound/ffmpeg_decoder.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/animation.cpp:17:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:11:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:11:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/weaponanimation.cpp:11:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/essimporter/convertcrec.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertcrec.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/aipursue.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/aipursue.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // lines 5-5

The full include-list for apps/openmw/mwmechanics/aipursue.hpp:
#include "aipackage.hpp"                // for AiPackage
#include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"
#include "apps/openmw/mwmechanics/aistate.hpp"  // for AiState
namespace ESM { namespace AiSequence { struct AiPursue; } }  // lines 14-14
namespace ESM { namespace AiSequence { struct AiSequence; } }  // lines 8-8
---

apps/openmw/mwmechanics/aipursue.cpp should add these lines:

apps/openmw/mwmechanics/aipursue.cpp should remove these lines:
- #include <boost/smart_ptr/shared_ptr.hpp>  // lines 1-1

The full include-list for apps/openmw/mwmechanics/aipursue.cpp:
#include "aipursue.hpp"
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/aisequence.hpp"  // for AiState
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/pathfinding.hpp"  // for distance
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
---

(apps/opencs/model/doc/saving.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aitravel.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aitravel.cpp has correct #includes/fwd-decls)
In file included from 
(apps/opencs/model/doc/saving.cpp has correct #includes/fwd-decls)
apps/openmw/mwrender/animation.cpp:31:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:11:
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/essimporter/converter.cpp:138:56: error: calling 'getColourAt' with incomplete return type 'Ogre::ColourValue'
                    image2.setColourAt(mGlobalMapImage.getColourAt(imageLeftSrc+x, imageTopSrc+y, 0)
                                       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreImage.h:433:21: note: 'getColourAt' declared here
        ColourValue getColourAt(size_t x, size_t y, size_t z) const;
                    ^
/usr/include/OGRE/OgrePrerequisites.h:137:11: note: forward declaration of 'Ogre::ColourValue'
    class ColourValue;
          ^
In file included from apps/openmw/mwworld/inventorystore.cpp:13:
apps/openmw/mwworld/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwworld/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/launcher/utils/profilescombobox.hpp has correct #includes/fwd-decls)

apps/launcher/utils/profilescombobox.cpp should add these lines:

apps/launcher/utils/profilescombobox.cpp should remove these lines:
- #include <QApplication>  // lines 1-1
- #include <QLineEdit>  // lines 2-2
- #include <QRegExpValidator>  // lines 3-3
- #include <QString>  // lines 4-4

The full include-list for apps/launcher/utils/profilescombobox.cpp:
#include "profilescombobox.hpp"
#include <QtGui>                        // for QLineEdit, QPalette, QStyle, etc
#include "apps/launcher/utils/lineedit.hpp"  // for LineEdit
---

(apps/openmw/mwworld/scene.hpp has correct #includes/fwd-decls)

(apps/esmtool/labels.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/scene.cpp should add these lines:
#include "../apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/mwworld/scene.cpp should remove these lines:
- #include "apps/openmw/mwworld/ptr.hpp"  // lines 24-24

The full include-list for apps/openmw/mwworld/scene.cpp:
#include "scene.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for abs, NULL
#include <algorithm>                    // for max, min
#include <cmath>                        // for abs
#include <components/misc/resourcehelpers.hpp>
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, ostream, etc
#include <limits>                       // for numeric_limits
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "../apps/openmw/mwrender/../mwworld/ptr.hpp"  // for Ptr
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "OgreMath.h"                   // for Radian
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3, etc
#include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"
#include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // for RefData, etc
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwworld/store.hpp"  // for Store
#include "cellfunctors.hpp"             // for ListAndResetHandles
#include "cellstore.hpp"                // for CellStore, operator!=, etc
#include "class.hpp"                    // for Class
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadland.hpp"  // for Land, Land::::DATA_VCLR, etc
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener, etc
#include "components/settings/settings.hpp"  // for Manager
#include "esmstore.hpp"                 // for ESMStore
#include "localscripts.hpp"             // for LocalScripts
#include "physicssystem.hpp"            // for PhysicsSystem
#include "player.hpp"                   // for Player
---

apps/openmw/mwclass/weapon.hpp should add these lines:

apps/openmw/mwclass/weapon.hpp should remove these lines:
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/weapon.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---

apps/openmw/mwclass/weapon.cpp should add these lines:
namespace MWWorld { class Class; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/weapon.cpp should remove these lines:
- #include <map>  // lines 5-5
- #include <typeinfo>  // lines 6-6
- #include "../mwworld/actionequip.hpp"  // lines 14-14
- #include "../mwworld/cellstore.hpp"  // lines 15-15
- #include "../mwworld/esmstore.hpp"  // lines 16-16
- #include "../mwworld/inventorystore.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 19-19
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 21-21
- #include "apps/openmw/mwclass/../mwworld/class.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 24-24
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 25-25
- #include "components/esm/loadgmst.hpp"  // lines 26-26

The full include-list for apps/openmw/mwclass/weapon.cpp:
#include "weapon.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadweap.hpp>  // for Weapon, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadskil.hpp"  // for Skill, etc
namespace MWWorld { class Class; }
namespace MWWorld { class ESMStore; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/esmtool/labels.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/animation.cpp:33:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/animation.cpp:33:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/animation.cpp:33:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwmechanics/objects.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/renderingmanager.cpp:33:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:11:
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^

(apps/openmw/mwmechanics/objects.cpp has correct #includes/fwd-decls)
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^
In file included from apps/openmw/mwrender/renderingmanager.cpp:35:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwrender/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:35:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwrender/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/renderingmanager.cpp:35:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwrender/../mwbase/windowmanager.hpp:37:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/openmw/mwclass/clothing.hpp should add these lines:

apps/openmw/mwclass/clothing.hpp should remove these lines:
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/clothing.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---

apps/openmw/mwclass/clothing.cpp should add these lines:
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/clothing.cpp should remove these lines:
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actionequip.hpp"  // lines 13-13
- #include "../mwworld/cellstore.hpp"  // lines 14-14
- #include "../mwworld/esmstore.hpp"  // lines 15-15
- #include "../mwworld/inventorystore.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 20-20
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 22-22
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 23-23
- #include "apps/openmw/mwclass/../mwworld/store.hpp"  // lines 24-24
- #include "components/esm/loadarmo.hpp"  // lines 26-26
- #include "components/esm/loadskil.hpp"  // lines 29-29

The full include-list for apps/openmw/mwclass/clothing.cpp:
#include "clothing.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <components/esm/loadclot.hpp>  // for Clothing, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "apps/openmw/mwclass/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwclass/../mwworld/class.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC, etc
#include "components/esm/loadrace.hpp"  // for Race, Race::Flags::Beast, etc
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/main.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/difficultyscaling.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/difficultyscaling.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/main.cpp:11:
In file included from apps/opencs/editor.hpp:20:
apps/opencs/view/doc/filedialog.hpp:15:10: fatal error: 'ui_filedialog.h' file not found
#include "ui_filedialog.h"
         ^

(apps/openmw/mwclass/itemlevlist.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/itemlevlist.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwclass/itemlevlist.cpp should remove these lines:
- #include "apps/openmw/mwclass/../mwworld/ptr.hpp"  // lines 7-7

The full include-list for apps/openmw/mwclass/itemlevlist.cpp:
#include "itemlevlist.hpp"
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <components/esm/loadlevlist.hpp>  // for ItemLevList
#include <typeinfo>                     // for type_info
#include "apps/openmw/mwclass/../mwworld/livecellref.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
namespace MWWorld { class Class; }  // lines 10-10
---

apps/openmw/mwclass/probe.hpp should add these lines:

apps/openmw/mwclass/probe.hpp should remove these lines:
- #include <utility>  // lines 6-6
- #include <vector>  // lines 7-7

The full include-list for apps/openmw/mwclass/probe.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwclass/../mwbase/../mwgui/../mwworld/ptr.hpp"
#include "apps/openmw/mwclass/../mwgui/tooltips.hpp"  // for ToolTipInfo
namespace MWRender { class RenderingInterface; }  // lines 13-13
namespace MWWorld { class Action; }  // lines 14-14
namespace MWWorld { class CellStore; }  // lines 15-15
namespace MWWorld { class PhysicsSystem; }  // lines 16-16
---

apps/openmw/mwclass/probe.cpp should add these lines:
namespace ESM { struct Probe; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/probe.cpp should remove these lines:
- #include <components/esm/loadprob.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actionequip.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "../mwworld/inventorystore.hpp"  // lines 14-14
- #include "apps/openmw/mwclass/../mwworld/action.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 17-17
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 19-19

The full include-list for apps/openmw/mwclass/probe.cpp:
#include "probe.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::Services::Probes
namespace ESM { struct Probe; }
namespace MWWorld { class Class; }  // lines 23-23
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/openmw/mwworld/esmstore.hpp has correct #includes/fwd-decls)
In file included from apps/essimporter/convertcntc.cpp:1:
In file included from ./apps/essimporter/importcntc.hpp:4:
In file included from apps/essimporter/importinventory.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/vector:60:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
./components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
./components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^

(apps/openmw/mwworld/esmstore.cpp has correct #includes/fwd-decls)
apps/opencs/model/world/universalid.cpp:157:36: error: implicit instantiation of undefined template 'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
                std::istringstream stream (universalId.substr (index+2));
                                   ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:97:11: note: template is declared here
    class basic_istringstream;
          ^

apps/launcher/maindialog.hpp should add these lines:
#include "apps/launcher/datafilespage.hpp"  // for ConfigurationManager, etc
#include "apps/launcher/graphicspage.hpp"  // for GraphicsPage (ptr only), etc
class QWidget;

apps/launcher/maindialog.hpp should remove these lines:
- #include <QProcess>  // lines 5-5
- #include <components/files/configurationmanager.hpp>  // lines 9-9
- #include "settings/graphicssettings.hpp"  // lines 15-15
- namespace Config { class QWidget; }  // lines 20-20
- namespace Config { namespace Launcher { class DataFilesPage; } }  // lines 25-25
- namespace Config { namespace Launcher { class GraphicsPage; } }  // lines 26-26

The full include-list for apps/launcher/maindialog.hpp:
#include <QMainWindow>                  // for QMainWindow
#include <QtCore>                       // for QString, QStringList, slots, etc
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include "apps/launcher/datafilespage.hpp"  // for ConfigurationManager, etc
#include "apps/launcher/graphicspage.hpp"  // for GraphicsPage (ptr only), etc
class QWidget;
namespace Config { class QCloseEvent; }  // lines 18-18
namespace Config { class QListWidgetItem; }  // lines 19-19
namespace Config { namespace Launcher { class PlayPage; } }  // lines 27-27
namespace Config { namespace Launcher { class SettingsPage; } }  // lines 28-28
namespace Config { namespace Launcher { class UnshieldThread; } }  // lines 29-29
namespace Config { namespace Process { class ProcessInvoker; } }  // lines 21-21
---

(apps/openmw/mwmechanics/repair.hpp has correct #includes/fwd-decls)
apps/opencs/model/world/universalid.cpp:309:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^

(apps/openmw/mwmechanics/repair.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/inventorystore.cpp:23:
./apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/inventorystore.cpp:23:
./apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/inventorystore.cpp:23:
./apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

apps/launcher/maindialog.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc
class QWidget;

apps/launcher/maindialog.cpp should remove these lines:
- #include <QCloseEvent>  // lines 3-3
- #include <QDebug>  // lines 4-4
- #include <QDir>  // lines 5-5
- #include <QFile>  // lines 6-6
- #include <QTextCodec>  // lines 11-11
- #include <boost/filesystem/path.hpp>  // lines 1-1
- #include <string>  // lines 12-12
- #include "apps/launcher/settings/graphicssettings.hpp"  // lines 14-14
- #include "components/files/configurationmanager.hpp"  // lines 17-17
- #include "components/process/processinvoker.hpp"  // lines 18-18
- namespace Config { class QWidget; }  // lines 26-26

The full include-list for apps/launcher/maindialog.cpp:
#include "maindialog.hpp"
#include <QFontDatabase>                // for QFontDatabase
#include <QIcon>                        // for QIcon
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <QPushButton>                  // for QPushButton
#include <components/version/version.hpp>  // for OPENMW_VERSION, etc
#include "components/config/gamesettings.hpp"  // for GameSettings
#include "components/config/launchersettings.hpp"  // for LauncherSettings, etc
#include "datafilespage.hpp"            // for DataFilesPage
#include "graphicspage.hpp"             // for GraphicsPage
#include "playpage.hpp"                 // for PlayPage
#include "settingspage.hpp"             // for SettingsPage
class QWidget;
namespace Config { class QAbstractButton; }  // lines 25-25
---

(apps/essimporter/convertcntc.hpp has correct #includes/fwd-decls)

(apps/essimporter/convertcntc.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/alchemy.cpp:15:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwmechanics/stat.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/stat.cpp has correct #includes/fwd-decls)

(apps/essimporter/main.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/universalid.hpp has correct #includes/fwd-decls)

(apps/essimporter/importklst.hpp has correct #includes/fwd-decls)

(apps/essimporter/importklst.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/spells.cpp:10:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwclass/repair.cpp:8:
apps/openmw/mwclass/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

apps/opencs/model/world/universalid.cpp should add these lines:

apps/opencs/model/world/universalid.cpp should remove these lines:
- #include <iostream>  // lines 2-2

The full include-list for apps/opencs/model/world/universalid.cpp:
#include "universalid.hpp"
#include <stdexcept>                    // for logic_error, runtime_error
---
In file included from apps/openmw/mwmechanics/alchemy.cpp:18:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadappa.hpp:10:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:18:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadappa.hpp:10:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/alchemy.cpp:18:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadappa.hpp:10:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

(apps/essimporter/importques.hpp has correct #includes/fwd-decls)

(apps/essimporter/importques.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/scriptcontext.cpp:11:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:197:14: error: member access into incomplete type 'Ogre::SceneNode'
        mNode->attachObject(mLineDrawer);
             ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:228:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from libs/openengine/bullet/BtOgre.cpp:29:
libs/openengine/bullet/BtOgreExtras.h:235:18: error: member access into incomplete type 'Ogre::SceneNode'
            mNode->needUpdate();
                 ^
/usr/include/OGRE/OgrePrerequisites.h:256:11: note: forward declaration of 'Ogre::SceneNode'
    class SceneNode;
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:10:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/openmw/mwmechanics/spells.cpp:11:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/spells.cpp:11:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/spells.cpp:11:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aifollow.cpp:11:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/essimporter/converter.hpp has correct #includes/fwd-decls)

(apps/essimporter/converter.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/enchanting.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/containerstore.hpp:10:
apps/openmw/mwmechanics/../mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^
In file included from apps/openmw/mwmechanics/enchanting.cpp:10:
./apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
./apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwsound/sound.hpp has correct #includes/fwd-decls)

(apps/openmw/mwsound/sound.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/regionmap.cpp:12:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:12:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:12:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:12:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:12:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/regionmap.cpp:12:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/opencs/model/world/record.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/record.cpp has correct #includes/fwd-decls)

(apps/openmw/mwstate/statemanagerimp.hpp has correct #includes/fwd-decls)

apps/openmw/mwstate/statemanagerimp.cpp should add these lines:
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/creaturestats.hpp"

apps/openmw/mwstate/statemanagerimp.cpp should remove these lines:
- #include "../mwmechanics/creaturestats.hpp"  // lines 29-29

The full include-list for apps/openmw/mwstate/statemanagerimp.cpp:
#include "statemanagerimp.hpp"
#include <OgreImage.h>                  // for Image
#include <stddef.h>                     // for size_t, NULL
#include <algorithm>                    // for find
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/operations.hpp>  // for exists
#include <components/esm/cellid.hpp>    // for CellId
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/esm/esmwriter.hpp>  // for ESMWriter
#include <components/esm/loadcell.hpp>  // for Cell
#include <components/misc/stringops.hpp>  // for StringUtils
#include <components/settings/settings.hpp>  // for Manager
#include <exception>                    // for exception
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <list>                         // for _List_const_iterator
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for make_pair
#include <vector>                       // for vector, etc
#include "../mwbase/dialoguemanager.hpp"  // for DialogueManager
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/inputmanager.hpp"   // for InputManager
#include "../mwbase/journal.hpp"        // for Journal
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwscript/globalscripts.hpp"  // for GlobalScripts
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "OgreDataStream.h"             // for DataStream, DataStreamPtr
#include "OgreSharedPtr.h"              // for SharedPtr
#include "apps/openmw/mwstate/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/livecellref.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwstate/../mwbase/../mwworld/store.hpp"
#include "apps/openmw/mwstate/../mwbase/statemanager.hpp"
#include "apps/openmw/mwstate/charactermanager.hpp"
#include "components/esm/defs.hpp"      // for RecNameInts::REC_SAVE, etc
#include "components/esm/esmcommon.hpp"  // for NAME, NAME_T
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadtes3.hpp"  // for Header, etc
#include "components/esm/savedgame.hpp"  // for SavedGame, etc
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener, etc
---
In file included from apps/openmw/mwmechanics/enchanting.cpp:12:
In file included from ./apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:12:
In file included from ./apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/enchanting.cpp:12:
In file included from ./apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/opencs/main.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/infocollection.cpp:10:
./apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
apps/esmtool/record.cpp:73:24: error: implicit instantiation of undefined template 'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::istringstream iss(rule.substr(2,2));
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:97:11: note: template is declared here
    class basic_istringstream;
          ^
apps/esmtool/record.cpp:126:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^
In file included from apps/openmw/mwclass/repair.cpp:9:
In file included from apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
apps/openmw/mwclass/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/aicombataction.cpp:15:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/effectlist.hpp:9:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/opencs/model/world/resourcesmanager.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/resourcesmanager.cpp has correct #includes/fwd-decls)
In file included from apps/launcher/playpage.cpp:1:
apps/launcher/playpage.hpp:7:10: fatal error: 'ui_playpage.h' file not found
#include "ui_playpage.h"
         ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/factioncheck.cpp:10:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/openmw/mwmechanics/aifollow.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aifollow.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/spellcheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/launcher/playpage.hpp has correct #includes/fwd-decls)

(apps/launcher/playpage.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/localmap.cpp:20:
In file included from apps/openmw/mwrender/../mwworld/cellstore.hpp:11:
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/openmw/mwmechanics/spellcasting.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/infocollection.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/infocollection.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/spellcasting.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"

apps/openmw/mwmechanics/spellcasting.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 32-32
- #include "magiceffects.hpp"  // lines 46-46

The full include-list for apps/openmw/mwmechanics/spellcasting.cpp:
#include "spellcasting.hpp"
#include <assert.h>                     // for assert
#include <stdlib.h>                     // for rand, RAND_MAX, abs
#include <algorithm>                    // for max, min
#include <boost/format.hpp>
#include <cfloat>                       // for FLT_MAX
#include <map>                          // for map, _Rb_tree_iterator, etc
#include <stdexcept>                    // for runtime_error
#include <typeinfo>                     // for type_info
#include <utility>                      // for make_pair, pair
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/soundmanager.hpp"   // for SoundManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwrender/animation.hpp"    // for Animation
#include "../mwworld/actionteleport.hpp"  // for ActionTeleport
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/player.hpp"        // for Player
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/../mwworld/refdata.hpp"
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/activespells.hpp"
#include "apps/openmw/mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "apps/openmw/mwmechanics/spells.hpp"  // for Spells
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadingr.hpp"  // for Ingredient, etc
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadskil.hpp"  // for Skill, Skill::SkillEnum, etc
#include "components/esm/loadspel.hpp"  // for Spell, Spell::SPDTstruct, etc
#include "components/esm/loadstat.hpp"  // for Static
#include "npcstats.hpp"                 // for NpcStats
#include "summoning.hpp"                // for cleanupSummonedCreature
---

(apps/openmw/mwclass/repair.hpp has correct #includes/fwd-decls)

apps/openmw/mwclass/repair.cpp should add these lines:
namespace ESM { struct Repair; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwclass/repair.cpp should remove these lines:
- #include <components/esm/loadrepa.hpp>  // lines 3-3
- #include <typeinfo>  // lines 5-5
- #include "../mwworld/actionrepair.hpp"  // lines 12-12
- #include "../mwworld/cellstore.hpp"  // lines 13-13
- #include "apps/openmw/mwclass/../mwworld/cellreflist.hpp"  // lines 15-15
- #include "apps/openmw/mwclass/../mwworld/livecellref.hpp"  // lines 16-16
- #include "apps/openmw/mwclass/../mwworld/refdata.hpp"  // lines 17-17

The full include-list for apps/openmw/mwclass/repair.cpp:
#include "repair.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo, ToolTips
#include "../mwrender/objects.hpp"      // for Objects
#include "../mwrender/renderinginterface.hpp"  // for RenderingInterface
#include "../mwworld/physicssystem.hpp"  // for PhysicsSystem
#include "components/esm/loadnpc.hpp"   // for NPC, etc
namespace ESM { struct Repair; }
namespace MWWorld { class Action; }  // lines 21-21
namespace MWWorld { class Class; }  // lines 22-22
namespace MWWorld { template <typename X> struct LiveCellRef; }
---

(apps/opencs/model/tools/factioncheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/factioncheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/factioncheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 8-8

The full include-list for apps/opencs/model/tools/factioncheck.cpp:
#include "factioncheck.hpp"
#include <components/esm/loadfact.hpp>  // for Faction, etc
#include <components/esm/loadskil.hpp>  // for Skill
#include <map>                          // for map, etc
#include <string>                       // for basic_string, allocator, etc
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

(apps/opencs/model/world/scope.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/scope.cpp has correct #includes/fwd-decls)

apps/opencs/model/world/refidadapterimp.hpp should add these lines:

apps/opencs/model/world/refidadapterimp.hpp should remove these lines:
- #include <QVariant>  // lines 6-6

The full include-list for apps/opencs/model/world/refidadapterimp.hpp:
#include <QtCore>                       // for QVariant, QString, etc
#include <components/esm/loadalch.hpp>  // for Potion
#include <components/esm/loadappa.hpp>  // for Apparatus
#include <map>                          // for map, map<>::const_iterator, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadweap.hpp"  // for Weapon
#include "record.hpp"                   // for Record, RecordBase, etc
#include "refidadapter.hpp"             // for RefIdAdapter
#include "refiddata.hpp"                // for RefIdData, etc
#include "universalid.hpp"              // for UniversalId, etc
namespace CSMWorld { class RefIdColumn; }  // lines 27-27
---

(apps/opencs/model/world/refidadapterimp.cpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/spellcheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/spellcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/spellcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/spellcheck.cpp:
#include "spellcheck.hpp"
#include <components/esm/loadspel.hpp>  // for Spell, Spell::SPDTstruct
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

(apps/launcher/utils/textinputdialog.hpp has correct #includes/fwd-decls)

(apps/launcher/utils/textinputdialog.cpp has correct #includes/fwd-decls)

(libs/openengine/bullet/BtOgre.cpp has correct #includes/fwd-decls)

(apps/esmtool/record.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/worldimp.cpp:16:
./apps/openmw/mwworld/../mwrender/../mwworld/weather.hpp:207:17: error: no type named 'SoundPtr' in namespace 'MWBase'
        MWBase::SoundPtr mAmbientSound;
        ~~~~~~~~^

(apps/openmw/mwworld/inventorystore.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/worldimp.cpp:21:
./apps/openmw/mwworld/cellreflist.hpp:25:68: error: no type named 'ESMStore' in namespace 'MWWorld'
        void load (ESM::CellRef &ref, bool deleted, const MWWorld::ESMStore &esmStore);
                                                          ~~~~~~~~~^

(apps/openmw/mwrender/weaponanimation.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/projectilemanager.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/weaponanimation.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/scriptcontext.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/inventorystore.cpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"

apps/openmw/mwworld/inventorystore.cpp should remove these lines:
- #include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"  // lines 16-16

The full include-list for apps/openmw/mwworld/inventorystore.cpp:
#include "inventorystore.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <algorithm>                    // for find, min
#include <components/esm/inventorystate.hpp>  // for InventoryState, etc
#include <components/esm/loadench.hpp>  // for Enchantment, etc
#include <cstddef>                      // for size_t, NULL
#include <iterator>                     // for advance, distance
#include <stdexcept>                    // for runtime_error
#include <typeinfo>                     // for type_info
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell, etc
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwworld/../mwscript/locals.hpp"  // for Locals
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwworld/containerstore.hpp"
#include "apps/openmw/mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwworld/store.hpp"  // for Store
#include "class.hpp"                    // for Class
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/misc/stringops.hpp"  // for StringUtils
#include "esmstore.hpp"                 // for ESMStore
namespace MWWorld { struct LiveCellRefBase; }  // lines 35-35
---

(apps/opencs/model/world/scriptcontext.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/projectilemanager.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/alchemy.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/alchemy.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwmechanics/alchemy.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 23-23

The full include-list for apps/openmw/mwmechanics/alchemy.cpp:
#include "alchemy.hpp"
#include <algorithm>                    // for fill
#include <cassert>                      // for assert
#include <components/esm/loadappa.hpp>  // for Apparatus, etc
#include <components/esm/loadgmst.hpp>  // for GameSetting
#include <components/esm/loadmgef.hpp>  // for MagicEffect, etc
#include <components/esm/loadskil.hpp>  // for Skill, etc
#include <cstdlib>                      // for rand, RAND_MAX
#include <map>                          // for map, map<>::const_iterator
#include <ostream>                      // for ostringstream, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadalch.hpp"  // for Potion, Potion::ALDTstruct
#include "components/esm/loadingr.hpp"  // for Ingredient, etc
#include "components/misc/stringops.hpp"  // for StringUtils
#include "creaturestats.hpp"            // for CreatureStats
#include "magiceffects.hpp"             // for EffectKey, operator<
#include "npcstats.hpp"                 // for NpcStats
---
In file included from apps/openmw/mwworld/worldimp.cpp:23:
In file included from ./apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/activespells.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/worldimp.cpp:23:
In file included from ./apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/activespells.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwworld/worldimp.cpp:23:
In file included from ./apps/openmw/mwworld/esmstore.hpp:48:
apps/openmw/mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/activespells.hpp:13:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwworld/globals.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/spells.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/globals.cpp has correct #includes/fwd-decls)

(apps/esmtool/record.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/ref.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/ref.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pickpocket.cpp:5:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/openmw/mwmechanics/spells.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pickpocket.cpp:7:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/globalmap.cpp:16:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/globalmap.cpp:16:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/globalmap.cpp:16:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/globalmap.hpp:11:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/openmw/mwstate/charactermanager.hpp has correct #includes/fwd-decls)

(apps/openmw/mwstate/charactermanager.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/cellref.cpp:1:
In file included from ./components/esm/objectstate.hpp:4:
In file included from ./components/esm/cellref.hpp:4:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/string:40:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/char_traits.h:39:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algobase.h:64:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_pair.h:102:11: error: field has incomplete type 'ESM::Variant'
      _T2 second;                /// @c second is a copy of the second object
          ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:161:9: note: in instantiation of template class 'std::pair<std::basic_string<char>, ESM::Variant>' requested here
                      - this->_M_impl._M_start); }
                      ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_vector.h:253:7: note: in instantiation of member function 'std::_Vector_base<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::~_Vector_base' requested here
      vector()
      ^
./components/esm/locals.hpp:19:12: note: in instantiation of member function 'std::vector<std::pair<std::basic_string<char>, ESM::Variant>, std::allocator<std::pair<std::basic_string<char>, ESM::Variant> > >::vector' requested here
    struct Locals
           ^
./components/esm/locals.hpp:8:23: note: forward declaration of 'ESM::Variant'
namespace ESM { class Variant; }
                      ^
In file included from apps/opencs/view/doc/filedialog.cpp:6:
./components/contentselector/view/contentselector.hpp:7:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^

(apps/openmw/mwworld/cellref.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/cellref.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aiavoiddoor.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aiavoiddoor.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aicombataction.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aicombataction.cpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/enchanting.hpp should add these lines:
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"

apps/openmw/mwmechanics/enchanting.hpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwworld/ptr.hpp"  // lines 6-6

The full include-list for apps/openmw/mwmechanics/enchanting.hpp:
#include <components/esm/effectlist.hpp>  // for EffectList
#include <string>                       // for string
#include "apps/openmw/mwmechanics/../mwrender/../mwworld/ptr.hpp"
---
apps/openmw/mwrender/globalmap.cpp:212:54: error: calling 'getColourAt' with incomplete return type 'Ogre::ColourValue'
                    mOverlayImage.setColourAt(backup.getColourAt(x, y, 0), originX+x, originY+y, 0);
                                              ~~~~~~~^~~~~~~~~~~~~~~~~~~~
/usr/include/OGRE/OgreImage.h:433:21: note: 'getColourAt' declared here
        ColourValue getColourAt(size_t x, size_t y, size_t z) const;
                    ^
/usr/include/OGRE/GLX/../OgrePrerequisites.h:137:11: note: forward declaration of 'Ogre::ColourValue'
    class ColourValue;
          ^

apps/openmw/mwmechanics/enchanting.cpp should add these lines:
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"

apps/openmw/mwmechanics/enchanting.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/stat.hpp"  // lines 15-15

The full include-list for apps/openmw/mwmechanics/enchanting.cpp:
#include "enchanting.hpp"
#include <stdlib.h>                     // for rand, RAND_MAX
#include <algorithm>                    // for max
#include <typeinfo>                     // for type_info
#include <vector>                       // for vector, etc
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/containerstore.hpp"  // for ContainerStore, etc
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwmechanics/../mwbase/world.hpp"  // for World
#include "apps/openmw/mwmechanics/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwworld/esmstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "components/esm/attr.hpp"      // for Attribute, etc
#include "components/esm/defs.hpp"      // for RangeType::RT_Target
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadench.hpp"  // for Enchantment, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/misc/stringops.hpp"  // for StringUtils
#include "creaturestats.hpp"            // for CreatureStats
#include "npcstats.hpp"                 // for NpcStats
#include "spellcasting.hpp"
---

(apps/openmw/mwrender/animation.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/cell.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/cell.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/commands.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/commands.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/tools/racecheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/racecheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/openmw/mwrender/animation.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/opencs/model/world/regionmap.hpp should add these lines:

apps/opencs/model/world/regionmap.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4

The full include-list for apps/opencs/model/world/regionmap.hpp:
#include <QtCore>                       // for QModelIndex, etc
#include <map>                          // for map
#include <string>                       // for string, basic_string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "cellcoordinates.hpp"          // for CellCoordinates
namespace CSMWorld { class Data; }  // lines 18-18
namespace CSMWorld { struct Cell; }  // lines 13-13
namespace CSMWorld { template <typename ESXRecordT> struct Record; }  // lines 14-14
---
In file included from apps/openmw/mwmechanics/activespells.cpp:7:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:119:47: error: implicit instantiation of undefined template 'CSMWorld::Record<CSMWorld::Cell>'
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
apps/opencs/model/world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<CSMWorld::Cell, CSMWorld::IdAccessor<CSMWorld::Cell> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/world/pathgrid.cpp:16:45: note: in instantiation of template class 'CSMWorld::IdCollection<CSMWorld::Cell, CSMWorld::IdAccessor<CSMWorld::Cell> >' requested here
    if (!mId.empty() && mId[0]!='#' && cells.searchId (mId)==-1)
                                            ^
apps/opencs/model/world/columnbase.hpp:9:60: note: template is declared here
namespace CSMWorld { template <typename ESXRecordT> struct Record; }
                                                           ^
In file included from apps/opencs/model/world/pathgrid.cpp:4:
In file included from apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:121:47: error: implicit instantiation of undefined template 'CSMWorld::Record<CSMWorld::Cell>'
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                                              ^
apps/opencs/model/world/columnbase.hpp:9:60: note: template is declared here
namespace CSMWorld { template <typename ESXRecordT> struct Record; }
                                                           ^

(apps/openmw/mwrender/renderingmanager.hpp has correct #includes/fwd-decls)

apps/opencs/model/world/regionmap.cpp should add these lines:
#include <QAbstractTableModel>          // for QModelIndex, etc

apps/opencs/model/world/regionmap.cpp should remove these lines:

The full include-list for apps/opencs/model/world/regionmap.cpp:
#include "regionmap.hpp"
#include <stdlib.h>                     // for abs
#include <QAbstractTableModel>          // for QModelIndex, etc
#include <QBrush>                       // for QBrush
#include <QColor>                       // for QColor
#include <algorithm>                    // for find, for_each, sort
#include <components/misc/stringops.hpp>  // for StringUtils
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include "apps/opencs/model/world/cell.hpp"  // for Cell
#include "apps/opencs/model/world/cellcoordinates.hpp"
#include "apps/opencs/model/world/idcollection.hpp"  // for IdCollection
#include "apps/opencs/model/world/record.hpp"  // for Record
#include "components/esm/loadregn.hpp"  // for Region
#include "data.hpp"                     // for Data
#include "universalid.hpp"              // for UniversalId, etc
---

(apps/opencs/model/world/tablemimedata.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/globaldebugprofilemenu.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/activespells.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/activespells.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^
In file included from apps/openmw/mwmechanics/activespells.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/loadmgef.hpp:11:7: note: forward declaration of 'ESM::ESMWriter'
class ESMWriter;
      ^

(apps/opencs/model/world/tablemimedata.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/globaldebugprofilemenu.cpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/localmap.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/savingstages.hpp has correct #includes/fwd-decls)

apps/openmw/mwrender/renderingmanager.cpp should add these lines:
#include "apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
struct SDL_Window;

apps/openmw/mwrender/renderingmanager.cpp should remove these lines:
- #include "../mwworld/ptr.hpp"  // lines 36-36
- #include "apps/openmw/mwrender/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 58-58

The full include-list for apps/openmw/mwrender/renderingmanager.cpp:
#include "renderingmanager.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreControllerManager.h>      // for ControllerManager
#include <OgreHardwarePixelBuffer.h>    // for HardwarePixelBuffer
#include <OgreMeshManager.h>            // for MeshManager
#include <OgreRenderTexture.h>          // for RenderTexture
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreRoot.h>                   // for Root
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreTextureManager.h>         // for TextureManager
#include <OgreViewport.h>               // for Viewport
#include <SDL_video.h>                  // for SDL_SetWindowFullscreen, etc
#include <string.h>                     // for NULL, memcpy
#include <algorithm>                    // for min, max
#include <boost/filesystem/operations.hpp>  // for create_directories, etc
#include <cassert>                      // for assert
#include <components/settings/settings.hpp>  // for Manager, etc
#include <components/terrain/defaultworld.hpp>  // for DefaultWorld
#include <components/terrain/terraingrid.hpp>  // for TerrainGrid
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <extern/shiny/Platforms/Ogre/OgrePlatform.hpp>
#include <limits>                       // for numeric_limits
#include <new>                          // for operator new
#include <openengine/bullet/physic.hpp>  // for PhysicEngine
#include <utility>                      // for pair
#include <vector>                       // for vector, etc
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/statemanager.hpp"   // for StateManager, etc
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World, etc
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwworld/cellstore.hpp"     // for CellStore
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "GLX/../OgrePrerequisites.h"   // for String, TexturePtr, uchar
#include "LinearMath/btVector3.h"       // for btVector3
#include "OgreCommon.h"                 // for FogMode::FOG_LINEAR, etc
#include "OgreHardwareBuffer.h"         // for HardwareBuffer, etc
#include "OgreImage.h"                  // for Image
#include "OgreLight.h"                  // for Light, etc
#include "OgreMaterialManager.h"        // for MaterialManager
#include "OgreMath.h"                   // for Radian
#include "OgreMatrix4.h"                // for Matrix4
#include "OgreMemoryAllocatorConfig.h"
#include "OgrePixelFormat.h"            // for PixelFormat, etc
#include "OgrePlatform.h"               // for uint32
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreRenderSystem.h"           // for RenderSystem
#include "OgreRenderTarget.h"           // for RenderTarget
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreTexture.h"                // for Texture, etc
#include "OgreVector3.h"                // for Vector3, etc
#include "SDL_stdinc.h"                 // for ::SDL_FALSE, ::SDL_TRUE
#include "apps/openmw/mwrender/../mwbase/../mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwrender/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwrender/../mwworld/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwrender/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwrender/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwrender/actors.hpp"  // for Actors
#include "apps/openmw/mwrender/animation.hpp"  // for Animation, etc
#include "apps/openmw/mwrender/camera.hpp"  // for Camera
#include "apps/openmw/mwrender/debugging.hpp"  // for Debugging
#include "apps/openmw/mwrender/objects.hpp"  // for Objects
#include "apps/openmw/mwrender/occlusionquery.hpp"  // for OcclusionQuery
#include "apps/openmw/mwrender/renderconst.hpp"
#include "apps/openmw/mwrender/sky.hpp"  // for SkyManager
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadcell.hpp"  // for Cell, Cell::AMBIstruct, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/terrain/defs.hpp"  // for Alignment::Align_XY
#include "components/terrain/world.hpp"  // for World
#include "effectmanager.hpp"            // for EffectManager
#include "extern/shiny/Main/Language.hpp"  // for Language, etc
#include "extern/shiny/Main/PropertyBase.hpp"  // for makeProperty, etc
#include "localmap.hpp"                 // for LocalMap
#include "npcanimation.hpp"             // for NpcAnimation
#include "shadows.hpp"                  // for Shadows
#include "terrainstorage.hpp"           // for TerrainStorage
#include "water.hpp"                    // for Water
namespace MWWorld { class Fallback; }  // lines 85-85
namespace Ogre { struct RenderTargetEvent; }  // lines 86-86
struct SDL_Window;
---
In file included from apps/openmw/mwworld/class.cpp:6:
apps/openmw/mwworld/../mwbase/windowmanager.hpp:313:62: error: unknown type name 'uint32_t'
            virtual void readRecord (ESM::ESMReader& reader, uint32_t type) = 0;
                                                             ^

(apps/opencs/model/doc/savingstages.cpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/localmap.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/worldimp.cpp:75:
In file included from apps/openmw/mwworld/../mwclass/door.hpp:9:
In file included from ./apps/openmw/mwclass/../mwgui/tooltips.hpp:11:
./apps/openmw/mwworld/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:38:20: error: field has incomplete type 'ESM::Class'
        ESXRecordT mBase;
                   ^
apps/opencs/model/tools/../world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<ESM::Class>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Class, CSMWorld::IdAccessor<ESM::Class> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:687:22: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Class, CSMWorld::IdAccessor<ESM::Class> >' requested here
    else if (mClasses.searchId (npc.mClass) == -1)
                     ^
apps/opencs/model/tools/referenceablecheck.hpp:16:24: note: forward declaration of 'ESM::Class'
namespace ESM { struct Class; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:39:20: error: field has incomplete type 'ESM::Class'
        ESXRecordT mModified;
                   ^
apps/opencs/model/tools/referenceablecheck.hpp:16:24: note: forward declaration of 'ESM::Class'
namespace ESM { struct Class; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:27:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<ESM::Class> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Class, CSMWorld::IdAccessor<ESM::Class> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:687:22: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Class, CSMWorld::IdAccessor<ESM::Class> >' requested here
    else if (mClasses.searchId (npc.mClass) == -1)
                     ^
apps/opencs/model/tools/../world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:38:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mBase;
                   ^
apps/opencs/model/tools/../world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<ESM::Race>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:696:20: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if (mRaces.searchId (npc.mRace) == -1)
                   ^
apps/opencs/model/tools/referenceablecheck.hpp:31:24: note: forward declaration of 'ESM::Race'
namespace ESM { struct Race; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:39:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mModified;
                   ^
apps/opencs/model/tools/referenceablecheck.hpp:31:24: note: forward declaration of 'ESM::Race'
namespace ESM { struct Race; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:27:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<ESM::Race> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:696:20: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if (mRaces.searchId (npc.mRace) == -1)
                   ^
apps/opencs/model/tools/../world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:38:20: error: field has incomplete type 'ESM::Faction'
        ESXRecordT mBase;
                   ^
apps/opencs/model/tools/../world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<ESM::Faction>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Faction, CSMWorld::IdAccessor<ESM::Faction> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:714:22: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Faction, CSMWorld::IdAccessor<ESM::Faction> >' requested here
        if (mFactions.searchId(npc.mFaction) == -1)
                     ^
apps/opencs/model/tools/referenceablecheck.hpp:22:24: note: forward declaration of 'ESM::Faction'
namespace ESM { struct Faction; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:4:
apps/opencs/model/tools/../world/record.hpp:39:20: error: field has incomplete type 'ESM::Faction'
        ESXRecordT mModified;
                   ^
apps/opencs/model/tools/referenceablecheck.hpp:22:24: note: forward declaration of 'ESM::Faction'
namespace ESM { struct Faction; }
                       ^
In file included from apps/opencs/model/tools/referenceablecheck.cpp:27:
In file included from apps/opencs/model/tools/referenceablecheck.hpp:7:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<ESM::Faction> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
./apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Faction, CSMWorld::IdAccessor<ESM::Faction> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/referenceablecheck.cpp:714:22: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Faction, CSMWorld::IdAccessor<ESM::Faction> >' requested here
        if (mFactions.searchId(npc.mFaction) == -1)
                     ^
apps/opencs/model/tools/../world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^

(apps/opencs/model/doc/documentmanager.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/documentmanager.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigation.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigation.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pathfinding.cpp:7:
apps/openmw/mwmechanics/../mwbase/world.hpp:460:44: error: no type named 'Image' in namespace 'Ogre'
            virtual void screenshot (Ogre::Image& image, int w, int h) = 0;
                                     ~~~~~~^
apps/openmw/mwmechanics/../mwbase/world.hpp:506:87: error: no type named 'Quaternion' in namespace 'Ogre'
                                           const Ogre::Vector3& worldPos, const Ogre::Quaternion& orient, MWWorld::Ptr bow, float speed) = 0;
                                                                                ~~~~~~^

(apps/opencs/view/doc/filedialog.hpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwworld/class.cpp:8:
In file included from apps/openmw/mwworld/../mwgui/tooltips.hpp:11:
apps/openmw/mwworld/../mwbase/../mwgui/widgets.hpp:10:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

apps/opencs/view/doc/filedialog.cpp should add these lines:
#include "components/contentselector/view/../model/contentmodel.hpp"

apps/opencs/view/doc/filedialog.cpp should remove these lines:

The full include-list for apps/opencs/view/doc/filedialog.cpp:
#include "filedialog.hpp"
#include <stddef.h>                     // for NULL
#include <QPushButton>                  // for QPushButton
#include "adjusterwidget.hpp"           // for AdjusterWidget, etc
#include "components/contentselector/model/esmfile.hpp"  // for EsmFile
#include "components/contentselector/view/../model/contentmodel.hpp"
#include "components/contentselector/view/contentselector.hpp"
#include "filewidget.hpp"               // for FileWidget
class QWidget;  // lines 10-10
---
/home/showard/openmw/llvm/tools/clang/tools/include-what-you-use/iwyu_output.h:268: Assertion failed: desired_includes_have_been_calculated_ && "Must calculate desired includes before calling desired_includes()"

(apps/opencs/model/tools/racecheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/racecheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/racecheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/racecheck.cpp:
#include "racecheck.hpp"
#include <components/esm/loadrace.hpp>  // for Race, Race::RADTstruct, etc
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
Aborted (core dumped)
In file included from apps/openmw/mwmechanics/pathfinding.cpp:8:
In file included from apps/openmw/mwmechanics/../mwworld/cellstore.hpp:11:
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:32:28: error: no member named 'Pathgrid' in namespace 'ESM'
            std::list<ESM::Pathgrid::Point> aStarSearch(const int start,
                      ~~~~~^
apps/openmw/mwmechanics/../mwbase/../mwworld/../mwmechanics/pathgrid.hpp:37:24: error: no type named 'Pathgrid' in namespace 'ESM'
            const ESM::Pathgrid *mPathgrid;
                  ~~~~~^

(apps/opencs/model/world/pathgrid.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/pathgrid.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/collectionbase.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/collectionbase.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/pathfinding.cpp:9:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:9:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/pathfinding.cpp:9:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/variant.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/launcher/textslotmsgbox.hpp has correct #includes/fwd-decls)

apps/launcher/textslotmsgbox.cpp should add these lines:

apps/launcher/textslotmsgbox.cpp should remove these lines:
- #include <QCharRef>  // lines 1-1

The full include-list for apps/launcher/textslotmsgbox.cpp:
#include "textslotmsgbox.hpp"
---
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/character.cpp:36:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
./components/esm/cellref.hpp:10:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
apps/opencs/model/world/cellcoordinates.cpp:28:24: error: implicit instantiation of undefined template 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
    std::ostringstream stream;
                       ^
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/iosfwd:101:11: note: template is declared here
    class basic_ostringstream;
          ^

(apps/opencs/model/tools/referenceablecheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/referenceablecheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/referenceablecheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 5-5

The full include-list for apps/opencs/model/tools/referenceablecheck.cpp:
#include "referenceablecheck.hpp"
#include <components/misc/stringops.hpp>  // for StringUtils
#include <utility>                      // for make_pair
#include "../world/record.hpp"          // for Record, RecordBase
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/refiddata.hpp"
#include "components/esm/loadacti.hpp"  // for Activator
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadappa.hpp"  // for Apparatus
#include "components/esm/loadarmo.hpp"  // for Armor, Armor::AODTstruct
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadcont.hpp"  // for Container
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loaddoor.hpp"  // for Door
#include "components/esm/loadingr.hpp"  // for Ingredient
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadligh.hpp"  // for Light, Light::LHDTstruct, etc
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmisc.hpp"  // for Miscellaneous
#include "components/esm/loadnpc.hpp"   // for NPC, NPC::NPDTstruct52, etc
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadrepa.hpp"  // for Repair
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct, etc
namespace ESM { struct Class; }  // lines 29-29
namespace ESM { struct Faction; }  // lines 30-30
namespace ESM { struct Race; }  // lines 31-31
---

apps/openmw/mwworld/class.hpp should add these lines:

apps/openmw/mwworld/class.hpp should remove these lines:
- #include <map>  // lines 5-5
- #include <vector>  // lines 8-8

The full include-list for apps/openmw/mwworld/class.hpp:
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <string>                       // for string
#include <utility>                      // for pair
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/ptr.hpp"
namespace ESM { struct ObjectState; }  // lines 14-14
namespace ESM { struct Position; }  // lines 41-41
namespace MWGui { struct ToolTipInfo; }  // lines 36-36
namespace MWMechanics { class CreatureStats; }  // lines 29-29
namespace MWMechanics { class NpcStats; }  // lines 30-30
namespace MWMechanics { struct Movement; }  // lines 31-31
namespace MWRender { class RenderingInterface; }  // lines 24-24
namespace MWWorld { class Action; }  // lines 46-46
namespace MWWorld { class CellStore; }  // lines 47-47
namespace MWWorld { class ContainerStore; }  // lines 48-48
namespace MWWorld { class InventoryStore; }  // lines 49-49
namespace MWWorld { class PhysicsSystem; }  // lines 50-50
namespace Ogre { class Vector3; }  // lines 19-19
---

(apps/openmw/mwmechanics/pickpocket.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/pickpocket.cpp has correct #includes/fwd-decls)

apps/openmw/mwworld/class.cpp should add these lines:
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }

apps/openmw/mwworld/class.cpp should remove these lines:
- #include <stdexcept>  // lines 3-3
- #include "../mwbase/windowmanager.hpp"  // lines 6-6
- #include "../mwworld/esmstore.hpp"  // lines 10-10
- #include "actiontake.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 12-12
- #include "apps/openmw/mwworld/action.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/store.hpp"  // lines 15-15
- #include "components/esm/loadsoun.hpp"  // lines 17-17
- #include "failedaction.hpp"  // lines 18-18
- #include "nullaction.hpp"  // lines 19-19

The full include-list for apps/openmw/mwworld/class.cpp:
#include "class.hpp"
#include <OgreVector3.h>                // for Vector3
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/world.hpp"          // for World
#include "../mwgui/tooltips.hpp"        // for ToolTipInfo
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "apps/openmw/mwworld/cellref.hpp"  // for CellRef
#include "refdata.hpp"                  // for RefData
namespace ESM { struct Sound; }
namespace MWWorld { class ESMStore; }
---

(apps/opencs/model/world/cellcoordinates.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/cellcoordinates.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/columnbase.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/columnbase.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/aiescort.hpp has correct #includes/fwd-decls)

apps/openmw/mwmechanics/aiescort.cpp should add these lines:

apps/openmw/mwmechanics/aiescort.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/aisequence.hpp"  // lines 15-15

The full include-list for apps/openmw/mwmechanics/aiescort.cpp:
#include "aiescort.hpp"
#include <components/esm/aisequence.hpp>  // for AiPackageContainer, etc
#include <limits>                       // for numeric_limits
#include <memory>                       // for auto_ptr, etc
#include <vector>                       // for vector
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/world.hpp"          // for World
#include "../mwmechanics/creaturestats.hpp"  // for CreatureStats, etc
#include "../mwworld/class.hpp"         // for Class
#include "apps/openmw/mwmechanics/../mwworld/ptr.hpp"  // for Ptr
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/aipackage.hpp"
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/loadpgrd.hpp"  // for Pathgrid::Point, Pathgrid
#include "movement.hpp"                 // for Movement
---
In file included from apps/launcher/datafilespage.cpp:3:
./components/contentselector/view/contentselector.hpp:7:10: fatal error: 'ui_contentselector.h' file not found
#include "ui_contentselector.h"
         ^
In file included from apps/opencs/model/world/data.cpp:15:
In file included from ./apps/opencs/model/world/idcollection.hpp:6:
apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:15:
./apps/opencs/model/world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:15:
./apps/opencs/model/world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:15:
./apps/opencs/model/world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:15:
./apps/opencs/model/world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/world/data.cpp:15:
./apps/opencs/model/world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/openmw/engine.cpp:54:
In file included from apps/openmw/mwgui/windowmanagerimp.hpp:24:
In file included from ./apps/openmw/mwgui/bookwindow.hpp:8:
./apps/openmw/mwbase/../mwgui/windowbase.hpp:7:10: fatal error: 'MyGUI_Delegate' file not found
#include "MyGUI_Delegate"
         ^

(apps/opencs/model/doc/blacklist.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/blacklist.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/refcollection.cpp:6:
./apps/opencs/model/world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/openmw/mwmechanics/activespells.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/landtexture.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/landtexture.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/activespells.cpp has correct #includes/fwd-decls)

(apps/openmw/mwstate/character.hpp has correct #includes/fwd-decls)

apps/openmw/mwworld/worldimp.hpp should add these lines:
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/cellstore.hpp"  // for CellStore

apps/openmw/mwworld/worldimp.hpp should remove these lines:
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/world.hpp"  // lines 15-15
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/cellstore.hpp"  // lines 16-16
- #include "apps/openmw/mwworld/../mwscript/../mwworld/ptr.hpp"  // lines 22-22

The full include-list for apps/openmw/mwworld/worldimp.hpp:
#include <stdint.h>                     // for uint32_t
#include <boost/filesystem/path.hpp>    // for path
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <map>                          // for map
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector2.h"                // for Vector2
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwworld/timestamp.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwworld/globals.hpp"
#include "apps/openmw/mwworld/../mwmechanics/../mwworld/ptr.hpp"
#include "apps/openmw/mwworld/../mwrender/animation.hpp"  // for Animation
#include "apps/openmw/mwworld/../mwrender/camera.hpp"  // for Camera
#include "apps/openmw/mwworld/../mwrender/renderingmanager.hpp"
#include "apps/openmw/mwworld/cellstore.hpp"  // for CellStore
#include "apps/openmw/mwworld/player.hpp"  // for Player
#include "cells.hpp"                    // for Cells
#include "components/esm/esmreader.hpp"  // for ESMReader
#include "components/esm/loadalch.hpp"  // for Potion
#include "components/esm/loadarmo.hpp"  // for Armor
#include "components/esm/loadbook.hpp"  // for Book
#include "components/esm/loadcell.hpp"  // for Cell
#include "components/esm/loadclas.hpp"  // for Class
#include "components/esm/loadclot.hpp"  // for Clothing
#include "components/esm/loadench.hpp"  // for Enchantment
#include "components/esm/loadlevlist.hpp"  // for CreatureLevList, etc
#include "components/esm/loadnpc.hpp"   // for NPC
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/loadweap.hpp"  // for Weapon
#include "components/settings/settings.hpp"  // for CategorySettingVector
#include "esmstore.hpp"                 // for ESMStore
#include "fallback.hpp"                 // for Fallback
#include "localscripts.hpp"             // for LocalScripts
namespace ESM { class ESMWriter; }  // lines 42-42
namespace ESM { struct CellId; }  // lines 43-43
namespace ESM { struct EffectList; }  // lines 44-44
namespace ESM { struct Position; }  // lines 61-61
namespace Files { class Collections; }  // lines 66-66
namespace Loading { class Listener; }  // lines 45-45
namespace MWWorld { class PhysicsSystem; }  // lines 46-46
namespace MWWorld { class ProjectileManager; }  // lines 79-79
namespace MWWorld { class RefData; }  // lines 47-47
namespace MWWorld { class Scene; }  // lines 48-48
namespace MWWorld { class WeatherManager; }  // lines 80-80
namespace MWWorld { struct ContentLoader; }  // lines 49-49
namespace OEngine { namespace Physic { class PhysicEngine; } }  // lines 50-50
namespace OEngine { namespace Render { class OgreRenderer; } }  // lines 51-51
namespace Ogre { class Image; }  // lines 52-52
namespace ToUTF8 { class Utf8Encoder; }  // lines 53-53
---

apps/openmw/mwstate/character.cpp should add these lines:

apps/openmw/mwstate/character.cpp should remove these lines:
- #include <ctime>  // lines 9-9

The full include-list for apps/openmw/mwstate/character.cpp:
#include "character.hpp"
#include <ctype.h>                      // for isalnum
#include <algorithm>                    // for sort
#include <boost/filesystem/operations.hpp>  // for directory_iterator, etc
#include <boost/iterator/iterator_facade.hpp>  // for iterator_facade, etc
#include <components/esm/defs.hpp>      // for RecNameInts::REC_SAVE
#include <components/esm/esmreader.hpp>  // for ESMReader
#include <components/misc/stringops.hpp>  // for StringUtils
#include <sstream>                      // for ostringstream, operator<<, etc
#include <stdexcept>                    // for logic_error
#include "components/esm/esmcommon.hpp"  // for NAME_T
#include "components/esm/loadtes3.hpp"  // for Header, etc
#include "components/esm/savedgame.hpp"  // for SavedGame
---
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/soundcheck.cpp:7:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

apps/openmw/mwworld/worldimp.cpp should add these lines:
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwworld/../mwsound/../mwbase/soundmanager.hpp"
namespace ESM { struct Container; }
namespace ESM { struct GameSetting; }
namespace ESM { struct Static; }
namespace Files { class MultiDirCollection; }
namespace MWWorld { template <typename X> struct LiveCellRef; }

apps/openmw/mwworld/worldimp.cpp should remove these lines:
- #include <algorithm>  // lines 63-63
- #include <list>  // lines 65-65
- #include <set>  // lines 67-67
- #include <stdexcept>  // lines 68-68
- #include <tr1/unordered_map>  // lines 53-53
- #include <typeinfo>  // lines 69-69
- #include "../mwbase/soundmanager.hpp"  // lines 73-73
- #include "../mwclass/door.hpp"  // lines 75-75
- #include "../mwmechanics/aiavoiddoor.hpp"  // lines 76-76
- #include "apps/openmw/mwworld/../mwbase/../mwgui/mode.hpp"  // lines 6-6
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/environment.hpp"  // lines 7-7
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/creaturestats.hpp"  // lines 8-8
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/aipackage.hpp"  // lines 10-10
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/aisequence.hpp"  // lines 11-11
- #include "apps/openmw/mwworld/../mwbase/../mwmechanics/stat.hpp"  // lines 13-13
- #include "apps/openmw/mwworld/../mwclass/../mwworld/class.hpp"  // lines 14-14
- #include "apps/openmw/mwworld/../mwscript/locals.hpp"  // lines 17-17
- #include "apps/openmw/mwworld/../mwworld/livecellref.hpp"  // lines 18-18
- #include "apps/openmw/mwworld/cellref.hpp"  // lines 20-20
- #include "components/esm/loadcont.hpp"  // lines 32-32
- #include "components/esm/loadcrea.hpp"  // lines 33-33
- #include "components/esm/loadglob.hpp"  // lines 34-34
- #include "components/esm/loadgmst.hpp"  // lines 35-35
- #include "components/esm/loadrace.hpp"  // lines 37-37
- #include "components/esm/loadstat.hpp"  // lines 40-40
- #include "components/files/multidircollection.hpp"  // lines 42-42

The full include-list for apps/openmw/mwworld/worldimp.cpp:
#include "worldimp.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <float.h>                      // for FLT_MAX
#include <libs/openengine/bullet/trace.h>  // for ActorTracer
#include <stdlib.h>                     // for NULL, rand, RAND_MAX
#include <cmath>                        // for fmod, floor
#include <components/esm/cellid.hpp>    // for CellId, CellId::CellIndex
#include <components/files/collections.hpp>  // for Collections
#include <components/misc/resourcehelpers.hpp>
#include <libs/openengine/bullet/physic.hpp>  // for PhysicActor, etc
#include <ostream>                      // for stringstream
#include "../mwbase/mechanicsmanager.hpp"  // for MechanicsManager
#include "../mwbase/scriptmanager.hpp"  // for ScriptManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwmechanics/levelledlist.hpp"  // for getLevelledItem
#include "../mwmechanics/npcstats.hpp"  // for NpcStats
#include "../mwmechanics/spellcasting.hpp"  // for CastSpell
#include "../mwrender/animation.hpp"    // for Animation
#include "../mwrender/sky.hpp"          // for SkyManager
#include "../mwscript/globalscripts.hpp"  // for GlobalScripts
#include "../mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "LinearMath/btVector3.h"       // for btVector3, operator*, etc
#include "OgreAxisAlignedBox.h"         // for AxisAlignedBox
#include "OgreMath.h"                   // for Radian, Degree, Math, etc
#include "OgreNode.h"                   // for Node
#include "OgreVector4.h"                // for Vector4
#include "actionteleport.hpp"           // for ActionTeleport
#include "apps/openmw/mwgui/../mwworld/cellref.hpp"  // for CellRef
#include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/../mwgui/mode.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwbase/environment.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwmechanics/../mwworld/class.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/activespells.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/spells.hpp"
#include "apps/openmw/mwworld/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwworld/../mwrender/../mwworld/weather.hpp"
#include "apps/openmw/mwworld/../mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // for RefData, etc
#include "apps/openmw/mwworld/cellreflist.hpp"  // for CellRefList, etc
#include "apps/openmw/mwworld/cells.hpp"  // for Cells
#include "apps/openmw/mwworld/esmstore.hpp"  // for ESMStore
#include "apps/openmw/mwworld/fallback.hpp"  // for Fallback
#include "apps/openmw/mwworld/localscripts.hpp"  // for LocalScripts
#include "apps/openmw/mwworld/physicssystem.hpp"  // for PhysicsSystem, etc
#include "apps/openmw/mwworld/scene.hpp"  // for Scene, etc
#include "apps/openmw/mwworld/store.hpp"  // for Store, Store<>::iterator
#include "components/esm/defs.hpp"      // for Position, etc
#include "components/esm/effectlist.hpp"  // for EffectList
#include "components/esm/esmwriter.hpp"  // for ESMWriter
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadregn.hpp"  // for Region
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/variant.hpp"   // for Variant
#include "components/loadinglistener/loadinglistener.hpp"  // for Listener
#include "components/misc/stringops.hpp"  // for StringUtils
#include "containerstore.hpp"           // for ContainerStoreIterator, etc
#include "contentloader.hpp"            // for ContentLoader
#include "esmloader.hpp"                // for EsmLoader
#include "inventorystore.hpp"           // for InventoryStore
#include "manualref.hpp"                // for ManualRef
#include "openengine/ogre/renderer.hpp"  // for OgreRenderer
#include "player.hpp"                   // for Player
#include "projectilemanager.hpp"        // for ProjectileManager
namespace ESM { struct Container; }
namespace ESM { struct Door; }  // lines 93-93
namespace ESM { struct GameSetting; }
namespace ESM { struct Static; }
namespace Files { class MultiDirCollection; }
namespace MWWorld { template <typename X> struct LiveCellRef; }
namespace Ogre { class Image; }  // lines 94-94
namespace ToUTF8 { class Utf8Encoder; }  // lines 95-95
---

(apps/opencs/model/world/refcollection.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/refcollection.cpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/action.hpp has correct #includes/fwd-decls)

(apps/openmw/mwworld/action.cpp has correct #includes/fwd-decls)

apps/launcher/datafilespage.hpp should add these lines:
namespace Config { class LauncherSettings; }

apps/launcher/datafilespage.hpp should remove these lines:
- #include <QDir>  // lines 4-4
- class LauncherSettings;  // lines 10-10

The full include-list for apps/launcher/datafilespage.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QString, QStringList, etc
namespace Config { class GameSettings; }  // lines 11-11
namespace Config { class LauncherSettings; }
namespace Config { namespace ContentSelectorView { class ContentSelector; } }  // lines 12-12
namespace Config { namespace Files { struct ConfigurationManager; } }  // lines 13-13
namespace Config { namespace Launcher { class TextInputDialog; } }  // lines 17-17
---

(apps/openmw/mwrender/globalmap.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/globalmap.cpp has correct #includes/fwd-decls)

apps/launcher/datafilespage.cpp should add these lines:

apps/launcher/datafilespage.cpp should remove these lines:
- #include <QDebug>  // lines 4-4
- #include <components/contentselector/view/contentselector.hpp>  // lines 3-3
- #include "components/contentselector/view/../model/contentmodel.hpp"  // lines 8-8

The full include-list for apps/launcher/datafilespage.cpp:
#include "datafilespage.hpp"
#include <QDialog>                      // for QDialog, etc
#include <QMessageBox>                  // for QMessageBox
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include "utils/textinputdialog.hpp"    // for TextInputDialog
namespace Config { class QAbstractButton; }  // lines 12-12
namespace Config { namespace ContentSelectorModel { class EsmFile; } }  // lines 13-13
---

(apps/opencs/model/tools/soundcheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/soundcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/soundcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 5-5

The full include-list for apps/opencs/model/tools/soundcheck.cpp:
#include "soundcheck.hpp"
#include <string>                       // for string
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
#include "components/esm/loadsoun.hpp"  // for Sound, SOUNstruct
---
In file included from apps/opencs/model/tools/scriptcheck.cpp:11:
In file included from apps/opencs/model/tools/../doc/document.hpp:13:
apps/opencs/model/tools/../doc/../tools/tools.hpp:31:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:11:
In file included from apps/opencs/model/tools/../doc/document.hpp:13:
apps/opencs/model/tools/../doc/../tools/tools.hpp:31:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/model/tools/../doc/../tools/tools.hpp:31:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/model/tools/../doc/../tools/tools.hpp:31:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/model/tools/../doc/../tools/tools.hpp:33:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/tools/scriptcheck.cpp:11:
In file included from apps/opencs/model/tools/../doc/document.hpp:13:
apps/opencs/model/tools/../doc/../tools/tools.hpp:33:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/model/tools/../doc/../tools/tools.hpp:33:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/model/tools/../doc/../tools/tools.hpp:33:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

(apps/opencs/model/world/cellselection.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/cellselection.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/land.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/land.cpp has correct #includes/fwd-decls)

apps/opencs/model/tools/reportmodel.hpp should add these lines:

apps/opencs/model/tools/reportmodel.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4

The full include-list for apps/opencs/model/tools/reportmodel.hpp:
#include <QtCore>                       // for ItemDataRole::DisplayRole, etc
#include <string>                       // for string
#include <utility>                      // for pair
#include <vector>                       // for vector
#include "../world/universalid.hpp"     // for UniversalId
---

apps/opencs/model/tools/reportmodel.cpp should add these lines:
#include <QAbstractTableModel>          // for QModelIndex

apps/opencs/model/tools/reportmodel.cpp should remove these lines:

The full include-list for apps/opencs/model/tools/reportmodel.cpp:
#include "reportmodel.hpp"
#include <QAbstractTableModel>          // for QModelIndex
#include "apps/opencs/model/tools/../world/universalid.hpp"
---

(apps/openmw/mwmechanics/pathfinding.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/pathfinding.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/messages.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/messages.cpp has correct #includes/fwd-decls)

(apps/launcher/utils/lineedit.hpp has correct #includes/fwd-decls)

apps/launcher/utils/lineedit.cpp should add these lines:

apps/launcher/utils/lineedit.cpp should remove these lines:
- #include <QStyle>  // lines 1-1
- #include <QToolButton>  // lines 2-2
- class QResizeEvent;  // lines 7-7

The full include-list for apps/launcher/utils/lineedit.cpp:
#include "lineedit.hpp"
#include <QtGui>                        // for QToolButton, QPixmap, etc
---

(apps/opencs/view/world/genericcreator.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/launcher/qrc_launcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/genericcreator.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_documentmanager.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_loader.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_runner.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtableproxymodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_regionmap.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_data.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_commanddispatcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/doc/view.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_idtablebase.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/world/moc_resourcetable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/tools/moc_tools.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/tools/moc_reportmodel.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_viewmanager.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_view.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/scriptsubview.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_operations.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/infocreator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/scriptsubview.cpp has correct #includes/fwd-decls)

apps/opencs/view/world/infocreator.cpp should add these lines:

apps/opencs/view/world/infocreator.cpp should remove these lines:
- #include <QUuid>  // lines 5-5

The full include-list for apps/opencs/view/world/infocreator.cpp:
#include "infocreator.hpp"
#include <QLabel>                       // for QLabel
#include <QLineEdit>                    // for QLineEdit
#include <QtCore>                       // for QByteArray, etc
#include <algorithm>                    // for remove
#include <components/misc/stringops.hpp>  // for StringUtils
#include "../../model/world/columns.hpp"
#include "../../model/world/commands.hpp"  // for CreateCommand
#include "../../model/world/data.hpp"   // for Data
#include "../../model/world/idtable.hpp"  // for IdTable
#include "apps/opencs/view/world/../../model/world/idcollection.hpp"
#include "apps/opencs/view/world/genericcreator.hpp"
class QUndoStack;  // lines 17-17
---
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_operation.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_subview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/idtypedelegate.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/idtypedelegate.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/refidcollection.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_startup.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_filedialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_newgame.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/launcher/settingspage.cpp:7:
./apps/launcher/maindialog.hpp:16:10: fatal error: 'ui_mainwindow.h' file not found
#include "ui_mainwindow.h"
         ^
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_filewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_adjusterwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/world/refidcollection.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_loader.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/dragrecordtable.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_globaldebugprofilemenu.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/dragrecordtable.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/doc/moc_runlogsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_table.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_tablesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/view/doc/view.cpp should add these lines:
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"

apps/opencs/view/doc/view.cpp should remove these lines:
- #include "apps/opencs/view/doc/../../model/doc/../world/universalid.hpp"  // lines 16-16

The full include-list for apps/opencs/view/doc/view.cpp:
#include "view.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <QCloseEvent>                  // for QCloseEvent
#include <QMenuBar>                     // for QMenuBar
#include <QtGui>                        // for QAction, QMenu, QUndoStack, etc
#include <algorithm>                    // for max
#include <boost/filesystem/path.hpp>    // for path
#include <sstream>                      // for operator<<, basic_ostream, etc
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../tools/subviews.hpp"        // for addSubViewFactories
#include "../world/subviews.hpp"        // for addSubViewFactories
#include "apps/opencs/view/doc/../../model/doc/../world/data.hpp"
#include "apps/opencs/view/doc/../../model/doc/state.hpp"
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
#include "apps/opencs/view/doc/subviewfactory.hpp"
#include "globaldebugprofilemenu.hpp"   // for GlobalDebugProfileMenu
#include "operations.hpp"               // for Operations
#include "runlogsubview.hpp"            // for RunLogSubView
#include "subview.hpp"                  // for SubView
#include "subviewfactoryimp.hpp"        // for SubViewFactory
#include "viewmanager.hpp"              // for ViewManager
---
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_scriptsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_util.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/editor.cpp:9:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_regionmapsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_tablebottombox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/world/columns.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_creator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_genericcreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/world/columns.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_cellcreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_referencecreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
errorerror: no such file or directory: 'build-include/apps/opencs/view/world/moc_referenceablecreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
: no such file or directory: 'build-include/apps/opencs/view/world/moc_scenesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_previewsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_infocreator.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_regionmap.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_scriptedit.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_dragrecordtable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/world/moc_dialoguesubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolbar.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolmode.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetool.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_pushbutton.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetooltoggle2.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetooltoggle.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_scenewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_scenetoolrun.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_worldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/widget/moc_modebutton.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error
(apps/opencs/model/filter/leafnode.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_pagedworldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
: no such file or directory: 'build-include/apps/opencs/view/render/moc_previewwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/filter/leafnode.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_unpagedworldspacewidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/render/moc_editmode.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_dialog.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/tools/moc_reportsubview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/doc/newgame.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/newgame.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_page.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/tools/moc_reporttable.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/world/refidadapter.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/refidadapter.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_view.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_settingwindow.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_booleanview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_listview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/openmw/mwrender/npcanimation.cpp:10:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_textview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_rangeview.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
error: no such file or directory: 'build-include/apps/opencs/model/settings/moc_setting.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_resizeablestackedwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/regioncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
error: no such file or directory: 'build-include/apps/opencs/model/settings/moc_connector.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/settings/moc_spinbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_filterbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/settings/moc_usersettings.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_recordfilterbox.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/qrc_resources.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/view/filter/moc_editwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/qrc_launcher.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/model/tools/mandatoryid.hpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/mandatoryid.cpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetooltoggle.hpp has correct #includes/fwd-decls)

apps/opencs/view/widget/scenetooltoggle.cpp should add these lines:

apps/opencs/view/widget/scenetooltoggle.cpp should remove these lines:
- #include <QFrame>  // lines 2-2
- #include <QHBoxLayout>  // lines 3-3
- #include <QPainter>  // lines 5-5

The full include-list for apps/opencs/view/widget/scenetooltoggle.cpp:
#include "scenetooltoggle.hpp"
#include <QIcon>                        // for QIcon
#include <QtGui>                        // for QHBoxLayout, QPixmap, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for pair, make_pair
#include "apps/opencs/view/widget/scenetool.hpp"  // for SceneTool
#include "pushbutton.hpp"               // for PushButton, etc
#include "scenetoolbar.hpp"             // for SceneToolbar
---
apps/openmw/mwmechanics/character.cpp:166:8: error: implicit default constructor for 'MWMechanics::StateInfo' must explicitly initialize the const member 'groupname'
struct StateInfo {
       ^
apps/openmw/mwmechanics/character.cpp:168:16: note: declared here
    const char groupname[32];
               ^
apps/openmw/mwmechanics/character.cpp:166:8: note: implicit default constructor for 'MWMechanics::StateInfo' first required here
struct StateInfo {
       ^
apps/openmw/mwmechanics/character.cpp:216:21: error: implicit default constructor for 'MWMechanics::WeaponInfo' must explicitly initialize the const member 'shortgroup'
static const struct WeaponInfo {
                    ^
apps/openmw/mwmechanics/character.cpp:218:16: note: declared here
    const char shortgroup[16];
               ^
apps/openmw/mwmechanics/character.cpp:216:21: error: implicit default constructor for 'MWMechanics::WeaponInfo' must explicitly initialize the const member 'longgroup'
static const struct WeaponInfo {
                    ^
apps/openmw/mwmechanics/character.cpp:219:16: note: declared here
    const char longgroup[16];
               ^
apps/openmw/mwmechanics/character.cpp:216:21: note: implicit default constructor for 'MWMechanics::WeaponInfo' first required here
static const struct WeaponInfo {
                    ^

(apps/opencs/model/filter/notnode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/notnode.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwrender/npcanimation.cpp:24:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwrender/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/npcanimation.cpp:24:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwrender/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwrender/npcanimation.cpp:24:
In file included from apps/openmw/mwrender/../mwworld/esmstore.hpp:48:
apps/openmw/mwrender/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwrender/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/essimporter/importer.hpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/world/data.cpp:27:
apps/opencs/model/world/columnimp.hpp:562:24: error: no member named 'Race' in namespace 'ESM'
            const ESM::Race::MaleFemaleF& value =
                  ~~~~~^

(apps/opencs/model/doc/loader.hpp has correct #includes/fwd-decls)
apps/opencs/model/world/columnimp.hpp:572:18: error: no member named 'Race' in namespace 'ESM'
            ESM::Race::MaleFemaleF& value =
            ~~~~~^

(apps/essimporter/importer.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/loader.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/character.hpp has correct #includes/fwd-decls)

(apps/openmw/engine.hpp has correct #includes/fwd-decls)

apps/openmw/engine.cpp should add these lines:
#include "apps/openmw/mwbase/../mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwbase/../mwgui/../mwscript/compilercontext.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/../mwscript/../mwbase/scriptmanager.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/../mwscript/globalscripts.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/localscripts.hpp"
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_MainMenu
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // for Ptr

apps/openmw/engine.cpp should remove these lines:
- #include <algorithm>  // lines 14-14
- #include <iomanip>  // lines 16-16
- #include <stdexcept>  // lines 18-18
- #include "OgreResourceGroupManager.h"  // lines 24-24
- #include "SDL_error.h"  // lines 25-25
- #include "apps/openmw/mwbase/../mwgui/mode.hpp"  // lines 29-29
- #include "apps/openmw/mwbase/../mwmechanics/../mwbase/world.hpp"  // lines 31-31
- #include "apps/openmw/mwbase/../mwmechanics/../mwworld/ptr.hpp"  // lines 32-32
- #include "apps/openmw/mwdialogue/../mwscript/compilercontext.hpp"  // lines 37-37
- #include "apps/openmw/mwinput/../mwgui/../mwbase/windowmanager.hpp"  // lines 39-39
- #include "apps/openmw/mwworld/../mwbase/soundmanager.hpp"  // lines 41-41
- #include "apps/openmw/mwworld/../mwscript/../mwbase/scriptmanager.hpp"  // lines 42-42
- #include "apps/openmw/mwworld/../mwscript/globalscripts.hpp"  // lines 43-43
- #include "apps/openmw/mwworld/../mwworld/refdata.hpp"  // lines 44-44
- #include "apps/openmw/mwworld/localscripts.hpp"  // lines 45-45
- #include "mwdialogue/scripttest.hpp"  // lines 53-53
- #include "mwscript/scriptmanagerimp.hpp"  // lines 58-58
- #include "mwsound/soundmanagerimp.hpp"  // lines 59-59
- #include "mwstate/statemanagerimp.hpp"  // lines 60-60
- #include "mwworld/worldimp.hpp"  // lines 62-62

The full include-list for apps/openmw/engine.cpp:
#include "engine.hpp"
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreRoot.h>                   // for Root
#include <SDL.h>                        // for SDL_Init, SDL_Quit, etc
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL, size_t
#include <stdlib.h>                     // for srand
#include <time.h>                       // for time
#include <boost/filesystem/operations.hpp>  // for exists
#include <components/bsa/resources.hpp>  // for registerResources
#include <components/compiler/extensions0.hpp>  // for registerExtensions
#include <components/files/configurationmanager.hpp>
#include <components/nifoverrides/nifoverrides.hpp>  // for Overrides
#include <components/translation/translation.hpp>  // for Storage
#include <exception>                    // for exception
#include <iostream>                     // for ostringstream
#include <utility>                      // for pair
#include "GLX/OgreTimerImp.h"           // for Timer
#include "OgreFrameListener.h"          // for FrameEvent
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "SDL_hints.h"                  // for SDL_SetHint, etc
#include "SDL_main.h"                   // for SDL_SetMainReady
#include "SDL_stdinc.h"                 // for Uint32
#include "apps/openmw/mwbase/../mwgui/../mwbase/windowmanager.hpp"
#include "apps/openmw/mwbase/../mwgui/../mwscript/compilercontext.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/../mwscript/../mwbase/scriptmanager.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/../mwscript/globalscripts.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/../mwworld/localscripts.hpp"
#include "apps/openmw/mwbase/../mwmechanics/../mwbase/mechanicsmanager.hpp"
#include "apps/openmw/mwbase/../mwmechanics/aisequence.hpp"
#include "apps/openmw/mwbase/../mwmechanics/creaturestats.hpp"
#include "apps/openmw/mwbase/../mwmechanics/magiceffects.hpp"
#include "apps/openmw/mwbase/environment.hpp"  // for Environment
#include "apps/openmw/mwgui/mode.hpp"   // for GuiMode::GM_MainMenu
#include "apps/openmw/mwinput/../mwbase/inputmanager.hpp"
#include "apps/openmw/mwsound/../mwbase/soundmanager.hpp"
#include "apps/openmw/mwstate/../mwbase/statemanager.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwmechanics/../mwbase/world.hpp"
#include "apps/openmw/mwworld/../mwbase/../mwworld/ptr.hpp"  // for Ptr
#include "components/compiler/context.hpp"  // for Context
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/settings/settings.hpp"  // for Manager
#include "mwclass/classes.hpp"          // for registerClasses
#include "mwdialogue/dialoguemanagerimp.hpp"  // for DialogueManager
#include "mwdialogue/journalimp.hpp"    // for Journal
#include "mwgui/windowmanagerimp.hpp"   // for WindowManager
#include "mwinput/inputmanagerimp.hpp"  // for InputManager
#include "mwmechanics/mechanicsmanagerimp.hpp"  // for MechanicsManager
#include "mwscript/interpretercontext.hpp"  // for InterpreterContext
#include "mwworld/class.hpp"            // for Class
#include "openengine/ogre/renderer.hpp"  // for OgreRenderer, etc
---

apps/openmw/mwmechanics/character.cpp should add these lines:
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat

apps/openmw/mwmechanics/character.cpp should remove these lines:
- #include "apps/openmw/mwmechanics/../mwbase/../mwmechanics/stat.hpp"  // lines 42-42
- #include "apps/openmw/mwmechanics/../mwworld/../mwmechanics/magiceffects.hpp"  // lines 43-43

The full include-list for apps/openmw/mwmechanics/character.cpp:
#include "character.hpp"
#include <OgreSceneNode.h>              // for SceneNode
#include <OgreStringConverter.h>        // for StringConverter
#include <stdlib.h>                     // for rand, RAND_MAX
#include <algorithm>                    // for min, max, find_if
#include <cmath>                        // for abs, fmod
#include <iostream>                     // for operator<<, basic_ostream, etc
#include <typeinfo>                     // for type_info
#include <vector>                       // for vector, vector<>::iterator
#include "../mwbase/environment.hpp"    // for Environment
#include "../mwbase/soundmanager.hpp"   // for SoundManager, etc
#include "../mwbase/statemanager.hpp"   // for StateManager
#include "../mwbase/windowmanager.hpp"  // for WindowManager
#include "../mwbase/world.hpp"          // for World
#include "../mwrender/animation.hpp"    // for Animation, etc
#include "../mwworld/class.hpp"         // for Class
#include "../mwworld/esmstore.hpp"      // for ESMStore
#include "../mwworld/inventorystore.hpp"  // for InventoryStore, etc
#include "OgreMath.h"                   // for Radian, Math, operator*, etc
#include "OgreNode.h"                   // for Node
#include "OgreQuaternion.h"             // for Quaternion
#include "OgreVector3.h"                // for Vector3
#include "apps/openmw/mwmechanics/../mwworld/containerstore.hpp"
#include "apps/openmw/mwmechanics/../mwworld/livecellref.hpp"
#include "apps/openmw/mwmechanics/../mwworld/refdata.hpp"  // for RefData
#include "apps/openmw/mwmechanics/../mwworld/store.hpp"  // for Store
#include "apps/openmw/mwmechanics/drawstate.hpp"
#include "apps/openmw/mwmechanics/magiceffects.hpp"  // for EffectParam, etc
#include "apps/openmw/mwmechanics/spells.hpp"  // for Spells
#include "apps/openmw/mwmechanics/stat.hpp"  // for DynamicStat
#include "components/esm/defs.hpp"      // for Position
#include "components/esm/effectlist.hpp"  // for ENAMstruct, EffectList
#include "components/esm/loadcrea.hpp"  // for Creature, etc
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadligh.hpp"  // for Light
#include "components/esm/loadlock.hpp"  // for Lockpick
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadprob.hpp"  // for Probe
#include "components/esm/loadskil.hpp"  // for Skill, etc
#include "components/esm/loadsoun.hpp"  // for Sound
#include "components/esm/loadspel.hpp"  // for Spell
#include "components/esm/loadstat.hpp"  // for Static
#include "components/esm/loadweap.hpp"  // for Weapon, Weapon::WPDTstruct, etc
#include "components/settings/settings.hpp"  // for Manager
#include "creaturestats.hpp"            // for CreatureStats, etc
#include "movement.hpp"                 // for Movement
#include "npcstats.hpp"                 // for NpcStats
#include "security.hpp"                 // for Security
---

(apps/opencs/view/doc/runlogsubview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/runlogsubview.cpp has correct #includes/fwd-decls)

apps/launcher/settingspage.hpp should add these lines:
namespace Config { class LauncherSettings; }

apps/launcher/settingspage.hpp should remove these lines:
- #include <QProcess>  // lines 4-4
- class LauncherSettings;  // lines 10-10

The full include-list for apps/launcher/settingspage.hpp:
#include <QWidget>                      // for QWidget
#include <QtCore>                       // for QProcess, etc
namespace Config { class GameSettings; }  // lines 11-11
namespace Config { class LauncherSettings; }
namespace Config { namespace Files { struct ConfigurationManager; } }  // lines 12-12
namespace Config { namespace Launcher { class MainDialog; } }  // lines 13-13
namespace Config { namespace Launcher { class TextInputDialog; } }  // lines 18-18
namespace Config { namespace Process { class ProcessInvoker; } }  // lines 14-14
---

apps/launcher/settingspage.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

apps/launcher/settingspage.cpp should remove these lines:
- #include <QDebug>  // lines 3-3
- #include <QDir>  // lines 4-4
- #include "apps/launcher/maindialog.hpp"  // lines 7-7
- #include "apps/launcher/utils/lineedit.hpp"  // lines 8-8
- #include "components/process/processinvoker.hpp"  // lines 9-9

The full include-list for apps/launcher/settingspage.cpp:
#include "settingspage.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include "utils/textinputdialog.hpp"    // for TextInputDialog
---

(apps/opencs/model/tools/regioncheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/regioncheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/regioncheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/regioncheck.cpp:
#include "regioncheck.hpp"
#include <components/esm/loadregn.hpp>  // for Region
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---
In file included from apps/launcher/graphicspage.cpp:7:
apps/launcher/graphicspage.hpp:8:10: fatal error: 'ui_graphicspage.h' file not found
#include "ui_graphicspage.h"
         ^

apps/opencs/view/tools/reportsubview.hpp should add these lines:
#include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"

apps/opencs/view/tools/reportsubview.hpp should remove these lines:
- #include "apps/opencs/view/tools/../doc/../../model/world/universalid.hpp"  // lines 7-7

The full include-list for apps/opencs/view/tools/reportsubview.hpp:
#include <QtCore>                       // for QString, QStringList, etc
#include "../doc/subview.hpp"           // for SubView
#include "apps/opencs/view/tools/../world/../../model/world/universalid.hpp"
namespace CSMDoc { class Document; }  // lines 11-11
namespace CSVTools { class ReportTable; }  // lines 16-16
---

(apps/opencs/view/tools/reportsubview.cpp has correct #includes/fwd-decls)

apps/opencs/model/settings/setting.hpp should add these lines:

apps/opencs/model/settings/setting.hpp should remove these lines:
- #include <QStringList>  // lines 5-5

The full include-list for apps/opencs/model/settings/setting.hpp:
#include <QMap>                         // for QMap<>::const_iterator, etc
#include <QtCore>                       // for QString, QList, QStringList
#include "support.hpp"                  // for SettingProperty, etc
---

apps/opencs/model/settings/setting.cpp should add these lines:
#include <QStringList>                  // for QStringList

apps/opencs/model/settings/setting.cpp should remove these lines:

The full include-list for apps/opencs/model/settings/setting.cpp:
#include "setting.hpp"
#include <QStringList>                  // for QStringList
#include "support.hpp"                  // for SettingProperty, etc
---
In file included from apps/opencs/editor.cpp:28:
In file included from apps/opencs/editor.hpp:20:
apps/opencs/view/doc/filedialog.hpp:15:10: fatal error: 'ui_filedialog.h' file not found
#include "ui_filedialog.h"
         ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:31:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:31:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:31:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:31:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:33:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/world/subviews.cpp:2:
In file included from apps/opencs/view/world/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/world/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:33:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:33:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/view/world/../doc/../../model/doc/../tools/tools.hpp:33:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

(apps/openmw/crashcatcher.cpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/scriptcheck.hpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/scriptcheck.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/cellcreator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/cellcreator.cpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/booleannode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/booleannode.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/importpage.cpp:1:
apps/wizard/importpage.hpp:7:10: fatal error: 'ui_importpage.h' file not found
#include "ui_importpage.h"
         ^

(apps/opencs/model/world/idtable.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/idtable.cpp has correct #includes/fwd-decls)
In file included from apps/openmw/mwmechanics/combat.cpp:17:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:338:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.startRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/combat.cpp:17:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:339:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.writeHNString ("NAME", iter->second.mId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^
In file included from apps/openmw/mwmechanics/combat.cpp:17:
In file included from apps/openmw/mwmechanics/../mwworld/esmstore.hpp:48:
apps/openmw/mwmechanics/../mwbase/../mwworld/store.hpp:341:23: error: member access into incomplete type 'ESM::ESMWriter'
                writer.endRecord (T::sRecordId);
                      ^
apps/openmw/mwmechanics/../mwbase/mechanicsmanager.hpp:19:11: note: forward declaration of 'ESM::ESMWriter'
    class ESMWriter;
          ^

(apps/opencs/view/render/terrainstorage.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/terrainstorage.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/unshield/unshieldworker.cpp:1:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/skillcheck.cpp:9:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/openmw/mwrender/npcanimation.cpp:1:
In file included from /usr/include/OGRE/OgreBone.h:32:
In file included from /usr/include/OGRE/GLX/../OgrePrerequisites.h:325:
In file included from /usr/include/OGRE/OgreStdHeaders.h:71:
In file included from /usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/algorithm:62:
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_algo.h:3755:2: error: no matching function for call to object of type 'MWRender::SetObjectGroup'
        __f(*__first);
        ^~~
apps/openmw/mwrender/npcanimation.cpp:631:10: note: in instantiation of function template specialization 'std::for_each<__gnu_cxx::__normal_iterator<Ogre::ParticleSystem **, std::vector<Ogre::ParticleSystem *, std::allocator<Ogre::ParticleSystem *> > >, MWRender::SetObjectGroup>' requested here
    std::for_each(objects->mParticles.begin(), objects->mParticles.end(), SetObjectGroup(group));
         ^
apps/openmw/mwrender/npcanimation.cpp:618:10: note: candidate function not viable: cannot convert argument of incomplete type 'Ogre::ParticleSystem *' to 'Ogre::MovableObject *'
    void operator()(Ogre::MovableObject *obj) const
         ^

(apps/opencs/view/render/navigation1st.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigation1st.cpp has correct #includes/fwd-decls)

(apps/essimporter/importplayer.hpp has correct #includes/fwd-decls)

(apps/essimporter/importplayer.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/subviewfactory.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/subviewfactory.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/componentselectionpage.cpp:3:
apps/wizard/componentselectionpage.hpp:7:10: fatal error: 'ui_componentselectionpage.h' file not found
#include "ui_componentselectionpage.h"
         ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/birthsigncheck.cpp:8:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^

(apps/opencs/model/tools/skillcheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/skillcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/skillcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 7-7

The full include-list for apps/opencs/model/tools/skillcheck.cpp:
#include "skillcheck.hpp"
#include <components/esm/loadskil.hpp>  // for Skill, Skill::SKDTstruct
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for basic_string, char_traits, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

(apps/opencs/model/world/refiddata.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/refiddata.cpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/wizard/moc_importpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_installationtargetpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_intropage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_languageselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_mainwizard.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_methodselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/utils/moc_componentlistwidget.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_installationpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/unshield/moc_unshieldworker.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/settings/rangeview.hpp has correct #includes/fwd-decls)

apps/opencs/view/settings/rangeview.cpp should add these lines:

apps/opencs/view/settings/rangeview.cpp should remove these lines:
- #include <QAbstractSpinBox>  // lines 1-1
- #include <QDial>  // lines 2-2
- #include <QDoubleSpinBox>  // lines 3-3
- #include <QSlider>  // lines 4-4

The full include-list for apps/opencs/view/settings/rangeview.cpp:
#include "rangeview.hpp"
#include "../../model/settings/setting.hpp"  // for Setting
#include "../../model/settings/support.hpp"
#include "apps/opencs/view/settings/view.hpp"  // for View
#include "spinbox.hpp"                  // for SpinBox
namespace CSVSettings { class Page; }  // lines 12-12
---
In file included from apps/opencs/view/world/table.cpp:3:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^
In file included from apps/opencs/view/world/table.cpp:4:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:45:
In file included from /usr/include/qt4/QtGui/qkeysequence.h:45:
In file included from /usr/include/qt4/QtCore/qnamespace.h:45:
/usr/include/qt4/QtCore/qglobal.h:1094:78: error: unknown type name 'qint8'; did you mean 'quint8'?
template <>    struct QIntegerForSize<1> { typedef quint8  Unsigned; typedef qint8  Signed; };
                                                                             ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^

(apps/opencs/model/tools/birthsigncheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/birthsigncheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/birthsigncheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 6-6

The full include-list for apps/opencs/model/tools/birthsigncheck.cpp:
#include "birthsigncheck.hpp"
#include <components/esm/loadbsgn.hpp>  // for BirthSign
#include <string>                       // for basic_string, operator+, etc
#include <utility>                      // for make_pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

(apps/opencs/view/render/worldspacewidget.hpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
./apps/opencs/model/tools/../doc/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:7:
./apps/opencs/model/tools/../world/record.hpp:38:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mBase;
                   ^
./apps/opencs/model/tools/../doc/../world/collection.hpp:119:47: note: in instantiation of template class 'CSMWorld::Record<ESM::Race>' requested here
            virtual const Record<ESXRecordT>& getRecord (const std::string& id) const;
                                              ^
apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/bodypartcheck.cpp:60:21: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if ( mRaces.searchId( bodyPart.mRace ) == -1 )
                    ^
apps/opencs/model/tools/bodypartcheck.hpp:10:24: note: forward declaration of 'ESM::Race'
namespace ESM { struct Race; }
                       ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:7:
./apps/opencs/model/tools/../world/record.hpp:39:20: error: field has incomplete type 'ESM::Race'
        ESXRecordT mModified;
                   ^
apps/opencs/model/tools/bodypartcheck.hpp:10:24: note: forward declaration of 'ESM::Race'
namespace ESM { struct Race; }
                       ^
In file included from apps/opencs/model/tools/bodypartcheck.cpp:6:
In file included from apps/opencs/model/tools/../world/idcollection.hpp:6:
./apps/opencs/model/tools/../doc/../world/collection.hpp:121:47: error: return type of virtual function 'getRecord' is not covariant with the return type of the function it overrides ('const Record<ESM::Race> &' is not derived from 'const CSMWorld::RecordBase &')
            virtual const Record<ESXRecordT>& getRecord (int index) const;
                          ~~~~~~~~~~~~~~~~~~~ ^
apps/opencs/model/tools/../world/idcollection.hpp:12:33: note: in instantiation of template class 'CSMWorld::Collection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    class IdCollection : public Collection<ESXRecordT, IdAccessorT>
                                ^
apps/opencs/model/tools/bodypartcheck.cpp:60:21: note: in instantiation of template class 'CSMWorld::IdCollection<ESM::Race, CSMWorld::IdAccessor<ESM::Race> >' requested here
    else if ( mRaces.searchId( bodyPart.mRace ) == -1 )
                    ^
./apps/opencs/model/tools/../doc/../world/collectionbase.hpp:83:39: note: overridden virtual function is here
            virtual const RecordBase& getRecord (int index) const = 0;
                          ~~~~~~~~~~~ ^

apps/opencs/view/render/worldspacewidget.cpp should add these lines:
#include "apps/opencs/model/doc/../world/universalid.hpp"

apps/opencs/view/render/worldspacewidget.cpp should remove these lines:
- #include "../../model/world/universalid.hpp"  // lines 7-7

The full include-list for apps/opencs/view/render/worldspacewidget.cpp:
#include "worldspacewidget.hpp"
#include <QtCore>                       // for QAbstractItemModel, QFlags, etc
#include <QtGui>                        // for QMouseEvent, etc
#include <algorithm>                    // for sort
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../widget/scenetoolmode.hpp"  // for SceneToolMode
#include "../widget/scenetoolrun.hpp"   // for SceneToolRun
#include "../widget/scenetooltoggle2.hpp"  // for SceneToolToggle2
#include "../world/physicssystem.hpp"   // for PhysicsSystem
#include "apps/opencs/model/doc/../world/columns.hpp"
#include "apps/opencs/model/doc/../world/data.hpp"  // for Data
#include "apps/opencs/model/doc/../world/record.hpp"  // for RecordBase, etc
#include "apps/opencs/model/doc/../world/universalid.hpp"
#include "apps/opencs/model/doc/document.hpp"  // for Document
#include "apps/opencs/model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/render/mousestate.hpp"  // for MouseState
#include "apps/opencs/view/render/navigation1st.hpp"  // for Navigation1st
#include "apps/opencs/view/render/navigationfree.hpp"
#include "apps/opencs/view/render/navigationorbit.hpp"
#include "apps/opencs/view/render/scenewidget.hpp"  // for SceneWidget
#include "editmode.hpp"                 // for EditMode
#include "elements.hpp"                 // for Elements::Element_Pathgrid, etc
---

(apps/opencs/view/doc/filewidget.hpp has correct #includes/fwd-decls)

apps/opencs/view/doc/filewidget.cpp should add these lines:

apps/opencs/view/doc/filewidget.cpp should remove these lines:
- #include <QRegExp>  // lines 8-8

The full include-list for apps/opencs/view/doc/filewidget.cpp:
#include "filewidget.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QLabel>                       // for QLabel
#include <QLineEdit>                    // for QLineEdit
#include <QRegExpValidator>             // for QRegExpValidator
---

(apps/opencs/model/filter/textnode.hpp has correct #includes/fwd-decls)

apps/opencs/model/filter/textnode.cpp should add these lines:

apps/opencs/model/filter/textnode.cpp should remove these lines:
- #include <QRegExp>  // lines 2-2

The full include-list for apps/opencs/model/filter/textnode.cpp:
#include "textnode.hpp"
#include <QtCore>                       // for QVariant, QString, QRegExp, etc
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <stdexcept>                    // for logic_error
#include <utility>                      // for pair
#include "../world/columns.hpp"         // for ColumnId, getEnums, getName, etc
#include "../world/idtablebase.hpp"     // for IdTableBase
---
In file included from apps/opencs/view/world/table.cpp:4:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:144:29: error: unknown type name 'qint8'; did you mean 'quint8'?
    QDataStream &operator>>(qint8 &i);
                            ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:4:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:145:18: error: class member cannot be redeclared
    QDataStream &operator>>(quint8 &i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:144:18: note: previous declaration is here
    QDataStream &operator>>(qint8 &i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:158:29: error: unknown type name 'qint8'; did you mean 'quint8'?
    QDataStream &operator<<(qint8 i);
                            ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:4:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:159:18: error: class member cannot be redeclared
    QDataStream &operator<<(quint8 i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:158:18: note: previous declaration is here
    QDataStream &operator<<(qint8 i);
                 ^
/usr/include/qt4/QtCore/qdatastream.h:219:36: error: unknown type name 'qint8'; did you mean 'quint8'?
{ return *this >> reinterpret_cast<qint8&>(i); }
                                   ^
/usr/include/qt4/QtCore/qglobal.h:1047:23: note: 'quint8' declared here
typedef unsigned char quint8;      /* 8 bit unsigned */
                      ^
In file included from apps/opencs/view/world/table.cpp:4:
In file included from /usr/include/qt4/QtGui/QAction:1:
In file included from /usr/include/qt4/QtGui/qaction.h:47:
In file included from /usr/include/qt4/QtGui/qwidget.h:50:
In file included from /usr/include/qt4/QtGui/qpalette.h:46:
In file included from /usr/include/qt4/QtGui/qcolor.h:47:
In file included from /usr/include/qt4/QtCore/qstringlist.h:46:
/usr/include/qt4/QtCore/qdatastream.h:231:19: error: use of undeclared identifier 'qint8'
{ return *this << qint8(i); }
                  ^

(libs/openengine/bullet/physic.hpp has correct #includes/fwd-decls)

(apps/essimporter/importnpcc.hpp has correct #includes/fwd-decls)

(apps/essimporter/importnpcc.cpp has correct #includes/fwd-decls)

(apps/opencs/view/filter/editwidget.hpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/bodypartcheck.hpp has correct #includes/fwd-decls)

(apps/opencs/model/tools/bodypartcheck.cpp has correct #includes/fwd-decls)

apps/opencs/view/filter/editwidget.cpp should add these lines:

apps/opencs/view/filter/editwidget.cpp should remove these lines:
- #include <QAbstractItemModel>  // lines 2-2
- #include <QString>  // lines 4-4

The full include-list for apps/opencs/view/filter/editwidget.cpp:
#include "editwidget.hpp"
#include <QApplication>                 // for QApplication
#include <sstream>                      // for operator<<, basic_ostream, etc
#include "../../model/world/data.hpp"   // for Data
#include "apps/opencs/view/filter/../../model/filter/parser.hpp"
#include "apps/opencs/view/filter/../../model/world/universalid.hpp"
class QWidget;  // lines 12-12
---

apps/opencs/editor.hpp should add these lines:
#include "components/files/multidircollection.hpp"  // for PathContainer

apps/opencs/editor.hpp should remove these lines:

The full include-list for apps/opencs/editor.hpp:
#include <QArgument>                    // for Q_OBJECT, slots
#include <QObject>                      // for QObject
#include <QString>                      // for QString
#include <boost/filesystem/fstream.hpp>  // for ofstream
#include <boost/filesystem/path.hpp>    // for path
#include <boost/interprocess/sync/file_lock.hpp>  // for file_lock
#include <components/files/configurationmanager.hpp>
#include <components/nifcache/nifcache.hpp>  // for Cache
#include <memory>                       // for auto_ptr
#include "components/files/multidircollection.hpp"  // for PathContainer
#include "model/doc/documentmanager.hpp"  // for DocumentManager
#include "model/settings/usersettings.hpp"  // for UserSettings
#include "view/doc/filedialog.hpp"      // for FileDialog
#include "view/doc/newgame.hpp"         // for NewGameDialogue
#include "view/doc/startup.hpp"         // for StartupDialogue
#include "view/doc/viewmanager.hpp"     // for ViewManager
#include "view/settings/dialog.hpp"     // for Dialog
class QLocalServer;  // lines 26-26
class QLocalSocket;  // lines 27-27
namespace CSMDoc { class Document; }  // lines 28-28
namespace CSVRender { class OverlaySystem; }  // lines 29-29
namespace OgreInit { class OgreInit; }  // lines 34-34
namespace sh { class Factory; }  // lines 30-30
---
error: no such file or directory: 'build-include/apps/opencs/moc_editor.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_document.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_operation.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/opencs/model/doc/moc_saving.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(libs/openengine/bullet/physic.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingday.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingday.cpp has correct #includes/fwd-decls)

apps/opencs/view/settings/page.hpp should add these lines:

apps/opencs/view/settings/page.hpp should remove these lines:
- #include <QList>  // lines 4-4

The full include-list for apps/opencs/view/settings/page.hpp:
#include <QtCore>                       // for QString, QList, Q_OBJECT
#include "../../model/settings/support.hpp"  // for ViewType
#include "frame.hpp"                    // for Frame
namespace CSMSettings { class Setting; }  // lines 10-10
namespace CSVSettings { class IViewFactory; }  // lines 14-14
namespace CSVSettings { class SettingWindow; }  // lines 15-15
namespace CSVSettings { class View; }  // lines 16-16
---

apps/opencs/view/settings/page.cpp should add these lines:
#include <QList>                        // for QList

apps/opencs/view/settings/page.cpp should remove these lines:
- #include <QMap>  // lines 2-2

The full include-list for apps/opencs/view/settings/page.cpp:
#include "page.hpp"
#include <QLabel>                       // for QLabel
#include <QList>                        // for QList
#include "../../model/settings/support.hpp"  // for ViewType, etc
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "apps/opencs/view/settings/../../model/settings/setting.hpp"
#include "apps/opencs/view/settings/frame.hpp"  // for Frame
#include "booleanview.hpp"              // for BooleanViewFactory
#include "listview.hpp"                 // for ListViewFactory
#include "rangeview.hpp"                // for RangeViewFactory
#include "settingwindow.hpp"            // for SettingWindow
#include "textview.hpp"                 // for TextViewFactory
#include "view.hpp"                     // for View, IViewFactory
---

apps/opencs/editor.cpp should add these lines:

apps/opencs/editor.cpp should remove these lines:
- #include <QMessageBox>  // lines 15-15

The full include-list for apps/opencs/editor.cpp:
#include "editor.hpp"
#include <OgreRoot.h>                   // for Root
#include <openengine/bullet/BulletShapeLoader.h>
#include <stdio.h>                      // for NULL, remove
#include <QApplication>                 // for QApplication
#include <QLocalServer>                 // for QLocalServer
#include <QLocalSocket>                 // for QLocalSocket
#include <QtCore>                       // for QBool, QRegExp, etc
#include <boost/filesystem/operations.hpp>  // for exists, etc
#include <boost/move/core.hpp>
#include <boost/program_options/options_description.hpp>
#include <boost/program_options/variables_map.hpp>  // for notify, etc
#include <components/nifogre/ogrenifloader.hpp>  // for Loader
#include <components/ogreinit/ogreinit.hpp>  // for OgreInit
#include <exception>                    // for exception
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <string>                       // for string
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "apps/opencs/model/doc/documentmanager.hpp"
#include "apps/opencs/model/settings/usersettings.hpp"
#include "apps/opencs/view/doc/newgame.hpp"  // for NewGameDialogue
#include "apps/opencs/view/doc/startup.hpp"  // for StartupDialogue
#include "apps/opencs/view/doc/viewmanager.hpp"  // for ViewManager
#include "components/files/configurationmanager.hpp"
#include "extern/shiny/Main/Language.hpp"  // for Language, etc
namespace CSMDoc { class Document; }  // lines 31-31
namespace Ogre { class RenderWindow; }  // lines 32-32
namespace sh { class OgrePlatform; }  // lines 33-33
---

apps/opencs/model/settings/connector.hpp should add these lines:

apps/opencs/model/settings/connector.hpp should remove these lines:
- #include <QList>  // lines 4-4
- #include <QMap>  // lines 5-5
- #include <QObject>  // lines 6-6
- #include <QStringList>  // lines 7-7

The full include-list for apps/opencs/model/settings/connector.hpp:
#include <QtCore>                       // for QList, QString, QStringList, etc
namespace CSVSettings { class View; }  // lines 11-11
---

apps/opencs/model/settings/connector.cpp should add these lines:
#include <QList>                        // for QList
#include <QMap>                         // for QMap
#include <QObject>                      // for QObject
#include <QStringList>                  // for QStringList

apps/opencs/model/settings/connector.cpp should remove these lines:

The full include-list for apps/opencs/model/settings/connector.cpp:
#include "connector.hpp"
#include <QList>                        // for QList
#include <QMap>                         // for QMap
#include <QObject>                      // for QObject
#include <QStringList>                  // for QStringList
#include "../../view/settings/view.hpp"  // for View
---

(apps/opencs/view/world/physicssystem.hpp has correct #includes/fwd-decls)

(apps/wizard/importpage.hpp has correct #includes/fwd-decls)

(apps/wizard/importpage.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/physicssystem.cpp has correct #includes/fwd-decls)

(apps/wizard/componentselectionpage.hpp has correct #includes/fwd-decls)

(apps/wizard/componentselectionpage.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/runner.hpp has correct #includes/fwd-decls)

apps/opencs/model/doc/runner.cpp should add these lines:

apps/opencs/model/doc/runner.cpp should remove these lines:
- #include <QTemporaryFile>  // lines 2-2
- #include <QTextStream>  // lines 3-3

The full include-list for apps/opencs/model/doc/runner.cpp:
#include "runner.hpp"
#include <QtCore>                       // for QString, QStringList, etc
#include "components/esm/debugprofile.hpp"  // for DebugProfile, etc
#include "operation.hpp"                // for Operation
---
In file included from apps/opencs/model/tools/classcheck.cpp:11:
In file included from ./apps/opencs/model/tools/../world/idcollection.hpp:6:
apps/opencs/model/tools/../world/collection.hpp:207:22: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
       copy.mState = RecordBase::State_ModifiedOnly;
                     ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:11:
./apps/opencs/model/tools/../world/idcollection.hpp:67:33: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
                record.mState = RecordBase::State_Deleted;
                                ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:11:
./apps/opencs/model/tools/../world/idcollection.hpp:111:37: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                    ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:11:
./apps/opencs/model/tools/../world/idcollection.hpp:111:66: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record2.mState = base ? RecordBase::State_BaseOnly : RecordBase::State_ModifiedOnly;
                                                                 ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:11:
./apps/opencs/model/tools/../world/idcollection.hpp:146:28: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
        if (record.mState==RecordBase::State_ModifiedOnly)
                           ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/opencs/model/tools/classcheck.cpp:11:
./apps/opencs/model/tools/../world/idcollection.hpp:152:29: error: incomplete type 'CSMWorld::RecordBase' named in nested name specifier
            record.mState = RecordBase::State_Deleted;
                            ^~~~~~~~~~~~
apps/opencs/model/tools/../world/collectionbase.hpp:15:12: note: forward declaration of 'CSMWorld::RecordBase'
    struct RecordBase;
           ^
In file included from apps/wizard/inisettings.cpp:1:
In file included from apps/wizard/inisettings.hpp:4:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^

(apps/opencs/model/world/resources.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/resources.cpp has correct #includes/fwd-decls)

(components/esm/creaturestats.hpp has correct #includes/fwd-decls)

(apps/openmw/mwrender/npcanimation.hpp has correct #includes/fwd-decls)

apps/wizard/unshield/unshieldworker.hpp should add these lines:

apps/wizard/unshield/unshieldworker.hpp should remove these lines:
- #include <QMutex>  // lines 6-6
- #include <QObject>  // lines 7-7
- #include <QReadWriteLock>  // lines 8-8
- #include <QStringList>  // lines 9-9
- #include <QWaitCondition>  // lines 10-10

The full include-list for apps/wizard/unshield/unshieldworker.hpp:
#include <libunshield.h>                // for Unshield
#include <stdbool.h>                    // for bool, true, false
#include <QtCore>                       // for QString, MatchFlags, etc
#include "../inisettings.hpp"           // for IniSettings
---

(apps/openmw/mwmechanics/creaturestats.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/creaturestats.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/stage.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/stage.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/operations.hpp has correct #includes/fwd-decls)

apps/opencs/view/doc/operations.cpp should add these lines:

apps/opencs/view/doc/operations.cpp should remove these lines:
- #include <QHBoxLayout>  // lines 1-1

The full include-list for apps/opencs/view/doc/operations.cpp:
#include "operations.hpp"
#include <QtGui>                        // for QVBoxLayout, QWidget, etc
#include "operation.hpp"                // for Operation
---

(apps/openmw/mwrender/npcanimation.cpp has correct #includes/fwd-decls)

apps/opencs/view/world/scriptedit.hpp should add these lines:

apps/opencs/view/world/scriptedit.hpp should remove these lines:
- #include <QTimer>  // lines 5-5
- #include <QVector>  // lines 6-6

The full include-list for apps/opencs/view/world/scriptedit.hpp:
#include <QPlainTextEdit>               // for QPlainTextEdit
#include <QtCore>                       // for QRegExp, QTimer, QVector, etc
#include <string>                       // for string
#include "apps/opencs/view/world/../../model/doc/../world/universalid.hpp"
#include "scripthighlighter.hpp"        // for ScriptHighlighter, etc
class QDragEnterEvent;  // lines 13-13
class QDragMoveEvent;  // lines 14-14
class QDropEvent;  // lines 15-15
class QWidget;  // lines 16-16
namespace CSMDoc { class Document; }  // lines 20-20
---

apps/opencs/view/world/scriptedit.cpp should add these lines:

apps/opencs/view/world/scriptedit.cpp should remove these lines:
- #include <QString>  // lines 2-2
- #include "../../model/world/universalid.hpp"  // lines 8-8

The full include-list for apps/opencs/view/world/scriptedit.cpp:
#include "scriptedit.hpp"
#include <QDragEnterEvent>              // for QDragEnterEvent, etc
#include <new>                          // for bad_alloc
#include <vector>                       // for vector, vector<>::iterator
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/world/../../model/doc/../world/data.hpp"
#include "apps/opencs/view/world/scripthighlighter.hpp"
---

(apps/opencs/view/world/referenceablecreator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/referenceablecreator.cpp has correct #includes/fwd-decls)

apps/wizard/unshield/unshieldworker.cpp should add these lines:
#include <QMutex>                       // for QMutex
#include <QObject>                      // for QObject
#include <QReadWriteLock>               // for QReadLocker, QWriteLocker

apps/wizard/unshield/unshieldworker.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 1-1
- #include <QDebug>  // lines 3-3
- #include <QDir>  // lines 4-4
- #include <QFile>  // lines 5-5
- #include <QFileInfoListIterator>  // lines 6-6
- #include <QTextCodec>  // lines 8-8
- #include <QTextStream>  // lines 9-9

The full include-list for apps/wizard/unshield/unshieldworker.cpp:
#include "unshieldworker.hpp"
#include <stddef.h>                     // for size_t
#include <QMutex>                       // for QMutex
#include <QObject>                      // for QObject
#include <QReadWriteLock>               // for QReadLocker, QWriteLocker
#include <QStringList>                  // for QStringList
#include "apps/wizard/unshield/../inisettings.hpp"  // for IniSettings
---
error: no such file or directory: 'build-include/apps/wizard/qrc_wizard.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_componentselectionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

(apps/opencs/view/world/subviews.hpp has correct #includes/fwd-decls)
error: no such file or directory: 'build-include/apps/wizard/moc_conclusionpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''
error: no such file or directory: 'build-include/apps/wizard/moc_existinginstallationpage.cxx'
error: no input files
error: unable to handle compilation, expected exactly one compiler job in ''

apps/opencs/view/world/subviews.cpp should add these lines:
#include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"

apps/opencs/view/world/subviews.cpp should remove these lines:
- #include "apps/opencs/view/world/../../model/world/universalid.hpp"  // lines 4-4

The full include-list for apps/opencs/view/world/subviews.cpp:
#include "subviews.hpp"
#include "../doc/subviewfactoryimp.hpp"  // for SubViewFactoryWithCreator, etc
#include "apps/opencs/view/world/../../model/world/scope.hpp"
#include "apps/opencs/view/world/../doc/../../model/world/universalid.hpp"
#include "apps/opencs/view/world/../doc/subview.hpp"  // for SubView
#include "apps/opencs/view/world/../doc/subviewfactory.hpp"
#include "apps/opencs/view/world/creator.hpp"  // for CreatorFactory, etc
#include "cellcreator.hpp"              // for CellCreator
#include "dialoguecreator.hpp"          // for JournalCreatorFactory, etc
#include "dialoguesubview.hpp"          // for DialogueSubView
#include "genericcreator.hpp"           // for GenericCreator
#include "infocreator.hpp"              // for InfoCreator
#include "previewsubview.hpp"           // for PreviewSubView
#include "referenceablecreator.hpp"     // for ReferenceableCreator
#include "referencecreator.hpp"         // for ReferenceCreator
#include "regionmapsubview.hpp"         // for RegionMapSubView
#include "scenesubview.hpp"             // for SceneSubView
#include "scriptsubview.hpp"            // for ScriptSubView
#include "tablesubview.hpp"             // for TableSubView
---

(apps/opencs/model/tools/classcheck.hpp has correct #includes/fwd-decls)

apps/opencs/model/tools/classcheck.cpp should add these lines:
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"

apps/opencs/model/tools/classcheck.cpp should remove these lines:
- #include "../world/universalid.hpp"  // lines 9-9

The full include-list for apps/opencs/model/tools/classcheck.cpp:
#include "classcheck.hpp"
#include <components/esm/loadclas.hpp>  // for Class, Class::CLDTstruct
#include <components/esm/loadskil.hpp>  // for Skill
#include <map>                          // for map, etc
#include <sstream>                      // for operator<<, basic_ostream, etc
#include <string>                       // for basic_string, allocator, etc
#include <utility>                      // for make_pair, pair
#include "apps/opencs/model/tools/../doc/../world/universalid.hpp"
#include "apps/opencs/model/tools/../doc/messages.hpp"  // for Messages
#include "apps/opencs/model/tools/../world/idcollection.hpp"
#include "apps/opencs/model/tools/../world/record.hpp"  // for Record
---

(apps/opencs/model/world/data.hpp has correct #includes/fwd-decls)

(apps/wizard/main.cpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/combat.hpp has correct #includes/fwd-decls)

(apps/openmw/mwmechanics/combat.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/data.cpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetoolrun.hpp has correct #includes/fwd-decls)

apps/opencs/view/widget/scenetoolrun.cpp should add these lines:

apps/opencs/view/widget/scenetoolrun.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QFrame>  // lines 3-3
- #include <QHBoxLayout>  // lines 4-4
- #include <QHeaderView>  // lines 5-5

The full include-list for apps/opencs/view/widget/scenetoolrun.cpp:
#include "scenetoolrun.hpp"
#include <QTableWidget>                 // for QTableWidget, etc
#include <QtGui>                        // for QFrame, QHeaderView, etc
#include <iterator>                     // for advance
#include "apps/opencs/view/widget/pushbutton.hpp"
#include "apps/opencs/view/widget/scenetool.hpp"  // for SceneTool
namespace CSVWidget { class SceneToolbar; }  // lines 14-14
---

apps/opencs/view/world/datadisplaydelegate.hpp should add these lines:

apps/opencs/view/world/datadisplaydelegate.hpp should remove these lines:
- #include <QTextOption>  // lines 4-4

The full include-list for apps/opencs/view/world/datadisplaydelegate.hpp:
#include <QtCore>                       // for QString, QSize, QStringList
#include <QtGui>                        // for QIcon, QStyleOptionViewItem, etc
#include <utility>                      // for pair
#include <vector>                       // for vector, allocator
#include "enumdelegate.hpp"             // for EnumDelegate, etc
namespace CSMDoc { class Document; }  // lines 12-12
namespace CSVWorld { class CommandDelegate; }  // lines 13-13
---

apps/opencs/view/world/datadisplaydelegate.cpp should add these lines:
#include <QTextOption>                  // for QTextOption

apps/opencs/view/world/datadisplaydelegate.cpp should remove these lines:
- #include <QPainter>  // lines 1-1

The full include-list for apps/opencs/view/world/datadisplaydelegate.cpp:
#include "datadisplaydelegate.hpp"
#include <QTextOption>                  // for QTextOption
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "apps/opencs/view/world/enumdelegate.hpp"  // for EnumDelegate, etc
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
namespace CSMDoc { class Document; }  // lines 8-8
---

(apps/opencs/model/filter/node.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/node.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:24:26: error: base class has incomplete type
    class Tools : public QObject
                  ~~~~~~~^~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:249:7: note: forward declaration of 'QObject'
class QObject;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:31:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:31:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
./apps/opencs/model/doc/../tools/tools.hpp:31:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
./apps/opencs/model/doc/../tools/tools.hpp:31:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
./apps/opencs/model/doc/../tools/tools.hpp:33:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:33:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
./apps/opencs/model/doc/../tools/tools.hpp:33:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
./apps/opencs/model/doc/../tools/tools.hpp:33:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: incomplete result type 'QString' in function definition
            Q_OBJECT
            ^
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^
/usr/include/qt4/QtCore/qobjectdefs.h:99:27: note: expanded from macro 'QT_TR_FUNCTIONS'
    static inline QString tr(const char *s, const char *c = 0) \
                          ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: calling 'tr' with incomplete return type 'QString'
            Q_OBJECT
            ^~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:100:35: note: expanded from macro 'QT_TR_FUNCTIONS'
        { return staticMetaObject.tr(s, c); } \
                 ~~~~~~~~~~~~~~~~~^~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:314:13: note: 'tr' declared here
    QString tr(const char *s, const char *c) const;
            ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: incomplete result type 'QString' in function definition
            Q_OBJECT
            ^
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^
/usr/include/qt4/QtCore/qobjectdefs.h:101:27: note: expanded from macro 'QT_TR_FUNCTIONS'
    static inline QString trUtf8(const char *s, const char *c = 0) \
                          ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: calling 'trUtf8' with incomplete return type 'QString'
            Q_OBJECT
            ^~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:102:35: note: expanded from macro 'QT_TR_FUNCTIONS'
        { return staticMetaObject.trUtf8(s, c); } \
                 ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:315:13: note: 'trUtf8' declared here
    QString trUtf8(const char *s, const char *c) const;
            ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: incomplete result type 'QString' in function definition
            Q_OBJECT
            ^
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^
/usr/include/qt4/QtCore/qobjectdefs.h:103:27: note: expanded from macro 'QT_TR_FUNCTIONS'
    static inline QString tr(const char *s, const char *c, int n) \
                          ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: calling 'tr' with incomplete return type 'QString'
            Q_OBJECT
            ^~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:104:35: note: expanded from macro 'QT_TR_FUNCTIONS'
        { return staticMetaObject.tr(s, c, n); } \
                 ~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:316:13: note: 'tr' declared here
    QString tr(const char *s, const char *c, int n) const;
            ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: incomplete result type 'QString' in function definition
            Q_OBJECT
            ^
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^
/usr/include/qt4/QtCore/qobjectdefs.h:105:27: note: expanded from macro 'QT_TR_FUNCTIONS'
    static inline QString trUtf8(const char *s, const char *c, int n) \
                          ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^
In file included from apps/opencs/model/doc/document.cpp:6:
./apps/opencs/model/doc/../tools/tools.hpp:26:13: error: calling 'trUtf8' with incomplete return type 'QString'
            Q_OBJECT
            ^~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:164:5: note: expanded from macro 'Q_OBJECT'
    QT_TR_FUNCTIONS \
    ^~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:106:35: note: expanded from macro 'QT_TR_FUNCTIONS'
        { return staticMetaObject.trUtf8(s, c, n); }
                 ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/usr/include/qt4/QtCore/qobjectdefs.h:317:13: note: 'trUtf8' declared here
    QString trUtf8(const char *s, const char *c, int n) const;
            ^
/usr/include/qt4/QtCore/qglobal.h:1659:7: note: forward declaration of 'QString'
class QString;
      ^

(apps/launcher/graphicspage.hpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/resizeablestackedwidget.hpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/resizeablestackedwidget.cpp has correct #includes/fwd-decls)

apps/launcher/graphicspage.cpp should add these lines:
#include "OgreStringVector.h"           // for StringVector

apps/launcher/graphicspage.cpp should remove these lines:

The full include-list for apps/launcher/graphicspage.cpp:
#include "graphicspage.hpp"
#include <OgreRenderSystem.h>           // for RenderSystem
#include <OgreRoot.h>                   // for Root, RenderSystemList
#include <stddef.h>                     // for NULL
#include <QMessageBox>                  // for QMessageBox, etc
#include "OgreConfigOptionMap.h"        // for ConfigOptionMap
#include "OgreException.h"              // for Exception
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "OgreStringVector.h"           // for StringVector
#include "SDL_video.h"                  // for SDL_DisplayMode, etc
---

(apps/opencs/model/filter/parser.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/parser.cpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/valuenode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/valuenode.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/conclusionpage.cpp:5:
apps/wizard/conclusionpage.hpp:7:10: fatal error: 'ui_conclusionpage.h' file not found
#include "ui_conclusionpage.h"
         ^

apps/opencs/view/world/util.hpp should add these lines:

apps/opencs/view/world/util.hpp should remove these lines:
- #include <QAbstractTableModel>  // lines 4-4

The full include-list for apps/opencs/view/world/util.hpp:
#include <QLineEdit>                    // for QLineEdit
#include <QStyleHintReturnMask>         // for QStyleOptionViewItem
#include <QStyledItemDelegate>          // for QStyledItemDelegate
#include <QtCore>                       // for QVariant, etc
#include <map>                          // for map
#include <vector>                       // for vector
#include "../../model/world/columnbase.hpp"  // for ColumnBase, etc
class QDragEnterEvent;  // lines 14-14
class QDragMoveEvent;  // lines 15-15
class QDropEvent;  // lines 16-16
class QUndoStack;  // lines 17-17
class QWidget;  // lines 18-18
namespace CSMDoc { class Document; }  // lines 19-19
namespace CSMWorld { class UniversalId; }  // lines 23-23
namespace CSVWorld { class CommandDelegate; }  // lines 51-51
---

apps/opencs/view/world/util.cpp should add these lines:
#include <QAbstractTableModel>          // for QAbstractItemModel, etc

apps/opencs/view/world/util.cpp should remove these lines:
- #include <QCheckBox>  // lines 2-2
- #include <QDoubleSpinBox>  // lines 3-3
- #include <QMetaProperty>  // lines 5-5
- #include <QPlainTextEdit>  // lines 6-6
- #include <QUndoStack>  // lines 8-8

The full include-list for apps/opencs/view/world/util.cpp:
#include "util.hpp"
#include <QAbstractTableModel>          // for QAbstractItemModel, etc
#include <QLineEdit>                    // for QLineEdit
#include <QStyledItemDelegate>          // for QStyledItemDelegate
#include <QtGui>                        // for QWidget, QPlainTextEdit, etc
#include <cfloat>                       // for FLT_MAX, FLT_MIN
#include <climits>                      // for INT_MAX, INT_MIN
#include <stdexcept>                    // for logic_error
#include <utility>                      // for make_pair, pair
#include "../../model/world/commands.hpp"  // for ModifyCommand
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/world/../../model/doc/document.hpp"
#include "apps/opencs/view/world/../../model/world/columnbase.hpp"
#include "apps/opencs/view/world/scripthighlighter.hpp"
#include "scriptedit.hpp"               // for ScriptEdit
---

apps/wizard/inisettings.hpp should add these lines:

apps/wizard/inisettings.hpp should remove these lines:
- #include <qatomic_i386.h>  // lines 4-4
- #include <QVariant>  // lines 6-6

The full include-list for apps/wizard/inisettings.hpp:
#include <QHash>                        // for QHash
#include <QtCore>                       // for QString, QVariant, QList, etc
---

(apps/wizard/inisettings.cpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetoolbar.hpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetoolbar.cpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/unarynode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/unarynode.cpp has correct #includes/fwd-decls)

(apps/bsatool/bsatool.cpp has correct #includes/fwd-decls)

apps/opencs/view/settings/view.hpp should add these lines:

apps/opencs/view/settings/view.hpp should remove these lines:
- #include <QList>  // lines 4-4

The full include-list for apps/opencs/view/settings/view.hpp:
#include <QtCore>                       // for QStringList, QString, QList, etc
#include "frame.hpp"                    // for Frame
class QItemSelection;  // lines 9-9
class QItemSelectionModel;  // lines 10-10
class QShowEvent;  // lines 11-11
class QStandardItem;  // lines 12-12
namespace CSMSettings { class Setting; }  // lines 13-13
namespace CSVSettings { class Page; }  // lines 17-17
---

apps/opencs/view/settings/view.cpp should add these lines:
#include <QList>                        // for QList

apps/opencs/view/settings/view.cpp should remove these lines:

The full include-list for apps/opencs/view/settings/view.cpp:
#include "view.hpp"
#include <QApplication>                 // for QApplication
#include <QFontMetricsF>                // for QFontMetrics
#include <QItemSelectionModel>          // for QItemSelectionModel, etc
#include <QList>                        // for QList
#include <QStandardItemModel>           // for QStandardItemModel, etc
#include <QStringListModel>             // for QStringListModel
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/frame.hpp"  // for Frame
#include "page.hpp"                     // for Page
class QShowEvent;  // lines 12-12
---
apps/opencs/model/doc/document.cpp:2314:5: error: no matching member function for call to 'connect'
    connect (&mUndoStack, SIGNAL (cleanChanged (bool)), this, SLOT (modificationStateChanged (bool)));
    ^~~~~~~
/usr/include/qt4/QtCore/qobject.h:204:17: note: candidate function not viable: no known conversion from 'CSMDoc::Document *' to 'const QObject *' for 3rd argument
    static bool connect(const QObject *sender, const char *signal,
                ^
/usr/include/qt4/QtCore/qobject.h:337:22: note: candidate function not viable: no known conversion from 'CSMDoc::Document' to 'const QObject' for object argument
inline bool QObject::connect(const QObject *asender, const char *asignal,
                     ^
/usr/include/qt4/QtCore/qobject.h:217:17: note: candidate function not viable: no known conversion from 'const char *' to 'const QMetaMethod' for 2nd argument
    static bool connect(const QObject *sender, const QMetaMethod &signal,
                ^
apps/opencs/model/doc/document.cpp:2319:5: error: no matching member function for call to 'connect'
    connect (&mSaving, SIGNAL (progress (int, int, int)), this, SLOT (progress (int, int, int)));
    ^~~~~~~
/usr/include/qt4/QtCore/qobject.h:204:17: note: candidate function not viable: no known conversion from 'CSMDoc::Document *' to 'const QObject *' for 3rd argument
    static bool connect(const QObject *sender, const char *signal,
                ^
/usr/include/qt4/QtCore/qobject.h:337:22: note: candidate function not viable: no known conversion from 'CSMDoc::Document' to 'const QObject' for object argument
inline bool QObject::connect(const QObject *asender, const char *asignal,
                     ^
/usr/include/qt4/QtCore/qobject.h:217:17: note: candidate function not viable: no known conversion from 'const char *' to 'const QMetaMethod' for 2nd argument
    static bool connect(const QObject *sender, const QMetaMethod &signal,
                ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]

(apps/opencs/view/doc/operation.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/operation.cpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/andnode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/andnode.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigationfree.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigationfree.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/mainwizard.cpp:14:
apps/wizard/componentselectionpage.hpp:7:10: fatal error: 'ui_componentselectionpage.h' file not found
#include "ui_componentselectionpage.h"
         ^

(apps/opencs/view/tools/reporttable.hpp has correct #includes/fwd-decls)

apps/opencs/view/tools/reporttable.cpp should add these lines:

apps/opencs/view/tools/reporttable.cpp should remove these lines:
- #include <QAction>  // lines 2-2
- #include <QHeaderView>  // lines 3-3
- #include <QMenu>  // lines 4-4

The full include-list for apps/opencs/view/tools/reporttable.cpp:
#include "reporttable.hpp"
#include <QtGui>                        // for QItemSelectionModel, etc
#include <algorithm>                    // for reverse
#include "../../model/tools/reportmodel.hpp"  // for ReportModel
#include "../../view/world/idtypedelegate.hpp"
#include "apps/opencs/view/tools/../world/../../model/doc/document.hpp"
#include "apps/opencs/view/tools/../world/dragrecordtable.hpp"
#include "apps/opencs/view/tools/../world/util.hpp"
---

(apps/wizard/conclusionpage.hpp has correct #includes/fwd-decls)

apps/wizard/conclusionpage.cpp should add these lines:

apps/wizard/conclusionpage.cpp should remove these lines:
- #include <QDebug>  // lines 1-1

The full include-list for apps/wizard/conclusionpage.cpp:
#include "conclusionpage.hpp"
#include <QPixmap>                      // for QPixmap
#include <QtCore>                       // for QLatin1String, QVariant, etc
#include "mainwizard.hpp"               // for MainWizard
class QWidget;  // lines 8-8
---

(apps/opencs/view/widget/modebutton.hpp has correct #includes/fwd-decls)

apps/opencs/view/widget/modebutton.cpp should add these lines:

apps/opencs/view/widget/modebutton.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2

The full include-list for apps/opencs/view/widget/modebutton.cpp:
#include "modebutton.hpp"
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc
class QWidget;  // lines 7-7
---

(apps/opencs/view/render/textoverlay.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/textoverlay.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/scripthighlighter.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/scripthighlighter.cpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/document.hpp has correct #includes/fwd-decls)

apps/opencs/model/doc/document.cpp should add these lines:

apps/opencs/model/doc/document.cpp should remove these lines:
- #include <iostream>  // lines 3-3
- #include "../../view/world/physicssystem.hpp"  // lines 28-28
- #include "apps/opencs/model/doc/../tools/tools.hpp"  // lines 6-6
- #include "components/esm/debugprofile.hpp"  // lines 14-14

The full include-list for apps/opencs/model/doc/document.cpp:
#include "document.hpp"
#include <boost/filesystem/operations.hpp>  // for exists
#include <components/files/configurationmanager.hpp>
#include <fstream>                      // for basic_ostream::operator<<, etc
#include <stdexcept>                    // for runtime_error
#include "apps/opencs/model/doc/../world/data.hpp"  // for Data
#include "apps/opencs/model/doc/../world/idcollection.hpp"
#include "apps/opencs/model/doc/../world/record.hpp"  // for Record, etc
#include "apps/opencs/model/doc/blacklist.hpp"  // for Blacklist
#include "apps/opencs/model/doc/runner.hpp"  // for Runner, SaveWatcher
#include "apps/opencs/model/doc/saving.hpp"  // for Saving
#include "apps/opencs/model/doc/state.hpp"  // for State::State_Locked, etc
#include "components/esm/loaddial.hpp"  // for Dialogue, etc
#include "components/esm/loadglob.hpp"  // for Global
#include "components/esm/loadgmst.hpp"  // for GameSetting
#include "components/esm/loadmgef.hpp"  // for MagicEffect, etc
#include "components/esm/loadskil.hpp"  // for Skill
#include "components/esm/variant.hpp"   // for Variant, VarType::VT_Float, etc
#include "components/to_utf8/to_utf8.hpp"  // for FromType
class QTextDocument;  // lines 30-30
namespace CSMTools { class ReportModel; }  // lines 31-31
---
In file included from apps/wizard/installationtargetpage.cpp:5:
apps/wizard/installationtargetpage.hpp:7:10: fatal error: 'ui_installationtargetpage.h' file not found
#include "ui_installationtargetpage.h"
         ^

apps/opencs/view/settings/spinbox.hpp should add these lines:

apps/opencs/view/settings/spinbox.hpp should remove these lines:
- #include <QStringList>  // lines 5-5

The full include-list for apps/opencs/view/settings/spinbox.hpp:
#include <QSpinBox>                     // for QSpinBox
#include <QtCore>                       // for QString, QStringList, etc
class QWidget;  // lines 8-8
---

apps/opencs/view/settings/spinbox.cpp should add these lines:
#include <QStringList>                  // for QStringList

apps/opencs/view/settings/spinbox.cpp should remove these lines:

The full include-list for apps/opencs/view/settings/spinbox.cpp:
#include "spinbox.hpp"
#include <QLineEdit>                    // for QLineEdit
#include <QStringList>                  // for QStringList
class QWidget;  // lines 5-5
---

(apps/opencs/model/filter/narynode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/narynode.cpp has correct #includes/fwd-decls)

apps/wizard/mainwizard.hpp should add these lines:
#include <stdbool.h>                    // for bool

apps/wizard/mainwizard.hpp should remove these lines:
- #include <QMap>  // lines 4-4
- #include <QProcess>  // lines 5-5

The full include-list for apps/wizard/mainwizard.hpp:
#include <stdbool.h>                    // for bool
#include <QWizard>                      // for QWizard
#include <QtCore>                       // for QString, slots, QMap, etc
#include <components/config/gamesettings.hpp>  // for GameSettings
#include <components/config/launchersettings.hpp>  // for LauncherSettings
#include <components/files/configurationmanager.hpp>
class QWidget;  // lines 9-9
namespace Process { class ProcessInvoker; }  // lines 10-10
---

(apps/opencs/view/filter/filterbox.hpp has correct #includes/fwd-decls)

(apps/opencs/view/filter/filterbox.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/adjusterwidget.hpp has correct #includes/fwd-decls)

apps/opencs/view/doc/adjusterwidget.cpp should add these lines:

apps/opencs/view/doc/adjusterwidget.cpp should remove these lines:
- #include <QStyle>  // lines 5-5

The full include-list for apps/opencs/view/doc/adjusterwidget.cpp:
#include "adjusterwidget.hpp"
#include <QHBoxLayout>                  // for QHBoxLayout
#include <QLabel>                       // for QLabel
#include <QtGui>                        // for QSizePolicy, QStyle, etc
#include <boost/filesystem/operations.hpp>  // for exists
#include <stdexcept>                    // for logic_error
#include <string>                       // for operator+, string, etc
---

(apps/opencs/model/filter/ornode.hpp has correct #includes/fwd-decls)

(apps/opencs/model/filter/ornode.cpp has correct #includes/fwd-decls)

apps/wizard/mainwizard.cpp should add these lines:
#include <QProcess>                     // for QProcess, etc

apps/wizard/mainwizard.cpp should remove these lines:
- #include <QDateTime>  // lines 3-3
- #include <QDebug>  // lines 4-4
- #include <QDir>  // lines 5-5
- #include <QTextCodec>  // lines 7-7
- #include "componentselectionpage.hpp"  // lines 14-14
- #include "conclusionpage.hpp"  // lines 15-15
- #include "existinginstallationpage.hpp"  // lines 16-16
- #include "importpage.hpp"  // lines 17-17
- #include "installationpage.hpp"  // lines 27-27
- #include "installationtargetpage.hpp"  // lines 18-18
- #include "intropage.hpp"  // lines 19-19
- #include "languageselectionpage.hpp"  // lines 20-20
- #include "methodselectionpage.hpp"  // lines 22-22

The full include-list for apps/wizard/mainwizard.cpp:
#include "mainwizard.hpp"
#include <stdbool.h>                    // for false, true, bool
#include <QMessageBox>                  // for QMessageBox, etc
#include <QProcess>                     // for QProcess, etc
#include <boost/filesystem/path.hpp>    // for path
#include <string>                       // for string
#include "components/config/gamesettings.hpp"  // for GameSettings
#include "components/config/launchersettings.hpp"  // for LauncherSettings, etc
#include "components/files/configurationmanager.hpp"
#include "components/process/processinvoker.hpp"  // for ProcessInvoker
class QWidget;  // lines 24-24
---

(apps/opencs/view/world/table.hpp has correct #includes/fwd-decls)

(libs/openengine/bullet/BulletShapeLoader.h has correct #includes/fwd-decls)

(libs/openengine/bullet/BulletShapeLoader.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/regionmapsubview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/regionmapsubview.cpp has correct #includes/fwd-decls)

apps/opencs/view/world/table.cpp should add these lines:

apps/opencs/view/world/table.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 3-3
- #include <QAction>  // lines 4-4
- #include <QContextMenuEvent>  // lines 5-5
- #include <QHeaderView>  // lines 6-6
- #include <QMenu>  // lines 7-7
- #include <QString>  // lines 8-8

The full include-list for apps/opencs/view/world/table.cpp:
#include "table.hpp"
#include <QtGui>                        // for QMenu, QAction, QMouseEvent, etc
#include <boost/smart_ptr/shared_ptr.hpp>  // for shared_ptr
#include <memory>                       // for auto_ptr, etc
#include <stdexcept>                    // for runtime_error
#include <utility>                      // for make_pair, pair
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/world/columns.hpp"
#include "../../model/world/commanddispatcher.hpp"
#include "../../model/world/commands.hpp"  // for ReorderRowsCommand, etc
#include "../../model/world/data.hpp"   // for Data
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../../model/world/idtablebase.hpp"  // for IdTableBase, etc
#include "../../model/world/idtableproxymodel.hpp"
#include "../../model/world/record.hpp"  // for RecordBase, etc
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/world/../../model/world/columnbase.hpp"
#include "apps/opencs/view/world/../../model/world/idcollection.hpp"
#include "apps/opencs/view/world/dragrecordtable.hpp"
#include "util.hpp"                     // for CommandDelegate, etc
namespace CSMFilter { class Node; }  // lines 30-30
---
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:31:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, ReportModel *> mReports;
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:31:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, ReportModel *> mReports;
            ~~~~~^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:31:18: error: C++ requires a type specifier for all declarations
            std::map<int, ReportModel *> mReports;
                 ^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:31:21: error: expected ';' at end of declaration list
            std::map<int, ReportModel *> mReports;
                    ^
                    ;
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:33:18: error: no template named 'map' in namespace 'std'; did you mean 'max'?
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^~~
                 max
/usr/lib/gcc/i686-linux-gnu/4.9/../../../../include/c++/4.9/bits/algorithmfwd.h:356:5: note: 'max' declared here
    max(const _Tp&, const _Tp&);
    ^
In file included from apps/opencs/view/tools/subviews.cpp:2:
In file included from apps/opencs/view/tools/../doc/subviewfactoryimp.hpp:4:
In file included from apps/opencs/view/tools/../doc/../../model/doc/document.hpp:13:
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:33:18: error: non-friend class member 'max' cannot have a qualified name
            std::map<int, int> mActiveReports; // type, report number
            ~~~~~^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:33:18: error: C++ requires a type specifier for all declarations
            std::map<int, int> mActiveReports; // type, report number
                 ^
apps/opencs/view/tools/../doc/../../model/doc/../tools/tools.hpp:33:21: error: expected ';' at end of declaration list
            std::map<int, int> mActiveReports; // type, report number
                    ^
                    ;

(apps/opencs/view/world/enumdelegate.hpp has correct #includes/fwd-decls)

apps/opencs/view/world/enumdelegate.cpp should add these lines:

apps/opencs/view/world/enumdelegate.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QComboBox>  // lines 3-3
- #include <QUndoStack>  // lines 4-4
- class QPainter;  // lines 14-14

The full include-list for apps/opencs/view/world/enumdelegate.cpp:
#include "enumdelegate.hpp"
#include <QtCore>                       // for QVariant, QModelIndex, etc
#include <QtGui>                        // for QComboBox, QStyle, QWidget, etc
#include <cassert>                      // for assert
#include <cstddef>                      // for size_t
#include "../../model/world/commands.hpp"  // for ModifyCommand
#include "apps/opencs/view/world/util.hpp"  // for CommandDelegate
namespace CSMDoc { class Document; }  // lines 15-15
---
In file included from apps/wizard/existinginstallationpage.cpp:6:
apps/wizard/existinginstallationpage.hpp:7:10: fatal error: 'ui_existinginstallationpage.h' file not found
#include "ui_existinginstallationpage.h"
         ^

(apps/opencs/model/doc/operation.hpp has correct #includes/fwd-decls)

(apps/opencs/model/doc/operation.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingnight.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingnight.cpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/booleanview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/booleanview.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/subview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/subview.cpp has correct #includes/fwd-decls)

(apps/wizard/installationtargetpage.hpp has correct #includes/fwd-decls)

apps/wizard/installationtargetpage.cpp should add these lines:

apps/wizard/installationtargetpage.cpp should remove these lines:
- #include <QDebug>  // lines 1-1

The full include-list for apps/wizard/installationtargetpage.cpp:
#include "installationtargetpage.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include <QtCore>                       // for QDir, QFileInfo, QString, etc
#include "mainwizard.hpp"               // for MainWizard, etc
class QWidget;  // lines 8-8
---

(apps/opencs/view/doc/viewmanager.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/idvalidator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/idvalidator.cpp has correct #includes/fwd-decls)

apps/opencs/view/doc/viewmanager.cpp should add these lines:
#include "apps/opencs/view/doc/../../model/doc/../world/columns.hpp"
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
#include "apps/opencs/view/world/util.hpp"

apps/opencs/view/doc/viewmanager.cpp should remove these lines:
- #include "../../model/world/columns.hpp"  // lines 14-14
- #include "../world/util.hpp"  // lines 18-18
- #include "apps/opencs/view/doc/../world/../../model/world/universalid.hpp"  // lines 23-23

The full include-list for apps/opencs/view/doc/viewmanager.cpp:
#include "viewmanager.hpp"
#include <QApplication>                 // for QApplication
#include <QMessageBox>                  // for QMessageBox, etc
#include <QPushButton>                  // for QPushButton
#include <QtCore>                       // for operator|, QCoreApplication, etc
#include <algorithm>                    // for find
#include <boost/filesystem/path.hpp>    // for path
#include <cstddef>                      // for size_t
#include <map>                          // for map, _Rb_tree_iterator, etc
#include <utility>                      // for pair, make_pair
#include "../../model/doc/documentmanager.hpp"  // for DocumentManager
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "../world/enumdelegate.hpp"    // for EnumDelegateFactory
#include "../world/idtypedelegate.hpp"  // for IdTypeDelegateFactory
#include "../world/recordstatusdelegate.hpp"
#include "../world/vartypedelegate.hpp"  // for VarTypeDelegateFactory
#include "apps/opencs/view/doc/../../model/doc/../world/columns.hpp"
#include "apps/opencs/view/doc/../../model/doc/state.hpp"
#include "apps/opencs/view/doc/../../model/world/universalid.hpp"
#include "apps/opencs/view/doc/../world/../../model/doc/document.hpp"
#include "apps/opencs/view/doc/../world/../../model/world/columnbase.hpp"
#include "apps/opencs/view/doc/loader.hpp"  // for Loader
#include "apps/opencs/view/world/util.hpp"
#include "components/esm/variant.hpp"   // for VarType::VT_Float, etc
#include "view.hpp"                     // for View
---

(apps/opencs/view/world/referencecreator.hpp has correct #includes/fwd-decls)

apps/opencs/view/world/referencecreator.cpp should add these lines:

apps/opencs/view/world/referencecreator.cpp should remove these lines:
- #include <QLabel>  // lines 2-2

The full include-list for apps/opencs/view/world/referencecreator.cpp:
#include "referencecreator.hpp"
#include <QLineEdit>                    // for QLineEdit
#include <QtCore>                       // for QAbstractItemModel, etc
#include <QtGui>                        // for QUndoStack, QLabel
#include "../../model/world/columns.hpp"  // for ColumnId::ColumnId_Cell, etc
#include "../../model/world/commands.hpp"  // for CreateCommand, etc
#include "../../model/world/data.hpp"   // for Data
#include "../../model/world/idtable.hpp"  // for IdTable
#include "apps/opencs/view/world/../../model/world/idcollection.hpp"
#include "apps/opencs/view/world/../../model/world/refcollection.hpp"
#include "apps/opencs/view/world/genericcreator.hpp"
---

apps/opencs/view/world/dialoguesubview.hpp should add these lines:
#include "apps/opencs/view/world/../../model/world/universalid.hpp"

apps/opencs/view/world/dialoguesubview.hpp should remove these lines:
- #include "apps/opencs/model/world/universalid.hpp"  // lines 16-16

The full include-list for apps/opencs/view/world/dialoguesubview.hpp:
#include <QAbstractItemDelegate>        // for QAbstractItemDelegate
#include <QScrollArea>                  // for QScrollArea
#include <QStyleHintReturnMask>         // for QStyleOptionViewItem
#include <QtCore>                       // for Q_OBJECT, signals, slots, etc
#include <map>                          // for map
#include <memory>                       // for auto_ptr
#include <string>                       // for string
#include <vector>                       // for vector
#include "../../model/world/columnbase.hpp"  // for ColumnBase, etc
#include "../../model/world/commanddispatcher.hpp"
#include "../doc/subview.hpp"           // for SubView
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
class QDataWidgetMapper;  // lines 18-18
class QLabel;  // lines 19-19
class QPainter;  // lines 20-20
class QUndoStack;  // lines 21-21
class QVBoxLayout;  // lines 22-22
class QWidget;  // lines 23-23
namespace CSMDoc { class Document; }  // lines 32-32
namespace CSMWorld { class IdTable; }  // lines 27-27
namespace CSVWorld { class CommandDelegate; }  // lines 37-37
namespace CSVWorld { class CreatorFactoryBase; }  // lines 38-38
namespace CSVWorld { class TableBottomBox; }  // lines 39-39
---

apps/opencs/view/world/dialoguesubview.cpp should add these lines:

apps/opencs/view/world/dialoguesubview.cpp should remove these lines:
- #include <QAbstractItemModel>  // lines 2-2
- #include <QCheckBox>  // lines 3-3
- #include <QComboBox>  // lines 4-4
- #include <QDataWidgetMapper>  // lines 5-5
- #include <QGridLayout>  // lines 6-6
- #include <QLineEdit>  // lines 8-8
- #include <QPlainTextEdit>  // lines 9-9
- #include <QSize>  // lines 11-11
- #include <QToolButton>  // lines 12-12
- class QPainter;  // lines 32-32

The full include-list for apps/opencs/view/world/dialoguesubview.cpp:
#include "dialoguesubview.hpp"
#include <stddef.h>                     // for NULL
#include <QLabel>                       // for QLabel
#include <QScrollArea>                  // for QScrollArea
#include <QtGui>                        // for QToolButton, QHBoxLayout, etc
#include <memory>                       // for auto_ptr, etc
#include <utility>                      // for pair, make_pair
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/world/columnbase.hpp"  // for ColumnBase, etc
#include "../../model/world/columns.hpp"  // for getEnums, ColumnId
#include "../../model/world/commands.hpp"  // for DeleteCommand, etc
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../../model/world/record.hpp"  // for RecordBase, etc
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "apps/opencs/view/world/../../model/world/commanddispatcher.hpp"
#include "apps/opencs/view/world/../doc/../../model/doc/../world/data.hpp"
#include "apps/opencs/view/world/../doc/../../model/doc/../world/idtablebase.hpp"
#include "apps/opencs/view/world/../doc/subview.hpp"  // for SubView
#include "tablebottombox.hpp"           // for TableBottomBox
#include "util.hpp"                     // for DropLineEdit, etc
---

(apps/opencs/view/settings/frame.hpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/frame.cpp has correct #includes/fwd-decls)

(apps/wizard/existinginstallationpage.hpp has correct #includes/fwd-decls)
In file included from apps/wizard/intropage.cpp:4:
apps/wizard/intropage.hpp:7:10: fatal error: 'ui_intropage.h' file not found
#include "ui_intropage.h"
         ^

apps/wizard/existinginstallationpage.cpp should add these lines:

apps/wizard/existinginstallationpage.cpp should remove these lines:
- #include <QFile>  // lines 2-2
- #include <QFileInfo>  // lines 3-3

The full include-list for apps/wizard/existinginstallationpage.cpp:
#include "existinginstallationpage.hpp"
#include <stddef.h>                     // for NULL
#include <QMessageBox>                  // for QMessageBox, etc
#include "mainwizard.hpp"               // for MainWizard, etc
class QAbstractButton;  // lines 9-9
class QWidget;  // lines 10-10
---

(apps/opencs/view/widget/scenetool.hpp has correct #includes/fwd-decls)

apps/opencs/view/widget/scenetool.cpp should add these lines:

apps/opencs/view/widget/scenetool.cpp should remove these lines:
- #include <QMouseEvent>  // lines 2-2

The full include-list for apps/opencs/view/widget/scenetool.cpp:
#include "scenetool.hpp"
#include <QtCore>                       // for MouseButton::RightButton, etc
#include <QtGui>                        // for QSizePolicy, etc
#include "apps/opencs/view/widget/pushbutton.hpp"  // for PushButton, etc
#include "scenetoolbar.hpp"             // for SceneToolbar
---
In file included from 
(apps/opencs/model/world/commanddispatcher.hpp has correct #includes/fwd-decls)
apps/wizard/methodselectionpage.cpp:4:
apps/wizard/methodselectionpage.hpp:7:10: fatal error: 'ui_methodselectionpage.h' file not found
#include "ui_methodselectionpage.h"
         ^

(apps/opencs/model/world/commanddispatcher.cpp has correct #includes/fwd-decls)

(apps/opencs/view/filter/recordfilterbox.hpp has correct #includes/fwd-decls)

(apps/opencs/view/filter/recordfilterbox.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/tablebottombox.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/tablebottombox.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/pagedworldspacewidget.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/pagedworldspacewidget.cpp has correct #includes/fwd-decls)

(apps/opencs/view/tools/subviews.hpp has correct #includes/fwd-decls)

(apps/opencs/view/tools/subviews.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/vartypedelegate.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/vartypedelegate.cpp has correct #includes/fwd-decls)

(apps/wizard/methodselectionpage.hpp has correct #includes/fwd-decls)

(apps/wizard/methodselectionpage.cpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetooltoggle2.hpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/scenetooltoggle2.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/model/settings/usersettings.cpp:4:
In file included from ./extern/shiny/Main/Factory.hpp:10:
In file included from ./extern/shiny/Main/MaterialInstance.hpp:9:
In file included from ./extern/shiny/Main/MaterialInstancePass.hpp:8:
In file included from ./extern/shiny/Main/MaterialInstanceTextureUnit.hpp:6:
./extern/shiny/Main/PropertyBase.hpp:192:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(*value).name() == typeid(LinkedValue).name())
                           ^
./extern/shiny/Main/PropertyBase.hpp:198:34: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                if (typeid(T).name() == typeid(*value).name())
                                               ^
./extern/shiny/Main/PropertyBase.hpp:205:14: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
                        && typeid(*value).name() != typeid(StringValue).name())
                                  ^

(apps/opencs/view/render/navigationorbit.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/navigationorbit.cpp has correct #includes/fwd-decls)

(apps/opencs/model/world/idtablebase.hpp has correct #includes/fwd-decls)

(apps/opencs/model/world/idtablebase.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lighting.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lighting.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/creator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/creator.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/loader.hpp has correct #includes/fwd-decls)

(apps/wizard/intropage.hpp has correct #includes/fwd-decls)

(apps/wizard/intropage.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/loader.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/overlaymask.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/overlaymask.cpp has correct #includes/fwd-decls)

(apps/opencs/view/doc/startup.hpp has correct #includes/fwd-decls)

apps/opencs/view/doc/startup.cpp should add these lines:

apps/opencs/view/doc/startup.cpp should remove these lines:
- #include <QApplication>  // lines 2-2
- #include <QDesktopWidget>  // lines 3-3
- #include <QGridLayout>  // lines 4-4
- #include <QHBoxLayout>  // lines 5-5
- #include <QLabel>  // lines 7-7
- #include <QRect>  // lines 9-9

The full include-list for apps/opencs/view/doc/startup.cpp:
#include "startup.hpp"
#include <QIcon>                        // for QIcon
#include <QPushButton>                  // for QPushButton
#include <QtGui>                        // for QGridLayout, QHBoxLayout, etc
---

(apps/opencs/view/settings/textview.hpp has correct #includes/fwd-decls)

apps/opencs/view/settings/textview.cpp should add these lines:

apps/opencs/view/settings/textview.cpp should remove these lines:
- #include <QLineEdit>  // lines 1-1
- #include <QTextEdit>  // lines 2-2

The full include-list for apps/opencs/view/settings/textview.cpp:
#include "textview.hpp"
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/view.hpp"  // for View
namespace CSVSettings { class Page; }  // lines 8-8
---

(apps/opencs/view/world/dialoguecreator.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/dialoguecreator.cpp has correct #includes/fwd-decls)

apps/opencs/model/settings/usersettings.hpp should add these lines:

apps/opencs/model/settings/usersettings.hpp should remove these lines:
- #include <QList>  // lines 5-5
- #include <QMap>  // lines 6-6
- #include <QPair>  // lines 7-7
- #include <QString>  // lines 8-8
- #include <QStringList>  // lines 9-9

The full include-list for apps/opencs/model/settings/usersettings.hpp:
#include <QtCore>                       // for QString, QList, QPair, etc
#include <boost/filesystem/path.hpp>    // for path
#include <map>                          // for map
#include <vector>                       // for vector
#include "support.hpp"                  // for SettingType
namespace CSMSettings { class Setting; }  // lines 21-21
namespace Files { struct ConfigurationManager; }  // lines 17-17
---

apps/opencs/model/settings/usersettings.cpp should add these lines:
#include <QList>                        // for QList, QList<>::iterator
#include <QMap>                         // for QMap<>::iterator
#include <QPair>                        // for QPair
#include <QString>                      // for QString, operator+
#include <QStringList>                  // for QStringList

apps/opencs/model/settings/usersettings.cpp should remove these lines:
- #include <QFile>  // lines 6-6
- #include <QSettings>  // lines 7-7

The full include-list for apps/opencs/model/settings/usersettings.cpp:
#include "usersettings.hpp"
#include <assert.h>                     // for assert
#include <stddef.h>                     // for NULL
#include <QList>                        // for QList, QList<>::iterator
#include <QMap>                         // for QMap<>::iterator
#include <QPair>                        // for QPair
#include <QString>                      // for QString, operator+
#include <QStringList>                  // for QStringList
#include <boost/version.hpp>            // for BOOST_VERSION
#include <components/files/configurationmanager.hpp>
#include <extern/shiny/Main/Factory.hpp>  // for Factory
#include <string>                       // for string, operator==, etc
#include <utility>                      // for pair
#include "setting.hpp"                  // for Setting
#include "support.hpp"                  // for SettingType::Type_CheckBox, etc
---

(apps/wizard/utils/componentlistwidget.hpp has correct #includes/fwd-decls)

apps/wizard/utils/componentlistwidget.cpp should add these lines:

apps/wizard/utils/componentlistwidget.cpp should remove these lines:
- #include <QStringList>  // lines 1-1

The full include-list for apps/wizard/utils/componentlistwidget.cpp:
#include "componentlistwidget.hpp"
class QWidget;  // lines 5-5
---

(apps/opencs/view/world/tablesubview.hpp has correct #includes/fwd-decls)

apps/opencs/view/world/tablesubview.cpp should add these lines:
#include "apps/opencs/view/world/../../model/world/universalid.hpp"

apps/opencs/view/world/tablesubview.cpp should remove these lines:
- #include <QEvent>  // lines 2-2
- #include <QVBoxLayout>  // lines 3-3

The full include-list for apps/opencs/view/world/tablesubview.cpp:
#include "tablesubview.hpp"
#include <QtGui>                        // for QVBoxLayout, QWidget, etc
#include <utility>                      // for pair, make_pair
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "../filter/filterbox.hpp"      // for FilterBox
#include "apps/opencs/view/world/../../model/world/universalid.hpp"
#include "apps/opencs/view/world/../doc/subview.hpp"  // for SubView
#include "table.hpp"                    // for Table
#include "tablebottombox.hpp"           // for TableBottomBox
---
In file included from apps/wizard/languageselectionpage.cpp:3:
apps/wizard/languageselectionpage.hpp:7:10: fatal error: 'ui_languageselectionpage.h' file not found
#include "ui_languageselectionpage.h"
         ^

apps/opencs/view/settings/settingwindow.hpp should add these lines:

apps/opencs/view/settings/settingwindow.hpp should remove these lines:
- #include <QList>  // lines 4-4

The full include-list for apps/opencs/view/settings/settingwindow.hpp:
#include <QMainWindow>                  // for QMainWindow
#include <QtCore>                       // for QString, QList, etc
class QWidget;  // lines 8-8
namespace CSMSettings { class Setting; }  // lines 11-11
namespace CSMSettings { class UserSettings; }  // lines 12-12
namespace CSVSettings { class Page; }  // lines 17-17
namespace CSVSettings { class View; }  // lines 18-18
---

(apps/opencs/view/widget/scenetoolmode.hpp has correct #includes/fwd-decls)

apps/opencs/view/settings/settingwindow.cpp should add these lines:
#include <QList>                        // for QList

apps/opencs/view/settings/settingwindow.cpp should remove these lines:
- #include <QDebug>  // lines 2-2

The full include-list for apps/opencs/view/settings/settingwindow.cpp:
#include "settingwindow.hpp"
#include <stddef.h>                     // for NULL
#include <QList>                        // for QList
#include "../../model/settings/connector.hpp"  // for Connector
#include "../../model/settings/setting.hpp"  // for ProxyValueMap, Setting
#include "../../model/settings/usersettings.hpp"  // for SettingPageMap, etc
#include "page.hpp"                     // for Page
#include "view.hpp"                     // for View
class QWidget;  // lines 11-11
---

(apps/opencs/view/widget/scenetoolmode.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingbright.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/lightingbright.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/recordstatusdelegate.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/recordstatusdelegate.cpp has correct #includes/fwd-decls)

(apps/wizard/languageselectionpage.hpp has correct #includes/fwd-decls)

(apps/wizard/languageselectionpage.cpp has correct #includes/fwd-decls)

(apps/opencs/view/world/scenesubview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/scenesubview.cpp has correct #includes/fwd-decls)
In file included from apps/wizard/installationpage.cpp:5:
apps/wizard/installationpage.hpp:8:10: fatal error: 'ui_installationpage.h' file not found
#include "ui_installationpage.h"
         ^

(apps/opencs/view/world/previewsubview.hpp has correct #includes/fwd-decls)

(apps/opencs/view/world/previewsubview.cpp has correct #includes/fwd-decls)
In file included from apps/opencs/view/world/regionmap.cpp:2:
/usr/include/qt4/QtCore/qatomic_i386.h:45:1: error: unknown type name 'QT_BEGIN_HEADER'
QT_BEGIN_HEADER
^
/usr/include/qt4/QtCore/qatomic_i386.h:46:19: error: expected ';' after top level declarator
QT_BEGIN_NAMESPACE
                  ^
/usr/include/qt4/QtCore/qatomic_i386.h:51:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:53:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isReferenceCountingWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:59:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:61:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isTestAndSetWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:67:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:69:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndStoreWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:75:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddNative()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:77:13: error: use of undeclared identifier 'QBasicAtomicInt'
inline bool QBasicAtomicInt::isFetchAndAddWaitFree()
            ^
/usr/include/qt4/QtCore/qatomic_i386.h:84:1: error: unknown type name 'Q_INLINE_TEMPLATE'
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
^
/usr/include/qt4/QtCore/qatomic_i386.h:84:19: error: expected unqualified-id
Q_INLINE_TEMPLATE bool QBasicAtomicPointer<T>::isTestAndSetNative()
                  ^

(apps/opencs/view/widget/pushbutton.hpp has correct #includes/fwd-decls)

(apps/opencs/view/widget/pushbutton.cpp has correct #includes/fwd-decls)

apps/opencs/view/settings/listview.hpp should add these lines:

apps/opencs/view/settings/listview.hpp should remove these lines:
- class QShowEvent;  // lines 9-9

The full include-list for apps/opencs/view/settings/listview.hpp:
#include <QtCore>                       // for QObject, Q_OBJECT, QString, etc
#include <QtGui>                        // for QWidget
#include "view.hpp"                     // for IViewFactory, View
namespace CSMSettings { class Setting; }  // lines 10-10
namespace CSVSettings { class Page; }  // lines 11-11
---

apps/opencs/view/settings/listview.cpp should add these lines:

apps/opencs/view/settings/listview.cpp should remove these lines:
- #include <QComboBox>  // lines 1-1
- #include <QListView>  // lines 2-2
- class QShowEvent;  // lines 8-8

The full include-list for apps/opencs/view/settings/listview.cpp:
#include "listview.hpp"
#include "../../model/settings/setting.hpp"  // for Setting
#include "apps/opencs/view/settings/view.hpp"  // for View
namespace CSVSettings { class Page; }  // lines 9-9
---

(apps/wizard/installationpage.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/overlaysystem.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/overlaysystem.cpp has correct #includes/fwd-decls)

apps/wizard/installationpage.cpp should add these lines:

apps/wizard/installationpage.cpp should remove these lines:
- #include <QTextCodec>  // lines 2-2

The full include-list for apps/wizard/installationpage.cpp:
#include "installationpage.hpp"
#include <QMessageBox>                  // for QMessageBox, etc
#include "apps/wizard/unshield/unshieldworker.hpp"  // for UnshieldWorker, etc
#include "mainwizard.hpp"               // for MainWizard, etc
class QWidget;  // lines 8-8
---

(apps/opencs/view/render/unpagedworldspacewidget.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/unpagedworldspacewidget.cpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/dialog.hpp has correct #includes/fwd-decls)

(apps/opencs/view/settings/dialog.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/scenewidget.hpp has correct #includes/fwd-decls)

apps/opencs/view/render/scenewidget.cpp should add these lines:

apps/opencs/view/render/scenewidget.cpp should remove these lines:
- #include <QEvent>  // lines 7-7
- #include <QTimer>  // lines 10-10

The full include-list for apps/opencs/view/render/scenewidget.cpp:
#include "scenewidget.hpp"
#include <OgreCamera.h>                 // for Camera
#include <OgreOverlaySystem.h>          // for OverlaySystem
#include <OgreRenderWindow.h>           // for RenderWindow
#include <OgreRoot.h>                   // for Root
#include <OgreViewport.h>               // for Viewport
#include <stddef.h>                     // for NULL
#include <QResizeEvent>                 // for QMouseEvent, QKeyEvent, etc
#include <QShortcut>                    // for QShortcut
#include <ostream>                      // for stringstream, basic_ostream, etc
#include <utility>                      // for make_pair
#include "../../model/settings/usersettings.hpp"  // for UserSettings
#include "../widget/scenetoolmode.hpp"  // for SceneToolMode
#include "GLX/../OgrePrerequisites.h"   // for Real
#include "OgreColourValue.h"            // for ColourValue
#include "OgreCommon.h"                 // for NameValuePairList
#include "OgreMath.h"                   // for Degree
#include "OgrePlatform.h"               // for OGRE_PLATFORM, etc
#include "OgreSceneManager.h"           // for SceneManager, etc
#include "apps/opencs/view/render/lightingbright.hpp"
#include "apps/opencs/view/render/lightingday.hpp"  // for LightingDay
#include "apps/opencs/view/render/lightingnight.hpp"  // for LightingNight
#include "lighting.hpp"                 // for Lighting
#include "navigation.hpp"               // for Navigation
#include "overlaysystem.hpp"            // for OverlaySystem
class QPaintEngine;  // lines 30-30
---

(apps/opencs/view/world/regionmap.hpp has correct #includes/fwd-decls)

apps/opencs/view/world/regionmap.cpp should add these lines:

apps/opencs/view/world/regionmap.cpp should remove these lines:
- #include <qatomic_i386.h>  // lines 2-2
- #include <QContextMenuEvent>  // lines 3-3
- #include <QHeaderView>  // lines 4-4
- #include <QTableView>  // lines 6-6

The full include-list for apps/opencs/view/world/regionmap.cpp:
#include "regionmap.hpp"
#include <QMenu>                        // for QMenu
#include <QtGui>                        // for QAction, etc
#include <algorithm>                    // for sort, set_difference
#include <iterator>                     // for back_insert_iterator, etc
#include <set>                          // for set, etc
#include <sstream>                      // for operator<<, ostringstream, etc
#include "../../model/doc/document.hpp"  // for Document
#include "../../model/world/columns.hpp"  // for ColumnId::ColumnId_Region
#include "../../model/world/commands.hpp"  // for ModifyCommand, etc
#include "../../model/world/data.hpp"   // for Data
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../../model/world/regionmap.hpp"  // for RegionMap, etc
#include "../../model/world/tablemimedata.hpp"  // for TableMimeData
#include "../../model/world/universalid.hpp"  // for UniversalId, etc
#include "apps/opencs/view/world/./dragrecordtable.hpp"
---

(apps/opencs/view/render/object.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/object.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/previewwidget.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/previewwidget.cpp has correct #includes/fwd-decls)

(apps/opencs/view/render/mousestate.hpp has correct #includes/fwd-decls)

apps/opencs/view/render/mousestate.cpp should add these lines:

apps/opencs/view/render/mousestate.cpp should remove these lines:
- #include <QObject>  // lines 7-7

The full include-list for apps/opencs/view/render/mousestate.cpp:
#include "mousestate.hpp"
#include <OgreMeshManager.h>            // for MeshManager
#include <OgreSceneManager.h>           // for SceneManager
#include <OgreSceneNode.h>              // for SceneNode
#include <stdint.h>                     // for uint32_t
#include <QElapsedTimer>                // for QElapsedTimer
#include <QMouseEvent>                  // for QMouseEvent, QWheelEvent
#include <QtCore>                       // for QString, QBool, QFlags, etc
#include <QtGui>                        // for QUndoStack
#include <map>                          // for map, _Rb_tree_iterator, etc
#include "../../model/world/commands.hpp"  // for ModifyCommand
#include "../../model/world/idtable.hpp"  // for IdTable
#include "../world/physicssystem.hpp"   // for PhysicsSystem
#include "GLX/../OgrePrerequisites.h"   // for MeshPtr
#include "OgreCamera.h"                 // for Camera
#include "OgrePlane.h"                  // for Plane
#include "OgreRay.h"                    // for Ray
#include "OgreResourceGroupManager.h"   // for ResourceGroupManager, etc
#include "OgreSharedPtr.h"              // for SharedPtr
#include "OgreVector3.h"                // for Vector3, Vector3::UNIT_X, etc
#include "OgreViewport.h"               // for Viewport
#include "apps/opencs/model/doc/../world/data.hpp"  // for Data
#include "apps/opencs/model/doc/../world/universalid.hpp"
#include "apps/opencs/model/doc/document.hpp"  // for Document
#include "apps/opencs/view/render/../../model/world/columns.hpp"
#include "apps/opencs/view/render/../../model/world/refcollection.hpp"
#include "apps/opencs/view/render/scenewidget.hpp"  // for SceneWidget
#include "elements.hpp"                 // for Elements::Element_Reference
#include "worldspacewidget.hpp"         // for WorldspaceWidget
---

(apps/opencs/view/render/editmode.hpp has correct #includes/fwd-decls)

apps/opencs/view/render/editmode.cpp should add these lines:

apps/opencs/view/render/editmode.cpp should remove these lines:
- #include <QCharRef>  // lines 2-2

The full include-list for apps/opencs/view/render/editmode.cpp:
#include "editmode.hpp"
#include "apps/opencs/view/render/../widget/modebutton.hpp"
#include "worldspacewidget.hpp"         // for WorldspaceWidget
class QWidget;  // lines 8-8
namespace CSVWidget { class SceneToolbar; }  // lines 9-9
---

(apps/opencs/view/render/cell.hpp has correct #includes/fwd-decls)

(apps/opencs/view/render/cell.cpp has correct #includes/fwd-decls)
