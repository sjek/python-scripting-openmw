#ifndef OPENMWBINDINGS_HPP
#define OPENMWBINDINGS_HPP

#include <string>

#include <components/interpreter/types.hpp>

namespace Interpreter { class Interpreter; }
namespace MWScript { class InterpreterContext; }

namespace MWScriptExtensions
{
    extern Interpreter::Interpreter *interpreter;
    extern MWScript::InterpreterContext *context;
    extern Interpreter::Data stackReturn;

    void activate(std::string arg0);
    void additem(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void addsoulgem(std::string arg0, std::string arg1, std::string arg2);
    void addspell(std::string arg0, std::string arg1);
    void addtolevcreature(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void addtolevitem(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void addtopic(std::string arg0);
    void aiactivate(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2=-123456);
    void aiescort(std::string arg0, std::string arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, Interpreter::Type_Float arg5, Interpreter::Type_Integer arg6=-123456);
    void aiescortcell(std::string arg0, std::string arg1, std::string arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, Interpreter::Type_Float arg5, Interpreter::Type_Float arg6, Interpreter::Type_Integer arg7=-123456);
    void aifollow(std::string arg0, std::string arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, Interpreter::Type_Float arg5, Interpreter::Type_Integer arg6=-123456, Interpreter::Type_Integer arg7=-123456, Interpreter::Type_Integer arg8=-123456, Interpreter::Type_Integer arg9=-123456, Interpreter::Type_Integer arg10=-123456, Interpreter::Type_Integer arg11=-123456, Interpreter::Type_Integer arg12=-123456, Interpreter::Type_Integer arg13=-123456);
    void aifollowcell(std::string arg0, std::string arg1, std::string arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, Interpreter::Type_Float arg5, Interpreter::Type_Float arg6, Interpreter::Type_Integer arg7=-123456);
    void aitravel(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Integer arg4=-123456);
    void aiwander(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Integer arg4=-123456, Interpreter::Type_Integer arg5=-123456, Interpreter::Type_Integer arg6=-123456, Interpreter::Type_Integer arg7=-123456, Interpreter::Type_Integer arg8=-123456, Interpreter::Type_Integer arg9=-123456, Interpreter::Type_Integer arg10=-123456, Interpreter::Type_Integer arg11=-123456, Interpreter::Type_Integer arg12=-123456, Interpreter::Type_Integer arg13=-123456);
    void bc(std::string arg0, std::string arg1);
    void becomewerewolf(std::string arg0);
    void betacomment(std::string arg0, std::string arg1);
    void cast(std::string arg0, std::string arg1, std::string arg2);
    Interpreter::Type_Integer cellchanged();
    void centeroncell(std::string arg0);
    void centeronexterior(Interpreter::Type_Integer arg0, Interpreter::Type_Integer arg1);
    void changeweather(std::string arg0, Interpreter::Type_Integer arg1);
    void choice(std::string arg0="OPTIONAL_FLAG", Interpreter::Type_Integer arg1=-123456, std::string arg2="OPTIONAL_FLAG", Interpreter::Type_Integer arg3=-123456, std::string arg4="OPTIONAL_FLAG", Interpreter::Type_Integer arg5=-123456, std::string arg6="OPTIONAL_FLAG", Interpreter::Type_Integer arg7=-123456, std::string arg8="OPTIONAL_FLAG", Interpreter::Type_Integer arg9=-123456, std::string arg10="OPTIONAL_FLAG", Interpreter::Type_Integer arg11=-123456, std::string arg12="OPTIONAL_FLAG", Interpreter::Type_Integer arg13=-123456, std::string arg14="OPTIONAL_FLAG", Interpreter::Type_Integer arg15=-123456, std::string arg16="OPTIONAL_FLAG", Interpreter::Type_Integer arg17=-123456, std::string arg18="OPTIONAL_FLAG", Interpreter::Type_Integer arg19=-123456, std::string arg20="OPTIONAL_FLAG", Interpreter::Type_Integer arg21=-123456, std::string arg22="OPTIONAL_FLAG", Interpreter::Type_Integer arg23=-123456, std::string arg24="OPTIONAL_FLAG", Interpreter::Type_Integer arg25=-123456, std::string arg26="OPTIONAL_FLAG", Interpreter::Type_Integer arg27=-123456, std::string arg28="OPTIONAL_FLAG", Interpreter::Type_Integer arg29=-123456, std::string arg30="OPTIONAL_FLAG", Interpreter::Type_Integer arg31=-123456);
    void clearforcejump(std::string arg0);
    void clearforcemovejump(std::string arg0);
    void clearforcerun(std::string arg0);
    void clearforcesneak(std::string arg0);
    void clearinfoactor(std::string arg0);
    void coc(std::string arg0);
    void coe(Interpreter::Type_Integer arg0, Interpreter::Type_Integer arg1);
    void disablelevitation();
    void disableplayercontrols();
    void disableplayerfighting();
    void disableplayerjumping();
    void disableplayerlooking();
    void disableplayermagic();
    void disableplayerviewswitch();
    void disableteleporting();
    void disablevanitymode();
    void dontsaveobject();
    void drop(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void dropsoulgem(std::string arg0, std::string arg1);
    void enablebirthmenu();
    void enableclassmenu();
    void enableinventorymenu();
    void enablelevelupmenu();
    void enablelevitation();
    void enablemagicmenu();
    void enablemapmenu();
    void enablenamemenu();
    void enableplayercontrols();
    void enableplayerfighting();
    void enableplayerjumping();
    void enableplayerlooking();
    void enableplayermagic();
    void enableplayerviewswitch();
    void enableracemenu();
    void enablerest();
    void enablestatreviewmenu();
    void enablestatsmenu();
    void enableteleporting();
    void enablevanitymode();
    void equip(std::string arg0, std::string arg1);
    void explodespell(std::string arg0, std::string arg1);
    void externalscriptreturn();
    void face(std::string arg0, Interpreter::Type_Integer arg1, Interpreter::Type_Integer arg2);
    void fadein(Interpreter::Type_Float arg0);
    void fadeout(Interpreter::Type_Float arg0);
    void fadeto(Interpreter::Type_Float arg0, Interpreter::Type_Float arg1);
    void fall(std::string arg0);
    void fillmap();
    void forcegreeting(std::string arg0);
    void forcejump(std::string arg0);
    void forcemovejump(std::string arg0);
    void forcerun(std::string arg0);
    void forcesneak(std::string arg0);
    Interpreter::Type_Integer getacrobatics(std::string arg0);
    Interpreter::Type_Integer getagility(std::string arg0);
    Interpreter::Type_Integer getaipackagedone(std::string arg0);
    Interpreter::Type_Integer getalarm(std::string arg0);
    Interpreter::Type_Integer getalchemy(std::string arg0);
    Interpreter::Type_Integer getalteration(std::string arg0);
    Interpreter::Type_Float getangle(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getarmorbonus(std::string arg0);
    Interpreter::Type_Integer getarmorer(std::string arg0);
    Interpreter::Type_Integer getarmortype(std::string arg0, Interpreter::Type_Integer arg1);
    Interpreter::Type_Integer getathletics(std::string arg0);
    Interpreter::Type_Integer getattackbonus(std::string arg0);
    Interpreter::Type_Integer getattacked(std::string arg0);
    Interpreter::Type_Integer getaxe(std::string arg0);
    Interpreter::Type_Integer getblightdisease(std::string arg0);
    Interpreter::Type_Integer getblindness(std::string arg0);
    Interpreter::Type_Integer getblock(std::string arg0);
    Interpreter::Type_Integer getbluntweapon(std::string arg0);
    Interpreter::Type_Integer getbuttonpressed();
    Interpreter::Type_Integer getcastpenalty(std::string arg0);
    Interpreter::Type_Integer getchameleon(std::string arg0);
    Interpreter::Type_Integer getcollidingactor(std::string arg0);
    Interpreter::Type_Integer getcollidingpc(std::string arg0);
    Interpreter::Type_Integer getcommondisease(std::string arg0);
    Interpreter::Type_Integer getconjuration(std::string arg0);
    Interpreter::Type_Integer getcurrentaipackage(std::string arg0);
    Interpreter::Type_Float getcurrenttime();
    Interpreter::Type_Integer getcurrentweather();
    Interpreter::Type_Integer getdeadcount(std::string arg0);
    Interpreter::Type_Integer getdefendbonus(std::string arg0);
    Interpreter::Type_Integer getdestruction(std::string arg0);
    Interpreter::Type_Integer getdetected(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getdisposition(std::string arg0);
    Interpreter::Type_Integer geteffect(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getenchant(std::string arg0);
    Interpreter::Type_Integer getendurance(std::string arg0);
    Interpreter::Type_Integer getfactionreaction(std::string arg0, std::string arg1);
    Interpreter::Type_Float getfatigue(std::string arg0);
    Interpreter::Type_Float getfatiguegetratio(std::string arg0);
    Interpreter::Type_Integer getfight(std::string arg0);
    Interpreter::Type_Integer getflee(std::string arg0);
    Interpreter::Type_Integer getflying(std::string arg0);
    Interpreter::Type_Integer getforcejump(std::string arg0);
    Interpreter::Type_Integer getforcemovejump(std::string arg0);
    Interpreter::Type_Integer getforcerun(std::string arg0);
    Interpreter::Type_Integer getforcesneak(std::string arg0);
    Interpreter::Type_Integer gethandtohand(std::string arg0);
    Interpreter::Type_Float gethealth(std::string arg0);
    Interpreter::Type_Float gethealthgetratio(std::string arg0);
    Interpreter::Type_Integer getheavyarmor(std::string arg0);
    Interpreter::Type_Integer gethello(std::string arg0);
    Interpreter::Type_Integer getillusion(std::string arg0);
    Interpreter::Type_Integer getintelligence(std::string arg0);
    Interpreter::Type_Integer getinterior();
    Interpreter::Type_Integer getinvisible(std::string arg0);
    Interpreter::Type_Integer getitemcount(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getjournalindex(std::string arg0);
    Interpreter::Type_Integer getlevel(std::string arg0);
    Interpreter::Type_Integer getlightarmor(std::string arg0);
    Interpreter::Type_Integer getlineofsight(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getlocked(std::string arg0);
    Interpreter::Type_Integer getlongblade(std::string arg0);
    Interpreter::Type_Integer getlos(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getluck(std::string arg0);
    Interpreter::Type_Float getmagicka(std::string arg0);
    Interpreter::Type_Float getmagickagetratio(std::string arg0);
    Interpreter::Type_Integer getmarksman(std::string arg0);
    Interpreter::Type_Integer getmasserphase();
    Interpreter::Type_Integer getmediumarmor(std::string arg0);
    Interpreter::Type_Integer getmercantile(std::string arg0);
    Interpreter::Type_Integer getmysticism(std::string arg0);
    Interpreter::Type_Integer getparalysis(std::string arg0);
    Interpreter::Type_Integer getpccell(std::string arg0);
    Interpreter::Type_Float getpccrimelevel();
    Interpreter::Type_Integer getpcfacrep(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    Interpreter::Type_Integer getpcinjail();
    Interpreter::Type_Integer getpcjumping();
    Interpreter::Type_Integer getpcrank(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    Interpreter::Type_Integer getpcrunning();
    Interpreter::Type_Integer getpcsleep();
    Interpreter::Type_Integer getpcsneaking();
    Interpreter::Type_Integer getpctraveling();
    Interpreter::Type_Integer getpersonality(std::string arg0);
    Interpreter::Type_Integer getplayercontrolsdisabled();
    Interpreter::Type_Integer getplayerfightingdisabled();
    Interpreter::Type_Integer getplayerjumpingdisabled();
    Interpreter::Type_Integer getplayerlookingdisabled();
    Interpreter::Type_Integer getplayermagicdisabled();
    Interpreter::Type_Integer getplayerviewswitchdisabled();
    Interpreter::Type_Float getpos(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getrace(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getreputation(std::string arg0);
    Interpreter::Type_Integer getresistblight(std::string arg0);
    Interpreter::Type_Integer getresistcorprus(std::string arg0);
    Interpreter::Type_Integer getresistdisease(std::string arg0);
    Interpreter::Type_Integer getresistfire(std::string arg0);
    Interpreter::Type_Integer getresistfrost(std::string arg0);
    Interpreter::Type_Integer getresistmagicka(std::string arg0);
    Interpreter::Type_Integer getresistnormalweapons(std::string arg0);
    Interpreter::Type_Integer getresistparalysis(std::string arg0);
    Interpreter::Type_Integer getresistpoison(std::string arg0);
    Interpreter::Type_Integer getresistshock(std::string arg0);
    Interpreter::Type_Integer getrestoration(std::string arg0);
    Interpreter::Type_Float getscale(std::string arg0);
    Interpreter::Type_Integer getsecundaphase();
    Interpreter::Type_Integer getsecurity(std::string arg0);
    Interpreter::Type_Integer getshortblade(std::string arg0);
    Interpreter::Type_Integer getsilence(std::string arg0);
    Interpreter::Type_Integer getsneak(std::string arg0);
    Interpreter::Type_Integer getsoundplaying(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getspear(std::string arg0);
    Interpreter::Type_Integer getspeechcraft(std::string arg0);
    Interpreter::Type_Integer getspeed(std::string arg0);
    Interpreter::Type_Integer getspell(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getspelleffects(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getspellreadied(std::string arg0);
    Interpreter::Type_Float getsquareroot(Interpreter::Type_Float arg0);
    Interpreter::Type_Integer getstandingactor(std::string arg0);
    Interpreter::Type_Integer getstandingpc(std::string arg0);
    Interpreter::Type_Float getstartingangle(std::string arg0, std::string arg1);
    Interpreter::Type_Float getstartingpos(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getstat(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getstrength(std::string arg0);
    Interpreter::Type_Integer getsuperjump(std::string arg0);
    Interpreter::Type_Integer getswimspeed(std::string arg0);
    Interpreter::Type_Integer gettarget(std::string arg0, std::string arg1);
    Interpreter::Type_Integer getunarmored(std::string arg0);
    Interpreter::Type_Integer getvanitymodedisabled();
    Interpreter::Type_Integer getwaterbreathing(std::string arg0);
    Interpreter::Type_Float getwaterlevel();
    Interpreter::Type_Integer getwaterwalking(std::string arg0);
    Interpreter::Type_Integer getweapondrawn(std::string arg0);
    Interpreter::Type_Integer getweapontype(std::string arg0);
    Interpreter::Type_Integer getwerewolfkills();
    Interpreter::Type_Integer getwillpower(std::string arg0);
    Interpreter::Type_Float getwindspeed();
    void goodbye();
    void gotojail();
    Interpreter::Type_Integer hasitemequipped(std::string arg0, std::string arg1);
    Interpreter::Type_Integer hassoulgem(std::string arg0, std::string arg1);
    Interpreter::Type_Integer hitattemptonme(std::string arg0, std::string arg1);
    Interpreter::Type_Integer hitonme(std::string arg0, std::string arg1);
    void hurtcollidingactor(std::string arg0, Interpreter::Type_Float arg1);
    void hurtstandingactor(std::string arg0, Interpreter::Type_Float arg1);
    Interpreter::Type_Integer iswerewolf(std::string arg0);
    void journal(std::string arg0, Interpreter::Type_Integer arg1);
    void lock(std::string arg0, Interpreter::Type_Integer arg1=-123456);
    void loopgroup(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2, Interpreter::Type_Integer arg3=-123456);
    void lowerrank(std::string arg0);
    void menutest(Interpreter::Type_Integer arg0=-123456);
    void modacrobatics(std::string arg0, Interpreter::Type_Integer arg1);
    void modagility(std::string arg0, Interpreter::Type_Integer arg1);
    void modalarm(std::string arg0, Interpreter::Type_Integer arg1);
    void modalchemy(std::string arg0, Interpreter::Type_Integer arg1);
    void modalteration(std::string arg0, Interpreter::Type_Integer arg1);
    void modarmorbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void modarmorer(std::string arg0, Interpreter::Type_Integer arg1);
    void modathletics(std::string arg0, Interpreter::Type_Integer arg1);
    void modattackbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void modaxe(std::string arg0, Interpreter::Type_Integer arg1);
    void modblindness(std::string arg0, Interpreter::Type_Integer arg1);
    void modblock(std::string arg0, Interpreter::Type_Integer arg1);
    void modbluntweapon(std::string arg0, Interpreter::Type_Integer arg1);
    void modcastpenalty(std::string arg0, Interpreter::Type_Integer arg1);
    void modchameleon(std::string arg0, Interpreter::Type_Integer arg1);
    void modconjuration(std::string arg0, Interpreter::Type_Integer arg1);
    void modcurrentfatigue(std::string arg0, Interpreter::Type_Float arg1);
    void modcurrenthealth(std::string arg0, Interpreter::Type_Float arg1);
    void modcurrentmagicka(std::string arg0, Interpreter::Type_Float arg1);
    void moddefendbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void moddestruction(std::string arg0, Interpreter::Type_Integer arg1);
    void moddisposition(std::string arg0, Interpreter::Type_Integer arg1);
    void modenchant(std::string arg0, Interpreter::Type_Integer arg1);
    void modendurance(std::string arg0, Interpreter::Type_Integer arg1);
    void modfactionreaction(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void modfatigue(std::string arg0, Interpreter::Type_Float arg1);
    void modfight(std::string arg0, Interpreter::Type_Integer arg1);
    void modflee(std::string arg0, Interpreter::Type_Integer arg1);
    void modflying(std::string arg0, Interpreter::Type_Integer arg1);
    void modhandtohand(std::string arg0, Interpreter::Type_Integer arg1);
    void modhealth(std::string arg0, Interpreter::Type_Float arg1);
    void modheavyarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void modhello(std::string arg0, Interpreter::Type_Integer arg1);
    void modillusion(std::string arg0, Interpreter::Type_Integer arg1);
    void modintelligence(std::string arg0, Interpreter::Type_Integer arg1);
    void modinvisible(std::string arg0, Interpreter::Type_Integer arg1);
    void modlightarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void modlongblade(std::string arg0, Interpreter::Type_Integer arg1);
    void modluck(std::string arg0, Interpreter::Type_Integer arg1);
    void modmagicka(std::string arg0, Interpreter::Type_Float arg1);
    void modmarksman(std::string arg0, Interpreter::Type_Integer arg1);
    void modmediumarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void modmercantile(std::string arg0, Interpreter::Type_Integer arg1);
    void modmysticism(std::string arg0, Interpreter::Type_Integer arg1);
    void modparalysis(std::string arg0, Interpreter::Type_Integer arg1);
    void modpccrimelevel(Interpreter::Type_Float arg0);
    void modpcfacrep(std::string arg0, Interpreter::Type_Integer arg1, std::string arg2="OPTIONAL_FLAG");
    void modpersonality(std::string arg0, Interpreter::Type_Integer arg1);
    void modregion(std::string arg0, Interpreter::Type_Integer arg1=-123456, Interpreter::Type_Integer arg2=-123456, Interpreter::Type_Integer arg3=-123456, Interpreter::Type_Integer arg4=-123456, Interpreter::Type_Integer arg5=-123456, Interpreter::Type_Integer arg6=-123456, Interpreter::Type_Integer arg7=-123456, Interpreter::Type_Integer arg8=-123456, Interpreter::Type_Integer arg9=-123456, Interpreter::Type_Integer arg10=-123456);
    void modreputation(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistblight(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistcorprus(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistdisease(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistfire(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistfrost(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistmagicka(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistnormalweapons(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistparalysis(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistpoison(std::string arg0, Interpreter::Type_Integer arg1);
    void modresistshock(std::string arg0, Interpreter::Type_Integer arg1);
    void modrestoration(std::string arg0, Interpreter::Type_Integer arg1);
    void modscale(std::string arg0, Interpreter::Type_Float arg1);
    void modsecurity(std::string arg0, Interpreter::Type_Integer arg1);
    void modshortblade(std::string arg0, Interpreter::Type_Integer arg1);
    void modsilence(std::string arg0, Interpreter::Type_Integer arg1);
    void modsneak(std::string arg0, Interpreter::Type_Integer arg1);
    void modspear(std::string arg0, Interpreter::Type_Integer arg1);
    void modspeechcraft(std::string arg0, Interpreter::Type_Integer arg1);
    void modspeed(std::string arg0, Interpreter::Type_Integer arg1);
    void modstrength(std::string arg0, Interpreter::Type_Integer arg1);
    void modsuperjump(std::string arg0, Interpreter::Type_Integer arg1);
    void modswimspeed(std::string arg0, Interpreter::Type_Integer arg1);
    void modunarmored(std::string arg0, Interpreter::Type_Integer arg1);
    void modwaterbreathing(std::string arg0, Interpreter::Type_Integer arg1);
    void modwaterlevel(Interpreter::Type_Float arg0);
    void modwaterwalking(std::string arg0, Interpreter::Type_Integer arg1);
    void modwillpower(std::string arg0, Interpreter::Type_Integer arg1);
    void move(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    void moveworld(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    Interpreter::Type_Integer onactivate();
    Interpreter::Type_Integer ondeath(std::string arg0);
    Interpreter::Type_Integer onknockout(std::string arg0);
    Interpreter::Type_Integer onmurder(std::string arg0);
    void payfine();
    void payfinethief();
    void pcclearexpelled(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    void pcexpell(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    Interpreter::Type_Integer pcexpelled(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    void pcforce1stperson();
    void pcforce3rdperson();
    Interpreter::Type_Integer pcget3rdperson();
    void pcjoinfaction(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    void pclowerrank(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    void pcraiserank(std::string arg0, std::string arg1="OPTIONAL_FLAG");
    void placeatme(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2, Interpreter::Type_Float arg3, Interpreter::Type_Integer arg4);
    void placeatpc(std::string arg0, Interpreter::Type_Integer arg1, Interpreter::Type_Float arg2, Interpreter::Type_Integer arg3);
    void placeitem(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4);
    void placeitemcell(std::string arg0, std::string arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, Interpreter::Type_Float arg5);
    void playbink(std::string arg0, Interpreter::Type_Integer arg1);
    void playgroup(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2=-123456);
    void playloopsound3d(std::string arg0, std::string arg1);
    void playloopsound3dvp(std::string arg0, std::string arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3);
    void playsound(std::string arg0);
    void playsound3d(std::string arg0, std::string arg1);
    void playsound3dvp(std::string arg0, std::string arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3);
    void playsoundvp(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2);
    void position(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4);
    void positioncell(std::string arg0, Interpreter::Type_Float arg1, Interpreter::Type_Float arg2, Interpreter::Type_Float arg3, Interpreter::Type_Float arg4, std::string arg5);
    void ra();
    void raiserank(std::string arg0);
    void removeeffects(std::string arg0, Interpreter::Type_Integer arg1);
    void removefromlevcreature(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void removefromlevitem(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void removeitem(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2);
    void removesoulgem(std::string arg0, std::string arg1, Interpreter::Type_Integer arg2=-123456);
    void removespell(std::string arg0, std::string arg1);
    void removespelleffects(std::string arg0, std::string arg1);
    void resetactors();
    void resurrect(std::string arg0);
    void rotate(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    void rotateworld(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    Interpreter::Type_Integer samefaction(std::string arg0);
    void say(std::string arg0, std::string arg1, std::string arg2);
    Interpreter::Type_Integer saydone(std::string arg0);
    void setacrobatics(std::string arg0, Interpreter::Type_Integer arg1);
    void setagility(std::string arg0, Interpreter::Type_Integer arg1);
    void setalarm(std::string arg0, Interpreter::Type_Integer arg1);
    void setalchemy(std::string arg0, Interpreter::Type_Integer arg1);
    void setalteration(std::string arg0, Interpreter::Type_Integer arg1);
    void setangle(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    void setarmorbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void setarmorer(std::string arg0, Interpreter::Type_Integer arg1);
    void setathletics(std::string arg0, Interpreter::Type_Integer arg1);
    void setatstart(std::string arg0);
    void setattackbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void setaxe(std::string arg0, Interpreter::Type_Integer arg1);
    void setblindness(std::string arg0, Interpreter::Type_Integer arg1);
    void setblock(std::string arg0, Interpreter::Type_Integer arg1);
    void setbluntweapon(std::string arg0, Interpreter::Type_Integer arg1);
    void setcastpenalty(std::string arg0, Interpreter::Type_Integer arg1);
    void setchameleon(std::string arg0, Interpreter::Type_Integer arg1);
    void setconjuration(std::string arg0, Interpreter::Type_Integer arg1);
    void setdefendbonus(std::string arg0, Interpreter::Type_Integer arg1);
    void setdelete(std::string arg0, Interpreter::Type_Integer arg1);
    void setdestruction(std::string arg0, Interpreter::Type_Integer arg1);
    void setdisposition(std::string arg0, Interpreter::Type_Integer arg1);
    void setenchant(std::string arg0, Interpreter::Type_Integer arg1);
    void setendurance(std::string arg0, Interpreter::Type_Integer arg1);
    void setfatigue(std::string arg0, Interpreter::Type_Float arg1);
    void setfight(std::string arg0, Interpreter::Type_Integer arg1);
    void setflee(std::string arg0, Interpreter::Type_Integer arg1);
    void setflying(std::string arg0, Interpreter::Type_Integer arg1);
    void sethandtohand(std::string arg0, Interpreter::Type_Integer arg1);
    void sethealth(std::string arg0, Interpreter::Type_Float arg1);
    void setheavyarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void sethello(std::string arg0, Interpreter::Type_Integer arg1);
    void setillusion(std::string arg0, Interpreter::Type_Integer arg1);
    void setintelligence(std::string arg0, Interpreter::Type_Integer arg1);
    void setinvisible(std::string arg0, Interpreter::Type_Integer arg1);
    void setjournalindex(std::string arg0, Interpreter::Type_Integer arg1);
    void setlevel(std::string arg0, Interpreter::Type_Integer arg1);
    void setlightarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void setlongblade(std::string arg0, Interpreter::Type_Integer arg1);
    void setluck(std::string arg0, Interpreter::Type_Integer arg1);
    void setmagicka(std::string arg0, Interpreter::Type_Float arg1);
    void setmarksman(std::string arg0, Interpreter::Type_Integer arg1);
    void setmediumarmor(std::string arg0, Interpreter::Type_Integer arg1);
    void setmercantile(std::string arg0, Interpreter::Type_Integer arg1);
    void setmysticism(std::string arg0, Interpreter::Type_Integer arg1);
    void setparalysis(std::string arg0, Interpreter::Type_Integer arg1);
    void setpccrimelevel(Interpreter::Type_Float arg0);
    void setpcfacrep(std::string arg0, Interpreter::Type_Integer arg1, std::string arg2="OPTIONAL_FLAG");
    void setpersonality(std::string arg0, Interpreter::Type_Integer arg1);
    void setpos(std::string arg0, std::string arg1, Interpreter::Type_Float arg2);
    void setreputation(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistblight(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistcorprus(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistdisease(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistfire(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistfrost(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistmagicka(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistnormalweapons(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistparalysis(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistpoison(std::string arg0, Interpreter::Type_Integer arg1);
    void setresistshock(std::string arg0, Interpreter::Type_Integer arg1);
    void setrestoration(std::string arg0, Interpreter::Type_Integer arg1);
    void setscale(std::string arg0, Interpreter::Type_Float arg1);
    void setsecurity(std::string arg0, Interpreter::Type_Integer arg1);
    void setshortblade(std::string arg0, Interpreter::Type_Integer arg1);
    void setsilence(std::string arg0, Interpreter::Type_Integer arg1);
    void setsneak(std::string arg0, Interpreter::Type_Integer arg1);
    void setspear(std::string arg0, Interpreter::Type_Integer arg1);
    void setspeechcraft(std::string arg0, Interpreter::Type_Integer arg1);
    void setspeed(std::string arg0, Interpreter::Type_Integer arg1);
    void setstrength(std::string arg0, Interpreter::Type_Integer arg1);
    void setsuperjump(std::string arg0, Interpreter::Type_Integer arg1);
    void setswimspeed(std::string arg0, Interpreter::Type_Integer arg1);
    void setunarmored(std::string arg0, Interpreter::Type_Integer arg1);
    void setwaterbreathing(std::string arg0, Interpreter::Type_Integer arg1);
    void setwaterlevel(Interpreter::Type_Float arg0);
    void setwaterwalking(std::string arg0, Interpreter::Type_Integer arg1);
    void setwerewolfacrobatics(std::string arg0);
    void setwillpower(std::string arg0, Interpreter::Type_Integer arg1);
    void showmap(std::string arg0);
    void showrestmenu(std::string arg0);
    void showvars(std::string arg0);
    void skipanim(std::string arg0);
    void startcombat(std::string arg0, std::string arg1);
    void startexternalscript(std::string arg0);
    void stopcombat(std::string arg0);
    void stopsound(std::string arg0, std::string arg1);
    void streammusic(std::string arg0);
    void sv(std::string arg0);
    void tai(std::string arg0);
    void tcb();
    void tcg();
    void tcl();
    void tfh();
    void tfow();
    void tgm();
    void tm();
    void toggleai(std::string arg0);
    void togglecollision();
    void togglecollisionboxes();
    void togglecollisiongrid();
    void togglefogofwar();
    void togglefullhelp();
    void togglegodmode();
    void togglemenus();
    void togglepathgrid();
    void togglesky();
    void togglevanitymode();
    void togglewater();
    void togglewireframe();
    void toggleworld();
    void tpg();
    void ts();
    void turnmoonred();
    void turnmoonwhite();
    void tvm();
    void tw();
    void twa();
    void twf();
    void undowerewolf(std::string arg0);
    void unlock(std::string arg0);
    void wakeuppc();
    Interpreter::Type_Integer xbox();
}
#endif
